//! This file is automatically @generated by cargo-make.
//! It is not intended for manual editing.

#![allow(clippy::all)] // TODO lint this code?

use crate::{Info, Type};
#[inline]
pub(super) fn lookup<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let mut info = Info { len: 0, typ: None };
    match labels.next() {
        Some(label) => match label {
            [97, 97, 97] => lookup_0(),
            [97, 97, 114, 112] => lookup_1(),
            [97, 98, 98] => lookup_2(),
            [97, 98, 98, 111, 116, 116] => lookup_3(),
            [97, 98, 98, 118, 105, 101] => lookup_4(),
            [97, 98, 99] => lookup_5(),
            [97, 98, 108, 101] => lookup_6(),
            [97, 98, 111, 103, 97, 100, 111] => lookup_7(),
            [97, 98, 117, 100, 104, 97, 98, 105] => lookup_8(),
            [97, 99] => lookup_9(labels),
            [97, 99, 97, 100, 101, 109, 121] => lookup_10(labels),
            [97, 99, 99, 101, 110, 116, 117, 114, 101] => lookup_11(),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => lookup_12(),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116, 115] => lookup_13(),
            [97, 99, 111] => lookup_14(),
            [97, 99, 116, 111, 114] => lookup_15(),
            [97, 100] => lookup_16(),
            [97, 100, 115] => lookup_17(),
            [97, 100, 117, 108, 116] => lookup_18(),
            [97, 101] => lookup_19(labels),
            [97, 101, 103] => lookup_20(),
            [97, 101, 114, 111] => lookup_21(labels),
            [97, 101, 116, 110, 97] => lookup_22(),
            [97, 102] => lookup_23(labels),
            [97, 102, 108] => lookup_24(),
            [97, 102, 114, 105, 99, 97] => lookup_25(),
            [97, 103] => lookup_26(labels),
            [97, 103, 97, 107, 104, 97, 110] => lookup_27(),
            [97, 103, 101, 110, 99, 121] => lookup_28(),
            [97, 105] => lookup_29(labels),
            [97, 105, 103] => lookup_30(),
            [97, 105, 114, 98, 117, 115] => lookup_31(),
            [97, 105, 114, 102, 111, 114, 99, 101] => lookup_32(),
            [97, 105, 114, 116, 101, 108] => lookup_33(),
            [97, 107, 100, 110] => lookup_34(),
            [97, 108] => lookup_35(labels),
            [97, 108, 105, 98, 97, 98, 97] => lookup_36(),
            [97, 108, 105, 112, 97, 121] => lookup_37(),
            [97, 108, 108, 102, 105, 110, 97, 110, 122] => lookup_38(),
            [97, 108, 108, 115, 116, 97, 116, 101] => lookup_39(),
            [97, 108, 108, 121] => lookup_40(),
            [97, 108, 115, 97, 99, 101] => lookup_41(),
            [97, 108, 115, 116, 111, 109] => lookup_42(),
            [97, 109] => lookup_43(labels),
            [97, 109, 97, 122, 111, 110] => lookup_44(),
            [97, 109, 101, 114, 105, 99, 97, 110, 101, 120, 112, 114, 101, 115, 115] => lookup_45(),
            [97, 109, 101, 114, 105, 99, 97, 110, 102, 97, 109, 105, 108, 121] => lookup_46(),
            [97, 109, 101, 120] => lookup_47(),
            [97, 109, 102, 97, 109] => lookup_48(),
            [97, 109, 105, 99, 97] => lookup_49(),
            [97, 109, 115, 116, 101, 114, 100, 97, 109] => lookup_50(),
            [97, 110, 97, 108, 121, 116, 105, 99, 115] => lookup_51(),
            [97, 110, 100, 114, 111, 105, 100] => lookup_52(),
            [97, 110, 113, 117, 97, 110] => lookup_53(),
            [97, 110, 122] => lookup_54(),
            [97, 111] => lookup_55(labels),
            [97, 111, 108] => lookup_56(),
            [97, 112, 97, 114, 116, 109, 101, 110, 116, 115] => lookup_57(),
            [97, 112, 112] => lookup_58(labels),
            [97, 112, 112, 108, 101] => lookup_59(),
            [97, 113] => lookup_60(),
            [97, 113, 117, 97, 114, 101, 108, 108, 101] => lookup_61(),
            [97, 114] => lookup_62(labels),
            [97, 114, 97, 98] => lookup_63(),
            [97, 114, 97, 109, 99, 111] => lookup_64(),
            [97, 114, 99, 104, 105] => lookup_65(),
            [97, 114, 109, 121] => lookup_66(),
            [97, 114, 112, 97] => lookup_67(labels),
            [97, 114, 116] => lookup_68(),
            [97, 114, 116, 101] => lookup_69(),
            [97, 115] => lookup_70(labels),
            [97, 115, 100, 97] => lookup_71(),
            [97, 115, 105, 97] => lookup_72(labels),
            [97, 115, 115, 111, 99, 105, 97, 116, 101, 115] => lookup_73(),
            [97, 116] => lookup_74(labels),
            [97, 116, 104, 108, 101, 116, 97] => lookup_75(),
            [97, 116, 116, 111, 114, 110, 101, 121] => lookup_76(),
            [97, 117] => lookup_77(labels),
            [97, 117, 99, 116, 105, 111, 110] => lookup_78(),
            [97, 117, 100, 105] => lookup_79(),
            [97, 117, 100, 105, 98, 108, 101] => lookup_80(),
            [97, 117, 100, 105, 111] => lookup_81(),
            [97, 117, 115, 112, 111, 115, 116] => lookup_82(),
            [97, 117, 116, 104, 111, 114] => lookup_83(),
            [97, 117, 116, 111] => lookup_84(),
            [97, 117, 116, 111, 115] => lookup_85(),
            [97, 119] => lookup_86(labels),
            [97, 119, 115] => lookup_87(labels),
            [97, 120] => lookup_88(),
            [97, 120, 97] => lookup_89(),
            [97, 122] => lookup_90(labels),
            [97, 122, 117, 114, 101] => lookup_91(),
            [98, 97] => lookup_92(labels),
            [98, 97, 98, 121] => lookup_93(),
            [98, 97, 105, 100, 117] => lookup_94(),
            [98, 97, 110, 97, 109, 101, 120] => lookup_95(),
            [98, 97, 110, 100] => lookup_96(),
            [98, 97, 110, 107] => lookup_97(),
            [98, 97, 114] => lookup_98(),
            [98, 97, 114, 99, 101, 108, 111, 110, 97] => lookup_99(),
            [98, 97, 114, 99, 108, 97, 121, 99, 97, 114, 100] => lookup_100(),
            [98, 97, 114, 99, 108, 97, 121, 115] => lookup_101(),
            [98, 97, 114, 101, 102, 111, 111, 116] => lookup_102(),
            [98, 97, 114, 103, 97, 105, 110, 115] => lookup_103(),
            [98, 97, 115, 101, 98, 97, 108, 108] => lookup_104(),
            [98, 97, 115, 107, 101, 116, 98, 97, 108, 108] => lookup_105(labels),
            [98, 97, 117, 104, 97, 117, 115] => lookup_106(),
            [98, 97, 121, 101, 114, 110] => lookup_107(),
            [98, 98] => lookup_108(labels),
            [98, 98, 99] => lookup_109(),
            [98, 98, 116] => lookup_110(),
            [98, 98, 118, 97] => lookup_111(),
            [98, 99, 103] => lookup_112(),
            [98, 99, 110] => lookup_113(),
            [98, 100] => lookup_114(info, labels),
            [98, 101] => lookup_115(labels),
            [98, 101, 97, 116, 115] => lookup_116(),
            [98, 101, 97, 117, 116, 121] => lookup_117(),
            [98, 101, 101, 114] => lookup_118(),
            [98, 101, 110, 116, 108, 101, 121] => lookup_119(),
            [98, 101, 114, 108, 105, 110] => lookup_120(),
            [98, 101, 115, 116] => lookup_121(),
            [98, 101, 115, 116, 98, 117, 121] => lookup_122(),
            [98, 101, 116] => lookup_123(),
            [98, 102] => lookup_124(labels),
            [98, 103] => lookup_125(labels),
            [98, 104] => lookup_126(labels),
            [98, 104, 97, 114, 116, 105] => lookup_127(),
            [98, 105] => lookup_128(labels),
            [98, 105, 98, 108, 101] => lookup_129(),
            [98, 105, 100] => lookup_130(),
            [98, 105, 107, 101] => lookup_131(),
            [98, 105, 110, 103] => lookup_132(),
            [98, 105, 110, 103, 111] => lookup_133(),
            [98, 105, 111] => lookup_134(),
            [98, 105, 122] => lookup_135(labels),
            [98, 106] => lookup_136(labels),
            [98, 108, 97, 99, 107] => lookup_137(),
            [98, 108, 97, 99, 107, 102, 114, 105, 100, 97, 121] => lookup_138(),
            [98, 108, 111, 99, 107, 98, 117, 115, 116, 101, 114] => lookup_139(),
            [98, 108, 111, 103] => lookup_140(),
            [98, 108, 111, 111, 109, 98, 101, 114, 103] => lookup_141(),
            [98, 108, 117, 101] => lookup_142(),
            [98, 109] => lookup_143(labels),
            [98, 109, 115] => lookup_144(),
            [98, 109, 119] => lookup_145(),
            [98, 110] => lookup_146(labels),
            [98, 110, 112, 112, 97, 114, 105, 98, 97, 115] => lookup_147(),
            [98, 111] => lookup_148(labels),
            [98, 111, 97, 116, 115] => lookup_149(),
            [98, 111, 101, 104, 114, 105, 110, 103, 101, 114] => lookup_150(),
            [98, 111, 102, 97] => lookup_151(),
            [98, 111, 109] => lookup_152(),
            [98, 111, 110, 100] => lookup_153(),
            [98, 111, 111] => lookup_154(),
            [98, 111, 111, 107] => lookup_155(),
            [98, 111, 111, 107, 105, 110, 103] => lookup_156(),
            [98, 111, 115, 99, 104] => lookup_157(),
            [98, 111, 115, 116, 105, 107] => lookup_158(),
            [98, 111, 115, 116, 111, 110] => lookup_159(),
            [98, 111, 116] => lookup_160(),
            [98, 111, 117, 116, 105, 113, 117, 101] => lookup_161(),
            [98, 111, 120] => lookup_162(),
            [98, 114] => lookup_163(labels),
            [98, 114, 97, 100, 101, 115, 99, 111] => lookup_164(),
            [98, 114, 105, 100, 103, 101, 115, 116, 111, 110, 101] => lookup_165(),
            [98, 114, 111, 97, 100, 119, 97, 121] => lookup_166(),
            [98, 114, 111, 107, 101, 114] => lookup_167(),
            [98, 114, 111, 116, 104, 101, 114] => lookup_168(),
            [98, 114, 117, 115, 115, 101, 108, 115] => lookup_169(),
            [98, 115] => lookup_170(labels),
            [98, 116] => lookup_171(labels),
            [98, 117, 105, 108, 100] => lookup_172(labels),
            [98, 117, 105, 108, 100, 101, 114, 115] => lookup_173(labels),
            [98, 117, 115, 105, 110, 101, 115, 115] => lookup_174(labels),
            [98, 117, 121] => lookup_175(),
            [98, 117, 122, 122] => lookup_176(),
            [98, 118] => lookup_177(),
            [98, 119] => lookup_178(labels),
            [98, 121] => lookup_179(labels),
            [98, 122] => lookup_180(labels),
            [98, 122, 104] => lookup_181(),
            [99, 97] => lookup_182(labels),
            [99, 97, 98] => lookup_183(),
            [99, 97, 102, 101] => lookup_184(),
            [99, 97, 108] => lookup_185(),
            [99, 97, 108, 108] => lookup_186(),
            [99, 97, 108, 118, 105, 110, 107, 108, 101, 105, 110] => lookup_187(),
            [99, 97, 109] => lookup_188(),
            [99, 97, 109, 101, 114, 97] => lookup_189(),
            [99, 97, 109, 112] => lookup_190(labels),
            [99, 97, 110, 111, 110] => lookup_191(),
            [99, 97, 112, 101, 116, 111, 119, 110] => lookup_192(),
            [99, 97, 112, 105, 116, 97, 108] => lookup_193(),
            [99, 97, 112, 105, 116, 97, 108, 111, 110, 101] => lookup_194(),
            [99, 97, 114] => lookup_195(),
            [99, 97, 114, 97, 118, 97, 110] => lookup_196(),
            [99, 97, 114, 100, 115] => lookup_197(),
            [99, 97, 114, 101] => lookup_198(),
            [99, 97, 114, 101, 101, 114] => lookup_199(),
            [99, 97, 114, 101, 101, 114, 115] => lookup_200(),
            [99, 97, 114, 115] => lookup_201(),
            [99, 97, 115, 97] => lookup_202(labels),
            [99, 97, 115, 101] => lookup_203(),
            [99, 97, 115, 104] => lookup_204(),
            [99, 97, 115, 105, 110, 111] => lookup_205(),
            [99, 97, 116] => lookup_206(),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_207(),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_208(),
            [99, 98, 97] => lookup_209(),
            [99, 98, 110] => lookup_210(),
            [99, 98, 114, 101] => lookup_211(),
            [99, 99] => lookup_212(labels),
            [99, 100] => lookup_213(labels),
            [99, 101, 110, 116, 101, 114] => lookup_214(),
            [99, 101, 111] => lookup_215(),
            [99, 101, 114, 110] => lookup_216(),
            [99, 102] => lookup_217(),
            [99, 102, 97] => lookup_218(),
            [99, 102, 100] => lookup_219(),
            [99, 103] => lookup_220(),
            [99, 104] => lookup_221(labels),
            [99, 104, 97, 110, 101, 108] => lookup_222(),
            [99, 104, 97, 110, 110, 101, 108] => lookup_223(),
            [99, 104, 97, 114, 105, 116, 121] => lookup_224(),
            [99, 104, 97, 115, 101] => lookup_225(),
            [99, 104, 97, 116] => lookup_226(),
            [99, 104, 101, 97, 112] => lookup_227(),
            [99, 104, 105, 110, 116, 97, 105] => lookup_228(),
            [99, 104, 114, 105, 115, 116, 109, 97, 115] => lookup_229(),
            [99, 104, 114, 111, 109, 101] => lookup_230(),
            [99, 104, 117, 114, 99, 104] => lookup_231(),
            [99, 105] => lookup_232(labels),
            [99, 105, 112, 114, 105, 97, 110, 105] => lookup_233(),
            [99, 105, 114, 99, 108, 101] => lookup_234(),
            [99, 105, 115, 99, 111] => lookup_235(),
            [99, 105, 116, 97, 100, 101, 108] => lookup_236(),
            [99, 105, 116, 105] => lookup_237(),
            [99, 105, 116, 105, 99] => lookup_238(),
            [99, 105, 116, 121] => lookup_239(),
            [99, 107] => lookup_240(info, labels),
            [99, 108] => lookup_241(labels),
            [99, 108, 97, 105, 109, 115] => lookup_242(),
            [99, 108, 101, 97, 110, 105, 110, 103] => lookup_243(),
            [99, 108, 105, 99, 107] => lookup_244(),
            [99, 108, 105, 110, 105, 99] => lookup_245(),
            [99, 108, 105, 110, 105, 113, 117, 101] => lookup_246(),
            [99, 108, 111, 116, 104, 105, 110, 103] => lookup_247(),
            [99, 108, 111, 117, 100] => lookup_248(labels),
            [99, 108, 117, 98] => lookup_249(labels),
            [99, 108, 117, 98, 109, 101, 100] => lookup_250(),
            [99, 109] => lookup_251(labels),
            [99, 110] => lookup_252(labels),
            [99, 111] => lookup_253(labels),
            [99, 111, 97, 99, 104] => lookup_254(),
            [99, 111, 100, 101, 115] => lookup_255(labels),
            [99, 111, 102, 102, 101, 101] => lookup_256(),
            [99, 111, 108, 108, 101, 103, 101] => lookup_257(),
            [99, 111, 108, 111, 103, 110, 101] => lookup_258(),
            [99, 111, 109] => lookup_259(labels),
            [99, 111, 109, 109, 98, 97, 110, 107] => lookup_260(),
            [99, 111, 109, 109, 117, 110, 105, 116, 121] => lookup_261(labels),
            [99, 111, 109, 112, 97, 110, 121] => lookup_262(),
            [99, 111, 109, 112, 97, 114, 101] => lookup_263(),
            [99, 111, 109, 112, 117, 116, 101, 114] => lookup_264(),
            [99, 111, 109, 115, 101, 99] => lookup_265(),
            [99, 111, 110, 100, 111, 115] => lookup_266(),
            [99, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110] => lookup_267(),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_268(),
            [99, 111, 110, 116, 97, 99, 116] => lookup_269(),
            [99, 111, 110, 116, 114, 97, 99, 116, 111, 114, 115] => lookup_270(),
            [99, 111, 111, 107, 105, 110, 103] => lookup_271(),
            [99, 111, 111, 108] => lookup_272(labels),
            [99, 111, 111, 112] => lookup_273(),
            [99, 111, 114, 115, 105, 99, 97] => lookup_274(),
            [99, 111, 117, 110, 116, 114, 121] => lookup_275(),
            [99, 111, 117, 112, 111, 110] => lookup_276(),
            [99, 111, 117, 112, 111, 110, 115] => lookup_277(),
            [99, 111, 117, 114, 115, 101, 115] => lookup_278(),
            [99, 112, 97] => lookup_279(),
            [99, 114] => lookup_280(labels),
            [99, 114, 101, 100, 105, 116] => lookup_281(),
            [99, 114, 101, 100, 105, 116, 99, 97, 114, 100] => lookup_282(),
            [99, 114, 101, 100, 105, 116, 117, 110, 105, 111, 110] => lookup_283(),
            [99, 114, 105, 99, 107, 101, 116] => lookup_284(),
            [99, 114, 111, 119, 110] => lookup_285(),
            [99, 114, 115] => lookup_286(),
            [99, 114, 117, 105, 115, 101] => lookup_287(),
            [99, 114, 117, 105, 115, 101, 115] => lookup_288(),
            [99, 117] => lookup_289(labels),
            [99, 117, 105, 115, 105, 110, 101, 108, 108, 97] => lookup_290(),
            [99, 118] => lookup_291(labels),
            [99, 119] => lookup_292(labels),
            [99, 120] => lookup_293(labels),
            [99, 121] => lookup_294(labels),
            [99, 121, 109, 114, 117] => lookup_295(),
            [99, 121, 111, 117] => lookup_296(),
            [99, 122] => lookup_297(labels),
            [100, 97, 100] => lookup_298(),
            [100, 97, 110, 99, 101] => lookup_299(),
            [100, 97, 116, 97] => lookup_300(),
            [100, 97, 116, 101] => lookup_301(),
            [100, 97, 116, 105, 110, 103] => lookup_302(),
            [100, 97, 116, 115, 117, 110] => lookup_303(),
            [100, 97, 121] => lookup_304(),
            [100, 99, 108, 107] => lookup_305(),
            [100, 100, 115] => lookup_306(),
            [100, 101] => lookup_307(labels),
            [100, 101, 97, 108] => lookup_308(),
            [100, 101, 97, 108, 101, 114] => lookup_309(),
            [100, 101, 97, 108, 115] => lookup_310(),
            [100, 101, 103, 114, 101, 101] => lookup_311(),
            [100, 101, 108, 105, 118, 101, 114, 121] => lookup_312(),
            [100, 101, 108, 108] => lookup_313(),
            [100, 101, 108, 111, 105, 116, 116, 101] => lookup_314(),
            [100, 101, 108, 116, 97] => lookup_315(),
            [100, 101, 109, 111, 99, 114, 97, 116] => lookup_316(),
            [100, 101, 110, 116, 97, 108] => lookup_317(),
            [100, 101, 110, 116, 105, 115, 116] => lookup_318(),
            [100, 101, 115, 105] => lookup_319(),
            [100, 101, 115, 105, 103, 110] => lookup_320(labels),
            [100, 101, 118] => lookup_321(labels),
            [100, 104, 108] => lookup_322(),
            [100, 105, 97, 109, 111, 110, 100, 115] => lookup_323(),
            [100, 105, 101, 116] => lookup_324(),
            [100, 105, 103, 105, 116, 97, 108] => lookup_325(labels),
            [100, 105, 114, 101, 99, 116] => lookup_326(labels),
            [100, 105, 114, 101, 99, 116, 111, 114, 121] => lookup_327(),
            [100, 105, 115, 99, 111, 117, 110, 116] => lookup_328(),
            [100, 105, 115, 99, 111, 118, 101, 114] => lookup_329(),
            [100, 105, 115, 104] => lookup_330(),
            [100, 105, 121] => lookup_331(),
            [100, 106] => lookup_332(),
            [100, 107] => lookup_333(labels),
            [100, 109] => lookup_334(labels),
            [100, 110, 112] => lookup_335(),
            [100, 111] => lookup_336(labels),
            [100, 111, 99, 115] => lookup_337(),
            [100, 111, 99, 116, 111, 114] => lookup_338(),
            [100, 111, 103] => lookup_339(),
            [100, 111, 109, 97, 105, 110, 115] => lookup_340(),
            [100, 111, 116] => lookup_341(),
            [100, 111, 119, 110, 108, 111, 97, 100] => lookup_342(),
            [100, 114, 105, 118, 101] => lookup_343(),
            [100, 116, 118] => lookup_344(),
            [100, 117, 98, 97, 105] => lookup_345(),
            [100, 117, 110, 108, 111, 112] => lookup_346(),
            [100, 117, 112, 111, 110, 116] => lookup_347(),
            [100, 117, 114, 98, 97, 110] => lookup_348(),
            [100, 118, 97, 103] => lookup_349(),
            [100, 118, 114] => lookup_350(),
            [100, 122] => lookup_351(labels),
            [101, 97, 114, 116, 104] => lookup_352(),
            [101, 97, 116] => lookup_353(),
            [101, 99] => lookup_354(labels),
            [101, 99, 111] => lookup_355(),
            [101, 100, 101, 107, 97] => lookup_356(),
            [101, 100, 117] => lookup_357(labels),
            [101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_358(labels),
            [101, 101] => lookup_359(labels),
            [101, 103] => lookup_360(labels),
            [101, 109, 97, 105, 108] => lookup_361(labels),
            [101, 109, 101, 114, 99, 107] => lookup_362(),
            [101, 110, 101, 114, 103, 121] => lookup_363(),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_364(),
            [101, 110, 103, 105, 110, 101, 101, 114, 105, 110, 103] => lookup_365(),
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 115] => lookup_366(),
            [101, 112, 115, 111, 110] => lookup_367(),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_368(),
            [101, 114] => lookup_369(info, labels),
            [101, 114, 105, 99, 115, 115, 111, 110] => lookup_370(),
            [101, 114, 110, 105] => lookup_371(),
            [101, 115] => lookup_372(labels),
            [101, 115, 113] => lookup_373(),
            [101, 115, 116, 97, 116, 101] => lookup_374(labels),
            [101, 116] => lookup_375(labels),
            [101, 117] => lookup_376(labels),
            [101, 117, 114, 111, 118, 105, 115, 105, 111, 110] => lookup_377(),
            [101, 117, 115] => lookup_378(labels),
            [101, 118, 101, 110, 116, 115] => lookup_379(labels),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_380(),
            [101, 120, 112, 101, 114, 116] => lookup_381(),
            [101, 120, 112, 111, 115, 101, 100] => lookup_382(),
            [101, 120, 112, 114, 101, 115, 115] => lookup_383(),
            [101, 120, 116, 114, 97, 115, 112, 97, 99, 101] => lookup_384(),
            [102, 97, 103, 101] => lookup_385(),
            [102, 97, 105, 108] => lookup_386(),
            [102, 97, 105, 114, 119, 105, 110, 100, 115] => lookup_387(),
            [102, 97, 105, 116, 104] => lookup_388(),
            [102, 97, 109, 105, 108, 121] => lookup_389(),
            [102, 97, 110] => lookup_390(),
            [102, 97, 110, 115] => lookup_391(),
            [102, 97, 114, 109] => lookup_392(labels),
            [102, 97, 114, 109, 101, 114, 115] => lookup_393(),
            [102, 97, 115, 104, 105, 111, 110] => lookup_394(),
            [102, 97, 115, 116] => lookup_395(),
            [102, 101, 100, 101, 120] => lookup_396(),
            [102, 101, 101, 100, 98, 97, 99, 107] => lookup_397(),
            [102, 101, 114, 114, 97, 114, 105] => lookup_398(),
            [102, 101, 114, 114, 101, 114, 111] => lookup_399(),
            [102, 105] => lookup_400(labels),
            [102, 105, 100, 101, 108, 105, 116, 121] => lookup_401(),
            [102, 105, 100, 111] => lookup_402(),
            [102, 105, 108, 109] => lookup_403(),
            [102, 105, 110, 97, 108] => lookup_404(),
            [102, 105, 110, 97, 110, 99, 101] => lookup_405(),
            [102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_406(labels),
            [102, 105, 114, 101] => lookup_407(),
            [102, 105, 114, 101, 115, 116, 111, 110, 101] => lookup_408(),
            [102, 105, 114, 109, 100, 97, 108, 101] => lookup_409(),
            [102, 105, 115, 104] => lookup_410(),
            [102, 105, 115, 104, 105, 110, 103] => lookup_411(),
            [102, 105, 116] => lookup_412(),
            [102, 105, 116, 110, 101, 115, 115] => lookup_413(),
            [102, 106] => lookup_414(labels),
            [102, 107] => lookup_415(info, labels),
            [102, 108, 105, 99, 107, 114] => lookup_416(),
            [102, 108, 105, 103, 104, 116, 115] => lookup_417(),
            [102, 108, 105, 114] => lookup_418(),
            [102, 108, 111, 114, 105, 115, 116] => lookup_419(),
            [102, 108, 111, 119, 101, 114, 115] => lookup_420(),
            [102, 108, 121] => lookup_421(),
            [102, 109] => lookup_422(labels),
            [102, 111] => lookup_423(),
            [102, 111, 111] => lookup_424(),
            [102, 111, 111, 100] => lookup_425(),
            [102, 111, 111, 116, 98, 97, 108, 108] => lookup_426(),
            [102, 111, 114, 100] => lookup_427(),
            [102, 111, 114, 101, 120] => lookup_428(),
            [102, 111, 114, 115, 97, 108, 101] => lookup_429(),
            [102, 111, 114, 117, 109] => lookup_430(),
            [102, 111, 117, 110, 100, 97, 116, 105, 111, 110] => lookup_431(),
            [102, 111, 120] => lookup_432(),
            [102, 114] => lookup_433(labels),
            [102, 114, 101, 101] => lookup_434(),
            [102, 114, 101, 115, 101, 110, 105, 117, 115] => lookup_435(),
            [102, 114, 108] => lookup_436(),
            [102, 114, 111, 103, 97, 110, 115] => lookup_437(),
            [102, 114, 111, 110, 116, 105, 101, 114] => lookup_438(),
            [102, 116, 114] => lookup_439(),
            [102, 117, 106, 105, 116, 115, 117] => lookup_440(),
            [102, 117, 110] => lookup_441(),
            [102, 117, 110, 100] => lookup_442(),
            [102, 117, 114, 110, 105, 116, 117, 114, 101] => lookup_443(),
            [102, 117, 116, 98, 111, 108] => lookup_444(),
            [102, 121, 105] => lookup_445(),
            [103, 97] => lookup_446(),
            [103, 97, 108] => lookup_447(),
            [103, 97, 108, 108, 101, 114, 121] => lookup_448(),
            [103, 97, 108, 108, 111] => lookup_449(),
            [103, 97, 108, 108, 117, 112] => lookup_450(),
            [103, 97, 109, 101] => lookup_451(),
            [103, 97, 109, 101, 115] => lookup_452(labels),
            [103, 97, 112] => lookup_453(),
            [103, 97, 114, 100, 101, 110] => lookup_454(),
            [103, 97, 121] => lookup_455(labels),
            [103, 98] => lookup_456(),
            [103, 98, 105, 122] => lookup_457(),
            [103, 100] => lookup_458(labels),
            [103, 100, 110] => lookup_459(labels),
            [103, 101] => lookup_460(labels),
            [103, 101, 97] => lookup_461(),
            [103, 101, 110, 116] => lookup_462(),
            [103, 101, 110, 116, 105, 110, 103] => lookup_463(),
            [103, 101, 111, 114, 103, 101] => lookup_464(),
            [103, 102] => lookup_465(),
            [103, 103] => lookup_466(labels),
            [103, 103, 101, 101] => lookup_467(),
            [103, 104] => lookup_468(labels),
            [103, 105] => lookup_469(labels),
            [103, 105, 102, 116] => lookup_470(),
            [103, 105, 102, 116, 115] => lookup_471(),
            [103, 105, 118, 101, 115] => lookup_472(),
            [103, 105, 118, 105, 110, 103] => lookup_473(),
            [103, 108] => lookup_474(labels),
            [103, 108, 97, 115, 115] => lookup_475(),
            [103, 108, 101] => lookup_476(),
            [103, 108, 111, 98, 97, 108] => lookup_477(),
            [103, 108, 111, 98, 111] => lookup_478(),
            [103, 109] => lookup_479(),
            [103, 109, 97, 105, 108] => lookup_480(),
            [103, 109, 98, 104] => lookup_481(),
            [103, 109, 111] => lookup_482(),
            [103, 109, 120] => lookup_483(),
            [103, 110] => lookup_484(labels),
            [103, 111, 100, 97, 100, 100, 121] => lookup_485(),
            [103, 111, 108, 100] => lookup_486(),
            [103, 111, 108, 100, 112, 111, 105, 110, 116] => lookup_487(),
            [103, 111, 108, 102] => lookup_488(),
            [103, 111, 111] => lookup_489(),
            [103, 111, 111, 100, 121, 101, 97, 114] => lookup_490(),
            [103, 111, 111, 103] => lookup_491(labels),
            [103, 111, 111, 103, 108, 101] => lookup_492(),
            [103, 111, 112] => lookup_493(),
            [103, 111, 116] => lookup_494(),
            [103, 111, 118] => lookup_495(),
            [103, 112] => lookup_496(labels),
            [103, 113] => lookup_497(),
            [103, 114] => lookup_498(labels),
            [103, 114, 97, 105, 110, 103, 101, 114] => lookup_499(),
            [103, 114, 97, 112, 104, 105, 99, 115] => lookup_500(),
            [103, 114, 97, 116, 105, 115] => lookup_501(),
            [103, 114, 101, 101, 110] => lookup_502(),
            [103, 114, 105, 112, 101] => lookup_503(),
            [103, 114, 111, 99, 101, 114, 121] => lookup_504(),
            [103, 114, 111, 117, 112] => lookup_505(labels),
            [103, 115] => lookup_506(),
            [103, 116] => lookup_507(labels),
            [103, 117] => lookup_508(labels),
            [103, 117, 99, 99, 105] => lookup_509(),
            [103, 117, 103, 101] => lookup_510(),
            [103, 117, 105, 100, 101] => lookup_511(),
            [103, 117, 105, 116, 97, 114, 115] => lookup_512(),
            [103, 117, 114, 117] => lookup_513(),
            [103, 119] => lookup_514(),
            [103, 121] => lookup_515(labels),
            [104, 97, 105, 114] => lookup_516(),
            [104, 97, 109, 98, 117, 114, 103] => lookup_517(),
            [104, 97, 110, 103, 111, 117, 116] => lookup_518(),
            [104, 97, 117, 115] => lookup_519(),
            [104, 98, 111] => lookup_520(),
            [104, 100, 102, 99] => lookup_521(),
            [104, 100, 102, 99, 98, 97, 110, 107] => lookup_522(),
            [104, 101, 97, 108, 116, 104] => lookup_523(labels),
            [104, 101, 97, 108, 116, 104, 99, 97, 114, 101] => lookup_524(),
            [104, 101, 108, 112] => lookup_525(),
            [104, 101, 108, 115, 105, 110, 107, 105] => lookup_526(),
            [104, 101, 114, 101] => lookup_527(),
            [104, 101, 114, 109, 101, 115] => lookup_528(),
            [104, 105, 112, 104, 111, 112] => lookup_529(),
            [104, 105, 115, 97, 109, 105, 116, 115, 117] => lookup_530(),
            [104, 105, 116, 97, 99, 104, 105] => lookup_531(),
            [104, 105, 118] => lookup_532(),
            [104, 107] => lookup_533(labels),
            [104, 107, 116] => lookup_534(),
            [104, 109] => lookup_535(),
            [104, 110] => lookup_536(labels),
            [104, 111, 99, 107, 101, 121] => lookup_537(),
            [104, 111, 108, 100, 105, 110, 103, 115] => lookup_538(),
            [104, 111, 108, 105, 100, 97, 121] => lookup_539(),
            [104, 111, 109, 101, 100, 101, 112, 111, 116] => lookup_540(),
            [104, 111, 109, 101, 103, 111, 111, 100, 115] => lookup_541(),
            [104, 111, 109, 101, 115] => lookup_542(),
            [104, 111, 109, 101, 115, 101, 110, 115, 101] => lookup_543(),
            [104, 111, 110, 100, 97] => lookup_544(),
            [104, 111, 114, 115, 101] => lookup_545(),
            [104, 111, 115, 112, 105, 116, 97, 108] => lookup_546(),
            [104, 111, 115, 116] => lookup_547(labels),
            [104, 111, 115, 116, 105, 110, 103] => lookup_548(labels),
            [104, 111, 116] => lookup_549(),
            [104, 111, 116, 101, 108, 115] => lookup_550(),
            [104, 111, 116, 109, 97, 105, 108] => lookup_551(),
            [104, 111, 117, 115, 101] => lookup_552(),
            [104, 111, 119] => lookup_553(),
            [104, 114] => lookup_554(labels),
            [104, 115, 98, 99] => lookup_555(),
            [104, 116] => lookup_556(labels),
            [104, 117] => lookup_557(labels),
            [104, 117, 103, 104, 101, 115] => lookup_558(),
            [104, 121, 97, 116, 116] => lookup_559(),
            [104, 121, 117, 110, 100, 97, 105] => lookup_560(),
            [105, 98, 109] => lookup_561(),
            [105, 99, 98, 99] => lookup_562(),
            [105, 99, 101] => lookup_563(),
            [105, 99, 117] => lookup_564(),
            [105, 100] => lookup_565(labels),
            [105, 101] => lookup_566(labels),
            [105, 101, 101, 101] => lookup_567(),
            [105, 102, 109] => lookup_568(),
            [105, 107, 97, 110, 111] => lookup_569(),
            [105, 108] => lookup_570(labels),
            [105, 109] => lookup_571(labels),
            [105, 109, 97, 109, 97, 116] => lookup_572(),
            [105, 109, 100, 98] => lookup_573(),
            [105, 109, 109, 111] => lookup_574(),
            [105, 109, 109, 111, 98, 105, 108, 105, 101, 110] => lookup_575(),
            [105, 110] => lookup_576(labels),
            [105, 110, 99] => lookup_577(),
            [105, 110, 100, 117, 115, 116, 114, 105, 101, 115] => lookup_578(),
            [105, 110, 102, 105, 110, 105, 116, 105] => lookup_579(),
            [105, 110, 102, 111] => lookup_580(labels),
            [105, 110, 103] => lookup_581(),
            [105, 110, 107] => lookup_582(),
            [105, 110, 115, 116, 105, 116, 117, 116, 101] => lookup_583(),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_584(),
            [105, 110, 115, 117, 114, 101] => lookup_585(),
            [105, 110, 116] => lookup_586(labels),
            [105, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97, 108] => lookup_587(),
            [105, 110, 116, 117, 105, 116] => lookup_588(),
            [105, 110, 118, 101, 115, 116, 109, 101, 110, 116, 115] => lookup_589(),
            [105, 111] => lookup_590(labels),
            [105, 112, 105, 114, 97, 110, 103, 97] => lookup_591(),
            [105, 113] => lookup_592(labels),
            [105, 114] => lookup_593(labels),
            [105, 114, 105, 115, 104] => lookup_594(),
            [105, 115] => lookup_595(),
            [105, 115, 109, 97, 105, 108, 105] => lookup_596(),
            [105, 115, 116] => lookup_597(),
            [105, 115, 116, 97, 110, 98, 117, 108] => lookup_598(),
            [105, 116] => lookup_599(labels),
            [105, 116, 97, 117] => lookup_600(),
            [105, 116, 118] => lookup_601(),
            [106, 97, 103, 117, 97, 114] => lookup_602(),
            [106, 97, 118, 97] => lookup_603(),
            [106, 99, 98] => lookup_604(),
            [106, 101] => lookup_605(labels),
            [106, 101, 101, 112] => lookup_606(),
            [106, 101, 116, 122, 116] => lookup_607(),
            [106, 101, 119, 101, 108, 114, 121] => lookup_608(),
            [106, 105, 111] => lookup_609(),
            [106, 108, 108] => lookup_610(),
            [106, 109] => lookup_611(info, labels),
            [106, 109, 112] => lookup_612(),
            [106, 110, 106] => lookup_613(),
            [106, 111] => lookup_614(labels),
            [106, 111, 98, 115] => lookup_615(),
            [106, 111, 98, 117, 114, 103] => lookup_616(),
            [106, 111, 116] => lookup_617(),
            [106, 111, 121] => lookup_618(),
            [106, 112] => lookup_619(labels),
            [106, 112, 109, 111, 114, 103, 97, 110] => lookup_620(),
            [106, 112, 114, 115] => lookup_621(),
            [106, 117, 101, 103, 111, 115] => lookup_622(),
            [106, 117, 110, 105, 112, 101, 114] => lookup_623(),
            [107, 97, 117, 102, 101, 110] => lookup_624(),
            [107, 100, 100, 105] => lookup_625(),
            [107, 101] => lookup_626(labels),
            [107, 101, 114, 114, 121, 104, 111, 116, 101, 108, 115] => lookup_627(),
            [107, 101, 114, 114, 121, 108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_628(),
            [107, 101, 114, 114, 121, 112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => {
                lookup_629()
            }
            [107, 102, 104] => lookup_630(),
            [107, 103] => lookup_631(labels),
            [107, 104] => lookup_632(info, labels),
            [107, 105] => lookup_633(labels),
            [107, 105, 97] => lookup_634(),
            [107, 105, 100, 115] => lookup_635(),
            [107, 105, 109] => lookup_636(),
            [107, 105, 110, 100, 108, 101] => lookup_637(),
            [107, 105, 116, 99, 104, 101, 110] => lookup_638(),
            [107, 105, 119, 105] => lookup_639(),
            [107, 109] => lookup_640(labels),
            [107, 110] => lookup_641(labels),
            [107, 111, 101, 108, 110] => lookup_642(),
            [107, 111, 109, 97, 116, 115, 117] => lookup_643(),
            [107, 111, 115, 104, 101, 114] => lookup_644(),
            [107, 112] => lookup_645(labels),
            [107, 112, 109, 103] => lookup_646(),
            [107, 112, 110] => lookup_647(),
            [107, 114] => lookup_648(labels),
            [107, 114, 100] => lookup_649(labels),
            [107, 114, 101, 100] => lookup_650(),
            [107, 117, 111, 107, 103, 114, 111, 117, 112] => lookup_651(),
            [107, 119] => lookup_652(labels),
            [107, 121] => lookup_653(labels),
            [107, 121, 111, 116, 111] => lookup_654(),
            [107, 122] => lookup_655(labels),
            [108, 97] => lookup_656(labels),
            [108, 97, 99, 97, 105, 120, 97] => lookup_657(),
            [108, 97, 109, 98, 111, 114, 103, 104, 105, 110, 105] => lookup_658(),
            [108, 97, 109, 101, 114] => lookup_659(),
            [108, 97, 110, 99, 97, 115, 116, 101, 114] => lookup_660(),
            [108, 97, 110, 100] => lookup_661(),
            [108, 97, 110, 100, 114, 111, 118, 101, 114] => lookup_662(),
            [108, 97, 110, 120, 101, 115, 115] => lookup_663(),
            [108, 97, 115, 97, 108, 108, 101] => lookup_664(),
            [108, 97, 116] => lookup_665(),
            [108, 97, 116, 105, 110, 111] => lookup_666(),
            [108, 97, 116, 114, 111, 98, 101] => lookup_667(),
            [108, 97, 119] => lookup_668(),
            [108, 97, 119, 121, 101, 114] => lookup_669(),
            [108, 98] => lookup_670(labels),
            [108, 99] => lookup_671(labels),
            [108, 100, 115] => lookup_672(),
            [108, 101, 97, 115, 101] => lookup_673(),
            [108, 101, 99, 108, 101, 114, 99] => lookup_674(),
            [108, 101, 102, 114, 97, 107] => lookup_675(),
            [108, 101, 103, 97, 108] => lookup_676(),
            [108, 101, 103, 111] => lookup_677(),
            [108, 101, 120, 117, 115] => lookup_678(),
            [108, 103, 98, 116] => lookup_679(),
            [108, 105] => lookup_680(),
            [108, 105, 100, 108] => lookup_681(),
            [108, 105, 102, 101] => lookup_682(),
            [108, 105, 102, 101, 105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_683(),
            [108, 105, 102, 101, 115, 116, 121, 108, 101] => lookup_684(),
            [108, 105, 103, 104, 116, 105, 110, 103] => lookup_685(),
            [108, 105, 107, 101] => lookup_686(),
            [108, 105, 108, 108, 121] => lookup_687(),
            [108, 105, 109, 105, 116, 101, 100] => lookup_688(),
            [108, 105, 109, 111] => lookup_689(),
            [108, 105, 110, 99, 111, 108, 110] => lookup_690(),
            [108, 105, 110, 107] => lookup_691(labels),
            [108, 105, 112, 115, 121] => lookup_692(),
            [108, 105, 118, 101] => lookup_693(labels),
            [108, 105, 118, 105, 110, 103] => lookup_694(),
            [108, 107] => lookup_695(labels),
            [108, 108, 99] => lookup_696(),
            [108, 108, 112] => lookup_697(),
            [108, 111, 97, 110] => lookup_698(),
            [108, 111, 97, 110, 115] => lookup_699(),
            [108, 111, 99, 107, 101, 114] => lookup_700(),
            [108, 111, 99, 117, 115] => lookup_701(),
            [108, 111, 108] => lookup_702(labels),
            [108, 111, 110, 100, 111, 110] => lookup_703(),
            [108, 111, 116, 116, 101] => lookup_704(),
            [108, 111, 116, 116, 111] => lookup_705(),
            [108, 111, 118, 101] => lookup_706(),
            [108, 112, 108] => lookup_707(),
            [108, 112, 108, 102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_708(),
            [108, 114] => lookup_709(labels),
            [108, 115] => lookup_710(labels),
            [108, 116] => lookup_711(labels),
            [108, 116, 100] => lookup_712(),
            [108, 116, 100, 97] => lookup_713(),
            [108, 117] => lookup_714(labels),
            [108, 117, 110, 100, 98, 101, 99, 107] => lookup_715(),
            [108, 117, 120, 101] => lookup_716(),
            [108, 117, 120, 117, 114, 121] => lookup_717(),
            [108, 118] => lookup_718(labels),
            [108, 121] => lookup_719(labels),
            [109, 97] => lookup_720(labels),
            [109, 97, 100, 114, 105, 100] => lookup_721(),
            [109, 97, 105, 102] => lookup_722(),
            [109, 97, 105, 115, 111, 110] => lookup_723(),
            [109, 97, 107, 101, 117, 112] => lookup_724(),
            [109, 97, 110] => lookup_725(),
            [109, 97, 110, 97, 103, 101, 109, 101, 110, 116] => lookup_726(labels),
            [109, 97, 110, 103, 111] => lookup_727(),
            [109, 97, 112] => lookup_728(),
            [109, 97, 114, 107, 101, 116] => lookup_729(),
            [109, 97, 114, 107, 101, 116, 105, 110, 103] => lookup_730(),
            [109, 97, 114, 107, 101, 116, 115] => lookup_731(),
            [109, 97, 114, 114, 105, 111, 116, 116] => lookup_732(),
            [109, 97, 114, 115, 104, 97, 108, 108, 115] => lookup_733(),
            [109, 97, 116, 116, 101, 108] => lookup_734(),
            [109, 98, 97] => lookup_735(),
            [109, 99] => lookup_736(labels),
            [109, 99, 107, 105, 110, 115, 101, 121] => lookup_737(),
            [109, 100] => lookup_738(labels),
            [109, 101] => lookup_739(labels),
            [109, 101, 100] => lookup_740(),
            [109, 101, 100, 105, 97] => lookup_741(labels),
            [109, 101, 101, 116] => lookup_742(),
            [109, 101, 108, 98, 111, 117, 114, 110, 101] => lookup_743(),
            [109, 101, 109, 101] => lookup_744(),
            [109, 101, 109, 111, 114, 105, 97, 108] => lookup_745(),
            [109, 101, 110] => lookup_746(),
            [109, 101, 110, 117] => lookup_747(labels),
            [109, 101, 114, 99, 107] => lookup_748(),
            [109, 101, 114, 99, 107, 109, 115, 100] => lookup_749(),
            [109, 103] => lookup_750(labels),
            [109, 104] => lookup_751(),
            [109, 105, 97, 109, 105] => lookup_752(),
            [109, 105, 99, 114, 111, 115, 111, 102, 116] => lookup_753(),
            [109, 105, 108] => lookup_754(),
            [109, 105, 110, 105] => lookup_755(),
            [109, 105, 110, 116] => lookup_756(),
            [109, 105, 116] => lookup_757(),
            [109, 105, 116, 115, 117, 98, 105, 115, 104, 105] => lookup_758(),
            [109, 107] => lookup_759(labels),
            [109, 108] => lookup_760(labels),
            [109, 108, 98] => lookup_761(),
            [109, 108, 115] => lookup_762(),
            [109, 109] => lookup_763(info, labels),
            [109, 109, 97] => lookup_764(),
            [109, 110] => lookup_765(labels),
            [109, 111] => lookup_766(labels),
            [109, 111, 98, 105] => lookup_767(labels),
            [109, 111, 98, 105, 108, 101] => lookup_768(),
            [109, 111, 100, 97] => lookup_769(),
            [109, 111, 101] => lookup_770(),
            [109, 111, 105] => lookup_771(),
            [109, 111, 109] => lookup_772(labels),
            [109, 111, 110, 97, 115, 104] => lookup_773(),
            [109, 111, 110, 101, 121] => lookup_774(),
            [109, 111, 110, 115, 116, 101, 114] => lookup_775(),
            [109, 111, 114, 109, 111, 110] => lookup_776(),
            [109, 111, 114, 116, 103, 97, 103, 101] => lookup_777(),
            [109, 111, 115, 99, 111, 119] => lookup_778(),
            [109, 111, 116, 111] => lookup_779(),
            [109, 111, 116, 111, 114, 99, 121, 99, 108, 101, 115] => lookup_780(),
            [109, 111, 118] => lookup_781(),
            [109, 111, 118, 105, 101] => lookup_782(),
            [109, 112] => lookup_783(labels),
            [109, 113] => lookup_784(),
            [109, 114] => lookup_785(labels),
            [109, 115] => lookup_786(labels),
            [109, 115, 100] => lookup_787(),
            [109, 116] => lookup_788(labels),
            [109, 116, 110] => lookup_789(),
            [109, 116, 114] => lookup_790(),
            [109, 117] => lookup_791(labels),
            [109, 117, 115, 101, 117, 109] => lookup_792(),
            [109, 117, 115, 105, 99] => lookup_793(),
            [109, 118] => lookup_794(labels),
            [109, 119] => lookup_795(labels),
            [109, 120] => lookup_796(labels),
            [109, 121] => lookup_797(labels),
            [109, 122] => lookup_798(labels),
            [110, 97] => lookup_799(labels),
            [110, 97, 98] => lookup_800(),
            [110, 97, 103, 111, 121, 97] => lookup_801(),
            [110, 97, 109, 101] => lookup_802(labels),
            [110, 97, 118, 121] => lookup_803(),
            [110, 98, 97] => lookup_804(),
            [110, 99] => lookup_805(labels),
            [110, 101] => lookup_806(),
            [110, 101, 99] => lookup_807(),
            [110, 101, 116] => lookup_808(labels),
            [110, 101, 116, 98, 97, 110, 107] => lookup_809(),
            [110, 101, 116, 102, 108, 105, 120] => lookup_810(),
            [110, 101, 116, 119, 111, 114, 107] => lookup_811(labels),
            [110, 101, 117, 115, 116, 97, 114] => lookup_812(),
            [110, 101, 119] => lookup_813(),
            [110, 101, 119, 115] => lookup_814(labels),
            [110, 101, 120, 116] => lookup_815(),
            [110, 101, 120, 116, 100, 105, 114, 101, 99, 116] => lookup_816(),
            [110, 101, 120, 117, 115] => lookup_817(),
            [110, 102] => lookup_818(labels),
            [110, 102, 108] => lookup_819(),
            [110, 103] => lookup_820(labels),
            [110, 103, 111] => lookup_821(),
            [110, 104, 107] => lookup_822(),
            [110, 105] => lookup_823(labels),
            [110, 105, 99, 111] => lookup_824(),
            [110, 105, 107, 101] => lookup_825(),
            [110, 105, 107, 111, 110] => lookup_826(),
            [110, 105, 110, 106, 97] => lookup_827(),
            [110, 105, 115, 115, 97, 110] => lookup_828(),
            [110, 105, 115, 115, 97, 121] => lookup_829(),
            [110, 108] => lookup_830(labels),
            [110, 111] => lookup_831(labels),
            [110, 111, 107, 105, 97] => lookup_832(),
            [110, 111, 114, 116, 111, 110] => lookup_833(),
            [110, 111, 119] => lookup_834(),
            [110, 111, 119, 114, 117, 122] => lookup_835(),
            [110, 111, 119, 116, 118] => lookup_836(),
            [110, 112] => lookup_837(info, labels),
            [110, 114] => lookup_838(labels),
            [110, 114, 97] => lookup_839(),
            [110, 114, 119] => lookup_840(),
            [110, 116, 116] => lookup_841(),
            [110, 117] => lookup_842(labels),
            [110, 121, 99] => lookup_843(),
            [110, 122] => lookup_844(labels),
            [111, 98, 105] => lookup_845(),
            [111, 98, 115, 101, 114, 118, 101, 114] => lookup_846(),
            [111, 102, 102, 105, 99, 101] => lookup_847(),
            [111, 107, 105, 110, 97, 119, 97] => lookup_848(),
            [111, 108, 97, 121, 97, 110] => lookup_849(),
            [111, 108, 97, 121, 97, 110, 103, 114, 111, 117, 112] => lookup_850(),
            [111, 108, 108, 111] => lookup_851(),
            [111, 109] => lookup_852(labels),
            [111, 109, 101, 103, 97] => lookup_853(),
            [111, 110, 101] => lookup_854(labels),
            [111, 110, 103] => lookup_855(labels),
            [111, 110, 105, 111, 110] => lookup_856(),
            [111, 110, 108] => lookup_857(),
            [111, 110, 108, 105, 110, 101] => lookup_858(labels),
            [111, 111, 111] => lookup_859(),
            [111, 112, 101, 110] => lookup_860(),
            [111, 114, 97, 99, 108, 101] => lookup_861(),
            [111, 114, 97, 110, 103, 101] => lookup_862(labels),
            [111, 114, 103] => lookup_863(labels),
            [111, 114, 103, 97, 110, 105, 99] => lookup_864(),
            [111, 114, 105, 103, 105, 110, 115] => lookup_865(),
            [111, 115, 97, 107, 97] => lookup_866(),
            [111, 116, 115, 117, 107, 97] => lookup_867(),
            [111, 116, 116] => lookup_868(),
            [111, 118, 104] => lookup_869(labels),
            [112, 97] => lookup_870(labels),
            [112, 97, 103, 101] => lookup_871(labels),
            [112, 97, 110, 97, 115, 111, 110, 105, 99] => lookup_872(),
            [112, 97, 114, 105, 115] => lookup_873(),
            [112, 97, 114, 115] => lookup_874(),
            [112, 97, 114, 116, 110, 101, 114, 115] => lookup_875(),
            [112, 97, 114, 116, 115] => lookup_876(),
            [112, 97, 114, 116, 121] => lookup_877(),
            [112, 97, 121] => lookup_878(),
            [112, 99, 99, 119] => lookup_879(),
            [112, 101] => lookup_880(labels),
            [112, 101, 116] => lookup_881(),
            [112, 102] => lookup_882(labels),
            [112, 102, 105, 122, 101, 114] => lookup_883(),
            [112, 103] => lookup_884(info, labels),
            [112, 104] => lookup_885(labels),
            [112, 104, 97, 114, 109, 97, 99, 121] => lookup_886(),
            [112, 104, 100] => lookup_887(),
            [112, 104, 105, 108, 105, 112, 115] => lookup_888(),
            [112, 104, 111, 110, 101] => lookup_889(),
            [112, 104, 111, 116, 111] => lookup_890(),
            [112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 121] => lookup_891(),
            [112, 104, 111, 116, 111, 115] => lookup_892(labels),
            [112, 104, 121, 115, 105, 111] => lookup_893(),
            [112, 105, 99, 115] => lookup_894(),
            [112, 105, 99, 116, 101, 116] => lookup_895(),
            [112, 105, 99, 116, 117, 114, 101, 115] => lookup_896(labels),
            [112, 105, 100] => lookup_897(),
            [112, 105, 110] => lookup_898(),
            [112, 105, 110, 103] => lookup_899(),
            [112, 105, 110, 107] => lookup_900(),
            [112, 105, 111, 110, 101, 101, 114] => lookup_901(),
            [112, 105, 122, 122, 97] => lookup_902(labels),
            [112, 107] => lookup_903(labels),
            [112, 108] => lookup_904(labels),
            [112, 108, 97, 99, 101] => lookup_905(labels),
            [112, 108, 97, 121] => lookup_906(),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110] => lookup_907(),
            [112, 108, 117, 109, 98, 105, 110, 103] => lookup_908(),
            [112, 108, 117, 115] => lookup_909(),
            [112, 109] => lookup_910(labels),
            [112, 110] => lookup_911(labels),
            [112, 110, 99] => lookup_912(),
            [112, 111, 104, 108] => lookup_913(),
            [112, 111, 107, 101, 114] => lookup_914(),
            [112, 111, 108, 105, 116, 105, 101] => lookup_915(),
            [112, 111, 114, 110] => lookup_916(),
            [112, 111, 115, 116] => lookup_917(),
            [112, 114] => lookup_918(labels),
            [112, 114, 97, 109, 101, 114, 105, 99, 97] => lookup_919(),
            [112, 114, 97, 120, 105] => lookup_920(),
            [112, 114, 101, 115, 115] => lookup_921(),
            [112, 114, 105, 109, 101] => lookup_922(),
            [112, 114, 111] => lookup_923(labels),
            [112, 114, 111, 100] => lookup_924(),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110, 115] => lookup_925(),
            [112, 114, 111, 102] => lookup_926(),
            [112, 114, 111, 103, 114, 101, 115, 115, 105, 118, 101] => lookup_927(),
            [112, 114, 111, 109, 111] => lookup_928(),
            [112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => lookup_929(),
            [112, 114, 111, 112, 101, 114, 116, 121] => lookup_930(),
            [112, 114, 111, 116, 101, 99, 116, 105, 111, 110] => lookup_931(),
            [112, 114, 117] => lookup_932(),
            [112, 114, 117, 100, 101, 110, 116, 105, 97, 108] => lookup_933(),
            [112, 115] => lookup_934(labels),
            [112, 116] => lookup_935(labels),
            [112, 117, 98] => lookup_936(labels),
            [112, 119] => lookup_937(labels),
            [112, 119, 99] => lookup_938(),
            [112, 121] => lookup_939(labels),
            [113, 97] => lookup_940(labels),
            [113, 112, 111, 110] => lookup_941(),
            [113, 117, 101, 98, 101, 99] => lookup_942(),
            [113, 117, 101, 115, 116] => lookup_943(),
            [114, 97, 99, 105, 110, 103] => lookup_944(),
            [114, 97, 100, 105, 111] => lookup_945(),
            [114, 101] => lookup_946(labels),
            [114, 101, 97, 100] => lookup_947(),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_948(),
            [114, 101, 97, 108, 116, 111, 114] => lookup_949(),
            [114, 101, 97, 108, 116, 121] => lookup_950(),
            [114, 101, 99, 105, 112, 101, 115] => lookup_951(),
            [114, 101, 100] => lookup_952(),
            [114, 101, 100, 115, 116, 111, 110, 101] => lookup_953(),
            [114, 101, 100, 117, 109, 98, 114, 101, 108, 108, 97] => lookup_954(),
            [114, 101, 104, 97, 98] => lookup_955(),
            [114, 101, 105, 115, 101] => lookup_956(),
            [114, 101, 105, 115, 101, 110] => lookup_957(),
            [114, 101, 105, 116] => lookup_958(),
            [114, 101, 108, 105, 97, 110, 99, 101] => lookup_959(),
            [114, 101, 110] => lookup_960(),
            [114, 101, 110, 116] => lookup_961(),
            [114, 101, 110, 116, 97, 108, 115] => lookup_962(),
            [114, 101, 112, 97, 105, 114] => lookup_963(),
            [114, 101, 112, 111, 114, 116] => lookup_964(),
            [114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => lookup_965(),
            [114, 101, 115, 116] => lookup_966(),
            [114, 101, 115, 116, 97, 117, 114, 97, 110, 116] => lookup_967(),
            [114, 101, 118, 105, 101, 119] => lookup_968(),
            [114, 101, 118, 105, 101, 119, 115] => lookup_969(),
            [114, 101, 120, 114, 111, 116, 104] => lookup_970(),
            [114, 105, 99, 104] => lookup_971(),
            [114, 105, 99, 104, 97, 114, 100, 108, 105] => lookup_972(),
            [114, 105, 99, 111, 104] => lookup_973(),
            [114, 105, 108] => lookup_974(),
            [114, 105, 111] => lookup_975(),
            [114, 105, 112] => lookup_976(labels),
            [114, 111] => lookup_977(labels),
            [114, 111, 99, 107, 115] => lookup_978(labels),
            [114, 111, 100, 101, 111] => lookup_979(),
            [114, 111, 103, 101, 114, 115] => lookup_980(),
            [114, 111, 111, 109] => lookup_981(),
            [114, 115] => lookup_982(labels),
            [114, 115, 118, 112] => lookup_983(),
            [114, 117] => lookup_984(labels),
            [114, 117, 103, 98, 121] => lookup_985(),
            [114, 117, 104, 114] => lookup_986(),
            [114, 117, 110] => lookup_987(labels),
            [114, 119] => lookup_988(labels),
            [114, 119, 101] => lookup_989(),
            [114, 121, 117, 107, 121, 117] => lookup_990(),
            [115, 97] => lookup_991(labels),
            [115, 97, 97, 114, 108, 97, 110, 100] => lookup_992(),
            [115, 97, 102, 101] => lookup_993(),
            [115, 97, 102, 101, 116, 121] => lookup_994(),
            [115, 97, 107, 117, 114, 97] => lookup_995(),
            [115, 97, 108, 101] => lookup_996(),
            [115, 97, 108, 111, 110] => lookup_997(),
            [115, 97, 109, 115, 99, 108, 117, 98] => lookup_998(),
            [115, 97, 109, 115, 117, 110, 103] => lookup_999(),
            [115, 97, 110, 100, 118, 105, 107] => lookup_1000(),
            [115, 97, 110, 100, 118, 105, 107, 99, 111, 114, 111, 109, 97, 110, 116] => {
                lookup_1001()
            }
            [115, 97, 110, 111, 102, 105] => lookup_1002(),
            [115, 97, 112] => lookup_1003(),
            [115, 97, 114, 108] => lookup_1004(),
            [115, 97, 115] => lookup_1005(),
            [115, 97, 118, 101] => lookup_1006(),
            [115, 97, 120, 111] => lookup_1007(),
            [115, 98] => lookup_1008(labels),
            [115, 98, 105] => lookup_1009(),
            [115, 98, 115] => lookup_1010(),
            [115, 99] => lookup_1011(labels),
            [115, 99, 98] => lookup_1012(),
            [115, 99, 104, 97, 101, 102, 102, 108, 101, 114] => lookup_1013(),
            [115, 99, 104, 109, 105, 100, 116] => lookup_1014(),
            [115, 99, 104, 111, 108, 97, 114, 115, 104, 105, 112, 115] => lookup_1015(),
            [115, 99, 104, 111, 111, 108] => lookup_1016(),
            [115, 99, 104, 117, 108, 101] => lookup_1017(),
            [115, 99, 104, 119, 97, 114, 122] => lookup_1018(),
            [115, 99, 105, 101, 110, 99, 101] => lookup_1019(),
            [115, 99, 111, 116] => lookup_1020(labels),
            [115, 100] => lookup_1021(labels),
            [115, 101] => lookup_1022(labels),
            [115, 101, 97, 114, 99, 104] => lookup_1023(),
            [115, 101, 97, 116] => lookup_1024(),
            [115, 101, 99, 117, 114, 101] => lookup_1025(),
            [115, 101, 99, 117, 114, 105, 116, 121] => lookup_1026(),
            [115, 101, 101, 107] => lookup_1027(),
            [115, 101, 108, 101, 99, 116] => lookup_1028(),
            [115, 101, 110, 101, 114] => lookup_1029(),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_1030(labels),
            [115, 101, 118, 101, 110] => lookup_1031(),
            [115, 101, 119] => lookup_1032(),
            [115, 101, 120] => lookup_1033(),
            [115, 101, 120, 121] => lookup_1034(),
            [115, 102, 114] => lookup_1035(),
            [115, 103] => lookup_1036(labels),
            [115, 104] => lookup_1037(labels),
            [115, 104, 97, 110, 103, 114, 105, 108, 97] => lookup_1038(),
            [115, 104, 97, 114, 112] => lookup_1039(),
            [115, 104, 101, 108, 108] => lookup_1040(),
            [115, 104, 105, 97] => lookup_1041(),
            [115, 104, 105, 107, 115, 104, 97] => lookup_1042(),
            [115, 104, 111, 101, 115] => lookup_1043(),
            [115, 104, 111, 112] => lookup_1044(labels),
            [115, 104, 111, 112, 112, 105, 110, 103] => lookup_1045(),
            [115, 104, 111, 117, 106, 105] => lookup_1046(),
            [115, 104, 111, 119] => lookup_1047(),
            [115, 105] => lookup_1048(labels),
            [115, 105, 108, 107] => lookup_1049(),
            [115, 105, 110, 97] => lookup_1050(),
            [115, 105, 110, 103, 108, 101, 115] => lookup_1051(),
            [115, 105, 116, 101] => lookup_1052(labels),
            [115, 106] => lookup_1053(),
            [115, 107] => lookup_1054(),
            [115, 107, 105] => lookup_1055(),
            [115, 107, 105, 110] => lookup_1056(),
            [115, 107, 121] => lookup_1057(),
            [115, 107, 121, 112, 101] => lookup_1058(),
            [115, 108] => lookup_1059(labels),
            [115, 108, 105, 110, 103] => lookup_1060(),
            [115, 109] => lookup_1061(),
            [115, 109, 97, 114, 116] => lookup_1062(),
            [115, 109, 105, 108, 101] => lookup_1063(),
            [115, 110] => lookup_1064(labels),
            [115, 110, 99, 102] => lookup_1065(),
            [115, 111] => lookup_1066(labels),
            [115, 111, 99, 99, 101, 114] => lookup_1067(),
            [115, 111, 99, 105, 97, 108] => lookup_1068(),
            [115, 111, 102, 116, 98, 97, 110, 107] => lookup_1069(),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_1070(),
            [115, 111, 104, 117] => lookup_1071(),
            [115, 111, 108, 97, 114] => lookup_1072(),
            [115, 111, 108, 117, 116, 105, 111, 110, 115] => lookup_1073(),
            [115, 111, 110, 103] => lookup_1074(),
            [115, 111, 110, 121] => lookup_1075(),
            [115, 111, 121] => lookup_1076(),
            [115, 112, 97] => lookup_1077(),
            [115, 112, 97, 99, 101] => lookup_1078(labels),
            [115, 112, 111, 114, 116] => lookup_1079(),
            [115, 112, 111, 116] => lookup_1080(),
            [115, 114] => lookup_1081(),
            [115, 114, 108] => lookup_1082(),
            [115, 115] => lookup_1083(labels),
            [115, 116] => lookup_1084(labels),
            [115, 116, 97, 100, 97] => lookup_1085(),
            [115, 116, 97, 112, 108, 101, 115] => lookup_1086(),
            [115, 116, 97, 114] => lookup_1087(),
            [115, 116, 97, 116, 101, 98, 97, 110, 107] => lookup_1088(),
            [115, 116, 97, 116, 101, 102, 97, 114, 109] => lookup_1089(),
            [115, 116, 99] => lookup_1090(),
            [115, 116, 99, 103, 114, 111, 117, 112] => lookup_1091(),
            [115, 116, 111, 99, 107, 104, 111, 108, 109] => lookup_1092(),
            [115, 116, 111, 114, 97, 103, 101] => lookup_1093(),
            [115, 116, 111, 114, 101] => lookup_1094(labels),
            [115, 116, 114, 101, 97, 109] => lookup_1095(),
            [115, 116, 117, 100, 105, 111] => lookup_1096(),
            [115, 116, 117, 100, 121] => lookup_1097(),
            [115, 116, 121, 108, 101] => lookup_1098(),
            [115, 117] => lookup_1099(labels),
            [115, 117, 99, 107, 115] => lookup_1100(),
            [115, 117, 112, 112, 108, 105, 101, 115] => lookup_1101(),
            [115, 117, 112, 112, 108, 121] => lookup_1102(),
            [115, 117, 112, 112, 111, 114, 116] => lookup_1103(labels),
            [115, 117, 114, 102] => lookup_1104(),
            [115, 117, 114, 103, 101, 114, 121] => lookup_1105(),
            [115, 117, 122, 117, 107, 105] => lookup_1106(),
            [115, 118] => lookup_1107(labels),
            [115, 119, 97, 116, 99, 104] => lookup_1108(),
            [115, 119, 105, 115, 115] => lookup_1109(),
            [115, 120] => lookup_1110(labels),
            [115, 121] => lookup_1111(labels),
            [115, 121, 100, 110, 101, 121] => lookup_1112(),
            [115, 121, 115, 116, 101, 109, 115] => lookup_1113(labels),
            [115, 122] => lookup_1114(labels),
            [116, 97, 98] => lookup_1115(),
            [116, 97, 105, 112, 101, 105] => lookup_1116(),
            [116, 97, 108, 107] => lookup_1117(),
            [116, 97, 111, 98, 97, 111] => lookup_1118(),
            [116, 97, 114, 103, 101, 116] => lookup_1119(),
            [116, 97, 116, 97, 109, 111, 116, 111, 114, 115] => lookup_1120(),
            [116, 97, 116, 97, 114] => lookup_1121(),
            [116, 97, 116, 116, 111, 111] => lookup_1122(),
            [116, 97, 120] => lookup_1123(),
            [116, 97, 120, 105] => lookup_1124(),
            [116, 99] => lookup_1125(),
            [116, 99, 105] => lookup_1126(),
            [116, 100] => lookup_1127(),
            [116, 100, 107] => lookup_1128(),
            [116, 101, 97, 109] => lookup_1129(labels),
            [116, 101, 99, 104] => lookup_1130(labels),
            [116, 101, 99, 104, 110, 111, 108, 111, 103, 121] => lookup_1131(labels),
            [116, 101, 108] => lookup_1132(),
            [116, 101, 109, 97, 115, 101, 107] => lookup_1133(),
            [116, 101, 110, 110, 105, 115] => lookup_1134(),
            [116, 101, 118, 97] => lookup_1135(),
            [116, 102] => lookup_1136(labels),
            [116, 103] => lookup_1137(),
            [116, 104] => lookup_1138(labels),
            [116, 104, 100] => lookup_1139(),
            [116, 104, 101, 97, 116, 101, 114] => lookup_1140(),
            [116, 104, 101, 97, 116, 114, 101] => lookup_1141(),
            [116, 105, 97, 97] => lookup_1142(),
            [116, 105, 99, 107, 101, 116, 115] => lookup_1143(),
            [116, 105, 101, 110, 100, 97] => lookup_1144(),
            [116, 105, 112, 115] => lookup_1145(),
            [116, 105, 114, 101, 115] => lookup_1146(),
            [116, 105, 114, 111, 108] => lookup_1147(),
            [116, 106] => lookup_1148(labels),
            [116, 106, 109, 97, 120, 120] => lookup_1149(),
            [116, 106, 120] => lookup_1150(),
            [116, 107] => lookup_1151(),
            [116, 107, 109, 97, 120, 120] => lookup_1152(),
            [116, 108] => lookup_1153(labels),
            [116, 109] => lookup_1154(labels),
            [116, 109, 97, 108, 108] => lookup_1155(),
            [116, 110] => lookup_1156(labels),
            [116, 111] => lookup_1157(labels),
            [116, 111, 100, 97, 121] => lookup_1158(labels),
            [116, 111, 107, 121, 111] => lookup_1159(),
            [116, 111, 111, 108, 115] => lookup_1160(labels),
            [116, 111, 112] => lookup_1161(labels),
            [116, 111, 114, 97, 121] => lookup_1162(),
            [116, 111, 115, 104, 105, 98, 97] => lookup_1163(),
            [116, 111, 116, 97, 108] => lookup_1164(),
            [116, 111, 117, 114, 115] => lookup_1165(),
            [116, 111, 119, 110] => lookup_1166(),
            [116, 111, 121, 111, 116, 97] => lookup_1167(),
            [116, 111, 121, 115] => lookup_1168(),
            [116, 114] => lookup_1169(labels),
            [116, 114, 97, 100, 101] => lookup_1170(),
            [116, 114, 97, 100, 105, 110, 103] => lookup_1171(),
            [116, 114, 97, 105, 110, 105, 110, 103] => lookup_1172(),
            [116, 114, 97, 118, 101, 108] => lookup_1173(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115] => lookup_1174(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_1175()
            }
            [116, 114, 117, 115, 116] => lookup_1176(),
            [116, 114, 118] => lookup_1177(),
            [116, 116] => lookup_1178(labels),
            [116, 117, 98, 101] => lookup_1179(),
            [116, 117, 105] => lookup_1180(),
            [116, 117, 110, 101, 115] => lookup_1181(),
            [116, 117, 115, 104, 117] => lookup_1182(),
            [116, 118] => lookup_1183(labels),
            [116, 118, 115] => lookup_1184(),
            [116, 119] => lookup_1185(labels),
            [116, 122] => lookup_1186(labels),
            [117, 97] => lookup_1187(labels),
            [117, 98, 97, 110, 107] => lookup_1188(),
            [117, 98, 115] => lookup_1189(),
            [117, 103] => lookup_1190(labels),
            [117, 107] => lookup_1191(labels),
            [117, 110, 105, 99, 111, 109] => lookup_1192(),
            [117, 110, 105, 118, 101, 114, 115, 105, 116, 121] => lookup_1193(),
            [117, 110, 111] => lookup_1194(),
            [117, 111, 108] => lookup_1195(),
            [117, 112, 115] => lookup_1196(),
            [117, 115] => lookup_1197(labels),
            [117, 121] => lookup_1198(labels),
            [117, 122] => lookup_1199(labels),
            [118, 97] => lookup_1200(),
            [118, 97, 99, 97, 116, 105, 111, 110, 115] => lookup_1201(),
            [118, 97, 110, 97] => lookup_1202(),
            [118, 97, 110, 103, 117, 97, 114, 100] => lookup_1203(),
            [118, 99] => lookup_1204(labels),
            [118, 101] => lookup_1205(labels),
            [118, 101, 103, 97, 115] => lookup_1206(),
            [118, 101, 110, 116, 117, 114, 101, 115] => lookup_1207(),
            [118, 101, 114, 105, 115, 105, 103, 110] => lookup_1208(),
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114] => {
                lookup_1209()
            }
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103] => {
                lookup_1210()
            }
            [118, 101, 114, 115, 105, 99, 104, 101, 114, 117, 110, 103] => lookup_1211(),
            [118, 101, 116] => lookup_1212(),
            [118, 103] => lookup_1213(),
            [118, 105] => lookup_1214(labels),
            [118, 105, 97, 106, 101, 115] => lookup_1215(),
            [118, 105, 100, 101, 111] => lookup_1216(),
            [118, 105, 103] => lookup_1217(),
            [118, 105, 107, 105, 110, 103] => lookup_1218(),
            [118, 105, 108, 108, 97, 115] => lookup_1219(),
            [118, 105, 110] => lookup_1220(),
            [118, 105, 112] => lookup_1221(),
            [118, 105, 114, 103, 105, 110] => lookup_1222(),
            [118, 105, 115, 97] => lookup_1223(),
            [118, 105, 115, 105, 111, 110] => lookup_1224(),
            [118, 105, 118, 97] => lookup_1225(),
            [118, 105, 118, 111] => lookup_1226(),
            [118, 108, 97, 97, 110, 100, 101, 114, 101, 110] => lookup_1227(),
            [118, 110] => lookup_1228(labels),
            [118, 111, 100, 107, 97] => lookup_1229(),
            [118, 111, 108, 118, 111] => lookup_1230(),
            [118, 111, 116, 101] => lookup_1231(),
            [118, 111, 116, 105, 110, 103] => lookup_1232(),
            [118, 111, 116, 111] => lookup_1233(),
            [118, 111, 121, 97, 103, 101] => lookup_1234(),
            [118, 117] => lookup_1235(labels),
            [119, 97, 108, 101, 115] => lookup_1236(),
            [119, 97, 108, 109, 97, 114, 116] => lookup_1237(),
            [119, 97, 108, 116, 101, 114] => lookup_1238(),
            [119, 97, 110, 103] => lookup_1239(),
            [119, 97, 110, 103, 103, 111, 117] => lookup_1240(),
            [119, 97, 116, 99, 104] => lookup_1241(),
            [119, 97, 116, 99, 104, 101, 115] => lookup_1242(),
            [119, 101, 97, 116, 104, 101, 114] => lookup_1243(),
            [119, 101, 97, 116, 104, 101, 114, 99, 104, 97, 110, 110, 101, 108] => lookup_1244(),
            [119, 101, 98, 99, 97, 109] => lookup_1245(),
            [119, 101, 98, 101, 114] => lookup_1246(),
            [119, 101, 98, 115, 105, 116, 101] => lookup_1247(labels),
            [119, 101, 100] => lookup_1248(),
            [119, 101, 100, 100, 105, 110, 103] => lookup_1249(),
            [119, 101, 105, 98, 111] => lookup_1250(),
            [119, 101, 105, 114] => lookup_1251(),
            [119, 102] => lookup_1252(labels),
            [119, 104, 111, 115, 119, 104, 111] => lookup_1253(),
            [119, 105, 101, 110] => lookup_1254(),
            [119, 105, 107, 105] => lookup_1255(labels),
            [119, 105, 108, 108, 105, 97, 109, 104, 105, 108, 108] => lookup_1256(),
            [119, 105, 110] => lookup_1257(),
            [119, 105, 110, 100, 111, 119, 115] => lookup_1258(),
            [119, 105, 110, 101] => lookup_1259(),
            [119, 105, 110, 110, 101, 114, 115] => lookup_1260(),
            [119, 109, 101] => lookup_1261(),
            [119, 111, 108, 116, 101, 114, 115, 107, 108, 117, 119, 101, 114] => lookup_1262(),
            [119, 111, 111, 100, 115, 105, 100, 101] => lookup_1263(),
            [119, 111, 114, 107] => lookup_1264(),
            [119, 111, 114, 107, 115] => lookup_1265(),
            [119, 111, 114, 108, 100] => lookup_1266(),
            [119, 111, 119] => lookup_1267(),
            [119, 115] => lookup_1268(labels),
            [119, 116, 99] => lookup_1269(),
            [119, 116, 102] => lookup_1270(),
            [120, 98, 111, 120] => lookup_1271(),
            [120, 101, 114, 111, 120] => lookup_1272(),
            [120, 105, 104, 117, 97, 110] => lookup_1273(),
            [120, 105, 110] => lookup_1274(),
            [120, 110, 45, 45, 49, 49, 98, 52, 99, 51, 100] => lookup_1275(),
            [120, 110, 45, 45, 49, 99, 107, 50, 101, 49, 98] => lookup_1276(),
            [120, 110, 45, 45, 49, 113, 113, 119, 50, 51, 97] => lookup_1277(),
            [120, 110, 45, 45, 50, 115, 99, 114, 106, 57, 99] => lookup_1278(),
            [120, 110, 45, 45, 51, 48, 114, 114, 55, 121] => lookup_1279(),
            [120, 110, 45, 45, 51, 98, 115, 116, 48, 48, 109] => lookup_1280(),
            [120, 110, 45, 45, 51, 100, 115, 52, 52, 51, 103] => lookup_1281(),
            [120, 110, 45, 45, 51, 101, 48, 98, 55, 48, 55, 101] => lookup_1282(),
            [120, 110, 45, 45, 51, 104, 99, 114, 106, 57, 99] => lookup_1283(),
            [120, 110, 45, 45, 51, 112, 120, 117, 56, 107] => lookup_1284(),
            [120, 110, 45, 45, 52, 50, 99, 50, 100, 57, 97] => lookup_1285(),
            [120, 110, 45, 45, 52, 53, 98, 114, 53, 99, 121, 108] => lookup_1286(),
            [120, 110, 45, 45, 52, 53, 98, 114, 106, 57, 99] => lookup_1287(),
            [120, 110, 45, 45, 52, 53, 113, 49, 49, 99] => lookup_1288(),
            [120, 110, 45, 45, 52, 100, 98, 114, 107, 48, 99, 101] => lookup_1289(labels),
            [120, 110, 45, 45, 52, 103, 98, 114, 105, 109] => lookup_1290(),
            [120, 110, 45, 45, 53, 52, 98, 55, 102, 116, 97, 48, 99, 99] => lookup_1291(),
            [120, 110, 45, 45, 53, 53, 113, 119, 52, 50, 103] => lookup_1292(),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1293(),
            [120, 110, 45, 45, 53, 115, 117, 51, 52, 106, 57, 51, 54, 98, 103, 115, 103] => {
                lookup_1294()
            }
            [120, 110, 45, 45, 53, 116, 122, 109, 53, 103] => lookup_1295(),
            [120, 110, 45, 45, 54, 102, 114, 122, 56, 50, 103] => lookup_1296(),
            [120, 110, 45, 45, 54, 113, 113, 57, 56, 54, 98, 51, 120, 108] => lookup_1297(),
            [120, 110, 45, 45, 56, 48, 97, 100, 120, 104, 107, 115] => lookup_1298(),
            [120, 110, 45, 45, 56, 48, 97, 111, 50, 49, 97] => lookup_1299(),
            [120, 110, 45, 45, 56, 48, 97, 113, 101, 99, 100, 114, 49, 97] => lookup_1300(),
            [120, 110, 45, 45, 56, 48, 97, 115, 101, 104, 100, 98] => lookup_1301(),
            [120, 110, 45, 45, 56, 48, 97, 115, 119, 103] => lookup_1302(),
            [120, 110, 45, 45, 56, 121, 48, 97, 48, 54, 51, 97] => lookup_1303(),
            [120, 110, 45, 45, 57, 48, 97, 51, 97, 99] => lookup_1304(labels),
            [120, 110, 45, 45, 57, 48, 97, 101] => lookup_1305(),
            [120, 110, 45, 45, 57, 48, 97, 105, 115] => lookup_1306(),
            [120, 110, 45, 45, 57, 100, 98, 113, 50, 97] => lookup_1307(),
            [120, 110, 45, 45, 57, 101, 116, 53, 50, 117] => lookup_1308(),
            [120, 110, 45, 45, 57, 107, 114, 116, 48, 48, 97] => lookup_1309(),
            [120, 110, 45, 45, 98, 52, 119, 54, 48, 53, 102, 101, 114, 100] => lookup_1310(),
            [120, 110, 45, 45, 98, 99, 107, 49, 98, 57, 97, 53, 100, 114, 101, 52, 99] => {
                lookup_1311()
            }
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1312(),
            [120, 110, 45, 45, 99, 50, 98, 114, 55, 103] => lookup_1313(),
            [120, 110, 45, 45, 99, 99, 107, 50, 98, 51, 98] => lookup_1314(),
            [120, 110, 45, 45, 99, 99, 107, 119, 99, 120, 101, 116, 100] => lookup_1315(),
            [120, 110, 45, 45, 99, 103, 52, 98, 107, 105] => lookup_1316(),
            [120, 110, 45, 45, 99, 108, 99, 104, 99, 48, 101, 97, 48, 98, 50, 103, 50, 97, 57, 103, 99, 100] => {
                lookup_1317()
            }
            [120, 110, 45, 45, 99, 122, 114, 54, 57, 52, 98] => lookup_1318(),
            [120, 110, 45, 45, 99, 122, 114, 115, 48, 116] => lookup_1319(),
            [120, 110, 45, 45, 99, 122, 114, 117, 50, 100] => lookup_1320(),
            [120, 110, 45, 45, 100, 49, 97, 99, 106, 51, 98] => lookup_1321(),
            [120, 110, 45, 45, 100, 49, 97, 108, 102] => lookup_1322(),
            [120, 110, 45, 45, 101, 49, 97, 52, 99] => lookup_1323(),
            [120, 110, 45, 45, 101, 99, 107, 118, 100, 116, 99, 57, 100] => lookup_1324(),
            [120, 110, 45, 45, 101, 102, 118, 121, 56, 56, 104] => lookup_1325(),
            [120, 110, 45, 45, 102, 99, 116, 52, 50, 57, 107] => lookup_1326(),
            [120, 110, 45, 45, 102, 104, 98, 101, 105] => lookup_1327(),
            [120, 110, 45, 45, 102, 105, 113, 50, 50, 56, 99, 53, 104, 115] => lookup_1328(),
            [120, 110, 45, 45, 102, 105, 113, 54, 52, 98] => lookup_1329(),
            [120, 110, 45, 45, 102, 105, 113, 115, 56, 115] => lookup_1330(),
            [120, 110, 45, 45, 102, 105, 113, 122, 57, 115] => lookup_1331(),
            [120, 110, 45, 45, 102, 106, 113, 55, 50, 48, 97] => lookup_1332(),
            [120, 110, 45, 45, 102, 108, 119, 51, 53, 49, 101] => lookup_1333(),
            [120, 110, 45, 45, 102, 112, 99, 114, 106, 57, 99, 51, 100] => lookup_1334(),
            [120, 110, 45, 45, 102, 122, 99, 50, 99, 57, 101, 50, 99] => lookup_1335(),
            [120, 110, 45, 45, 102, 122, 121, 115, 56, 100, 54, 57, 117, 118, 103, 109] => {
                lookup_1336()
            }
            [120, 110, 45, 45, 103, 50, 120, 120, 52, 56, 99] => lookup_1337(),
            [120, 110, 45, 45, 103, 99, 107, 114, 51, 102, 48, 102] => lookup_1338(),
            [120, 110, 45, 45, 103, 101, 99, 114, 106, 57, 99] => lookup_1339(),
            [120, 110, 45, 45, 103, 107, 51, 97, 116, 49, 101] => lookup_1340(),
            [120, 110, 45, 45, 104, 50, 98, 114, 101, 103, 51, 101, 118, 101] => lookup_1341(),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99] => lookup_1342(),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99, 56, 99] => lookup_1343(),
            [120, 110, 45, 45, 104, 120, 116, 56, 49, 52, 101] => lookup_1344(),
            [120, 110, 45, 45, 105, 49, 98, 54, 98, 49, 97, 54, 97, 50, 101] => lookup_1345(),
            [120, 110, 45, 45, 105, 109, 114, 53, 49, 51, 110] => lookup_1346(),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_1347(),
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_1348(),
            [120, 110, 45, 45, 106, 49, 97, 109, 104] => lookup_1349(),
            [120, 110, 45, 45, 106, 54, 119, 49, 57, 51, 103] => lookup_1350(labels),
            [120, 110, 45, 45, 106, 108, 113, 52, 56, 48, 110, 50, 114, 103] => lookup_1351(),
            [120, 110, 45, 45, 106, 118, 114, 49, 56, 57, 109] => lookup_1352(),
            [120, 110, 45, 45, 107, 99, 114, 120, 55, 55, 100, 49, 120, 52, 97] => lookup_1353(),
            [120, 110, 45, 45, 107, 112, 114, 119, 49, 51, 100] => lookup_1354(),
            [120, 110, 45, 45, 107, 112, 114, 121, 53, 55, 100] => lookup_1355(),
            [120, 110, 45, 45, 107, 112, 117, 116, 51, 105] => lookup_1356(),
            [120, 110, 45, 45, 108, 49, 97, 99, 99] => lookup_1357(),
            [120, 110, 45, 45, 108, 103, 98, 98, 97, 116, 49, 97, 100, 56, 106] => lookup_1358(),
            [120, 110, 45, 45, 109, 103, 98, 50, 100, 100, 101, 115] => lookup_1359(),
            [120, 110, 45, 45, 109, 103, 98, 57, 97, 119, 98, 102] => lookup_1360(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 51, 101, 106, 116] => lookup_1361(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_1362(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_1363(),
            [120, 110, 45, 45, 109, 103, 98, 97, 55, 99, 48, 98, 98, 110, 48, 97] => lookup_1364(),
            [120, 110, 45, 45, 109, 103, 98, 97, 97, 109, 55, 97, 56, 104] => lookup_1365(),
            [120, 110, 45, 45, 109, 103, 98, 97, 98, 50, 98, 100] => lookup_1366(),
            [120, 110, 45, 45, 109, 103, 98, 97, 104, 49, 97, 51, 104, 106, 107, 114, 100] => {
                lookup_1367()
            }
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 53, 101, 118, 97, 48, 48, 98] => {
                lookup_1368()
            }
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 122, 103, 113, 112, 54, 106] => {
                lookup_1369()
            }
            [120, 110, 45, 45, 109, 103, 98, 97, 121, 104, 55, 103, 112, 97] => lookup_1370(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97] => lookup_1371(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97, 55, 49, 101] => lookup_1372(),
            [120, 110, 45, 45, 109, 103, 98, 99, 48, 97, 57, 97, 122, 99, 103] => lookup_1373(),
            [120, 110, 45, 45, 109, 103, 98, 99, 97, 55, 100, 122, 100, 111] => lookup_1374(),
            [120, 110, 45, 45, 109, 103, 98, 99, 112, 113, 54, 103, 112, 97, 49, 97] => {
                lookup_1375()
            }
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 56, 55, 103] => {
                lookup_1376()
            }
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 114] => {
                lookup_1377()
            }
            [120, 110, 45, 45, 109, 103, 98, 103, 117, 56, 50, 97] => lookup_1378(),
            [120, 110, 45, 45, 109, 103, 98, 105, 52, 101, 99, 101, 120, 112] => lookup_1379(),
            [120, 110, 45, 45, 109, 103, 98, 112, 108, 50, 102, 104] => lookup_1380(),
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 48, 97, 54, 55, 102, 98, 99] => {
                lookup_1381()
            }
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 118, 97, 102, 114] => {
                lookup_1382()
            }
            [120, 110, 45, 45, 109, 103, 98, 116, 51, 100, 104, 100] => lookup_1383(),
            [120, 110, 45, 45, 109, 103, 98, 116, 102, 56, 102, 108] => lookup_1384(),
            [120, 110, 45, 45, 109, 103, 98, 116, 120, 50, 98] => lookup_1385(),
            [120, 110, 45, 45, 109, 103, 98, 120, 52, 99, 100, 48, 97, 98] => lookup_1386(),
            [120, 110, 45, 45, 109, 105, 120, 48, 56, 50, 102] => lookup_1387(),
            [120, 110, 45, 45, 109, 105, 120, 56, 57, 49, 102] => lookup_1388(),
            [120, 110, 45, 45, 109, 107, 49, 98, 117, 52, 52, 99] => lookup_1389(),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_1390(),
            [120, 110, 45, 45, 110, 103, 98, 99, 53, 97, 122, 100] => lookup_1391(),
            [120, 110, 45, 45, 110, 103, 98, 101, 57, 101, 48, 97] => lookup_1392(),
            [120, 110, 45, 45, 110, 103, 98, 114, 120] => lookup_1393(),
            [120, 110, 45, 45, 110, 110, 120, 51, 56, 56, 97] => lookup_1394(),
            [120, 110, 45, 45, 110, 111, 100, 101] => lookup_1395(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102] => lookup_1396(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102, 115, 48, 48, 101, 109, 97] => lookup_1397(),
            [120, 110, 45, 45, 110, 121, 113, 121, 50, 54, 97] => lookup_1398(),
            [120, 110, 45, 45, 111, 51, 99, 119, 52, 104] => lookup_1399(labels),
            [120, 110, 45, 45, 111, 103, 98, 112, 102, 56, 102, 108] => lookup_1400(),
            [120, 110, 45, 45, 111, 116, 117, 55, 57, 54, 100] => lookup_1401(),
            [120, 110, 45, 45, 112, 49, 97, 99, 102] => lookup_1402(labels),
            [120, 110, 45, 45, 112, 49, 97, 105] => lookup_1403(),
            [120, 110, 45, 45, 112, 103, 98, 115, 48, 100, 104] => lookup_1404(),
            [120, 110, 45, 45, 112, 115, 115, 121, 50, 117] => lookup_1405(),
            [120, 110, 45, 45, 113, 55, 99, 101, 54, 97] => lookup_1406(),
            [120, 110, 45, 45, 113, 57, 106, 121, 98, 52, 99] => lookup_1407(),
            [120, 110, 45, 45, 113, 99, 107, 97, 49, 112, 109, 99] => lookup_1408(),
            [120, 110, 45, 45, 113, 120, 97, 54, 97] => lookup_1409(),
            [120, 110, 45, 45, 113, 120, 97, 109] => lookup_1410(),
            [120, 110, 45, 45, 114, 104, 113, 118, 57, 54, 103] => lookup_1411(),
            [120, 110, 45, 45, 114, 111, 118, 117, 56, 56, 98] => lookup_1412(),
            [120, 110, 45, 45, 114, 118, 99, 49, 101, 48, 97, 109, 51, 101] => lookup_1413(),
            [120, 110, 45, 45, 115, 57, 98, 114, 106, 57, 99] => lookup_1414(),
            [120, 110, 45, 45, 115, 101, 115, 53, 53, 52, 103] => lookup_1415(),
            [120, 110, 45, 45, 116, 54, 48, 98, 53, 54, 97] => lookup_1416(),
            [120, 110, 45, 45, 116, 99, 107, 119, 101] => lookup_1417(),
            [120, 110, 45, 45, 116, 105, 113, 52, 57, 120, 113, 121, 106] => lookup_1418(),
            [120, 110, 45, 45, 117, 110, 117, 112, 52, 121] => lookup_1419(),
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114, 45, 99, 116, 98] => {
                lookup_1420()
            }
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103, 45, 112, 119, 98] => {
                lookup_1421()
            }
            [120, 110, 45, 45, 118, 104, 113, 117, 118] => lookup_1422(),
            [120, 110, 45, 45, 118, 117, 113, 56, 54, 49, 98] => lookup_1423(),
            [120, 110, 45, 45, 119, 52, 114, 56, 53, 101, 108, 56, 102, 104, 117, 53, 100, 110, 114, 97] => {
                lookup_1424()
            }
            [120, 110, 45, 45, 119, 52, 114, 115, 52, 48, 108] => lookup_1425(),
            [120, 110, 45, 45, 119, 103, 98, 104, 49, 99] => lookup_1426(),
            [120, 110, 45, 45, 119, 103, 98, 108, 54, 97] => lookup_1427(),
            [120, 110, 45, 45, 120, 104, 113, 53, 50, 49, 98] => lookup_1428(),
            [120, 110, 45, 45, 120, 107, 99, 50, 97, 108, 51, 104, 121, 101, 50, 97] => {
                lookup_1429()
            }
            [120, 110, 45, 45, 120, 107, 99, 50, 100, 108, 51, 97, 53, 101, 101, 48, 104] => {
                lookup_1430()
            }
            [120, 110, 45, 45, 121, 57, 97, 51, 97, 113] => lookup_1431(),
            [120, 110, 45, 45, 121, 102, 114, 111, 52, 105, 54, 55, 111] => lookup_1432(),
            [120, 110, 45, 45, 121, 103, 98, 105, 50, 97, 109, 109, 120] => lookup_1433(),
            [120, 110, 45, 45, 122, 102, 114, 49, 54, 52, 98] => lookup_1434(),
            [120, 120, 120] => lookup_1435(),
            [120, 121, 122] => lookup_1436(labels),
            [121, 97, 99, 104, 116, 115] => lookup_1437(),
            [121, 97, 104, 111, 111] => lookup_1438(),
            [121, 97, 109, 97, 120, 117, 110] => lookup_1439(),
            [121, 97, 110, 100, 101, 120] => lookup_1440(),
            [121, 101] => lookup_1441(labels),
            [121, 111, 100, 111, 98, 97, 115, 104, 105] => lookup_1442(),
            [121, 111, 103, 97] => lookup_1443(),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_1444(),
            [121, 111, 117] => lookup_1445(),
            [121, 111, 117, 116, 117, 98, 101] => lookup_1446(),
            [121, 116] => lookup_1447(labels),
            [121, 117, 110] => lookup_1448(),
            [122, 97] => lookup_1449(info, labels),
            [122, 97, 112, 112, 111, 115] => lookup_1450(),
            [122, 97, 114, 97] => lookup_1451(),
            [122, 101, 114, 111] => lookup_1452(),
            [122, 105, 112] => lookup_1453(),
            [122, 109] => lookup_1454(labels),
            [122, 111, 110, 101] => lookup_1455(labels),
            [122, 117, 101, 114, 105, 99, 104] => lookup_1456(),
            [122, 119] => lookup_1457(labels),
            [206, 181, 206, 187] => lookup_1458(),
            [206, 181, 207, 133] => lookup_1459(),
            [208, 177, 208, 179] => lookup_1460(),
            [208, 177, 208, 181, 208, 187] => lookup_1461(),
            [208, 180, 208, 181, 209, 130, 208, 184] => lookup_1462(),
            [208, 181, 209, 142] => lookup_1463(),
            [208, 186, 208, 176, 209, 130, 208, 190, 208, 187, 208, 184, 208, 186] => lookup_1464(),
            [208, 186, 208, 190, 208, 188] => lookup_1465(),
            [208, 188, 208, 186, 208, 180] => lookup_1466(),
            [208, 188, 208, 190, 208, 189] => lookup_1467(),
            [208, 188, 208, 190, 209, 129, 208, 186, 208, 178, 208, 176] => lookup_1468(),
            [208, 190, 208, 189, 208, 187, 208, 176, 208, 185, 208, 189] => lookup_1469(),
            [208, 190, 209, 128, 208, 179] => lookup_1470(),
            [209, 128, 209, 131, 209, 129] => lookup_1471(labels),
            [209, 128, 209, 132] => lookup_1472(),
            [209, 129, 208, 176, 208, 185, 209, 130] => lookup_1473(),
            [209, 129, 209, 128, 208, 177] => lookup_1474(labels),
            [209, 131, 208, 186, 209, 128] => lookup_1475(),
            [210, 155, 208, 176, 208, 183] => lookup_1476(),
            [213, 176, 213, 161, 213, 181] => lookup_1477(),
            [215, 153, 215, 169, 215, 168, 215, 144, 215, 156] => lookup_1478(labels),
            [215, 167, 215, 149, 215, 157] => lookup_1479(),
            [216, 167, 216, 168, 217, 136, 216, 184, 216, 168, 217, 138] => lookup_1480(),
            [216, 167, 216, 177, 216, 167, 217, 133, 217, 131, 217, 136] => lookup_1481(),
            [216, 167, 217, 132, 216, 167, 216, 177, 216, 175, 217, 134] => lookup_1482(),
            [216, 167, 217, 132, 216, 168, 216, 173, 216, 177, 217, 138, 217, 134] => lookup_1483(),
            [216, 167, 217, 132, 216, 172, 216, 178, 216, 167, 216, 166, 216, 177] => lookup_1484(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 216, 169] => {
                lookup_1485()
            }
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 217, 135] => {
                lookup_1486()
            }
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 216, 169] => {
                lookup_1487()
            }
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 219, 131] => {
                lookup_1488()
            }
            [216, 167, 217, 132, 216, 185, 217, 132, 217, 138, 216, 167, 217, 134] => lookup_1489(),
            [216, 167, 217, 132, 217, 133, 216, 186, 216, 177, 216, 168] => lookup_1490(),
            [216, 167, 217, 132, 217, 138, 217, 133, 217, 134] => lookup_1491(),
            [216, 167, 217, 133, 216, 167, 216, 177, 216, 167, 216, 170] => lookup_1492(),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_1493(),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_1494(),
            [216, 168, 216, 167, 216, 177, 216, 170] => lookup_1495(),
            [216, 168, 216, 167, 216, 178, 216, 167, 216, 177] => lookup_1496(),
            [216, 168, 217, 138, 216, 170, 217, 131] => lookup_1497(),
            [216, 168, 218, 190, 216, 167, 216, 177, 216, 170] => lookup_1498(),
            [216, 170, 217, 136, 217, 134, 216, 179] => lookup_1499(),
            [216, 179, 217, 136, 216, 175, 216, 167, 217, 134] => lookup_1500(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 167] => lookup_1501(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 169] => lookup_1502(),
            [216, 180, 216, 168, 217, 131, 216, 169] => lookup_1503(),
            [216, 185, 216, 177, 216, 167, 217, 130] => lookup_1504(),
            [216, 185, 216, 177, 216, 168] => lookup_1505(),
            [216, 185, 217, 133, 216, 167, 217, 134] => lookup_1506(),
            [217, 129, 217, 132, 216, 179, 216, 183, 217, 138, 217, 134] => lookup_1507(),
            [217, 130, 216, 183, 216, 177] => lookup_1508(),
            [217, 131, 216, 167, 216, 171, 217, 136, 217, 132, 217, 138, 217, 131] => lookup_1509(),
            [217, 131, 217, 136, 217, 133] => lookup_1510(),
            [217, 133, 216, 181, 216, 177] => lookup_1511(),
            [217, 133, 217, 132, 217, 138, 216, 179, 217, 138, 216, 167] => lookup_1512(),
            [217, 133, 217, 136, 216, 177, 217, 138, 216, 170, 216, 167, 217, 134, 217, 138, 216, 167] => {
                lookup_1513()
            }
            [217, 133, 217, 136, 217, 130, 216, 185] => lookup_1514(),
            [217, 135, 217, 133, 216, 177, 216, 167, 217, 135] => lookup_1515(),
            [217, 190, 216, 167, 217, 131, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_1516(),
            [217, 190, 216, 167, 218, 169, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_1517(),
            [218, 128, 216, 167, 216, 177, 216, 170] => lookup_1518(),
            [224, 164, 149, 224, 165, 137, 224, 164, 174] => lookup_1519(),
            [224, 164, 168, 224, 165, 135, 224, 164, 159] => lookup_1520(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164] => lookup_1521(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164, 224, 164, 174, 224, 165, 141] => {
                lookup_1522()
            }
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 165, 139, 224, 164, 164] => {
                lookup_1523()
            }
            [224, 164, 184, 224, 164, 130, 224, 164, 151, 224, 164, 160, 224, 164, 168] => {
                lookup_1524()
            }
            [224, 166, 172, 224, 166, 190, 224, 166, 130, 224, 166, 178, 224, 166, 190] => {
                lookup_1525()
            }
            [224, 166, 173, 224, 166, 190, 224, 166, 176, 224, 166, 164] => lookup_1526(),
            [224, 166, 173, 224, 166, 190, 224, 167, 176, 224, 166, 164] => lookup_1527(),
            [224, 168, 173, 224, 168, 190, 224, 168, 176, 224, 168, 164] => lookup_1528(),
            [224, 170, 173, 224, 170, 190, 224, 170, 176, 224, 170, 164] => lookup_1529(),
            [224, 172, 173, 224, 172, 190, 224, 172, 176, 224, 172, 164] => lookup_1530(),
            [224, 174, 135, 224, 174, 168, 224, 175, 141, 224, 174, 164, 224, 174, 191, 224, 174, 175, 224, 174, 190] => {
                lookup_1531()
            }
            [224, 174, 135, 224, 174, 178, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 175, 136] => {
                lookup_1532()
            }
            [224, 174, 154, 224, 174, 191, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 174, 170, 224, 175, 141, 224, 174, 170, 224, 175, 130, 224, 174, 176, 224, 175, 141] => {
                lookup_1533()
            }
            [224, 176, 173, 224, 176, 190, 224, 176, 176, 224, 176, 164, 224, 177, 141] => {
                lookup_1534()
            }
            [224, 178, 173, 224, 178, 190, 224, 178, 176, 224, 178, 164] => lookup_1535(),
            [224, 180, 173, 224, 180, 190, 224, 180, 176, 224, 180, 164, 224, 180, 130] => {
                lookup_1536()
            }
            [224, 182, 189, 224, 182, 130, 224, 182, 154, 224, 183, 143] => lookup_1537(),
            [224, 184, 132, 224, 184, 173, 224, 184, 161] => lookup_1538(),
            [224, 185, 132, 224, 184, 151, 224, 184, 162] => lookup_1539(labels),
            [224, 186, 165, 224, 186, 178, 224, 186, 167] => lookup_1540(),
            [225, 131, 146, 225, 131, 148] => lookup_1541(),
            [227, 129, 191, 227, 130, 147, 227, 129, 170] => lookup_1542(),
            [227, 130, 162, 227, 131, 158, 227, 130, 190, 227, 131, 179] => lookup_1543(),
            [227, 130, 175, 227, 131, 169, 227, 130, 166, 227, 131, 137] => lookup_1544(),
            [227, 130, 176, 227, 131, 188, 227, 130, 176, 227, 131, 171] => lookup_1545(),
            [227, 130, 179, 227, 131, 160] => lookup_1546(),
            [227, 130, 185, 227, 131, 136, 227, 130, 162] => lookup_1547(),
            [227, 130, 187, 227, 131, 188, 227, 131, 171] => lookup_1548(),
            [227, 131, 149, 227, 130, 161, 227, 131, 131, 227, 130, 183, 227, 131, 167, 227, 131, 179] => {
                lookup_1549()
            }
            [227, 131, 157, 227, 130, 164, 227, 131, 179, 227, 131, 136] => lookup_1550(),
            [228, 184, 150, 231, 149, 140] => lookup_1551(),
            [228, 184, 173, 228, 191, 161] => lookup_1552(),
            [228, 184, 173, 229, 155, 189] => lookup_1553(),
            [228, 184, 173, 229, 156, 139] => lookup_1554(),
            [228, 184, 173, 230, 150, 135, 231, 189, 145] => lookup_1555(),
            [228, 186, 154, 233, 169, 172, 233, 128, 138] => lookup_1556(),
            [228, 188, 129, 228, 184, 154] => lookup_1557(),
            [228, 189, 155, 229, 177, 177] => lookup_1558(),
            [228, 191, 161, 230, 129, 175] => lookup_1559(),
            [229, 129, 165, 229, 186, 183] => lookup_1560(),
            [229, 133, 171, 229, 141, 166] => lookup_1561(),
            [229, 133, 172, 229, 143, 184] => lookup_1562(),
            [229, 133, 172, 231, 155, 138] => lookup_1563(),
            [229, 143, 176, 230, 185, 190] => lookup_1564(),
            [229, 143, 176, 231, 129, 163] => lookup_1565(),
            [229, 149, 134, 229, 159, 142] => lookup_1566(),
            [229, 149, 134, 229, 186, 151] => lookup_1567(),
            [229, 149, 134, 230, 160, 135] => lookup_1568(),
            [229, 152, 137, 233, 135, 140] => lookup_1569(),
            [229, 152, 137, 233, 135, 140, 229, 164, 167, 233, 133, 146, 229, 186, 151] => {
                lookup_1570()
            }
            [229, 156, 168, 231, 186, 191] => lookup_1571(),
            [229, 164, 167, 230, 139, 191] => lookup_1572(),
            [229, 164, 169, 228, 184, 187, 230, 149, 153] => lookup_1573(),
            [229, 168, 177, 228, 185, 144] => lookup_1574(),
            [229, 174, 182, 233, 155, 187] => lookup_1575(),
            [229, 185, 191, 228, 184, 156] => lookup_1576(),
            [229, 190, 174, 229, 141, 154] => lookup_1577(),
            [230, 133, 136, 229, 150, 132] => lookup_1578(),
            [230, 136, 145, 231, 136, 177, 228, 189, 160] => lookup_1579(),
            [230, 137, 139, 230, 156, 186] => lookup_1580(),
            [230, 139, 155, 232, 129, 152] => lookup_1581(),
            [230, 148, 191, 229, 138, 161] => lookup_1582(),
            [230, 148, 191, 229, 186, 156] => lookup_1583(),
            [230, 150, 176, 229, 138, 160, 229, 157, 161] => lookup_1584(),
            [230, 150, 176, 233, 151, 187] => lookup_1585(),
            [230, 151, 182, 229, 176, 154] => lookup_1586(),
            [230, 155, 184, 231, 177, 141] => lookup_1587(),
            [230, 156, 186, 230, 158, 132] => lookup_1588(),
            [230, 183, 161, 233, 169, 172, 233, 148, 161] => lookup_1589(),
            [230, 184, 184, 230, 136, 143] => lookup_1590(),
            [230, 190, 179, 233, 150, 128] => lookup_1591(),
            [230, 190, 179, 233, 151, 168] => lookup_1592(),
            [231, 130, 185, 231, 156, 139] => lookup_1593(),
            [231, 167, 187, 229, 138, 168] => lookup_1594(),
            [231, 187, 132, 231, 187, 135, 230, 156, 186, 230, 158, 132] => lookup_1595(),
            [231, 189, 145, 229, 157, 128] => lookup_1596(),
            [231, 189, 145, 229, 186, 151] => lookup_1597(),
            [231, 189, 145, 231, 171, 153] => lookup_1598(),
            [231, 189, 145, 231, 187, 156] => lookup_1599(),
            [232, 129, 148, 233, 128, 154] => lookup_1600(),
            [232, 135, 186, 231, 129, 163] => lookup_1601(),
            [232, 176, 183, 230, 173, 140] => lookup_1602(),
            [232, 180, 173, 231, 137, 169] => lookup_1603(),
            [233, 128, 154, 232, 178, 169] => lookup_1604(),
            [233, 155, 134, 229, 155, 162] => lookup_1605(),
            [233, 155, 187, 232, 168, 138, 231, 155, 136, 231, 167, 145] => lookup_1606(),
            [233, 163, 158, 229, 136, 169, 230, 181, 166] => lookup_1607(),
            [233, 163, 159, 229, 147, 129] => lookup_1608(),
            [233, 164, 144, 229, 142, 133] => lookup_1609(),
            [233, 166, 153, 230, 160, 188, 233, 135, 140, 230, 139, 137] => lookup_1610(),
            [233, 166, 153, 230, 184, 175] => lookup_1611(labels),
            [235, 139, 183, 235, 132, 183] => lookup_1612(),
            [235, 139, 183, 236, 187, 180] => lookup_1613(),
            [236, 130, 188, 236, 132, 177] => lookup_1614(),
            [237, 149, 156, 234, 181, 173] => lookup_1615(),
            wild => {
                info.len = wild.len();
                info
            }
        },
        None => info,
    }
}
#[inline]
fn lookup_0() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_2() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_3() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_6() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_7() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_8() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_9_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_9_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_9_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_9_0(acc),
            [100, 114, 114] => lookup_9_1(acc),
            [101, 100, 117] => lookup_9_2(acc),
            [102, 101, 101, 100, 98, 97, 99, 107] => lookup_9_3(acc),
            [102, 111, 114, 109, 115] => lookup_9_4(acc),
            [103, 111, 118] => lookup_9_5(acc),
            [109, 105, 108] => lookup_9_6(acc),
            [110, 101, 116] => lookup_9_7(acc),
            [111, 114, 103] => lookup_9_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_10<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102, 102, 105, 99, 105, 97, 108] => lookup_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_11() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_12() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_13() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_14() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_16() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_18() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_19_0(acc),
            [99, 111] => lookup_19_1(acc),
            [103, 111, 118] => lookup_19_2(acc),
            [109, 105, 108] => lookup_19_3(acc),
            [110, 101, 116] => lookup_19_4(acc),
            [111, 114, 103] => lookup_19_5(acc),
            [115, 99, 104] => lookup_19_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_20() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 105, 110, 118, 101, 115, 116, 105, 103, 97, 116, 105, 111, 110] => {
                lookup_21_0(acc)
            }
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 112, 114, 101, 118, 101, 110, 116, 105, 111, 110] => {
                lookup_21_1(acc)
            }
            [97, 101, 114, 111, 98, 97, 116, 105, 99] => lookup_21_2(acc),
            [97, 101, 114, 111, 99, 108, 117, 98] => lookup_21_3(acc),
            [97, 101, 114, 111, 100, 114, 111, 109, 101] => lookup_21_4(acc),
            [97, 103, 101, 110, 116, 115] => lookup_21_5(acc),
            [97, 105, 114, 45, 115, 117, 114, 118, 101, 105, 108, 108, 97, 110, 99, 101] => {
                lookup_21_6(acc)
            }
            [97, 105, 114, 45, 116, 114, 97, 102, 102, 105, 99, 45, 99, 111, 110, 116, 114, 111, 108] => {
                lookup_21_7(acc)
            }
            [97, 105, 114, 99, 114, 97, 102, 116] => lookup_21_8(acc),
            [97, 105, 114, 108, 105, 110, 101] => lookup_21_9(acc),
            [97, 105, 114, 112, 111, 114, 116] => lookup_21_10(acc),
            [97, 105, 114, 116, 114, 97, 102, 102, 105, 99] => lookup_21_11(acc),
            [97, 109, 98, 117, 108, 97, 110, 99, 101] => lookup_21_12(acc),
            [97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => lookup_21_13(acc),
            [97, 117, 116, 104, 111, 114] => lookup_21_14(acc),
            [98, 97, 108, 108, 111, 111, 110, 105, 110, 103] => lookup_21_15(acc),
            [98, 114, 111, 107, 101, 114] => lookup_21_16(acc),
            [99, 97, 97] => lookup_21_17(acc),
            [99, 97, 114, 103, 111] => lookup_21_18(acc),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_21_19(acc),
            [99, 101, 114, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110] => lookup_21_20(acc),
            [99, 104, 97, 109, 112, 105, 111, 110, 115, 104, 105, 112] => lookup_21_21(acc),
            [99, 104, 97, 114, 116, 101, 114] => lookup_21_22(acc),
            [99, 105, 118, 105, 108, 97, 118, 105, 97, 116, 105, 111, 110] => lookup_21_23(acc),
            [99, 108, 117, 98] => lookup_21_24(acc),
            [99, 111, 110, 102, 101, 114, 101, 110, 99, 101] => lookup_21_25(acc),
            [99, 111, 110, 115, 117, 108, 116, 97, 110, 116] => lookup_21_26(acc),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_21_27(acc),
            [99, 111, 110, 116, 114, 111, 108] => lookup_21_28(acc),
            [99, 111, 117, 110, 99, 105, 108] => lookup_21_29(acc),
            [99, 114, 101, 119] => lookup_21_30(acc),
            [100, 101, 115, 105, 103, 110] => lookup_21_31(acc),
            [100, 103, 99, 97] => lookup_21_32(acc),
            [101, 100, 117, 99, 97, 116, 111, 114] => lookup_21_33(acc),
            [101, 109, 101, 114, 103, 101, 110, 99, 121] => lookup_21_34(acc),
            [101, 110, 103, 105, 110, 101] => lookup_21_35(acc),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_21_36(acc),
            [101, 110, 116, 101, 114, 116, 97, 105, 110, 109, 101, 110, 116] => lookup_21_37(acc),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_21_38(acc),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_21_39(acc),
            [101, 120, 112, 114, 101, 115, 115] => lookup_21_40(acc),
            [102, 101, 100, 101, 114, 97, 116, 105, 111, 110] => lookup_21_41(acc),
            [102, 108, 105, 103, 104, 116] => lookup_21_42(acc),
            [102, 114, 101, 105, 103, 104, 116] => lookup_21_43(acc),
            [102, 117, 101, 108] => lookup_21_44(acc),
            [103, 108, 105, 100, 105, 110, 103] => lookup_21_45(acc),
            [103, 111, 118, 101, 114, 110, 109, 101, 110, 116] => lookup_21_46(acc),
            [103, 114, 111, 117, 110, 100, 104, 97, 110, 100, 108, 105, 110, 103] => {
                lookup_21_47(acc)
            }
            [103, 114, 111, 117, 112] => lookup_21_48(acc),
            [104, 97, 110, 103, 103, 108, 105, 100, 105, 110, 103] => lookup_21_49(acc),
            [104, 111, 109, 101, 98, 117, 105, 108, 116] => lookup_21_50(acc),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_21_51(acc),
            [106, 111, 117, 114, 110, 97, 108] => lookup_21_52(acc),
            [106, 111, 117, 114, 110, 97, 108, 105, 115, 116] => lookup_21_53(acc),
            [108, 101, 97, 115, 105, 110, 103] => lookup_21_54(acc),
            [108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_21_55(acc),
            [109, 97, 103, 97, 122, 105, 110, 101] => lookup_21_56(acc),
            [109, 97, 105, 110, 116, 101, 110, 97, 110, 99, 101] => lookup_21_57(acc),
            [109, 97, 114, 107, 101, 116, 112, 108, 97, 99, 101] => lookup_21_58(acc),
            [109, 101, 100, 105, 97] => lookup_21_59(acc),
            [109, 105, 99, 114, 111, 108, 105, 103, 104, 116] => lookup_21_60(acc),
            [109, 111, 100, 101, 108, 108, 105, 110, 103] => lookup_21_61(acc),
            [110, 97, 118, 105, 103, 97, 116, 105, 111, 110] => lookup_21_62(acc),
            [112, 97, 114, 97, 99, 104, 117, 116, 105, 110, 103] => lookup_21_63(acc),
            [112, 97, 114, 97, 103, 108, 105, 100, 105, 110, 103] => lookup_21_64(acc),
            [112, 97, 115, 115, 101, 110, 103, 101, 114, 45, 97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => {
                lookup_21_65(acc)
            }
            [112, 105, 108, 111, 116] => lookup_21_66(acc),
            [112, 114, 101, 115, 115] => lookup_21_67(acc),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110] => lookup_21_68(acc),
            [114, 101, 99, 114, 101, 97, 116, 105, 111, 110] => lookup_21_69(acc),
            [114, 101, 112, 98, 111, 100, 121] => lookup_21_70(acc),
            [114, 101, 115] => lookup_21_71(acc),
            [114, 101, 115, 101, 97, 114, 99, 104] => lookup_21_72(acc),
            [114, 111, 116, 111, 114, 99, 114, 97, 102, 116] => lookup_21_73(acc),
            [115, 97, 102, 101, 116, 121] => lookup_21_74(acc),
            [115, 99, 105, 101, 110, 116, 105, 115, 116] => lookup_21_75(acc),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_21_76(acc),
            [115, 104, 111, 119] => lookup_21_77(acc),
            [115, 107, 121, 100, 105, 118, 105, 110, 103] => lookup_21_78(acc),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_21_79(acc),
            [115, 116, 117, 100, 101, 110, 116] => lookup_21_80(acc),
            [116, 97, 120, 105] => lookup_21_81(acc),
            [116, 114, 97, 100, 101, 114] => lookup_21_82(acc),
            [116, 114, 97, 100, 105, 110, 103] => lookup_21_83(acc),
            [116, 114, 97, 105, 110, 101, 114] => lookup_21_84(acc),
            [117, 110, 105, 111, 110] => lookup_21_85(acc),
            [119, 111, 114, 107, 105, 110, 103, 103, 114, 111, 117, 112] => lookup_21_86(acc),
            [119, 111, 114, 107, 115] => lookup_21_87(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_22() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_23_0(acc),
            [101, 100, 117] => lookup_23_1(acc),
            [103, 111, 118] => lookup_23_2(acc),
            [110, 101, 116] => lookup_23_3(acc),
            [111, 114, 103] => lookup_23_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_24() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_25() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_26_0(acc),
            [99, 111, 109] => lookup_26_1(acc),
            [110, 101, 116] => lookup_26_2(acc),
            [110, 111, 109] => lookup_26_3(acc),
            [111, 114, 103] => lookup_26_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_27() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_28() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_29_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_29<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_29_0(acc),
            [102, 114, 97, 109, 101, 114] => lookup_29_1(acc),
            [110, 101, 116] => lookup_29_2(acc),
            [111, 102, 102] => lookup_29_3(acc),
            [111, 114, 103] => lookup_29_4(acc),
            [117, 119, 117] => lookup_29_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_30() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_31() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_32() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_33() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_34() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_35_0(acc),
            [101, 100, 117] => lookup_35_1(acc),
            [103, 111, 118] => lookup_35_2(acc),
            [109, 105, 108] => lookup_35_3(acc),
            [110, 101, 116] => lookup_35_4(acc),
            [111, 114, 103] => lookup_35_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_36() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_37() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_39() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_40() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_41() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_42() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_43<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_43_0(acc),
            [99, 111, 109] => lookup_43_1(acc),
            [99, 111, 109, 109, 117, 110, 101] => lookup_43_2(acc),
            [110, 101, 116] => lookup_43_3(acc),
            [111, 114, 103] => lookup_43_4(acc),
            [114, 97, 100, 105, 111] => lookup_43_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_44() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_45() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_46() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_47() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_48() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_49() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_50() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_52() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_54() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_55_0(acc),
            [101, 100] => lookup_55_1(acc),
            [101, 100, 117] => lookup_55_2(acc),
            [103, 111, 118] => lookup_55_3(acc),
            [103, 118] => lookup_55_4(acc),
            [105, 116] => lookup_55_5(acc),
            [111, 103] => lookup_55_6(acc),
            [111, 114, 103] => lookup_55_7(acc),
            [112, 98] => lookup_55_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_56() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_58_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_58_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 101, 118, 105, 101, 119] => lookup_58_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_58_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_9_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_58_9_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_58_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [114, 101, 108, 97, 121] => lookup_58_13_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_58_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 105, 110, 103] => lookup_58_14_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_58_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_18_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_58_18_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_58_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_27_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_27<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_58_27_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_58_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_31_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_31<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_58_31_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_58_32_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_32<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_58_32_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_58_33_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_33_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_33_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_58_33_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_58_33<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 105, 118, 97, 116, 101, 108, 105, 110, 107] => {
                lookup_58_33_1(info, labels, acc)
            }
            wild => lookup_58_33_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_58_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_38_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_38<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_58_38_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_58_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 97, 112, 116, 97, 98, 108, 101] => lookup_58_0(acc),
            [97, 105, 118, 101, 110] => lookup_58_1(acc),
            [98, 101, 103, 101, 116] => lookup_58_2(info, labels, acc),
            [98, 111, 111, 107, 111, 110, 108, 105, 110, 101] => lookup_58_3(acc),
            [98, 111, 116, 100, 97, 115, 104] => lookup_58_4(acc),
            [99, 108, 101, 114, 107] => lookup_58_5(acc),
            [99, 108, 101, 114, 107, 115, 116, 97, 103, 101] => lookup_58_6(acc),
            [99, 115, 98] => lookup_58_7(labels, acc),
            [100, 101, 116, 97] => lookup_58_8(acc),
            [100, 101, 118, 101, 108, 111, 112, 101, 114] => lookup_58_9(info, labels, acc),
            [101, 97, 115, 121, 112, 97, 110, 101, 108] => lookup_58_10(acc),
            [101, 100, 103, 101, 99, 111, 109, 112, 117, 116, 101] => lookup_58_11(acc),
            [101, 110, 99, 114] => lookup_58_12(acc),
            [101, 118, 101, 114, 118, 97, 117, 108, 116] => lookup_58_13(info, labels, acc),
            [101, 120, 112, 111] => lookup_58_14(labels, acc),
            [102, 108, 117, 116, 116, 101, 114, 102, 108, 111, 119] => lookup_58_15(acc),
            [102, 114, 97, 109, 101, 114] => lookup_58_16(acc),
            [104, 97, 115, 117, 114, 97] => lookup_58_17(acc),
            [104, 111, 115, 116, 101, 100] => lookup_58_18(info, labels, acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_58_19(acc),
            [109, 101, 100, 117, 115, 97, 106, 115] => lookup_58_20(acc),
            [109, 101, 115, 115, 101, 114, 108, 105] => lookup_58_21(acc),
            [110, 101, 116, 102, 121] => lookup_58_22(acc),
            [110, 101, 116, 108, 105, 102, 121] => lookup_58_23(acc),
            [110, 103, 114, 111, 107] => lookup_58_24(acc),
            [110, 103, 114, 111, 107, 45, 102, 114, 101, 101] => lookup_58_25(acc),
            [110, 111, 111, 112] => lookup_58_26(acc),
            [110, 111, 114, 116, 104, 102, 108, 97, 110, 107] => lookup_58_27(info, labels, acc),
            [110, 121, 97, 116] => lookup_58_28(acc),
            [111, 110, 45, 102, 108, 101, 101, 107] => lookup_58_29(acc),
            [111, 110, 100, 105, 103, 105, 116, 97, 108, 111, 99, 101, 97, 110] => {
                lookup_58_30(acc)
            }
            [114, 101, 112, 108, 105, 116] => lookup_58_31(labels, acc),
            [114, 117, 110] => lookup_58_32(info, labels, acc),
            [115, 110, 111, 119, 102, 108, 97, 107, 101] => lookup_58_33(info, labels, acc),
            [115, 116, 111, 114, 105, 112, 114, 101, 115, 115] => lookup_58_34(acc),
            [115, 116, 114, 101, 97, 109, 108, 105, 116] => lookup_58_35(acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_58_36(acc),
            [116, 121, 112, 101, 100, 114, 101, 97, 109] => lookup_58_37(acc),
            [117, 112, 115, 117, 110] => lookup_58_38(info, labels, acc),
            [118, 101, 114, 99, 101, 108] => lookup_58_39(acc),
            [119, 100, 104] => lookup_58_40(acc),
            [119, 101, 98] => lookup_58_41(acc),
            [119, 110, 101, 120, 116] => lookup_58_42(acc),
            [122, 101, 97, 98, 117, 114] => lookup_58_43(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_59() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_60() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_61() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116] => lookup_62_0(acc),
            [99, 111, 109] => lookup_62_1(acc),
            [99, 111, 111, 112] => lookup_62_2(acc),
            [101, 100, 117] => lookup_62_3(acc),
            [103, 111, 98] => lookup_62_4(acc),
            [103, 111, 118] => lookup_62_5(acc),
            [105, 110, 116] => lookup_62_6(acc),
            [109, 105, 108] => lookup_62_7(acc),
            [109, 117, 115, 105, 99, 97] => lookup_62_8(acc),
            [109, 117, 116, 117, 97, 108] => lookup_62_9(acc),
            [110, 101, 116] => lookup_62_10(acc),
            [111, 114, 103] => lookup_62_11(acc),
            [115, 101, 110, 97, 115, 97] => lookup_62_12(acc),
            [116, 117, 114] => lookup_62_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_63() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_66() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 49, 54, 52] => lookup_67_0(acc),
            [104, 111, 109, 101] => lookup_67_1(acc),
            [105, 110, 45, 97, 100, 100, 114] => lookup_67_2(acc),
            [105, 112, 54] => lookup_67_3(acc),
            [105, 114, 105, 115] => lookup_67_4(acc),
            [117, 114, 105] => lookup_67_5(acc),
            [117, 114, 110] => lookup_67_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_68() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_69() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_70_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_71() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_72_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_72_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_72_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_72<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_72_0(acc),
            [100, 97, 101, 109, 111, 110] => lookup_72_1(acc),
            [100, 105, 120] => lookup_72_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_73() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_74_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_74_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 104] => lookup_74_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_74_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_74_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [119, 105, 101, 110] => lookup_74_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_74_8_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_8_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_8_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_74_8_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_74_8_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_8_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_74_8_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_74_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [101, 120] => lookup_74_8_1(info, labels, acc),
            [105, 110] => lookup_74_8_2(info, labels, acc),
            wild => lookup_74_8_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_74_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_74_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_74_16_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_16_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_74_16_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_74_16_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_16_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_74_16_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_74_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 120] => lookup_74_16_0(info, labels, acc),
            [107, 117, 110, 100, 101, 110] => lookup_74_16_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_74_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 101, 105, 116, 101] => lookup_74_0(acc),
            [49, 50, 104, 112] => lookup_74_1(acc),
            [50, 105, 120] => lookup_74_2(acc),
            [52, 108, 105, 109, 97] => lookup_74_3(acc),
            [97, 99] => lookup_74_4(labels, acc),
            [98, 105, 122] => lookup_74_5(acc),
            [99, 111] => lookup_74_6(acc),
            [102, 117, 110, 107, 102, 101, 117, 101, 114] => lookup_74_7(info, labels, acc),
            [102, 117, 116, 117, 114, 101, 99, 109, 115] => lookup_74_8(info, labels, acc),
            [102, 117, 116, 117, 114, 101, 104, 111, 115, 116, 105, 110, 103] => lookup_74_9(acc),
            [102, 117, 116, 117, 114, 101, 109, 97, 105, 108, 105, 110, 103] => lookup_74_10(acc),
            [103, 118] => lookup_74_11(acc),
            [105, 110, 102, 111] => lookup_74_12(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_74_13(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_74_14(acc),
            [111, 114] => lookup_74_15(acc),
            [111, 114, 116, 115, 105, 110, 102, 111] => lookup_74_16(info, labels, acc),
            [112, 114, 105, 118] => lookup_74_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_75() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_76() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 108] => lookup_77_2_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 108, 101, 116, 115] => lookup_77_2_0(info, labels, acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_77_2_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104, 111, 111, 108, 115] => lookup_77_4_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77_4_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 116] => lookup_77_4_0(acc),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_77_4_1(acc),
            [110, 115, 119] => lookup_77_4_2(labels, acc),
            [110, 116] => lookup_77_4_3(acc),
            [113, 108, 100] => lookup_77_4_4(acc),
            [115, 97] => lookup_77_4_5(acc),
            [116, 97, 115] => lookup_77_4_6(acc),
            [118, 105, 99] => lookup_77_4_7(acc),
            [119, 97] => lookup_77_4_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_5_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_5_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [113, 108, 100] => lookup_77_5_0(acc),
            [115, 97] => lookup_77_5_1(acc),
            [116, 97, 115] => lookup_77_5_2(acc),
            [118, 105, 99] => lookup_77_5_3(acc),
            [119, 97] => lookup_77_5_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 116] => lookup_77_0(acc),
            [97, 115, 110] => lookup_77_1(acc),
            [99, 111, 109] => lookup_77_2(labels, acc),
            [99, 111, 110, 102] => lookup_77_3(acc),
            [101, 100, 117] => lookup_77_4(labels, acc),
            [103, 111, 118] => lookup_77_5(labels, acc),
            [105, 100] => lookup_77_6(acc),
            [110, 101, 116] => lookup_77_7(acc),
            [110, 115, 119] => lookup_77_8(acc),
            [110, 116] => lookup_77_9(acc),
            [111, 114, 103] => lookup_77_10(acc),
            [111, 122] => lookup_77_11(acc),
            [113, 108, 100] => lookup_77_12(acc),
            [115, 97] => lookup_77_13(acc),
            [116, 97, 115] => lookup_77_14(acc),
            [118, 105, 99] => lookup_77_15(acc),
            [119, 97] => lookup_77_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_78() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_81() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_83() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_84() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_85() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_86_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_86<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_86_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_0_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_87_0_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_87_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 105, 118, 97, 116, 101] => lookup_87_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_0_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_1_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [108, 97, 98, 101, 108, 105, 110, 103] => lookup_87_1_2_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_2_1(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [108, 97, 98, 101, 108, 105, 110, 103] => lookup_87_1_3_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_3_1(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_4_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_4_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [108, 97, 98, 101, 108, 105, 110, 103] => lookup_87_1_5_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_5_1(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_5_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [108, 97, 98, 101, 108, 105, 110, 103] => lookup_87_1_7_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_7_1(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_7_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [108, 97, 98, 101, 108, 105, 110, 103] => lookup_87_1_8_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_8_1(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_8_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_9_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_9_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_11_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_11_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [108, 97, 98, 101, 108, 105, 110, 103] => lookup_87_1_11_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_11_1(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_87_1_11_2(acc)
            }
            [115, 116, 117, 100, 105, 111] => lookup_87_1_11_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_12_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_12_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_87_1_12_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_13_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [108, 97, 98, 101, 108, 105, 110, 103] => lookup_87_1_13_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_13_1(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_13_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_14_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_15_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_15_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_16_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_16_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_16_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_17_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_17_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_17_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_18_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_18_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [108, 97, 98, 101, 108, 105, 110, 103] => lookup_87_1_18_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_18_1(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_18_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_19_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [108, 97, 98, 101, 108, 105, 110, 103] => lookup_87_1_19_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_19_1(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_19_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_20_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_20_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_21_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_87_1_21_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_22_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_22_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_23_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_23_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_24_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_24<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_24_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_24_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_25<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_25_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_87_1_25_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_26_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_26_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_26_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_26_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_26<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [108, 97, 98, 101, 108, 105, 110, 103] => lookup_87_1_26_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_26_1(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_87_1_26_2(acc)
            }
            [115, 116, 117, 100, 105, 111] => lookup_87_1_26_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_27_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_27_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_27_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_27<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [108, 97, 98, 101, 108, 105, 110, 103] => lookup_87_1_27_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_27_1(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_87_1_27_2(acc)
            }
            [115, 116, 117, 100, 105, 111] => lookup_87_1_27_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_28_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_28_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_28_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_28<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_28_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_87_1_28_1(acc)
            }
            [115, 116, 117, 100, 105, 111] => lookup_87_1_28_2(acc),
            [115, 116, 117, 100, 105, 111, 45, 102, 105, 112, 115] => lookup_87_1_28_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_29_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_29_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_29<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_29_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_87_1_29_1(acc)
            }
            [115, 116, 117, 100, 105, 111] => lookup_87_1_29_2(acc),
            [115, 116, 117, 100, 105, 111, 45, 102, 105, 112, 115] => lookup_87_1_29_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_30_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_30_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_30<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_30_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_87_1_30_1(acc)
            }
            [115, 116, 117, 100, 105, 111] => lookup_87_1_30_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1_31_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_31_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_31_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_31_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_87_1_31<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [108, 97, 98, 101, 108, 105, 110, 103] => lookup_87_1_31_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_87_1_31_1(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_87_1_31_2(acc)
            }
            [115, 116, 117, 100, 105, 111] => lookup_87_1_31_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 102, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_87_1_0(info, labels, acc),
            [97, 112, 45, 101, 97, 115, 116, 45, 49] => lookup_87_1_1(info, labels, acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_87_1_2(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_87_1_3(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_87_1_4(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_87_1_5(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 50] => lookup_87_1_6(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_87_1_7(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_87_1_8(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_87_1_9(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 52] => {
                lookup_87_1_10(info, labels, acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_87_1_11(info, labels, acc)
            }
            [99, 97, 45, 119, 101, 115, 116, 45, 49] => lookup_87_1_12(info, labels, acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_87_1_13(info, labels, acc)
            }
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 50] => {
                lookup_87_1_14(info, labels, acc)
            }
            [101, 117, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_87_1_15(info, labels, acc),
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_87_1_16(info, labels, acc),
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 50] => lookup_87_1_17(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_87_1_18(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_87_1_19(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_87_1_20(info, labels, acc),
            [101, 120, 112, 101, 114, 105, 109, 101, 110, 116, 115] => {
                lookup_87_1_21(info, labels, acc)
            }
            [105, 108, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_87_1_22(info, labels, acc)
            }
            [109, 101, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_87_1_23(info, labels, acc)
            }
            [109, 101, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_87_1_24(info, labels, acc),
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_87_1_25(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_87_1_26(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_87_1_27(info, labels, acc),
            [117, 115, 45, 103, 111, 118, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_87_1_28(info, labels, acc)
            }
            [117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_87_1_29(info, labels, acc)
            }
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_87_1_30(info, labels, acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_87_1_31(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_87<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 101, 112, 111, 115, 116] => lookup_87_0(info, labels, acc),
            [115, 97, 103, 101, 109, 97, 107, 101, 114] => lookup_87_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_89() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_90_0(acc),
            [99, 111] => lookup_90_1(acc),
            [99, 111, 109] => lookup_90_2(acc),
            [101, 100, 117] => lookup_90_3(acc),
            [103, 111, 118] => lookup_90_4(acc),
            [105, 110, 102, 111] => lookup_90_5(acc),
            [105, 110, 116] => lookup_90_6(acc),
            [109, 105, 108] => lookup_90_7(acc),
            [110, 97, 109, 101] => lookup_90_8(acc),
            [110, 101, 116] => lookup_90_9(acc),
            [111, 114, 103] => lookup_90_10(acc),
            [112, 112] => lookup_90_11(acc),
            [112, 114, 111] => lookup_90_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_91() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_92<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_92_0(acc),
            [101, 100, 117] => lookup_92_1(acc),
            [103, 111, 118] => lookup_92_2(acc),
            [109, 105, 108] => lookup_92_3(acc),
            [110, 101, 116] => lookup_92_4(acc),
            [111, 114, 103] => lookup_92_5(acc),
            [114, 115] => lookup_92_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_93() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_95() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_96() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_97() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_99() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_100() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_101() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_102() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_103() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_104() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_105_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_105<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 117, 115] => lookup_105_0(acc),
            [110, 122] => lookup_105_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_106() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_107() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_108_0(acc),
            [99, 111] => lookup_108_1(acc),
            [99, 111, 109] => lookup_108_2(acc),
            [101, 100, 117] => lookup_108_3(acc),
            [103, 111, 118] => lookup_108_4(acc),
            [105, 110, 102, 111] => lookup_108_5(acc),
            [110, 101, 116] => lookup_108_6(acc),
            [111, 114, 103] => lookup_108_7(acc),
            [115, 116, 111, 114, 101] => lookup_108_8(acc),
            [116, 118] => lookup_108_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_109() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_110() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_111() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_114_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_114<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_114_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_115_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_115_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_115_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_115_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_115_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_115_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_115_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_115_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 122, 112, 114, 111, 120, 121] => lookup_115_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_115_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_115_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_115_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_115_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_115_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_115<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 105, 116, 101] => lookup_115_0(acc),
            [97, 99] => lookup_115_1(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_115_2(acc),
            [105, 110, 116, 101, 114, 104, 111, 115, 116, 115, 111, 108, 117, 116, 105, 111, 110, 115] => {
                lookup_115_3(info, labels, acc)
            }
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_115_4(info, labels, acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_115_5(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_115_6(info, labels, acc),
            [119, 101, 98, 104, 111, 115, 116, 105, 110, 103] => lookup_115_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_116() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_117() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_118() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_119() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_120() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_121() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_123() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_124_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_125_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_125_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48] => lookup_125_0(acc),
            [49] => lookup_125_1(acc),
            [50] => lookup_125_2(acc),
            [51] => lookup_125_3(acc),
            [52] => lookup_125_4(acc),
            [53] => lookup_125_5(acc),
            [54] => lookup_125_6(acc),
            [55] => lookup_125_7(acc),
            [56] => lookup_125_8(acc),
            [57] => lookup_125_9(acc),
            [97] => lookup_125_10(acc),
            [98] => lookup_125_11(acc),
            [98, 97, 114, 115, 121] => lookup_125_12(acc),
            [99] => lookup_125_13(acc),
            [100] => lookup_125_14(acc),
            [101] => lookup_125_15(acc),
            [102] => lookup_125_16(acc),
            [103] => lookup_125_17(acc),
            [104] => lookup_125_18(acc),
            [105] => lookup_125_19(acc),
            [106] => lookup_125_20(acc),
            [107] => lookup_125_21(acc),
            [108] => lookup_125_22(acc),
            [109] => lookup_125_23(acc),
            [110] => lookup_125_24(acc),
            [111] => lookup_125_25(acc),
            [112] => lookup_125_26(acc),
            [113] => lookup_125_27(acc),
            [114] => lookup_125_28(acc),
            [115] => lookup_125_29(acc),
            [116] => lookup_125_30(acc),
            [117] => lookup_125_31(acc),
            [118] => lookup_125_32(acc),
            [119] => lookup_125_33(acc),
            [120] => lookup_125_34(acc),
            [121] => lookup_125_35(acc),
            [122] => lookup_125_36(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_126_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_126_0(acc),
            [101, 100, 117] => lookup_126_1(acc),
            [103, 111, 118] => lookup_126_2(acc),
            [110, 101, 116] => lookup_126_3(acc),
            [111, 114, 103] => lookup_126_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_127() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_128_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_128_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_128_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_128_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_128_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_128<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_128_0(acc),
            [99, 111, 109] => lookup_128_1(acc),
            [101, 100, 117] => lookup_128_2(acc),
            [111, 114] => lookup_128_3(acc),
            [111, 114, 103] => lookup_128_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_129() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_131() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_134() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_135_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_135<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 116, 105, 118, 101, 116, 114, 97, 105, 108] => lookup_135_0(acc),
            [99, 108, 111, 117, 100, 45, 105, 112] => lookup_135_1(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_135_2(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_135_3(acc),
            [100, 121, 110, 100, 110, 115] => lookup_135_4(acc),
            [102, 111, 114, 45, 98, 101, 116, 116, 101, 114] => lookup_135_5(acc),
            [102, 111, 114, 45, 109, 111, 114, 101] => lookup_135_6(acc),
            [102, 111, 114, 45, 115, 111, 109, 101] => lookup_135_7(acc),
            [102, 111, 114, 45, 116, 104, 101] => lookup_135_8(acc),
            [106, 111, 122, 105] => lookup_135_9(acc),
            [109, 109, 97, 102, 97, 110] => lookup_135_10(acc),
            [109, 121, 102, 116, 112] => lookup_135_11(acc),
            [110, 111, 45, 105, 112] => lookup_135_12(acc),
            [111, 114, 120] => lookup_135_13(acc),
            [115, 101, 108, 102, 105, 112] => lookup_135_14(acc),
            [119, 101, 98, 104, 111, 112] => lookup_135_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_136_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 102, 114, 105, 99, 97] => lookup_136_0(acc),
            [97, 103, 114, 111] => lookup_136_1(acc),
            [97, 114, 99, 104, 105, 116, 101, 99, 116, 101, 115] => lookup_136_2(acc),
            [97, 115, 115, 117, 114] => lookup_136_3(acc),
            [97, 118, 111, 99, 97, 116, 115] => lookup_136_4(acc),
            [99, 111] => lookup_136_5(acc),
            [99, 111, 109] => lookup_136_6(acc),
            [101, 99, 111] => lookup_136_7(acc),
            [101, 99, 111, 110, 111] => lookup_136_8(acc),
            [101, 100, 117] => lookup_136_9(acc),
            [105, 110, 102, 111] => lookup_136_10(acc),
            [108, 111, 105, 115, 105, 114, 115] => lookup_136_11(acc),
            [109, 111, 110, 101, 121] => lookup_136_12(acc),
            [110, 101, 116] => lookup_136_13(acc),
            [111, 114, 103] => lookup_136_14(acc),
            [111, 116, 101] => lookup_136_15(acc),
            [114, 101, 115, 116, 97, 117, 114, 97, 110, 116] => lookup_136_16(acc),
            [114, 101, 115, 116, 111] => lookup_136_17(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_136_18(acc),
            [117, 110, 105, 118] => lookup_136_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_137() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_138() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_139() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_141() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_142() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_143_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_143_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_143_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_143_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_143_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_143<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_143_0(acc),
            [101, 100, 117] => lookup_143_1(acc),
            [103, 111, 118] => lookup_143_2(acc),
            [110, 101, 116] => lookup_143_3(acc),
            [111, 114, 103] => lookup_143_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_144() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_145() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_146_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_146_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_146_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_146_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_146_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_146_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_146<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_146_0(acc),
            [99, 111, 109] => lookup_146_1(acc),
            [101, 100, 117] => lookup_146_2(acc),
            [103, 111, 118] => lookup_146_3(acc),
            [110, 101, 116] => lookup_146_4(acc),
            [111, 114, 103] => lookup_146_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_147() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 97, 100, 101, 109, 105, 97] => lookup_148_0(acc),
            [97, 103, 114, 111] => lookup_148_1(acc),
            [97, 114, 116, 101] => lookup_148_2(acc),
            [98, 108, 111, 103] => lookup_148_3(acc),
            [98, 111, 108, 105, 118, 105, 97] => lookup_148_4(acc),
            [99, 105, 101, 110, 99, 105, 97] => lookup_148_5(acc),
            [99, 111, 109] => lookup_148_6(acc),
            [99, 111, 111, 112, 101, 114, 97, 116, 105, 118, 97] => lookup_148_7(acc),
            [100, 101, 109, 111, 99, 114, 97, 99, 105, 97] => lookup_148_8(acc),
            [100, 101, 112, 111, 114, 116, 101] => lookup_148_9(acc),
            [101, 99, 111, 108, 111, 103, 105, 97] => lookup_148_10(acc),
            [101, 99, 111, 110, 111, 109, 105, 97] => lookup_148_11(acc),
            [101, 100, 117] => lookup_148_12(acc),
            [101, 109, 112, 114, 101, 115, 97] => lookup_148_13(acc),
            [103, 111, 98] => lookup_148_14(acc),
            [105, 110, 100, 105, 103, 101, 110, 97] => lookup_148_15(acc),
            [105, 110, 100, 117, 115, 116, 114, 105, 97] => lookup_148_16(acc),
            [105, 110, 102, 111] => lookup_148_17(acc),
            [105, 110, 116] => lookup_148_18(acc),
            [109, 101, 100, 105, 99, 105, 110, 97] => lookup_148_19(acc),
            [109, 105, 108] => lookup_148_20(acc),
            [109, 111, 118, 105, 109, 105, 101, 110, 116, 111] => lookup_148_21(acc),
            [109, 117, 115, 105, 99, 97] => lookup_148_22(acc),
            [110, 97, 116, 117, 114, 97, 108] => lookup_148_23(acc),
            [110, 101, 116] => lookup_148_24(acc),
            [110, 111, 109, 98, 114, 101] => lookup_148_25(acc),
            [110, 111, 116, 105, 99, 105, 97, 115] => lookup_148_26(acc),
            [111, 114, 103] => lookup_148_27(acc),
            [112, 97, 116, 114, 105, 97] => lookup_148_28(acc),
            [112, 108, 117, 114, 105, 110, 97, 99, 105, 111, 110, 97, 108] => lookup_148_29(acc),
            [112, 111, 108, 105, 116, 105, 99, 97] => lookup_148_30(acc),
            [112, 114, 111, 102, 101, 115, 105, 111, 110, 97, 108] => lookup_148_31(acc),
            [112, 117, 101, 98, 108, 111] => lookup_148_32(acc),
            [114, 101, 118, 105, 115, 116, 97] => lookup_148_33(acc),
            [115, 97, 108, 117, 100] => lookup_148_34(acc),
            [116, 101, 99, 110, 111, 108, 111, 103, 105, 97] => lookup_148_35(acc),
            [116, 107, 115, 97, 116] => lookup_148_36(acc),
            [116, 114, 97, 110, 115, 112, 111, 114, 116, 101] => lookup_148_37(acc),
            [116, 118] => lookup_148_38(acc),
            [119, 101, 98] => lookup_148_39(acc),
            [119, 105, 107, 105] => lookup_148_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_149() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_151() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_154() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_155() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_156() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_157() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_160() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_161() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_162() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 105, 109, 112, 108, 101, 115, 105, 116, 101] => lookup_163_30_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_163_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_64<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_163_64_0(acc),
            [97, 108] => lookup_163_64_1(acc),
            [97, 109] => lookup_163_64_2(acc),
            [97, 112] => lookup_163_64_3(acc),
            [98, 97] => lookup_163_64_4(acc),
            [99, 101] => lookup_163_64_5(acc),
            [100, 102] => lookup_163_64_6(acc),
            [101, 115] => lookup_163_64_7(acc),
            [103, 111] => lookup_163_64_8(acc),
            [109, 97] => lookup_163_64_9(acc),
            [109, 103] => lookup_163_64_10(acc),
            [109, 115] => lookup_163_64_11(acc),
            [109, 116] => lookup_163_64_12(acc),
            [112, 97] => lookup_163_64_13(acc),
            [112, 98] => lookup_163_64_14(acc),
            [112, 101] => lookup_163_64_15(acc),
            [112, 105] => lookup_163_64_16(acc),
            [112, 114] => lookup_163_64_17(acc),
            [114, 106] => lookup_163_64_18(acc),
            [114, 110] => lookup_163_64_19(acc),
            [114, 111] => lookup_163_64_20(acc),
            [114, 114] => lookup_163_64_21(acc),
            [114, 115] => lookup_163_64_22(acc),
            [115, 99] => lookup_163_64_23(acc),
            [115, 101] => lookup_163_64_24(acc),
            [115, 112] => lookup_163_64_25(acc),
            [116, 111] => lookup_163_64_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_163_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_75_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_163_75<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_163_75_0(acc),
            [97, 108] => lookup_163_75_1(acc),
            [97, 109] => lookup_163_75_2(acc),
            [97, 112] => lookup_163_75_3(acc),
            [98, 97] => lookup_163_75_4(acc),
            [99, 101] => lookup_163_75_5(acc),
            [100, 102] => lookup_163_75_6(acc),
            [101, 115] => lookup_163_75_7(acc),
            [103, 111] => lookup_163_75_8(acc),
            [109, 97] => lookup_163_75_9(acc),
            [109, 103] => lookup_163_75_10(acc),
            [109, 115] => lookup_163_75_11(acc),
            [109, 116] => lookup_163_75_12(acc),
            [112, 97] => lookup_163_75_13(acc),
            [112, 98] => lookup_163_75_14(acc),
            [112, 101] => lookup_163_75_15(acc),
            [112, 105] => lookup_163_75_16(acc),
            [112, 114] => lookup_163_75_17(acc),
            [114, 106] => lookup_163_75_18(acc),
            [114, 110] => lookup_163_75_19(acc),
            [114, 111] => lookup_163_75_20(acc),
            [114, 114] => lookup_163_75_21(acc),
            [114, 115] => lookup_163_75_22(acc),
            [115, 99] => lookup_163_75_23(acc),
            [115, 101] => lookup_163_75_24(acc),
            [115, 112] => lookup_163_75_25(acc),
            [116, 111] => lookup_163_75_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_163_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_93_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_93<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_163_93_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_163_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [57, 103, 117, 97, 99, 117] => lookup_163_0(acc),
            [97, 98, 99] => lookup_163_1(acc),
            [97, 100, 109] => lookup_163_2(acc),
            [97, 100, 118] => lookup_163_3(acc),
            [97, 103, 114] => lookup_163_4(acc),
            [97, 106, 117] => lookup_163_5(acc),
            [97, 109] => lookup_163_6(acc),
            [97, 110, 97, 110, 105] => lookup_163_7(acc),
            [97, 112, 97, 114, 101, 99, 105, 100, 97] => lookup_163_8(acc),
            [97, 112, 112] => lookup_163_9(acc),
            [97, 114, 113] => lookup_163_10(acc),
            [97, 114, 116] => lookup_163_11(acc),
            [97, 116, 111] => lookup_163_12(acc),
            [98] => lookup_163_13(acc),
            [98, 97, 114, 117, 101, 114, 105] => lookup_163_14(acc),
            [98, 101, 108, 101, 109] => lookup_163_15(acc),
            [98, 101, 116] => lookup_163_16(acc),
            [98, 104, 122] => lookup_163_17(acc),
            [98, 105, 98] => lookup_163_18(acc),
            [98, 105, 111] => lookup_163_19(acc),
            [98, 108, 111, 103] => lookup_163_20(acc),
            [98, 109, 100] => lookup_163_21(acc),
            [98, 111, 97, 118, 105, 115, 116, 97] => lookup_163_22(acc),
            [98, 115, 98] => lookup_163_23(acc),
            [99, 97, 109, 112, 105, 110, 97, 103, 114, 97, 110, 100, 101] => lookup_163_24(acc),
            [99, 97, 109, 112, 105, 110, 97, 115] => lookup_163_25(acc),
            [99, 97, 120, 105, 97, 115] => lookup_163_26(acc),
            [99, 105, 109] => lookup_163_27(acc),
            [99, 110, 103] => lookup_163_28(acc),
            [99, 110, 116] => lookup_163_29(acc),
            [99, 111, 109] => lookup_163_30(labels, acc),
            [99, 111, 110, 116, 97, 103, 101, 109] => lookup_163_31(acc),
            [99, 111, 111, 112] => lookup_163_32(acc),
            [99, 111, 122] => lookup_163_33(acc),
            [99, 114, 105] => lookup_163_34(acc),
            [99, 117, 105, 97, 98, 97] => lookup_163_35(acc),
            [99, 117, 114, 105, 116, 105, 98, 97] => lookup_163_36(acc),
            [100, 101, 102] => lookup_163_37(acc),
            [100, 101, 115] => lookup_163_38(acc),
            [100, 101, 116] => lookup_163_39(acc),
            [100, 101, 118] => lookup_163_40(acc),
            [101, 99, 110] => lookup_163_41(acc),
            [101, 99, 111] => lookup_163_42(acc),
            [101, 100, 117] => lookup_163_43(acc),
            [101, 109, 112] => lookup_163_44(acc),
            [101, 110, 102] => lookup_163_45(acc),
            [101, 110, 103] => lookup_163_46(acc),
            [101, 115, 112] => lookup_163_47(acc),
            [101, 116, 99] => lookup_163_48(acc),
            [101, 116, 105] => lookup_163_49(acc),
            [102, 97, 114] => lookup_163_50(acc),
            [102, 101, 105, 114, 97] => lookup_163_51(acc),
            [102, 108, 111, 103] => lookup_163_52(acc),
            [102, 108, 111, 114, 105, 112, 97] => lookup_163_53(acc),
            [102, 109] => lookup_163_54(acc),
            [102, 110, 100] => lookup_163_55(acc),
            [102, 111, 114, 116, 97, 108] => lookup_163_56(acc),
            [102, 111, 116] => lookup_163_57(acc),
            [102, 111, 122] => lookup_163_58(acc),
            [102, 115, 116] => lookup_163_59(acc),
            [103, 49, 50] => lookup_163_60(acc),
            [103, 101, 111] => lookup_163_61(acc),
            [103, 103, 102] => lookup_163_62(acc),
            [103, 111, 105, 97, 110, 105, 97] => lookup_163_63(acc),
            [103, 111, 118] => lookup_163_64(labels, acc),
            [103, 114, 117] => lookup_163_65(acc),
            [105, 109, 98] => lookup_163_66(acc),
            [105, 110, 100] => lookup_163_67(acc),
            [105, 110, 102] => lookup_163_68(acc),
            [106, 97, 98] => lookup_163_69(acc),
            [106, 97, 109, 112, 97] => lookup_163_70(acc),
            [106, 100, 102] => lookup_163_71(acc),
            [106, 111, 105, 110, 118, 105, 108, 108, 101] => lookup_163_72(acc),
            [106, 111, 114] => lookup_163_73(acc),
            [106, 117, 115] => lookup_163_74(acc),
            [108, 101, 103] => lookup_163_75(labels, acc),
            [108, 101, 105, 108, 97, 111] => lookup_163_76(acc),
            [108, 101, 108] => lookup_163_77(acc),
            [108, 111, 103] => lookup_163_78(acc),
            [108, 111, 110, 100, 114, 105, 110, 97] => lookup_163_79(acc),
            [109, 97, 99, 97, 112, 97] => lookup_163_80(acc),
            [109, 97, 99, 101, 105, 111] => lookup_163_81(acc),
            [109, 97, 110, 97, 117, 115] => lookup_163_82(acc),
            [109, 97, 114, 105, 110, 103, 97] => lookup_163_83(acc),
            [109, 97, 116] => lookup_163_84(acc),
            [109, 101, 100] => lookup_163_85(acc),
            [109, 105, 108] => lookup_163_86(acc),
            [109, 111, 114, 101, 110, 97] => lookup_163_87(acc),
            [109, 112] => lookup_163_88(acc),
            [109, 117, 115] => lookup_163_89(acc),
            [110, 97, 116, 97, 108] => lookup_163_90(acc),
            [110, 101, 116] => lookup_163_91(acc),
            [110, 105, 116, 101, 114, 111, 105] => lookup_163_92(acc),
            [110, 111, 109] => lookup_163_93(info, labels, acc),
            [110, 111, 116] => lookup_163_94(acc),
            [110, 116, 114] => lookup_163_95(acc),
            [111, 100, 111] => lookup_163_96(acc),
            [111, 110, 103] => lookup_163_97(acc),
            [111, 114, 103] => lookup_163_98(acc),
            [111, 115, 97, 115, 99, 111] => lookup_163_99(acc),
            [112, 97, 108, 109, 97, 115] => lookup_163_100(acc),
            [112, 111, 97] => lookup_163_101(acc),
            [112, 112, 103] => lookup_163_102(acc),
            [112, 114, 111] => lookup_163_103(acc),
            [112, 115, 99] => lookup_163_104(acc),
            [112, 115, 105] => lookup_163_105(acc),
            [112, 118, 104] => lookup_163_106(acc),
            [113, 115, 108] => lookup_163_107(acc),
            [114, 97, 100, 105, 111] => lookup_163_108(acc),
            [114, 101, 99] => lookup_163_109(acc),
            [114, 101, 99, 105, 102, 101] => lookup_163_110(acc),
            [114, 101, 112] => lookup_163_111(acc),
            [114, 105, 98, 101, 105, 114, 97, 111] => lookup_163_112(acc),
            [114, 105, 111] => lookup_163_113(acc),
            [114, 105, 111, 98, 114, 97, 110, 99, 111] => lookup_163_114(acc),
            [114, 105, 111, 112, 114, 101, 116, 111] => lookup_163_115(acc),
            [115, 97, 108, 118, 97, 100, 111, 114] => lookup_163_116(acc),
            [115, 97, 109, 112, 97] => lookup_163_117(acc),
            [115, 97, 110, 116, 97, 109, 97, 114, 105, 97] => lookup_163_118(acc),
            [115, 97, 110, 116, 111, 97, 110, 100, 114, 101] => lookup_163_119(acc),
            [115, 97, 111, 98, 101, 114, 110, 97, 114, 100, 111] => lookup_163_120(acc),
            [115, 97, 111, 103, 111, 110, 99, 97] => lookup_163_121(acc),
            [115, 101, 103] => lookup_163_122(acc),
            [115, 106, 99] => lookup_163_123(acc),
            [115, 108, 103] => lookup_163_124(acc),
            [115, 108, 122] => lookup_163_125(acc),
            [115, 111, 114, 111, 99, 97, 98, 97] => lookup_163_126(acc),
            [115, 114, 118] => lookup_163_127(acc),
            [116, 97, 120, 105] => lookup_163_128(acc),
            [116, 99] => lookup_163_129(acc),
            [116, 101, 99] => lookup_163_130(acc),
            [116, 101, 111] => lookup_163_131(acc),
            [116, 104, 101] => lookup_163_132(acc),
            [116, 109, 112] => lookup_163_133(acc),
            [116, 114, 100] => lookup_163_134(acc),
            [116, 117, 114] => lookup_163_135(acc),
            [116, 118] => lookup_163_136(acc),
            [117, 100, 105] => lookup_163_137(acc),
            [118, 101, 116] => lookup_163_138(acc),
            [118, 105, 120] => lookup_163_139(acc),
            [118, 108, 111, 103] => lookup_163_140(acc),
            [119, 105, 107, 105] => lookup_163_141(acc),
            [122, 108, 103] => lookup_163_142(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_164() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_165() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_166() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_169() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_170_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_170_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_170_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_170_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_170_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_170_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_170<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_170_0(acc),
            [101, 100, 117] => lookup_170_1(acc),
            [103, 111, 118] => lookup_170_2(acc),
            [110, 101, 116] => lookup_170_3(acc),
            [111, 114, 103] => lookup_170_4(acc),
            [119, 101] => lookup_170_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_171_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_171_0(acc),
            [101, 100, 117] => lookup_171_1(acc),
            [103, 111, 118] => lookup_171_2(acc),
            [110, 101, 116] => lookup_171_3(acc),
            [111, 114, 103] => lookup_171_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_172_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_172<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 48] => lookup_172_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_173_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_173<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 115, 105, 116, 101] => lookup_173_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_174_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_174<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_174_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_175() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_177() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_178_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_178_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_178_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_178_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_178_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_178<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_178_0(acc),
            [99, 111] => lookup_178_1(acc),
            [103, 111, 118] => lookup_178_2(acc),
            [110, 101, 116] => lookup_178_3(acc),
            [111, 114, 103] => lookup_178_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_179_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_179_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_179_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_179_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_179_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_179<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_179_0(acc),
            [103, 111, 118] => lookup_179_1(acc),
            [109, 101, 100, 105, 97, 116, 101, 99, 104] => lookup_179_2(acc),
            [109, 105, 108] => lookup_179_3(acc),
            [111, 102] => lookup_179_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_180_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_180_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_180_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_180<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_180_0(acc),
            [99, 111, 109] => lookup_180_1(acc),
            [101, 100, 117] => lookup_180_2(acc),
            [103, 111, 118] => lookup_180_3(acc),
            [103, 115, 106] => lookup_180_4(acc),
            [109, 121, 100, 110, 115] => lookup_180_5(acc),
            [110, 101, 116] => lookup_180_6(acc),
            [111, 114, 103] => lookup_180_7(acc),
            [122, 97] => lookup_180_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_181() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_182_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_182_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_182_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_182_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_182_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_182_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_182_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_182_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98] => lookup_182_0(acc),
            [97, 119, 100, 101, 118] => lookup_182_1(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_182_2(acc),
            [98, 99] => lookup_182_3(acc),
            [98, 111, 120] => lookup_182_4(acc),
            [99, 111] => lookup_182_5(acc),
            [103, 99] => lookup_182_6(acc),
            [109, 98] => lookup_182_7(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_182_8(acc),
            [110, 98] => lookup_182_9(acc),
            [110, 102] => lookup_182_10(acc),
            [110, 108] => lookup_182_11(acc),
            [110, 111, 45, 105, 112] => lookup_182_12(acc),
            [110, 115] => lookup_182_13(acc),
            [110, 116] => lookup_182_14(acc),
            [110, 117] => lookup_182_15(acc),
            [111, 110] => lookup_182_16(acc),
            [112, 101] => lookup_182_17(acc),
            [113, 99] => lookup_182_18(acc),
            [115, 107] => lookup_182_19(acc),
            [121, 107] => lookup_182_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_183() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_185() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_187() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_188() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_190_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [97, 116] => lookup_190_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_190<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 109, 102] => lookup_190_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_191() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_193() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_194() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_196() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_197() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_198() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_199() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_200() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_201() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_202_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_202_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 105] => lookup_202_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_202<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 98, 117] => lookup_202_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_203() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_204() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_205() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_206() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_207() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_208() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_210() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_211() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_212_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_212_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_212_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_212_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_212_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_212_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_212_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_212_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_212_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_212_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [105, 110, 115, 116, 97, 110, 99, 101, 115] => lookup_212_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_212_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_212<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 101, 118, 101, 114, 97, 112, 112, 115] => lookup_212_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_212_1(acc),
            [99, 115, 120] => lookup_212_2(acc),
            [102, 97, 110, 116, 97, 115, 121, 108, 101, 97, 103, 117, 101] => lookup_212_3(acc),
            [102, 116, 112, 97, 99, 99, 101, 115, 115] => lookup_212_4(acc),
            [103, 97, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_212_5(acc),
            [109, 121, 112, 104, 111, 116, 111, 115] => lookup_212_6(acc),
            [115, 99, 114, 97, 112, 112, 105, 110, 103] => lookup_212_7(acc),
            [115, 112, 97, 119, 110] => lookup_212_8(info, labels, acc),
            [116, 119, 109, 97, 105, 108] => lookup_212_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_213_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_213<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_213_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_214() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_215() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_216() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_217() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_219() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_221_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_5_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_5_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 98, 106, 101, 99, 116, 115] => lookup_221_5_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_221_5_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_5_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 98, 106, 101, 99, 116, 115] => lookup_221_5_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_221_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_221_5_0(acc),
            [108, 112, 103] => lookup_221_5_1(info, labels, acc),
            [114, 109, 97] => lookup_221_5_2(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_221_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_7_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_7_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_221_7_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_221_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 118, 99] => lookup_221_7_1(info, labels, acc),
            wild => lookup_221_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_221_8_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_8_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 108, 112, 49] => lookup_221_8_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_221_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 101] => lookup_221_8_0(info, labels, acc),
            [97, 112, 112, 101, 110, 103, 105, 110, 101] => lookup_221_8_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_221_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 105, 116, 101] => lookup_221_0(acc),
            [49, 50, 104, 112] => lookup_221_1(acc),
            [50, 105, 120] => lookup_221_2(acc),
            [52, 108, 105, 109, 97] => lookup_221_3(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_221_4(acc),
            [99, 108, 111, 117, 100, 115, 99, 97, 108, 101] => lookup_221_5(info, labels, acc),
            [100, 110, 115, 107, 105, 110, 103] => lookup_221_6(acc),
            [102, 105, 114, 101, 110, 101, 116] => lookup_221_7(info, labels, acc),
            [102, 108, 111, 119] => lookup_221_8(info, labels, acc),
            [103, 111, 116, 100, 110, 115] => lookup_221_9(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_221_10(acc),
            [108, 105, 110, 107, 121, 97, 114, 100, 45, 99, 108, 111, 117, 100] => {
                lookup_221_11(acc)
            }
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_221_12(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_221_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_222() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_223() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_225() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_226() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_227() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_229() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_230() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_231() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_232_0(acc),
            [97, 115, 115, 111] => lookup_232_1(acc),
            [97, 195, 169, 114, 111, 112, 111, 114, 116] => lookup_232_2(acc),
            [99, 111] => lookup_232_3(acc),
            [99, 111, 109] => lookup_232_4(acc),
            [101, 100] => lookup_232_5(acc),
            [101, 100, 117] => lookup_232_6(acc),
            [103, 111] => lookup_232_7(acc),
            [103, 111, 117, 118] => lookup_232_8(acc),
            [105, 110, 116] => lookup_232_9(acc),
            [110, 101, 116] => lookup_232_10(acc),
            [111, 114] => lookup_232_11(acc),
            [111, 114, 103] => lookup_232_12(acc),
            [120, 110, 45, 45, 97, 114, 111, 112, 111, 114, 116, 45, 98, 121, 97] => {
                lookup_232_13(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_233() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_234() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_235() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_236() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_239() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_240_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_240_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_240<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [119, 119, 119] => lookup_240_0(acc),
            wild => lookup_240_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_241_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_241_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_241_0(acc),
            [99, 111] => lookup_241_1(acc),
            [103, 111, 98] => lookup_241_2(acc),
            [103, 111, 118] => lookup_241_3(acc),
            [109, 105, 108] => lookup_241_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_242() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_243() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_245() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_246() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_248_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [101, 115, 45, 49] => lookup_248_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_248_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 105, 112] => lookup_248_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_6_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_6_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49] => lookup_248_6_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_6_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117, 114] => lookup_248_6_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 114, 117, 98, 97] => lookup_248_6_0(info, labels, acc),
            [105, 116, 49] => lookup_248_6_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 115] => lookup_248_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_11_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_248_11_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_248_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_14_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_248_14_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_248_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [114, 117, 110, 115] => lookup_248_15_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_16_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_16<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 110] => lookup_248_16_0(acc),
            [117, 107] => lookup_248_16_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_18<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 107] => lookup_248_18_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_20_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 97] => lookup_248_20_0(acc),
            [117, 107] => lookup_248_20_1(acc),
            [117, 115] => lookup_248_20_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_21_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [102, 114, 45, 112, 97, 114, 45, 49] => lookup_248_21_0_0(acc),
            [102, 114, 45, 112, 97, 114, 45, 50] => lookup_248_21_0_1(acc),
            [110, 108, 45, 97, 109, 115, 45, 49] => lookup_248_21_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_21_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_1_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_1_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 110, 99, 116, 105, 111, 110, 115] => lookup_248_21_1_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_21_1_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_1_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 100, 101, 115] => lookup_248_21_1_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_21_1_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_1_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_1_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 111, 99, 107, 112, 105, 116] => lookup_248_21_1_0(acc),
            [102, 110, 99] => lookup_248_21_1_1(labels, acc),
            [107, 56, 115] => lookup_248_21_1_2(labels, acc),
            [115, 51] => lookup_248_21_1_3(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_248_21_1_4(acc),
            [119, 104, 109] => lookup_248_21_1_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_21_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 105, 118] => lookup_248_21_2_0(acc),
            [112, 117, 98] => lookup_248_21_2_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_21_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_4_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_4_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 100, 101, 115] => lookup_248_21_4_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_21_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_4_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_4_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 111, 99, 107, 112, 105, 116] => lookup_248_21_4_0(acc),
            [107, 56, 115] => lookup_248_21_4_1(labels, acc),
            [115, 51] => lookup_248_21_4_2(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_248_21_4_3(acc),
            [119, 104, 109] => lookup_248_21_4_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_21_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_5_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_5_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 100, 101, 115] => lookup_248_21_5_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_21_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_5_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 111, 99, 107, 112, 105, 116] => lookup_248_21_5_0(acc),
            [107, 56, 115] => lookup_248_21_5_1(labels, acc),
            [115, 51] => lookup_248_21_5_2(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_248_21_5_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_21_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 101, 109, 101, 116, 97, 108] => lookup_248_21_0(info, labels, acc),
            [102, 114, 45, 112, 97, 114] => lookup_248_21_1(info, labels, acc),
            [105, 110, 115, 116, 97, 110, 99, 101, 115] => lookup_248_21_2(info, labels, acc),
            [107, 56, 115] => lookup_248_21_3(acc),
            [110, 108, 45, 97, 109, 115] => lookup_248_21_4(info, labels, acc),
            [112, 108, 45, 119, 97, 119] => lookup_248_21_5(info, labels, acc),
            [115, 99, 97, 108, 101, 98, 111, 111, 107] => lookup_248_21_6(acc),
            [115, 109, 97, 114, 116, 108, 97, 98, 101, 108, 105, 110, 103] => lookup_248_21_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_23_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_248_23_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_248_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_25<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 104] => lookup_248_25_0(acc),
            [100, 101] => lookup_248_25_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_248<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 120, 97, 114, 110, 101, 116] => lookup_248_0(info, labels, acc),
            [100, 105, 97, 100, 101, 109] => lookup_248_1(acc),
            [101, 108, 101, 109, 101, 110, 116, 111, 114] => lookup_248_2(acc),
            [101, 110, 99, 111, 119, 97, 121] => lookup_248_3(info, labels, acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_248_4(info, labels, acc),
            [106, 101, 108, 101] => lookup_248_5(acc),
            [106, 101, 110, 118, 45, 97, 114, 117, 98, 97] => lookup_248_6(info, labels, acc),
            [106, 111, 116, 101, 108, 117, 108, 117] => lookup_248_7(acc),
            [107, 101, 108, 105, 119, 101, 98] => lookup_248_8(labels, acc),
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_248_9(acc),
            [108, 105, 110, 107, 121, 97, 114, 100] => lookup_248_10(acc),
            [109, 97, 103, 101, 110, 116, 111, 115, 105, 116, 101] => {
                lookup_248_11(info, labels, acc)
            }
            [109, 97, 116, 108, 97, 98] => lookup_248_12(acc),
            [111, 98, 115, 101, 114, 118, 97, 98, 108, 101, 104, 113] => lookup_248_13(acc),
            [111, 110, 45, 114, 97, 110, 99, 104, 101, 114] => lookup_248_14(info, labels, acc),
            [111, 110, 115, 116, 97, 99, 107, 105, 116] => lookup_248_15(info, labels, acc),
            [111, 120, 97] => lookup_248_16(labels, acc),
            [112, 101, 114, 115, 112, 101, 99, 116, 97] => lookup_248_17(acc),
            [112, 114, 105, 109, 101, 116, 101, 108] => lookup_248_18(labels, acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_248_19(acc),
            [114, 101, 99, 108, 97, 105, 109] => lookup_248_20(info, labels, acc),
            [115, 99, 119] => lookup_248_21(info, labels, acc),
            [115, 101, 114, 118, 101, 98, 111, 108, 116] => lookup_248_22(acc),
            [115, 116, 97, 116, 105, 99, 115] => lookup_248_23(info, labels, acc),
            [116, 114, 97, 102, 102, 105, 99, 112, 108, 101, 120] => lookup_248_24(acc),
            [116, 114, 101, 110, 100, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_248_25(info, labels, acc)
            }
            [117, 110, 105, 115, 111, 110, 45, 115, 101, 114, 118, 105, 99, 101, 115] => {
                lookup_248_26(acc)
            }
            [117, 114, 111, 119, 110] => lookup_248_27(acc),
            [118, 97, 112, 111, 114] => lookup_248_28(acc),
            [118, 111, 111, 114, 108, 111, 112, 101, 114] => lookup_248_29(acc),
            [122, 97, 112] => lookup_248_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_249_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_249_1(acc),
            [106, 101, 108, 101] => lookup_249_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_250() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_251_0(acc),
            [99, 111, 109] => lookup_251_1(acc),
            [103, 111, 118] => lookup_251_2(acc),
            [110, 101, 116] => lookup_251_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_4_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_4_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_252_4_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_252_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [109, 121] => lookup_252_4_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5_0_0_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_252_5_0_0_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5_0_0_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_252_5_0_0_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_252_5_0_0_0(info, labels, acc),
            [99, 110, 45, 110, 111, 114, 116, 104, 119, 101, 115, 116, 45, 49] => {
                lookup_252_5_0_0_1(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5_0_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_1_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_1_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_252_5_0_1_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_252_5_0_1_0_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_252_5_0_1_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5_0_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_1_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_1_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_1_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_1_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_1_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_1_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_1_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_252_5_0_1_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_252_5_0_1_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_252_5_0_1_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_252_5_0_1_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_252_5_0_1_4(acc),
            [115, 51] => lookup_252_5_0_1_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_252_5_0_1_6(acc)
            }
            [115, 51, 45, 100, 101, 112, 114, 101, 99, 97, 116, 101, 100] => {
                lookup_252_5_0_1_7(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_252_5_0_1_8(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_252_5_0_1_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5_0_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_2_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_252_5_0_2_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_252_5_0_2_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5_0_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_2_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_2_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_2_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_2_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_2_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_252_5_0_2_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_252_5_0_2_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_252_5_0_2_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_252_5_0_2_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_252_5_0_2_4(acc),
            [115, 51] => lookup_252_5_0_2_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_252_5_0_2_6(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_252_5_0_2_7(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_252_5_0_2_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5_0_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_252_5_0_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5_0_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_252_5_0_4_0(acc),
            [99, 110, 45, 110, 111, 114, 116, 104, 119, 101, 115, 116, 45, 49] => {
                lookup_252_5_0_4_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5_0_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_0_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_252_5_0_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 105, 114, 102, 108, 111, 119] => lookup_252_5_0_0(info, labels, acc),
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_252_5_0_1(info, labels, acc),
            [99, 110, 45, 110, 111, 114, 116, 104, 119, 101, 115, 116, 45, 49] => {
                lookup_252_5_0_2(info, labels, acc)
            }
            [99, 111, 109, 112, 117, 116, 101] => lookup_252_5_0_3(info, labels, acc),
            [101, 98] => lookup_252_5_0_4(info, labels, acc),
            [101, 108, 98] => lookup_252_5_0_5(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_1_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_252_5_1_0_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_252_5_1_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5_1_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_1_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_5_1_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_252_5_1_1_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_252_5_1_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_252_5_1_0(info, labels, acc),
            [99, 110, 45, 110, 111, 114, 116, 104, 119, 101, 115, 116, 45, 49] => {
                lookup_252_5_1_1(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_252_5_0(info, labels, acc),
            [115, 97, 103, 101, 109, 97, 107, 101, 114] => lookup_252_5_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_33_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_33<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 105, 114, 101, 99, 116] => lookup_252_33_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_252_36<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115] => lookup_252_36_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_252_0(acc),
            [97, 104] => lookup_252_1(acc),
            [98, 106] => lookup_252_2(acc),
            [99, 97, 110, 118, 97, 45, 97, 112, 112, 115] => lookup_252_3(acc),
            [99, 97, 110, 118, 97, 115, 105, 116, 101] => lookup_252_4(info, labels, acc),
            [99, 111, 109] => lookup_252_5(labels, acc),
            [99, 113] => lookup_252_6(acc),
            [101, 100, 117] => lookup_252_7(acc),
            [102, 106] => lookup_252_8(acc),
            [103, 100] => lookup_252_9(acc),
            [103, 111, 118] => lookup_252_10(acc),
            [103, 115] => lookup_252_11(acc),
            [103, 120] => lookup_252_12(acc),
            [103, 122] => lookup_252_13(acc),
            [104, 97] => lookup_252_14(acc),
            [104, 98] => lookup_252_15(acc),
            [104, 101] => lookup_252_16(acc),
            [104, 105] => lookup_252_17(acc),
            [104, 107] => lookup_252_18(acc),
            [104, 108] => lookup_252_19(acc),
            [104, 110] => lookup_252_20(acc),
            [106, 108] => lookup_252_21(acc),
            [106, 115] => lookup_252_22(acc),
            [106, 120] => lookup_252_23(acc),
            [108, 110] => lookup_252_24(acc),
            [109, 105, 108] => lookup_252_25(acc),
            [109, 111] => lookup_252_26(acc),
            [109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => lookup_252_27(acc),
            [110, 101, 116] => lookup_252_28(acc),
            [110, 109] => lookup_252_29(acc),
            [110, 120] => lookup_252_30(acc),
            [111, 114, 103] => lookup_252_31(acc),
            [113, 104] => lookup_252_32(acc),
            [113, 117, 105, 99, 107, 99, 111, 110, 110, 101, 99, 116] => {
                lookup_252_33(info, labels, acc)
            }
            [115, 99] => lookup_252_34(acc),
            [115, 100] => lookup_252_35(acc),
            [115, 104] => lookup_252_36(labels, acc),
            [115, 110] => lookup_252_37(acc),
            [115, 120] => lookup_252_38(acc),
            [116, 106] => lookup_252_39(acc),
            [116, 119] => lookup_252_40(acc),
            [120, 106] => lookup_252_41(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_252_42(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_252_43(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_252_44(acc),
            [120, 122] => lookup_252_45(acc),
            [121, 110] => lookup_252_46(acc),
            [122, 106] => lookup_252_47(acc),
            [229, 133, 172, 229, 143, 184] => lookup_252_48(acc),
            [231, 182, 178, 231, 181, 161] => lookup_252_49(acc),
            [231, 189, 145, 231, 187, 156] => lookup_252_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_253_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_13_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_253_13_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_253_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_253_14_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_16_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_253_16_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_253<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 97, 114, 114, 100] => lookup_253_0(acc),
            [99, 111, 109] => lookup_253_1(acc),
            [99, 114, 100] => lookup_253_2(acc),
            [101, 100, 117] => lookup_253_3(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 101, 100, 114, 101, 112, 108, 105, 116] => {
                lookup_253_4(labels, acc)
            }
            [103, 111, 118] => lookup_253_5(acc),
            [108, 101, 97, 100, 112, 97, 103, 101, 115] => lookup_253_6(acc),
            [108, 112, 97, 103, 101, 115] => lookup_253_7(acc),
            [109, 105, 108] => lookup_253_8(acc),
            [109, 121, 112, 105] => lookup_253_9(acc),
            [110, 101, 116] => lookup_253_10(acc),
            [110, 111, 109] => lookup_253_11(acc),
            [111, 114, 103] => lookup_253_12(acc),
            [111, 116, 97, 112] => lookup_253_13(info, labels, acc),
            [114, 101, 112, 108] => lookup_253_14(labels, acc),
            [115, 117, 112, 97, 98, 97, 115, 101] => lookup_253_15(acc),
            [120, 109, 105, 116] => lookup_253_16(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_255_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_255_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_255_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_255<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 119, 111] => lookup_255_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_256() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_6_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_6_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_6_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_259_6_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_0_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_0_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_0_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_0_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_0_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_0_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_0_2_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_0_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_0_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_0_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_0_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_0_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_0_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_0_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_0_6(acc),
            [115, 51] => lookup_259_13_0_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_0_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_0_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_0_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_4_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_4_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_8_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_8_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_9_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_9_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_10_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_10_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_11_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_11_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_12_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_12_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_13_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_13_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_14_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_14_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_15_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_15_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_16_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_16_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_17_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_17_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_18_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_18_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_19_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_19_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_20_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_20_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_21_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_21_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_22_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_22_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_23_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_23_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_24_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_24<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_24_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_25_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_25<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_25_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_26_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_26<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_26_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_27_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_27<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_27_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1_28_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_1_28<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_1_28_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [97, 102, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_13_1_0(info, labels, acc),
            [97, 112, 45, 101, 97, 115, 116, 45, 49] => lookup_259_13_1_1(info, labels, acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_259_13_1_2(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_259_13_1_3(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_259_13_1_4(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_13_1_5(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 50] => lookup_259_13_1_6(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_259_13_1_7(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_259_13_1_8(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_259_13_1_9(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 52] => {
                lookup_259_13_1_10(info, labels, acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_259_13_1_11(info, labels, acc)
            }
            [99, 97, 45, 119, 101, 115, 116, 45, 49] => lookup_259_13_1_12(info, labels, acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_259_13_1_13(info, labels, acc)
            }
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 50] => {
                lookup_259_13_1_14(info, labels, acc)
            }
            [101, 117, 45, 110, 111, 114, 116, 104, 45, 49] => {
                lookup_259_13_1_15(info, labels, acc)
            }
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 49] => {
                lookup_259_13_1_16(info, labels, acc)
            }
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 50] => {
                lookup_259_13_1_17(info, labels, acc)
            }
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_259_13_1_18(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_259_13_1_19(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_259_13_1_20(info, labels, acc),
            [105, 108, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_259_13_1_21(info, labels, acc)
            }
            [109, 101, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_259_13_1_22(info, labels, acc)
            }
            [109, 101, 45, 115, 111, 117, 116, 104, 45, 49] => {
                lookup_259_13_1_23(info, labels, acc)
            }
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_259_13_1_24(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_259_13_1_25(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_259_13_1_26(info, labels, acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_259_13_1_27(info, labels, acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_259_13_1_28(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_2_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_2_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_2_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_2_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_2_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_2_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_2_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_2_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_2_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_2_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_2_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_2_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_2_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_2_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_2_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_2_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_2_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_2_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_2_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_2_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_2_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_2_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_2_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_2_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_2_6(acc),
            [115, 51] => lookup_259_13_2_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_2_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_2_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_2_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_3_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_3_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_3_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_3_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_3_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_3_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_3_3_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_3_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_3_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_259_13_3_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_3_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_3_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_3_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_3_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_3_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_3_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_3_7(acc),
            [115, 51] => lookup_259_13_3_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_3_9(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_3_10(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_3_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_4_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_4_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_4_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_4_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_4_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_4_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_4_3_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_4_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_4_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_259_13_4_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_4_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_4_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_4_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_4_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_4_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_4_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_4_7(acc),
            [115, 51] => lookup_259_13_4_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_4_9(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_4_10(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_4_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_5_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_5_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_5_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_5_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_5_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_5_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_5_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_5_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_5_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_5_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_5_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_5_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_5_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_5_2_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_5_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_5_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_5_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_5_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_5_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_5_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_5_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_5_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_5_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_5_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_5_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_5_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_5_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_5_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_5_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_5_6(acc),
            [115, 51] => lookup_259_13_5_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_5_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_5_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_5_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_6_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_6_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_6_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_6_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_6_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_6_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_6_3_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_6_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_6_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_259_13_6_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_6_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_6_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_6_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_6_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_6_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_6_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_6_7(acc),
            [115, 51] => lookup_259_13_6_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_6_9(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_6_10(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_6_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_7_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_7_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_7_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_7_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_7_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_7_0_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_7_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_7_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_7_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_7_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_7_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_7_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_7_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_7_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_7_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_7_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_7_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_7_4(acc),
            [115, 51] => lookup_259_13_7_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_7_6(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_7_7(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_7_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_8_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_8_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_8_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_8_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_8_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_8_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_8_3_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_8_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_8_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_259_13_8_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_8_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_8_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_8_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_8_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_8_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_8_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_8_7(acc),
            [115, 51] => lookup_259_13_8_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_8_9(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_8_10(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_8_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_9_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_9_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_9_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_9_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_9_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_9_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_9_3_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_9_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_9_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_259_13_9_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_9_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_9_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_9_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_9_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_9_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_9_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_9_7(acc),
            [115, 51] => lookup_259_13_9_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_9_9(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_9_10(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_9_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_10_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_10_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_10_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_10_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_10_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_10_0_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_10_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_10_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_10_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_10_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_10_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_10_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_10_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_10_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_10_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_10_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_10_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_10_4(acc),
            [115, 51] => lookup_259_13_10_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_10_6(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_10_7(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_10_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_11_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_11_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_11_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_11_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_11_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_11_0_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_11_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_11_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_11_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_11_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_11_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_11_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_11_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_11_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_11_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_11_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_11_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_11_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_11_4(acc),
            [115, 51] => lookup_259_13_11_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_11_6(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_11_7(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_11_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_12_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_12_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_12_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_12_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_12_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_12_0_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_12_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_12_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_12_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_12_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_12_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_12_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_12_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_12_0(info, labels, acc),
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_12_1(acc),
            [115, 51] => lookup_259_13_12_2(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_12_3(acc)
            }
            [115, 51, 45, 100, 101, 112, 114, 101, 99, 97, 116, 101, 100] => {
                lookup_259_13_12_4(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_12_5(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_12_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_13_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_13_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_13_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_13_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_13_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_13_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_2_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_13_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_13_2_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_13_2_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_13_2_3(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_13_2_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_13_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_13_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_13_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_13_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_13_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_13_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_13_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_13_6(acc),
            [115, 51] => lookup_259_13_13_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_13_8(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_13_9(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_13_10(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_13_11(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_13_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_14_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_14_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_14_0_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_14_0_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_14_0_3(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_14_0_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_14_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_14_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_14_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_14_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_14_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_14_4(acc),
            [115, 51] => lookup_259_13_14_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_14_6(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_14_7(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_14_8(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_14_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_14_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_15_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_15_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_16_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_16_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_17_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_13_17_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_18_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_18_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_18_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_18_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_18_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_18_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_18_3_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_18_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_18_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_259_13_18_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_18_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_18_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_18_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_18_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_18_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_18_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_18_7(acc),
            [115, 51] => lookup_259_13_18_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_18_9(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_18_10(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_18_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_19_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_19_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_19_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_19_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_19_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_19_0_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_19_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_19_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_19_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_19_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_19_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_19_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_19_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_19_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_19_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_19_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_19_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_19_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_19_4(acc),
            [115, 51] => lookup_259_13_19_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_19_6(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_19_7(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_19_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_20_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_20_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_20_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_20_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_20_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_20_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_20_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_20_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_20_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_20_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_20_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_20_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_20_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_20_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_20_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_20_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_20_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_20_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_20_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_20_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_20_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_20_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_20_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_20_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_20_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_20_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_20_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_20_6(acc),
            [115, 51] => lookup_259_13_20_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_20_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_20_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_20_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_21_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_21_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_21_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_21_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_21_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_21_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_21_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_21_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_21_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_21_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_21_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_21_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_21_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_21_2_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_21_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_21_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_21_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_21_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_21_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_21_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_21_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_21_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_21_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_21_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_21_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_21_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_21_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_21_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_21_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_21_6(acc),
            [115, 51] => lookup_259_13_21_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_21_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_21_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_21_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_22_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_22_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_22_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_22_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_22_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_22_0_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_22_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_22_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_22_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_22_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_22_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_22_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_22_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_22_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_22_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_22_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_22_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_22_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_22_4(acc),
            [115, 51] => lookup_259_13_22_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_22_6(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_22_7(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_22_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_23_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_23_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_23_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_23_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_23_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_23_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_23_3_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_23_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_23_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_259_13_23_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_23_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_23_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_23_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_23_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_23_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_23_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_23_7(acc),
            [115, 51] => lookup_259_13_23_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_23_9(acc)
            }
            [115, 51, 45, 100, 101, 112, 114, 101, 99, 97, 116, 101, 100] => {
                lookup_259_13_23_10(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_23_11(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_23_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_24_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_24_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_24_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_24_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_24_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_24_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_24_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_24_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_24_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_24_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_24_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_24_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_24_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_24_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_24_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_24_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_24_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_24_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_24_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_24_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_24_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_24<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_24_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_24_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_24_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_24_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_24_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_24_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_24_6(acc),
            [115, 51] => lookup_259_13_24_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_24_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_24_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_24_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_25_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_25_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_25_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_25_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_25_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_25_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_25_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_25_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_25_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_25_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_25_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_25_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_25_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_25_2_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_25_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_25_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_25_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_25_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_25_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_25_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_25_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_25_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_25_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_25<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_25_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_25_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_25_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_25_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_25_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_25_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_25_6(acc),
            [115, 51] => lookup_259_13_25_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_25_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_25_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_25_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_26_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_26_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_26_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_26_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_26_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_26_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_26_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_26_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_26_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_26_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_26_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_26_2_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_26_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_26_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_26_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_26_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_26_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_26_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_26_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_26_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_26_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_26<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_26_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_26_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_26_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_26_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_26_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_26_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_26_6(acc),
            [115, 51] => lookup_259_13_26_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_26_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_26_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_26_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_27_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_27_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_27_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_27_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_27_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_27_0_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_27_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_27_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_27_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_27_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_27_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_27_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_27_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_27_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_27_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_27<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_27_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_27_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_27_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_27_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_27_4(acc),
            [115, 51] => lookup_259_13_27_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_27_6(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_27_7(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_27_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_28_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_28_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_28_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_28_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_28_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_28_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_28_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_28_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_28_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_28_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_28_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_28_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_28_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_28_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_28_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_28_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_28_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_28_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_28_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_28_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_28_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_28<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_28_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_28_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_28_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_28_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_28_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_28_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_28_6(acc),
            [115, 51] => lookup_259_13_28_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_28_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_28_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_28_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_47_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_47_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [109, 114, 97, 112] => lookup_259_13_47_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_47<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_47_0(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_64_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_64_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_64_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_64_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_64_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_64_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_64_2_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_64_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_64_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_64<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_64_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_64_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_64_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_64_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_64_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_64_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_64_6(acc),
            [115, 51] => lookup_259_13_64_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_64_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_64_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_64_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_65_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_65_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_65_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_65_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_65_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_3_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_3_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_65_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_65_3_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_65_3_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_65_3_3(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_65_3_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_65_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_65<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_259_13_65_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_65_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_65_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_65_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_65_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_65_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_65_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_65_7(acc),
            [115, 51] => lookup_259_13_65_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_65_9(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_65_10(acc)
            }
            [115, 51, 45, 100, 101, 112, 114, 101, 99, 97, 116, 101, 100] => {
                lookup_259_13_65_11(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_65_12(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_65_13(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_65_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_66_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_66_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_66_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_66_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_66_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_66_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_3_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_3_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_66_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_66_3_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_66_3_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_66_3_3(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_66_3_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_66_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_66<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_259_13_66_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_66_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_66_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_66_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_66_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_66_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_66_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_66_7(acc),
            [115, 51] => lookup_259_13_66_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_66_9(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_66_10(acc)
            }
            [115, 51, 45, 100, 101, 112, 114, 101, 99, 97, 116, 101, 100] => {
                lookup_259_13_66_11(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_66_12(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_66_13(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_66_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_67_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_67_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_67_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_67_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_67_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_67_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_67_0_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_67_0_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_67_0_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_67_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_67_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_67_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_67_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_67_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_67_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_67_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_67_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_67<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_67_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_67_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_67_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_67_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_67_4(acc),
            [115, 51] => lookup_259_13_67_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_67_6(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_67_7(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_67_8(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_67_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_67_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_68_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_68_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_68_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_68_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_68_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_68_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_68_0_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_68_0_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_68_0_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_68_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_68_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_68_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_68_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_68_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_68_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_68_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_68_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_68_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_68_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_68<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_68_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_68_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_68_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_68_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_68_4(acc),
            [115, 51] => lookup_259_13_68_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_68_6(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_68_7(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_68_8(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_68_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_68_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_69_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_69_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_69_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_69_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_69_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_69_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_2_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_69_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_69_2_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_69_2_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_69_2_3(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_69_2_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_69_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_69<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_69_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_69_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_69_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_69_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_69_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_69_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_69_6(acc),
            [115, 51] => lookup_259_13_69_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_69_8(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_69_9(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_69_10(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_69_11(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_69_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_70_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_70_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_259_13_70_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_259_13_70_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_70_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_3_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_3_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_259_13_70_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_70_3_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_70_3_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_70_3_3(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_70_3_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13_70_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_13_70<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_259_13_70_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_259_13_70_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_259_13_70_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_259_13_70_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_259_13_70_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_259_13_70_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_259_13_70_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_259_13_70_7(acc),
            [115, 51] => lookup_259_13_70_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_259_13_70_9(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_259_13_70_10(acc)
            }
            [115, 51, 45, 100, 101, 112, 114, 101, 99, 97, 116, 101, 100] => {
                lookup_259_13_70_11(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_259_13_70_12(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_259_13_70_13(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_13_70_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 102, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_13_0(info, labels, acc),
            [97, 105, 114, 102, 108, 111, 119] => lookup_259_13_1(info, labels, acc),
            [97, 112, 45, 101, 97, 115, 116, 45, 49] => lookup_259_13_2(info, labels, acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_259_13_3(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_259_13_4(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_259_13_5(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_13_6(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 50] => lookup_259_13_7(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_259_13_8(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_259_13_9(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_259_13_10(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 52] => {
                lookup_259_13_11(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 53] => {
                lookup_259_13_12(info, labels, acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_259_13_13(info, labels, acc)
            }
            [99, 97, 45, 119, 101, 115, 116, 45, 49] => lookup_259_13_14(info, labels, acc),
            [99, 111, 109, 112, 117, 116, 101] => lookup_259_13_15(info, labels, acc),
            [99, 111, 109, 112, 117, 116, 101, 45, 49] => lookup_259_13_16(info, labels, acc),
            [101, 108, 98] => lookup_259_13_17(info, labels, acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_259_13_18(info, labels, acc)
            }
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 50] => {
                lookup_259_13_19(info, labels, acc)
            }
            [101, 117, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_259_13_20(info, labels, acc),
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_13_21(info, labels, acc),
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 50] => lookup_259_13_22(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_259_13_23(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_259_13_24(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_259_13_25(info, labels, acc),
            [105, 108, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_259_13_26(info, labels, acc)
            }
            [109, 101, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_259_13_27(info, labels, acc)
            }
            [109, 101, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_13_28(info, labels, acc),
            [115, 51] => lookup_259_13_29(acc),
            [115, 51, 45, 49] => lookup_259_13_30(acc),
            [115, 51, 45, 97, 112, 45, 101, 97, 115, 116, 45, 49] => lookup_259_13_31(acc),
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_259_13_32(acc)
            }
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_259_13_33(acc)
            }
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_259_13_34(acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_13_35(acc),
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_259_13_36(acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_259_13_37(acc)
            }
            [115, 51, 45, 99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_259_13_38(acc)
            }
            [115, 51, 45, 101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_259_13_39(acc)
            }
            [115, 51, 45, 101, 117, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_259_13_40(acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_259_13_41(acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_259_13_42(acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_259_13_43(acc),
            [115, 51, 45, 101, 120, 116, 101, 114, 110, 97, 108, 45, 49] => lookup_259_13_44(acc),
            [115, 51, 45, 102, 105, 112, 115, 45, 117, 115, 45, 103, 111, 118, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_259_13_45(acc)
            }
            [115, 51, 45, 102, 105, 112, 115, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_259_13_46(acc)
            }
            [115, 51, 45, 103, 108, 111, 98, 97, 108] => lookup_259_13_47(info, labels, acc),
            [115, 51, 45, 109, 101, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_13_48(acc),
            [115, 51, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_259_13_49(acc),
            [115, 51, 45, 117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_259_13_50(acc),
            [115, 51, 45, 117, 115, 45, 103, 111, 118, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_259_13_51(acc)
            }
            [115, 51, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_259_13_52(acc)
            }
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_259_13_53(acc),
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_259_13_54(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_259_13_55(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_259_13_56(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_259_13_57(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_259_13_58(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_259_13_59(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_259_13_60(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_259_13_61(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_259_13_62(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => {
                lookup_259_13_63(acc)
            }
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_259_13_64(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_259_13_65(labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_259_13_66(info, labels, acc),
            [117, 115, 45, 103, 111, 118, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_259_13_67(info, labels, acc)
            }
            [117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_259_13_68(info, labels, acc)
            }
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_259_13_69(info, labels, acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_259_13_70(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_11_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_12_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_13_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_14_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_15_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_16_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_17_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_18_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_19_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_20_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_21_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_22_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_23_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_24<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_24_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_25<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_25_0(acc),
            [97, 117, 116, 104, 45, 102, 105, 112, 115] => lookup_259_14_25_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_26_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_26_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_26<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_26_0(acc),
            [97, 117, 116, 104, 45, 102, 105, 112, 115] => lookup_259_14_26_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_27<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104, 45, 102, 105, 112, 115] => lookup_259_14_27_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_28_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_28<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_28_0(acc),
            [97, 117, 116, 104, 45, 102, 105, 112, 115] => lookup_259_14_28_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14_29<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_259_14_29_0(acc),
            [97, 117, 116, 104, 45, 102, 105, 112, 115] => lookup_259_14_29_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [97, 102, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_14_0(info, labels, acc),
            [97, 112, 45, 101, 97, 115, 116, 45, 49] => lookup_259_14_1(info, labels, acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_259_14_2(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_259_14_3(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_259_14_4(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_14_5(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 50] => lookup_259_14_6(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_259_14_7(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_259_14_8(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_259_14_9(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 52] => {
                lookup_259_14_10(info, labels, acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_259_14_11(info, labels, acc)
            }
            [99, 97, 45, 119, 101, 115, 116, 45, 49] => lookup_259_14_12(info, labels, acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_259_14_13(info, labels, acc)
            }
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 50] => {
                lookup_259_14_14(info, labels, acc)
            }
            [101, 117, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_259_14_15(info, labels, acc),
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_14_16(info, labels, acc),
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 50] => lookup_259_14_17(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_259_14_18(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_259_14_19(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_259_14_20(info, labels, acc),
            [105, 108, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_259_14_21(info, labels, acc)
            }
            [109, 101, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_259_14_22(info, labels, acc)
            }
            [109, 101, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_14_23(info, labels, acc),
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_259_14_24(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_259_14_25(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_259_14_26(info, labels, acc),
            [117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_259_14_27(info, labels, acc)
            }
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_259_14_28(info, labels, acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_259_14_29(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_21_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_21_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 1usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_21_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_21<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_259_21_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_25_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_25<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_25_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_44_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_44_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_44_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_44<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_259_44_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_48_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_48_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_48_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_48_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_48_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_48_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_48_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_48_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_48_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_48<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [98, 117, 105, 108, 100, 101, 114] => lookup_259_48_0(info, labels, acc),
            [100, 101, 118, 45, 98, 117, 105, 108, 100, 101, 114] => {
                lookup_259_48_1(info, labels, acc)
            }
            [115, 116, 103, 45, 98, 117, 105, 108, 100, 101, 114] => {
                lookup_259_48_2(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_52_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_52_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_52_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_52_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_52_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_52_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_52_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_52_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_52_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_52_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_52<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 99, 105] => lookup_259_52_1(info, labels, acc),
            [111, 99, 112] => lookup_259_52_2(info, labels, acc),
            [111, 99, 115] => lookup_259_52_3(info, labels, acc),
            wild => lookup_259_52_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_54_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_54<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_259_54_0(acc),
            [105, 110, 115, 116, 97, 110, 99, 101] => lookup_259_54_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_63_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_63<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_63_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_97<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 102, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_97_0(acc),
            [97, 112, 45, 101, 97, 115, 116, 45, 49] => lookup_259_97_1(acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_259_97_2(acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_259_97_3(acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_259_97_4(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_97_5(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_259_97_6(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_259_97_7(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_259_97_8(acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_259_97_9(acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_259_97_10(acc),
            [101, 117, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_259_97_11(acc),
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_97_12(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_259_97_13(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_259_97_14(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_259_97_15(acc),
            [105, 108, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_259_97_16(acc),
            [109, 101, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_259_97_17(acc),
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_259_97_18(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_259_97_19(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_259_97_20(acc),
            [117, 115, 45, 103, 111, 118, 45, 101, 97, 115, 116, 45, 49] => lookup_259_97_21(acc),
            [117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => lookup_259_97_22(acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_259_97_23(acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_259_97_24(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_104_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_104_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_104_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_104_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_104_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_104_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_104_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_104_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_104<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117, 45, 49] => lookup_259_104_0(acc),
            [101, 117, 45, 50] => lookup_259_104_1(acc),
            [101, 117, 45, 51] => lookup_259_104_2(acc),
            [101, 117, 45, 52] => lookup_259_104_3(acc),
            [117, 115, 45, 49] => lookup_259_104_4(acc),
            [117, 115, 45, 50] => lookup_259_104_5(acc),
            [117, 115, 45, 51] => lookup_259_104_6(acc),
            [117, 115, 45, 52] => lookup_259_104_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_109_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_109<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_259_109_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_188_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_188<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_259_188_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_190_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_190_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_190<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [114, 97, 103, 45, 99, 108, 111, 117, 100] => lookup_259_190_0(acc),
            [114, 97, 103, 45, 99, 108, 111, 117, 100, 45, 99, 104] => lookup_259_190_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_193_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_193_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_193<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99, 108, 111, 117, 100] => lookup_259_193_0(acc),
            [106, 99, 108, 111, 117, 100, 45, 118, 101, 114, 45, 106, 112, 99] => {
                lookup_259_193_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_255_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_255<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_259_255_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_256_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_256_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_256_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_256<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 115] => lookup_259_256_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_263_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_263_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_263_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_263_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_263<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 109, 98, 101, 114, 115] => lookup_259_263_0(acc),
            [110, 111, 100, 101, 98, 97, 108, 97, 110, 99, 101, 114] => {
                lookup_259_263_1(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_264_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_264<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_264_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_265_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_265<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 17usize;
    match labels.next() {
        Some(label) => match label {
            [105, 112] => lookup_259_265_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_270_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_270<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_259_270_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_273_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_273<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_259_273_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_293_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_293_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_293_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_293_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_293_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_293_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_293_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_293_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_293_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_293_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_293_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_293<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [99, 97, 114, 97, 99, 97, 108] => lookup_259_293_0(acc),
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_259_293_1(acc),
            [102, 101, 110, 116, 105, 103, 101, 114] => lookup_259_293_2(acc),
            [108, 121, 110, 120] => lookup_259_293_3(acc),
            [111, 99, 101, 108, 111, 116] => lookup_259_293_4(acc),
            [111, 110, 99, 105, 108, 108, 97] => lookup_259_293_5(acc),
            [111, 110, 122, 97] => lookup_259_293_6(acc),
            [115, 112, 104, 105, 110, 120] => lookup_259_293_7(acc),
            [118, 115] => lookup_259_293_8(acc),
            [120] => lookup_259_293_9(acc),
            [121, 97, 108, 105] => lookup_259_293_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_299_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_299_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 51, 54, 53] => lookup_259_299_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_299<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_259_299_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_300_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_300<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 21usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_259_300_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_307_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_307<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_307_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_308_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_308<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_308_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_314_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_314<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_314_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_322_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_322<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [120, 101, 110] => lookup_259_322_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_323_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_323<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_259_323_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_328_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_328<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_328_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_332_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_332<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_259_332_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_341_0_0_0_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_341_0_0_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_341_0_0_0_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_341_0_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [48, 48, 49] => lookup_259_341_0_0_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_341_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    match labels.next() {
        Some(label) => match label {
            [116, 101, 115, 116] => lookup_259_341_0_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_341_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 111, 100, 101, 45, 98, 117, 105, 108, 100, 101, 114, 45, 115, 116, 103] => {
                lookup_259_341_0_0(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_341<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [112, 108, 97, 116, 102, 111, 114, 109] => lookup_259_341_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_372_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_372<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 105] => lookup_259_372_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_373_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_373<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 101, 100, 105, 97] => lookup_259_373_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_380_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_380<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 105, 116, 101] => lookup_259_380_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_389_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_389<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111] => lookup_259_389_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_395_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_395<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_395_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 28usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_399_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_399_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_399<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 100] => lookup_259_399_0(acc),
            [114, 121, 100] => lookup_259_399_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_402_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_402<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_259_402_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_410_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_410<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 115] => lookup_259_410_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_415_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_415_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_415<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 50] => lookup_259_415_0(acc),
            [117, 50, 45, 108, 111, 99, 97, 108] => lookup_259_415_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48, 101, 109, 109] => lookup_259_0(info, labels, acc),
            [49, 56, 48, 114] => lookup_259_1(acc),
            [49, 107, 97, 112, 112] => lookup_259_2(acc),
            [51, 117, 116, 105, 108, 105, 116, 105, 101, 115] => lookup_259_3(acc),
            [52, 117] => lookup_259_4(acc),
            [97, 50, 104, 111, 115, 116, 101, 100] => lookup_259_5(acc),
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => {
                lookup_259_6(labels, acc)
            }
            [97, 102, 114, 105, 99, 97] => lookup_259_7(acc),
            [97, 105, 114, 107, 105, 116, 97, 112, 112, 115] => lookup_259_8(acc),
            [97, 105, 114, 107, 105, 116, 97, 112, 112, 115, 45, 97, 117] => lookup_259_9(acc),
            [97, 105, 118, 101, 110, 99, 108, 111, 117, 100] => lookup_259_10(acc),
            [97, 108, 105, 97, 115, 101, 115, 49, 50, 49] => lookup_259_11(acc),
            [97, 108, 112, 104, 97, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_259_12(acc)
            }
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_259_13(info, labels, acc),
            [97, 109, 97, 122, 111, 110, 99, 111, 103, 110, 105, 116, 111] => {
                lookup_259_14(info, labels, acc)
            }
            [97, 109, 112, 108, 105, 102, 121, 97, 112, 112] => lookup_259_15(acc),
            [97, 112, 112, 99, 104, 105, 122, 105] => lookup_259_16(acc),
            [97, 112, 112, 108, 105, 110, 122, 105] => lookup_259_17(acc),
            [97, 112, 112, 115, 45, 49, 97, 110, 100, 49] => lookup_259_18(acc),
            [97, 112, 112, 115, 112, 97, 99, 101, 104, 111, 115, 116, 101, 100] => {
                lookup_259_19(acc)
            }
            [97, 112, 112, 115, 112, 97, 99, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_259_20(acc)
            }
            [97, 112, 112, 115, 112, 111, 116] => lookup_259_21(labels, acc),
            [97, 116, 109, 101, 116, 97] => lookup_259_22(acc),
            [97, 117, 116, 104, 103, 101, 97, 114, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_259_23(acc)
            }
            [97, 117, 116, 104, 103, 101, 97, 114, 97, 112, 112, 115] => lookup_259_24(acc),
            [97, 119, 115, 97, 112, 112, 114, 117, 110, 110, 101, 114] => {
                lookup_259_25(info, labels, acc)
            }
            [97, 119, 115, 97, 112, 112, 115] => lookup_259_26(acc),
            [97, 119, 115, 103, 108, 111, 98, 97, 108, 97, 99, 99, 101, 108, 101, 114, 97, 116, 111, 114] => {
                lookup_259_27(acc)
            }
            [98, 97, 108, 101, 110, 97, 45, 100, 101, 118, 105, 99, 101, 115] => lookup_259_28(acc),
            [98, 97, 114, 115, 121, 99, 101, 110, 116, 101, 114] => lookup_259_29(acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_259_30(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_259_31(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_259_32(acc),
            [98, 108, 111, 103, 115, 121, 116, 101] => lookup_259_33(acc),
            [98, 111, 117, 116, 105, 114] => lookup_259_34(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_259_35(acc),
            [98, 114] => lookup_259_36(acc),
            [98, 117, 105, 108, 116, 119, 105, 116, 104, 100, 97, 114, 107] => lookup_259_37(acc),
            [99, 97, 102, 106, 115] => lookup_259_38(acc),
            [99, 97, 110, 118, 97, 45, 97, 112, 112, 115] => lookup_259_39(acc),
            [99, 100, 110, 55, 55, 45, 115, 116, 111, 114, 97, 103, 101] => lookup_259_40(acc),
            [99, 101, 99, 104, 105, 114, 101] => lookup_259_41(acc),
            [99, 102, 45, 105, 112, 102, 115] => lookup_259_42(acc),
            [99, 105, 115, 99, 111, 102, 114, 101, 97, 107] => lookup_259_43(acc),
            [99, 108, 101, 118, 101, 114, 45, 99, 108, 111, 117, 100] => {
                lookup_259_44(info, labels, acc)
            }
            [99, 108, 111, 117, 100, 102, 108, 97, 114, 101, 45, 105, 112, 102, 115] => {
                lookup_259_45(acc)
            }
            [99, 110] => lookup_259_46(acc),
            [99, 111] => lookup_259_47(acc),
            [99, 111, 100, 101] => lookup_259_48(info, labels, acc),
            [99, 111, 100, 101, 115, 112, 111, 116] => lookup_259_49(acc),
            [99, 112, 114, 97, 112, 105, 100] => lookup_259_50(acc),
            [99, 112, 115, 101, 114, 118, 101, 114] => lookup_259_51(acc),
            [99, 117, 115, 116, 111, 109, 101, 114, 45, 111, 99, 105] => {
                lookup_259_52(info, labels, acc)
            }
            [100, 97, 109, 110, 115, 101, 114, 118, 101, 114] => lookup_259_53(acc),
            [100, 97, 116, 97, 100, 101, 116, 101, 99, 116] => lookup_259_54(info, labels, acc),
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_259_55(acc),
            [100, 97, 116, 116, 111, 114, 101, 108, 97, 121] => lookup_259_56(acc),
            [100, 97, 116, 116, 111, 119, 101, 98] => lookup_259_57(acc),
            [100, 100, 110, 115, 102, 114, 101, 101] => lookup_259_58(acc),
            [100, 100, 110, 115, 103, 101, 101, 107] => lookup_259_59(acc),
            [100, 100, 110, 115, 107, 105, 110, 103] => lookup_259_60(acc),
            [100, 101] => lookup_259_61(acc),
            [100, 101, 118, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_259_62(acc)
            }
            [100, 105, 103, 105, 116, 97, 108, 111, 99, 101, 97, 110, 115, 112, 97, 99, 101, 115] => {
                lookup_259_63(info, labels, acc)
            }
            [100, 105, 115, 99, 111, 114, 100, 115, 97, 121, 115] => lookup_259_64(acc),
            [100, 105, 115, 99, 111, 114, 100, 115, 101, 122] => lookup_259_65(acc),
            [100, 105, 116, 99, 104, 121, 111, 117, 114, 105, 112] => lookup_259_66(acc),
            [100, 110, 115, 97, 98, 114] => lookup_259_67(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_259_68(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_259_69(acc),
            [100, 110, 115, 105, 115, 107, 105, 110, 107, 121] => lookup_259_70(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_259_71(acc),
            [100, 111, 106, 105, 110] => lookup_259_72(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_259_73(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_259_74(acc),
            [100, 111, 112, 97, 97, 115] => lookup_259_75(acc),
            [100, 114, 97, 121, 100, 100, 110, 115] => lookup_259_76(acc),
            [100, 114, 101, 97, 109, 104, 111, 115, 116, 101, 114, 115] => lookup_259_77(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_259_78(acc),
            [100, 117, 114, 117, 109, 105, 115] => lookup_259_79(acc),
            [100, 121, 110, 45, 111, 45, 115, 97, 117, 114] => lookup_259_80(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_259_81(acc),
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 104, 111, 109, 101] => {
                lookup_259_82(acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 119, 111, 114, 107] => {
                lookup_259_83(acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 98, 108, 111, 103] => lookup_259_84(acc),
            [100, 121, 110, 100, 110, 115, 45, 102, 114, 101, 101] => lookup_259_85(acc),
            [100, 121, 110, 100, 110, 115, 45, 104, 111, 109, 101] => lookup_259_86(acc),
            [100, 121, 110, 100, 110, 115, 45, 105, 112] => lookup_259_87(acc),
            [100, 121, 110, 100, 110, 115, 45, 109, 97, 105, 108] => lookup_259_88(acc),
            [100, 121, 110, 100, 110, 115, 45, 111, 102, 102, 105, 99, 101] => lookup_259_89(acc),
            [100, 121, 110, 100, 110, 115, 45, 112, 105, 99, 115] => lookup_259_90(acc),
            [100, 121, 110, 100, 110, 115, 45, 114, 101, 109, 111, 116, 101] => lookup_259_91(acc),
            [100, 121, 110, 100, 110, 115, 45, 115, 101, 114, 118, 101, 114] => lookup_259_92(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 101, 98] => lookup_259_93(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 105, 107, 105] => lookup_259_94(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 111, 114, 107] => lookup_259_95(acc),
            [100, 121, 110, 110, 115] => lookup_259_96(acc),
            [101, 108, 97, 115, 116, 105, 99, 98, 101, 97, 110, 115, 116, 97, 108, 107] => {
                lookup_259_97(labels, acc)
            }
            [101, 110, 99, 111, 114, 101, 97, 112, 105] => lookup_259_98(acc),
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 105, 115, 111, 110] => {
                lookup_259_99(acc)
            }
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 115, 105, 111, 110] => {
                lookup_259_100(acc)
            }
            [101, 115, 116, 45, 108, 101, 45, 112, 97, 116, 114, 111, 110] => lookup_259_101(acc),
            [101, 115, 116, 45, 109, 111, 110, 45, 98, 108, 111, 103, 117, 101, 117, 114] => {
                lookup_259_102(acc)
            }
            [101, 117] => lookup_259_103(acc),
            [101, 118, 101, 110, 110, 111, 100, 101] => lookup_259_104(info, labels, acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_259_105(acc),
            [102, 97, 115, 116, 108, 121, 45, 101, 100, 103, 101] => lookup_259_106(acc),
            [102, 97, 115, 116, 108, 121, 45, 116, 101, 114, 114, 97, 114, 105, 117, 109] => {
                lookup_259_107(acc)
            }
            [102, 97, 115, 116, 118, 112, 115, 45, 115, 101, 114, 118, 101, 114] => {
                lookup_259_108(acc)
            }
            [102, 98, 115, 98, 120] => lookup_259_109(info, labels, acc),
            [102, 105, 114, 101, 98, 97, 115, 101, 97, 112, 112] => lookup_259_110(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_259_111(acc)
            }
            [102, 108, 100, 114, 118] => lookup_259_112(acc),
            [102, 111, 114, 103, 101, 98, 108, 111, 99, 107, 115] => lookup_259_113(acc),
            [102, 114, 97, 109, 101, 114, 99, 97, 110, 118, 97, 115] => lookup_259_114(acc),
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_259_115(acc),
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_259_116(acc),
            [102, 114, 101, 101, 109, 121, 105, 112] => lookup_259_117(acc),
            [102, 114, 111, 109, 45, 97, 107] => lookup_259_118(acc),
            [102, 114, 111, 109, 45, 97, 108] => lookup_259_119(acc),
            [102, 114, 111, 109, 45, 97, 114] => lookup_259_120(acc),
            [102, 114, 111, 109, 45, 99, 97] => lookup_259_121(acc),
            [102, 114, 111, 109, 45, 99, 116] => lookup_259_122(acc),
            [102, 114, 111, 109, 45, 100, 99] => lookup_259_123(acc),
            [102, 114, 111, 109, 45, 100, 101] => lookup_259_124(acc),
            [102, 114, 111, 109, 45, 102, 108] => lookup_259_125(acc),
            [102, 114, 111, 109, 45, 103, 97] => lookup_259_126(acc),
            [102, 114, 111, 109, 45, 104, 105] => lookup_259_127(acc),
            [102, 114, 111, 109, 45, 105, 97] => lookup_259_128(acc),
            [102, 114, 111, 109, 45, 105, 100] => lookup_259_129(acc),
            [102, 114, 111, 109, 45, 105, 108] => lookup_259_130(acc),
            [102, 114, 111, 109, 45, 105, 110] => lookup_259_131(acc),
            [102, 114, 111, 109, 45, 107, 115] => lookup_259_132(acc),
            [102, 114, 111, 109, 45, 107, 121] => lookup_259_133(acc),
            [102, 114, 111, 109, 45, 109, 97] => lookup_259_134(acc),
            [102, 114, 111, 109, 45, 109, 100] => lookup_259_135(acc),
            [102, 114, 111, 109, 45, 109, 105] => lookup_259_136(acc),
            [102, 114, 111, 109, 45, 109, 110] => lookup_259_137(acc),
            [102, 114, 111, 109, 45, 109, 111] => lookup_259_138(acc),
            [102, 114, 111, 109, 45, 109, 115] => lookup_259_139(acc),
            [102, 114, 111, 109, 45, 109, 116] => lookup_259_140(acc),
            [102, 114, 111, 109, 45, 110, 99] => lookup_259_141(acc),
            [102, 114, 111, 109, 45, 110, 100] => lookup_259_142(acc),
            [102, 114, 111, 109, 45, 110, 101] => lookup_259_143(acc),
            [102, 114, 111, 109, 45, 110, 104] => lookup_259_144(acc),
            [102, 114, 111, 109, 45, 110, 106] => lookup_259_145(acc),
            [102, 114, 111, 109, 45, 110, 109] => lookup_259_146(acc),
            [102, 114, 111, 109, 45, 110, 118] => lookup_259_147(acc),
            [102, 114, 111, 109, 45, 111, 104] => lookup_259_148(acc),
            [102, 114, 111, 109, 45, 111, 107] => lookup_259_149(acc),
            [102, 114, 111, 109, 45, 111, 114] => lookup_259_150(acc),
            [102, 114, 111, 109, 45, 112, 97] => lookup_259_151(acc),
            [102, 114, 111, 109, 45, 112, 114] => lookup_259_152(acc),
            [102, 114, 111, 109, 45, 114, 105] => lookup_259_153(acc),
            [102, 114, 111, 109, 45, 115, 99] => lookup_259_154(acc),
            [102, 114, 111, 109, 45, 115, 100] => lookup_259_155(acc),
            [102, 114, 111, 109, 45, 116, 110] => lookup_259_156(acc),
            [102, 114, 111, 109, 45, 116, 120] => lookup_259_157(acc),
            [102, 114, 111, 109, 45, 117, 116] => lookup_259_158(acc),
            [102, 114, 111, 109, 45, 118, 97] => lookup_259_159(acc),
            [102, 114, 111, 109, 45, 118, 116] => lookup_259_160(acc),
            [102, 114, 111, 109, 45, 119, 97] => lookup_259_161(acc),
            [102, 114, 111, 109, 45, 119, 105] => lookup_259_162(acc),
            [102, 114, 111, 109, 45, 119, 118] => lookup_259_163(acc),
            [102, 114, 111, 109, 45, 119, 121] => lookup_259_164(acc),
            [103, 101, 101, 107, 103, 97, 108, 97, 120, 121] => lookup_259_165(acc),
            [103, 101, 110, 116, 97, 112, 112, 115] => lookup_259_166(acc),
            [103, 101, 110, 116, 108, 101, 110, 116, 97, 112, 105, 115] => lookup_259_167(acc),
            [103, 101, 116, 109, 121, 105, 112] => lookup_259_168(acc),
            [103, 105, 105, 122, 101] => lookup_259_169(acc),
            [103, 105, 116, 104, 117, 98, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_259_170(acc)
            }
            [103, 108, 101, 101, 122, 101] => lookup_259_171(acc),
            [103, 111, 111, 103, 108, 101, 97, 112, 105, 115] => lookup_259_172(acc),
            [103, 111, 111, 103, 108, 101, 99, 111, 100, 101] => lookup_259_173(acc),
            [103, 111, 116, 100, 110, 115] => lookup_259_174(acc),
            [103, 111, 116, 112, 97, 110, 116, 104, 101, 111, 110] => lookup_259_175(acc),
            [103, 114] => lookup_259_176(acc),
            [103, 114, 97, 121, 106, 97, 121, 108, 101, 97, 103, 117, 101, 115] => {
                lookup_259_177(acc)
            }
            [104, 97, 116, 101, 110, 97, 98, 108, 111, 103] => lookup_259_178(acc),
            [104, 97, 116, 101, 110, 97, 100, 105, 97, 114, 121] => lookup_259_179(acc),
            [104, 101, 97, 108, 116, 104, 45, 99, 97, 114, 101, 114, 101, 102, 111, 114, 109] => {
                lookup_259_180(acc)
            }
            [104, 101, 114, 111, 107, 117, 97, 112, 112] => lookup_259_181(acc),
            [104, 107] => lookup_259_182(acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_259_183(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_259_184(acc),
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 109, 97, 99] => {
                lookup_259_185(acc)
            }
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 112, 99] => {
                lookup_259_186(acc)
            }
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_259_187(acc),
            [104, 111, 115, 116, 101, 100, 45, 98, 121, 45, 112, 114, 101, 118, 105, 100, 101, 114] => {
                lookup_259_188(info, labels, acc)
            }
            [104, 111, 115, 116, 101, 100, 112, 105] => lookup_259_189(acc),
            [104, 111, 115, 116, 101, 117, 114] => lookup_259_190(info, labels, acc),
            [104, 111, 116, 101, 108, 119, 105, 116, 104, 102, 108, 105, 103, 104, 116] => {
                lookup_259_191(acc)
            }
            [105, 97, 109, 97, 108, 108, 97, 109, 97] => lookup_259_192(acc),
            [105, 107, 45, 115, 101, 114, 118, 101, 114] => lookup_259_193(info, labels, acc),
            [105, 112, 45, 100, 100, 110, 115] => lookup_259_194(acc),
            [105, 115, 45, 97, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => lookup_259_195(acc),
            [105, 115, 45, 97, 45, 98, 108, 111, 103, 103, 101, 114] => lookup_259_196(acc),
            [105, 115, 45, 97, 45, 98, 111, 111, 107, 107, 101, 101, 112, 101, 114] => {
                lookup_259_197(acc)
            }
            [105, 115, 45, 97, 45, 98, 117, 108, 108, 115, 45, 102, 97, 110] => lookup_259_198(acc),
            [105, 115, 45, 97, 45, 99, 97, 116, 101, 114, 101, 114] => lookup_259_199(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_259_200(acc),
            [105, 115, 45, 97, 45, 99, 111, 110, 115, 101, 114, 118, 97, 116, 105, 118, 101] => {
                lookup_259_201(acc)
            }
            [105, 115, 45, 97, 45, 99, 112, 97] => lookup_259_202(acc),
            [105, 115, 45, 97, 45, 99, 117, 98, 105, 99, 108, 101, 45, 115, 108, 97, 118, 101] => {
                lookup_259_203(acc)
            }
            [105, 115, 45, 97, 45, 100, 101, 109, 111, 99, 114, 97, 116] => lookup_259_204(acc),
            [105, 115, 45, 97, 45, 100, 101, 115, 105, 103, 110, 101, 114] => lookup_259_205(acc),
            [105, 115, 45, 97, 45, 100, 111, 99, 116, 111, 114] => lookup_259_206(acc),
            [105, 115, 45, 97, 45, 102, 105, 110, 97, 110, 99, 105, 97, 108, 97, 100, 118, 105, 115, 111, 114] => {
                lookup_259_207(acc)
            }
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_259_208(acc),
            [105, 115, 45, 97, 45, 103, 114, 101, 101, 110] => lookup_259_209(acc),
            [105, 115, 45, 97, 45, 103, 117, 114, 117] => lookup_259_210(acc),
            [105, 115, 45, 97, 45, 104, 97, 114, 100, 45, 119, 111, 114, 107, 101, 114] => {
                lookup_259_211(acc)
            }
            [105, 115, 45, 97, 45, 104, 117, 110, 116, 101, 114] => lookup_259_212(acc),
            [105, 115, 45, 97, 45, 108, 97, 110, 100, 115, 99, 97, 112, 101, 114] => {
                lookup_259_213(acc)
            }
            [105, 115, 45, 97, 45, 108, 97, 119, 121, 101, 114] => lookup_259_214(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 97, 108] => lookup_259_215(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 116, 97, 114, 105, 97, 110] => {
                lookup_259_216(acc)
            }
            [105, 115, 45, 97, 45, 108, 108, 97, 109, 97] => lookup_259_217(acc),
            [105, 115, 45, 97, 45, 109, 117, 115, 105, 99, 105, 97, 110] => lookup_259_218(acc),
            [105, 115, 45, 97, 45, 110, 97, 115, 99, 97, 114, 102, 97, 110] => lookup_259_219(acc),
            [105, 115, 45, 97, 45, 110, 117, 114, 115, 101] => lookup_259_220(acc),
            [105, 115, 45, 97, 45, 112, 97, 105, 110, 116, 101, 114] => lookup_259_221(acc),
            [105, 115, 45, 97, 45, 112, 101, 114, 115, 111, 110, 97, 108, 116, 114, 97, 105, 110, 101, 114] => {
                lookup_259_222(acc)
            }
            [105, 115, 45, 97, 45, 112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 101, 114] => {
                lookup_259_223(acc)
            }
            [105, 115, 45, 97, 45, 112, 108, 97, 121, 101, 114] => lookup_259_224(acc),
            [105, 115, 45, 97, 45, 114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => {
                lookup_259_225(acc)
            }
            [105, 115, 45, 97, 45, 114, 111, 99, 107, 115, 116, 97, 114] => lookup_259_226(acc),
            [105, 115, 45, 97, 45, 115, 111, 99, 105, 97, 108, 105, 115, 116] => {
                lookup_259_227(acc)
            }
            [105, 115, 45, 97, 45, 115, 116, 117, 100, 101, 110, 116] => lookup_259_228(acc),
            [105, 115, 45, 97, 45, 116, 101, 97, 99, 104, 101, 114] => lookup_259_229(acc),
            [105, 115, 45, 97, 45, 116, 101, 99, 104, 105, 101] => lookup_259_230(acc),
            [105, 115, 45, 97, 45, 116, 104, 101, 114, 97, 112, 105, 115, 116] => {
                lookup_259_231(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => {
                lookup_259_232(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 111, 114] => lookup_259_233(acc),
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 114, 101, 115, 115] => lookup_259_234(acc),
            [105, 115, 45, 97, 110, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => {
                lookup_259_235(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 114, 116, 105, 115, 116] => lookup_259_236(acc),
            [105, 115, 45, 97, 110, 45, 101, 110, 103, 105, 110, 101, 101, 114] => {
                lookup_259_237(acc)
            }
            [105, 115, 45, 97, 110, 45, 101, 110, 116, 101, 114, 116, 97, 105, 110, 101, 114] => {
                lookup_259_238(acc)
            }
            [105, 115, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => lookup_259_239(acc),
            [105, 115, 45, 103, 111, 110, 101] => lookup_259_240(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 97, 110, 105, 109, 101] => lookup_259_241(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 115] => lookup_259_242(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 116, 111, 111, 110, 115] => {
                lookup_259_243(acc)
            }
            [105, 115, 45, 105, 110, 116, 111, 45, 103, 97, 109, 101, 115] => lookup_259_244(acc),
            [105, 115, 45, 108, 101, 101, 116] => lookup_259_245(acc),
            [105, 115, 45, 110, 111, 116, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => {
                lookup_259_246(acc)
            }
            [105, 115, 45, 115, 108, 105, 99, 107] => lookup_259_247(acc),
            [105, 115, 45, 117, 98, 101, 114, 108, 101, 101, 116] => lookup_259_248(acc),
            [105, 115, 45, 119, 105, 116, 104, 45, 116, 104, 101, 98, 97, 110, 100] => {
                lookup_259_249(acc)
            }
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_259_250(acc),
            [105, 115, 97, 45, 104, 111, 99, 107, 101, 121, 110, 117, 116] => lookup_259_251(acc),
            [105, 115, 115, 109, 97, 114, 116, 101, 114, 116, 104, 97, 110, 121, 111, 117] => {
                lookup_259_252(acc)
            }
            [105, 116] => lookup_259_253(acc),
            [106, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_259_254(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_259_255(info, labels, acc),
            [106, 111, 121, 101, 110, 116] => lookup_259_256(info, labels, acc),
            [106, 112, 110] => lookup_259_257(acc),
            [107, 97, 115, 115, 101, 114, 118, 101, 114] => lookup_259_258(acc),
            [107, 111, 122, 111, 119] => lookup_259_259(acc),
            [108, 97, 100, 101, 115, 107] => lookup_259_260(acc),
            [108, 105, 107, 101, 115, 45, 112, 105, 101] => lookup_259_261(acc),
            [108, 105, 107, 101, 115, 99, 97, 110, 100, 121] => lookup_259_262(acc),
            [108, 105, 110, 111, 100, 101] => lookup_259_263(info, labels, acc),
            [108, 105, 110, 111, 100, 101, 111, 98, 106, 101, 99, 116, 115] => {
                lookup_259_264(info, labels, acc)
            }
            [108, 105, 110, 111, 100, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_259_265(info, labels, acc)
            }
            [108, 105, 118, 101, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_259_266(acc),
            [108, 111, 103, 111, 105, 112] => lookup_259_267(acc),
            [108, 111, 115, 101, 121, 111, 117, 114, 105, 112] => lookup_259_268(acc),
            [108, 112, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_259_269(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_259_270(info, labels, acc)
            }
            [109, 97, 122, 101, 112, 108, 97, 121] => lookup_259_271(acc),
            [109, 101, 115, 115, 119, 105, 116, 104, 100, 110, 115] => lookup_259_272(acc),
            [109, 101, 116, 101, 111, 114, 97, 112, 112] => lookup_259_273(labels, acc),
            [109, 101, 120] => lookup_259_274(acc),
            [109, 105, 110, 105, 115, 101, 114, 118, 101, 114] => lookup_259_275(acc),
            [109, 111, 100, 101, 108, 115, 99, 97, 112, 101] => lookup_259_276(acc),
            [109, 119, 99, 108, 111, 117, 100, 110, 111, 110, 112, 114, 111, 100] => {
                lookup_259_277(acc)
            }
            [109, 121, 97, 99, 116, 105, 118, 101, 100, 105, 114, 101, 99, 116, 111, 114, 121] => {
                lookup_259_278(acc)
            }
            [109, 121, 97, 115, 117, 115, 116, 111, 114] => lookup_259_279(acc),
            [109, 121, 99, 108, 111, 117, 100, 110, 97, 115] => lookup_259_280(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_259_281(acc),
            [109, 121, 100, 98, 115, 101, 114, 118, 101, 114] => lookup_259_282(acc),
            [109, 121, 100, 111, 98, 105, 115, 115] => lookup_259_283(acc),
            [109, 121, 100, 114, 111, 98, 111] => lookup_259_284(acc),
            [109, 121, 105, 112, 104, 111, 115, 116] => lookup_259_285(acc),
            [109, 121, 110, 97, 115, 99, 108, 111, 117, 100] => lookup_259_286(acc),
            [109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => lookup_259_287(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_259_288(acc)
            }
            [109, 121, 115, 104, 111, 112, 98, 108, 111, 99, 107, 115] => lookup_259_289(acc),
            [109, 121, 115, 104, 111, 112, 105, 102, 121] => lookup_259_290(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_259_291(acc),
            [109, 121, 116, 97, 98, 105, 116] => lookup_259_292(acc),
            [109, 121, 116, 104, 105, 99, 45, 98, 101, 97, 115, 116, 115] => {
                lookup_259_293(info, labels, acc)
            }
            [109, 121, 116, 117, 108, 101, 97, 112] => lookup_259_294(acc),
            [109, 121, 118, 110, 99] => lookup_259_295(acc),
            [110, 101, 97, 116, 45, 117, 114, 108] => lookup_259_296(acc),
            [110, 101, 116, 45, 102, 114, 101, 97, 107, 115] => lookup_259_297(acc),
            [110, 102, 115, 104, 111, 115, 116] => lookup_259_298(acc),
            [110, 111, 115, 112, 97, 109, 112, 114, 111, 120, 121] => {
                lookup_259_299(info, labels, acc)
            }
            [111, 98, 115, 101, 114, 118, 97, 98, 108, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_259_300(info, labels, acc)
            }
            [111, 110, 45, 97, 112, 116, 105, 98, 108, 101] => lookup_259_301(acc),
            [111, 110, 102, 97, 98, 114, 105, 99, 97] => lookup_259_302(acc),
            [111, 110, 114, 101, 110, 100, 101, 114] => lookup_259_303(acc),
            [111, 110, 116, 104, 101, 119, 105, 102, 105] => lookup_259_304(acc),
            [111, 111, 103, 117, 121] => lookup_259_305(acc),
            [111, 112, 101, 114, 97, 117, 110, 105, 116, 101] => lookup_259_306(acc),
            [111, 114, 97, 99, 108, 101, 99, 108, 111, 117, 100, 97, 112, 112, 115] => {
                lookup_259_307(info, labels, acc)
            }
            [111, 114, 97, 99, 108, 101, 103, 111, 118, 99, 108, 111, 117, 100, 97, 112, 112, 115] => {
                lookup_259_308(info, labels, acc)
            }
            [111, 114, 115, 105, 116, 101, 115] => lookup_259_309(acc),
            [111, 117, 116, 115, 121, 115, 116, 101, 109, 115, 99, 108, 111, 117, 100] => {
                lookup_259_310(acc)
            }
            [111, 119, 110, 112, 114, 111, 118, 105, 100, 101, 114] => lookup_259_311(acc),
            [112, 97, 103, 101, 115, 112, 101, 101, 100, 109, 111, 98, 105, 108, 105, 122, 101, 114] => {
                lookup_259_312(acc)
            }
            [112, 97, 103, 101, 120, 108] => lookup_259_313(acc),
            [112, 97, 121, 119, 104, 105, 114, 108] => lookup_259_314(info, labels, acc),
            [112, 103, 102, 111, 103] => lookup_259_315(acc),
            [112, 105, 120, 111, 108, 105, 110, 111] => lookup_259_316(acc),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110, 45, 99, 108, 111, 117, 100] => {
                lookup_259_317(acc)
            }
            [112, 108, 101, 115, 107, 110, 115] => lookup_259_318(acc),
            [112, 111, 105, 110, 116, 50, 116, 104, 105, 115] => lookup_259_319(acc),
            [112, 111, 108, 121, 115, 112, 97, 99, 101] => lookup_259_320(acc),
            [112, 111, 115, 116, 109, 97, 110, 45, 101, 99, 104, 111] => lookup_259_321(acc),
            [112, 114, 103, 109, 114] => lookup_259_322(info, labels, acc),
            [112, 121, 116, 104, 111, 110, 97, 110, 121, 119, 104, 101, 114, 101] => {
                lookup_259_323(labels, acc)
            }
            [113, 97, 50] => lookup_259_324(acc),
            [113, 98, 117, 115, 101, 114] => lookup_259_325(acc),
            [113, 117, 97, 108, 105, 102, 105, 111, 97, 112, 112] => lookup_259_326(acc),
            [113, 117, 105, 99, 107, 115, 121, 116, 101, 115] => lookup_259_327(acc),
            [113, 117, 105, 112, 101, 108, 101, 109, 101, 110, 116, 115] => {
                lookup_259_328(info, labels, acc)
            }
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_259_329(acc),
            [114, 101, 97, 100, 116, 104, 101, 100, 111, 99, 115, 45, 104, 111, 115, 116, 101, 100] => {
                lookup_259_330(acc)
            }
            [114, 101, 109, 111, 116, 101, 119, 100] => lookup_259_331(acc),
            [114, 101, 110, 100, 101, 114] => lookup_259_332(info, labels, acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_259_333(acc),
            [114, 101, 115, 101, 114, 118, 101, 45, 111, 110, 108, 105, 110, 101] => {
                lookup_259_334(acc)
            }
            [114, 104, 99, 108, 111, 117, 100] => lookup_259_335(acc),
            [114, 111, 117, 116, 105, 110, 103, 116, 104, 101, 99, 108, 111, 117, 100] => {
                lookup_259_336(acc)
            }
            [114, 117] => lookup_259_337(acc),
            [115, 97] => lookup_259_338(acc),
            [115, 97, 107, 117, 114, 97, 116, 97, 110] => lookup_259_339(acc),
            [115, 97, 107, 117, 114, 97, 119, 101, 98] => lookup_259_340(acc),
            [115, 97, 108, 101, 115, 102, 111, 114, 99, 101] => lookup_259_341(info, labels, acc),
            [115, 97, 118, 101, 115, 45, 116, 104, 101, 45, 119, 104, 97, 108, 101, 115] => {
                lookup_259_342(acc)
            }
            [115, 99, 114, 121, 115, 101, 99] => lookup_259_343(acc),
            [115, 101, 99, 117, 114, 105, 116, 121, 116, 97, 99, 116, 105, 99, 115] => {
                lookup_259_344(acc)
            }
            [115, 101, 108, 102, 105, 112] => lookup_259_345(acc),
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 108, 101, 115, 115] => {
                lookup_259_346(acc)
            }
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 117] => lookup_259_347(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_259_348(acc),
            [115, 101, 114, 118, 101, 98, 101, 101, 114] => lookup_259_349(acc),
            [115, 101, 114, 118, 101, 99, 111, 117, 110, 116, 101, 114, 115, 116, 114, 105, 107, 101] => {
                lookup_259_350(acc)
            }
            [115, 101, 114, 118, 101, 101, 120, 99, 104, 97, 110, 103, 101] => lookup_259_351(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_259_352(acc),
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_259_353(acc),
            [115, 101, 114, 118, 101, 104, 97, 108, 102, 108, 105, 102, 101] => lookup_259_354(acc),
            [115, 101, 114, 118, 101, 104, 116, 116, 112] => lookup_259_355(acc),
            [115, 101, 114, 118, 101, 104, 117, 109, 111, 117, 114] => lookup_259_356(acc),
            [115, 101, 114, 118, 101, 105, 114, 99] => lookup_259_357(acc),
            [115, 101, 114, 118, 101, 109, 112, 51] => lookup_259_358(acc),
            [115, 101, 114, 118, 101, 112, 50, 112] => lookup_259_359(acc),
            [115, 101, 114, 118, 101, 112, 105, 99, 115] => lookup_259_360(acc),
            [115, 101, 114, 118, 101, 113, 117, 97, 107, 101] => lookup_259_361(acc),
            [115, 101, 114, 118, 101, 115, 97, 114, 99, 97, 115, 109] => lookup_259_362(acc),
            [115, 104, 111, 112, 105, 116, 115, 105, 116, 101] => lookup_259_363(acc),
            [115, 105, 105, 105, 116, 101, 115] => lookup_259_364(acc),
            [115, 105, 109, 112, 108, 101, 45, 117, 114, 108] => lookup_259_365(acc),
            [115, 105, 109, 112, 108, 101, 115, 105, 116, 101] => lookup_259_366(acc),
            [115, 105, 110, 97, 97, 112, 112] => lookup_259_367(acc),
            [115, 107, 121, 103, 101, 97, 114, 97, 112, 112] => lookup_259_368(acc),
            [115, 109, 117, 115, 104, 99, 100, 110] => lookup_259_369(acc),
            [115, 112, 97, 99, 101, 45, 116, 111, 45, 114, 101, 110, 116] => lookup_259_370(acc),
            [115, 116, 97, 99, 107, 104, 101, 114, 111, 45, 110, 101, 116, 119, 111, 114, 107] => {
                lookup_259_371(acc)
            }
            [115, 116, 100, 108, 105, 98] => lookup_259_372(info, labels, acc),
            [115, 116, 114, 97, 112, 105, 97, 112, 112] => lookup_259_373(labels, acc),
            [115, 116, 114, 101, 97, 107, 45, 108, 105, 110, 107] => lookup_259_374(acc),
            [115, 116, 114, 101, 97, 107, 108, 105, 110, 107, 115] => lookup_259_375(acc),
            [115, 116, 114, 101, 97, 107, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_259_376(acc)
            }
            [115, 116, 114, 101, 97, 109, 108, 105, 116, 97, 112, 112] => lookup_259_377(acc),
            [115, 116, 117, 102, 102, 116, 111, 114, 101, 97, 100] => lookup_259_378(acc),
            [116, 97, 118, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_259_379(acc)
            }
            [116, 98, 45, 104, 111, 115, 116, 105, 110, 103] => lookup_259_380(info, labels, acc),
            [116, 101, 97, 99, 104, 101, 115, 45, 121, 111, 103, 97] => lookup_259_381(acc),
            [116, 101, 109, 112, 45, 100, 110, 115] => lookup_259_382(acc),
            [116, 104, 101, 119, 111, 114, 107, 112, 99] => lookup_259_383(acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116, 100, 97, 116, 97] => lookup_259_384(acc),
            [116, 111, 119, 110, 110, 101, 119, 115, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_259_385(acc)
            }
            [116, 114, 121, 45, 115, 110, 111, 119, 112, 108, 111, 119] => lookup_259_386(acc),
            [116, 114, 121, 99, 108, 111, 117, 100, 102, 108, 97, 114, 101] => lookup_259_387(acc),
            [116, 117, 108, 101, 97, 112, 45, 112, 97, 114, 116, 110, 101, 114, 115] => {
                lookup_259_388(acc)
            }
            [116, 121, 112, 101, 102, 111, 114, 109] => lookup_259_389(info, labels, acc),
            [117, 107] => lookup_259_390(acc),
            [117, 110, 117, 115, 117, 97, 108, 112, 101, 114, 115, 111, 110] => lookup_259_391(acc),
            [117, 112, 115, 117, 110, 97, 112, 112] => lookup_259_392(acc),
            [117, 115] => lookup_259_393(acc),
            [118, 105, 112, 115, 105, 110, 97, 97, 112, 112] => lookup_259_394(acc),
            [118, 117, 108, 116, 114, 111, 98, 106, 101, 99, 116, 115] => {
                lookup_259_395(info, labels, acc)
            }
            [119, 45, 99, 111, 114, 112, 45, 115, 116, 97, 116, 105, 99, 98, 108, 105, 116, 122] => {
                lookup_259_396(acc)
            }
            [119, 45, 99, 114, 101, 100, 101, 110, 116, 105, 97, 108, 108, 101, 115, 115, 45, 115, 116, 97, 116, 105, 99, 98, 108, 105, 116, 122] => {
                lookup_259_397(acc)
            }
            [119, 45, 115, 116, 97, 116, 105, 99, 98, 108, 105, 116, 122] => lookup_259_398(acc),
            [119, 97, 102, 97, 105, 99, 108, 111, 117, 100] => lookup_259_399(info, labels, acc),
            [119, 97, 102, 102, 108, 101, 99, 101, 108, 108] => lookup_259_400(acc),
            [119, 101, 98, 97, 100, 111, 114, 115, 105, 116, 101] => lookup_259_401(acc),
            [119, 105, 97, 114, 100, 119, 101, 98] => lookup_259_402(info, labels, acc),
            [119, 105, 116, 104, 103, 111, 111, 103, 108, 101] => lookup_259_403(acc),
            [119, 105, 116, 104, 121, 111, 117, 116, 117, 98, 101] => lookup_259_404(acc),
            [119, 105, 120, 115, 105, 116, 101] => lookup_259_405(acc),
            [119, 105, 120, 115, 116, 117, 100, 105, 111] => lookup_259_406(acc),
            [119, 111, 108, 116, 108, 97, 98, 45, 100, 101, 109, 111] => lookup_259_407(acc),
            [119, 111, 114, 107, 105, 115, 98, 111, 114, 105, 110, 103] => lookup_259_408(acc),
            [119, 112, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_259_409(acc),
            [119, 112, 101, 110, 103, 105, 110, 101, 112, 111, 119, 101, 114, 101, 100] => {
                lookup_259_410(labels, acc)
            }
            [119, 112, 104, 111, 115, 116, 101, 100, 109, 97, 105, 108] => lookup_259_411(acc),
            [119, 112, 109, 117, 99, 100, 110] => lookup_259_412(acc),
            [119, 114, 105, 116, 101, 115, 116, 104, 105, 115, 98, 108, 111, 103] => {
                lookup_259_413(acc)
            }
            [120, 48] => lookup_259_414(acc),
            [120, 110, 98, 97, 121] => lookup_259_415(labels, acc),
            [121, 111, 108, 97, 115, 105, 116, 101] => lookup_259_416(acc),
            [122, 97] => lookup_259_417(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_261_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_261_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_261_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_261<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 102, 111, 114, 117, 109] => lookup_261_0(acc),
            [110, 111, 103] => lookup_261_1(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_261_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_262() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_264() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_265() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_266() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_267() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_268() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_269() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_271() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_272_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_272<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101] => lookup_272_0(acc),
            [101, 108, 101, 109, 101, 110, 116, 111, 114] => lookup_272_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_273() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_274() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_275() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_276() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_277() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_278() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_280_0(acc),
            [99, 111] => lookup_280_1(acc),
            [101, 100] => lookup_280_2(acc),
            [102, 105] => lookup_280_3(acc),
            [103, 111] => lookup_280_4(acc),
            [111, 114] => lookup_280_5(acc),
            [115, 97] => lookup_280_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_281() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_282() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_283() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_284() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_285() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_286() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_287() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_288() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_289_0(acc),
            [101, 100, 117] => lookup_289_1(acc),
            [103, 111, 98] => lookup_289_2(acc),
            [105, 110, 102] => lookup_289_3(acc),
            [110, 97, 116] => lookup_289_4(acc),
            [110, 101, 116] => lookup_289_5(acc),
            [111, 114, 103] => lookup_289_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_290() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_291_0(acc),
            [101, 100, 117] => lookup_291_1(acc),
            [105, 100] => lookup_291_2(acc),
            [105, 110, 116] => lookup_291_3(acc),
            [110, 101, 116] => lookup_291_4(acc),
            [110, 111, 109, 101] => lookup_291_5(acc),
            [111, 114, 103] => lookup_291_6(acc),
            [112, 117, 98, 108] => lookup_291_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_292_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_292_0(acc),
            [101, 100, 117] => lookup_292_1(acc),
            [110, 101, 116] => lookup_292_2(acc),
            [111, 114, 103] => lookup_292_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_293_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_293_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_293_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_293_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_293_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_293_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_293_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_293_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_293_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_293_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_293_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_293<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 101, 115, 115, 109, 101, 110, 116, 115] => lookup_293_0(acc),
            [97, 116, 104] => lookup_293_1(acc),
            [99, 97, 108, 99, 117, 108, 97, 116, 111, 114, 115] => lookup_293_2(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_293_3(acc),
            [102, 117, 110, 110, 101, 108, 115] => lookup_293_4(acc),
            [103, 111, 118] => lookup_293_5(acc),
            [105, 110, 102, 111] => lookup_293_6(acc),
            [112, 97, 121, 110, 111, 119] => lookup_293_7(acc),
            [113, 117, 105, 122, 122, 101, 115] => lookup_293_8(acc),
            [114, 101, 115, 101, 97, 114, 99, 104, 101, 100] => lookup_293_9(acc),
            [116, 101, 115, 116, 115] => lookup_293_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_294_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_294_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_294_2_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_294_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_294_2_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_294_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_294_0(acc),
            [98, 105, 122] => lookup_294_1(acc),
            [99, 111, 109] => lookup_294_2(labels, acc),
            [101, 107, 108, 111, 103, 101, 115] => lookup_294_3(acc),
            [103, 111, 118] => lookup_294_4(acc),
            [108, 116, 100] => lookup_294_5(acc),
            [109, 105, 108] => lookup_294_6(acc),
            [110, 101, 116] => lookup_294_7(acc),
            [111, 114, 103] => lookup_294_8(acc),
            [112, 114, 101, 115, 115] => lookup_294_9(acc),
            [112, 114, 111] => lookup_294_10(acc),
            [116, 109] => lookup_294_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_295() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_297_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_297_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [114, 115, 99] => lookup_297_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_297_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_297_3_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_297_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_297_3_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_297_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_297_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_297_3_0(info, labels, acc),
            [99, 117, 115, 116, 111, 109] => lookup_297_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_297_4_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_297_4_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_297_4_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [102, 108, 116] => lookup_297_4_0_0(acc),
            [117, 115, 114] => lookup_297_4_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_297_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_297_4_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_297_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_297<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_297_0(acc),
            [99, 111, 110, 116, 101, 110, 116, 112, 114, 111, 120, 121, 57] => {
                lookup_297_1(info, labels, acc)
            }
            [101, 52] => lookup_297_2(acc),
            [109, 101, 116, 97, 99, 101, 110, 116, 114, 117, 109] => {
                lookup_297_3(info, labels, acc)
            }
            [109, 117, 110, 105] => lookup_297_4(info, labels, acc),
            [114, 101, 97, 108, 109] => lookup_297_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_298() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_299() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_300() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_301() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_304() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_307_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_307_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_307_10_0(acc),
            [100, 121, 110, 100, 110, 115] => lookup_307_10_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_307_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_23_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_307_23_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_307_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_307_29_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_307_30_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_30_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_30_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_307_30_0_0(acc),
            [112, 97, 103, 101, 115, 45, 114, 101, 115, 101, 97, 114, 99, 104] => {
                lookup_307_30_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_307_30<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116] => lookup_307_30_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_307_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_56_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_56_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [105, 111] => lookup_307_56_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_307_56<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 99] => lookup_307_56_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_307_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_60_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_60<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_307_60_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_307_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_69_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_69<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_307_69_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_307_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 101, 105, 116, 101] => lookup_307_0(acc),
            [49, 50, 104, 112] => lookup_307_1(acc),
            [50, 105, 120] => lookup_307_2(acc),
            [52, 108, 105, 109, 97] => lookup_307_3(acc),
            [98, 97, 114, 115, 121] => lookup_307_4(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_307_5(acc),
            [99, 111, 109] => lookup_307_6(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_307_7(acc),
            [99, 111, 115, 105, 100, 110, 115] => lookup_307_8(info, labels, acc),
            [100, 100, 45, 100, 110, 115] => lookup_307_9(acc),
            [100, 100, 110, 115, 115] => lookup_307_10(labels, acc),
            [100, 105, 115, 107, 117, 115, 115, 105, 111, 110, 115, 98, 101, 114, 101, 105, 99, 104] => {
                lookup_307_11(acc)
            }
            [100, 110, 115, 104, 111, 109, 101] => lookup_307_12(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101, 114] => lookup_307_13(acc),
            [100, 114, 97, 121, 45, 100, 110, 115] => lookup_307_14(acc),
            [100, 114, 97, 121, 100, 110, 115] => lookup_307_15(acc),
            [100, 121, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_307_16(acc),
            [100, 121, 110, 45, 105, 112, 50, 52] => lookup_307_17(acc),
            [100, 121, 110, 45, 118, 112, 110] => lookup_307_18(acc),
            [100, 121, 110, 97, 109, 105, 115, 99, 104, 101, 115, 45, 100, 110, 115] => {
                lookup_307_19(acc)
            }
            [100, 121, 110, 100, 110, 115, 49] => lookup_307_20(acc),
            [100, 121, 110, 118, 112, 110] => lookup_307_21(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_307_22(acc)
            }
            [102, 114, 117, 115, 107, 121] => lookup_307_23(info, labels, acc),
            [102, 117, 101, 116, 116, 101, 114, 116, 100, 97, 115, 110, 101, 116, 122] => {
                lookup_307_24(acc)
            }
            [103, 105, 116, 45, 114, 101, 112, 111, 115] => lookup_307_25(acc),
            [103, 111, 105, 112] => lookup_307_26(acc),
            [103, 195, 188, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110] => {
                lookup_307_27(acc)
            }
            [103, 195, 188, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110] => {
                lookup_307_28(acc)
            }
            [104, 111, 109, 101, 45, 119, 101, 98, 115, 101, 114, 118, 101, 114] => {
                lookup_307_29(labels, acc)
            }
            [104, 115, 45, 104, 101, 105, 108, 98, 114, 111, 110, 110] => {
                lookup_307_30(info, labels, acc)
            }
            [105, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_307_31(acc),
            [105, 110, 45, 98, 114, 98] => lookup_307_32(acc),
            [105, 110, 45, 98, 117, 116, 116, 101, 114] => lookup_307_33(acc),
            [105, 110, 45, 100, 115, 108] => lookup_307_34(acc),
            [105, 110, 45, 118, 112, 110] => lookup_307_35(acc),
            [105, 110, 116, 101, 114, 110, 101, 116, 45, 100, 110, 115] => lookup_307_36(acc),
            [105, 115, 101, 114, 118, 115, 99, 104, 117, 108, 101] => lookup_307_37(acc),
            [105, 115, 116, 101, 105, 110, 103, 101, 101, 107] => lookup_307_38(acc),
            [105, 115, 116, 109, 101, 105, 110] => lookup_307_39(acc),
            [107, 101, 121, 109, 97, 99, 104, 105, 110, 101] => lookup_307_40(acc),
            [108, 45, 111, 45, 103, 45, 105, 45, 110] => lookup_307_41(acc),
            [108, 99, 117, 98, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_307_42(acc),
            [108, 101, 98, 116, 105, 109, 110, 101, 116, 122] => lookup_307_43(acc),
            [108, 101, 105, 116, 117, 110, 103, 115, 101, 110] => lookup_307_44(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_307_45(acc),
            [108, 111, 103, 111, 105, 112] => lookup_307_46(acc),
            [109, 101, 105, 110, 45, 105, 115, 101, 114, 118] => lookup_307_47(acc),
            [109, 101, 105, 110, 45, 118, 105, 103, 111, 114] => lookup_307_48(acc),
            [109, 121, 45, 103, 97, 116, 101, 119, 97, 121] => lookup_307_49(acc),
            [109, 121, 45, 114, 111, 117, 116, 101, 114] => lookup_307_50(acc),
            [109, 121, 45, 118, 105, 103, 111, 114] => lookup_307_51(acc),
            [109, 121, 45, 119, 97, 110] => lookup_307_52(acc),
            [109, 121, 104, 111, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_307_53(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_307_54(acc),
            [114, 117, 98] => lookup_307_55(acc),
            [114, 117, 104, 114, 45, 117, 110, 105, 45, 98, 111, 99, 104, 117, 109] => {
                lookup_307_56(labels, acc)
            }
            [115, 99, 104, 117, 108, 112, 108, 97, 116, 116, 102, 111, 114, 109] => {
                lookup_307_57(acc)
            }
            [115, 99, 104, 117, 108, 115, 101, 114, 118, 101, 114] => lookup_307_58(acc),
            [115, 112, 100, 110, 115] => lookup_307_59(acc),
            [115, 112, 101, 101, 100, 112, 97, 114, 116, 110, 101, 114] => {
                lookup_307_60(info, labels, acc)
            }
            [115, 113, 117, 97, 114, 101, 55] => lookup_307_61(acc),
            [115, 118, 110, 45, 114, 101, 112, 111, 115] => lookup_307_62(acc),
            [115, 121, 110, 111, 45, 100, 115] => lookup_307_63(acc),
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => {
                lookup_307_64(acc)
            }
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 115] => lookup_307_65(acc),
            [116, 97, 105, 102, 117, 110, 45, 100, 110, 115] => lookup_307_66(acc),
            [116, 101, 115, 116, 45, 105, 115, 101, 114, 118] => lookup_307_67(acc),
            [116, 114, 97, 101, 117, 109, 116, 103, 101, 114, 97, 100, 101] => lookup_307_68(acc),
            [117, 98, 101, 114, 115, 112, 97, 99, 101] => lookup_307_69(info, labels, acc),
            [118, 105, 114, 116, 117, 97, 108, 45, 117, 115, 101, 114] => lookup_307_70(acc),
            [118, 105, 114, 116, 117, 97, 108, 117, 115, 101, 114] => lookup_307_71(acc),
            [119, 101, 98, 115, 112, 97, 99, 101, 99, 111, 110, 102, 105, 103] => {
                lookup_307_72(acc)
            }
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110, 45, 122, 118, 98] => {
                lookup_307_73(acc)
            }
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110, 45, 119, 111, 98] => {
                lookup_307_74(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_308() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_309() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_310() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_312() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_313() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_314() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_315() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_316() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_317() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_318() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_320_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_320_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_320<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 115, 115] => lookup_320_0(acc),
            [103, 114, 97, 112, 104, 105, 99] => lookup_320_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_321_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_3_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 1usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_3_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_3_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_3_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 1usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_3_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_3_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_3_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_3_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_3_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_3_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_3_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_3_4_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_3_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_3_4_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_3_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_3_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_3_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_3_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_3_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_3_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_3_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_3_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_3_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [100] => lookup_321_3_0(info, labels, acc),
            [119] => lookup_321_3_1(info, labels, acc),
            [119, 97] => lookup_321_3_2(info, labels, acc),
            [119, 98] => lookup_321_3_3(info, labels, acc),
            [119, 99] => lookup_321_3_4(info, labels, acc),
            [119, 100] => lookup_321_3_5(info, labels, acc),
            [119, 101] => lookup_321_3_6(info, labels, acc),
            [119, 102] => lookup_321_3_7(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_321_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [114, 101, 108, 97, 121] => lookup_321_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_321_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_9_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_9_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_11_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_11_0_1_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_11_0_1_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_11_0_1_2_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_11_0_1_2_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_11_0_1_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [105, 103, 110, 111, 114, 101, 100] => lookup_321_11_0_1_2_0(acc),
            wild => lookup_321_11_0_1_2_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_11_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [105, 103, 110, 111, 114, 101, 100] => lookup_321_11_0_1_0(acc),
            [115, 117, 98] => lookup_321_11_0_1_2(info, labels, acc),
            wild => lookup_321_11_0_1_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_11_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [115, 117, 98] => lookup_321_11_0_0(acc),
            [119, 99] => lookup_321_11_0_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_321_11<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 115, 108] => lookup_321_11_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_321_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_18_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_18_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_19_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_19_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_20_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_20_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_20_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_321_20_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_321_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 99, 104, 101, 114] => lookup_321_32_0(acc),
            [98, 111, 110, 101, 115] => lookup_321_32_1(acc),
            [99, 97, 110, 97, 114, 121] => lookup_321_32_2(acc),
            [103, 108, 111, 98, 97, 108] => lookup_321_32_3(acc),
            [104, 97, 99, 107, 101, 114] => lookup_321_32_4(acc),
            [105, 100] => lookup_321_32_5(acc),
            [106, 97, 110, 101, 119, 97, 121] => lookup_321_32_6(acc),
            [107, 105, 109] => lookup_321_32_7(acc),
            [107, 105, 114, 97] => lookup_321_32_8(acc),
            [107, 105, 114, 107] => lookup_321_32_9(acc),
            [111, 100, 111] => lookup_321_32_10(acc),
            [112, 97, 114, 105, 115] => lookup_321_32_11(acc),
            [112, 105, 99, 97, 114, 100] => lookup_321_32_12(acc),
            [112, 105, 107, 101] => lookup_321_32_13(acc),
            [112, 114, 101, 114, 101, 108, 101, 97, 115, 101] => lookup_321_32_14(acc),
            [114, 101, 101, 100] => lookup_321_32_15(acc),
            [114, 105, 107, 101, 114] => lookup_321_32_16(acc),
            [115, 105, 115, 107, 111] => lookup_321_32_17(acc),
            [115, 112, 111, 99, 107] => lookup_321_32_18(acc),
            [115, 116, 97, 103, 105, 110, 103] => lookup_321_32_19(acc),
            [115, 117, 108, 117] => lookup_321_32_20(acc),
            [116, 97, 114, 112, 105, 116] => lookup_321_32_21(acc),
            [116, 101, 97, 109, 115] => lookup_321_32_22(acc),
            [116, 117, 99, 107, 101, 114] => lookup_321_32_23(acc),
            [119, 101, 115, 108, 101, 121] => lookup_321_32_24(acc),
            [119, 111, 114, 102] => lookup_321_32_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_321_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_34_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_34<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_34_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_35_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_35<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_35_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_37_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_37<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_37_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 99, 104, 97, 114, 115] => lookup_321_0(acc),
            [98, 97, 114, 115, 121] => lookup_321_1(acc),
            [98, 111, 116, 100, 97, 115, 104] => lookup_321_2(acc),
            [99, 114, 109] => lookup_321_3(info, labels, acc),
            [100, 101, 110, 111] => lookup_321_4(acc),
            [100, 101, 110, 111, 45, 115, 116, 97, 103, 105, 110, 103] => lookup_321_5(acc),
            [100, 101, 116, 97] => lookup_321_6(acc),
            [101, 118, 101, 114, 118, 97, 117, 108, 116] => lookup_321_7(info, labels, acc),
            [102, 108, 121] => lookup_321_8(acc),
            [103, 97, 116, 101, 119, 97, 121] => lookup_321_9(info, labels, acc),
            [103, 105, 116, 104, 117, 98, 112, 114, 101, 118, 105, 101, 119] => lookup_321_10(acc),
            [104, 114, 115, 110] => lookup_321_11(labels, acc),
            [105, 115, 45, 97] => lookup_321_12(acc),
            [105, 115, 45, 97, 45, 102, 117, 108, 108, 115, 116, 97, 99, 107] => lookup_321_13(acc),
            [105, 115, 45, 97, 45, 103, 111, 111, 100] => lookup_321_14(acc),
            [105, 115, 45, 99, 111, 111, 108] => lookup_321_15(acc),
            [105, 115, 45, 110, 111, 116, 45, 97] => lookup_321_16(acc),
            [105, 115, 101, 114, 118] => lookup_321_17(acc),
            [108, 99, 108] => lookup_321_18(info, labels, acc),
            [108, 99, 108, 115, 116, 97, 103, 101] => lookup_321_19(info, labels, acc),
            [108, 111, 99, 97, 108, 99, 101, 114, 116] => lookup_321_20(info, labels, acc),
            [108, 111, 99, 97, 108, 112, 108, 97, 121, 101, 114] => lookup_321_21(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_321_22(acc),
            [109, 101, 100, 105, 97, 116, 101, 99, 104] => lookup_321_23(acc),
            [109, 111, 100, 120] => lookup_321_24(acc),
            [109, 121, 97, 100, 100, 114] => lookup_321_25(acc),
            [110, 103, 114, 111, 107] => lookup_321_26(acc),
            [110, 103, 114, 111, 107, 45, 102, 114, 101, 101] => lookup_321_27(acc),
            [112, 97, 103, 101, 115] => lookup_321_28(acc),
            [112, 97, 110, 101, 108] => lookup_321_29(acc),
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_321_30(acc),
            [114, 50] => lookup_321_31(acc),
            [114, 101, 112, 108, 105, 116] => lookup_321_32(labels, acc),
            [114, 117, 110, 99, 111, 110, 116, 97, 105, 110, 101, 114, 115] => lookup_321_33(acc),
            [115, 116, 103] => lookup_321_34(info, labels, acc),
            [115, 116, 103, 115, 116, 97, 103, 101] => lookup_321_35(info, labels, acc),
            [118, 101, 114, 99, 101, 108] => lookup_321_36(acc),
            [119, 101, 98, 104, 97, 114, 101] => lookup_321_37(info, labels, acc),
            [119, 111, 114, 107, 101, 114, 115] => lookup_321_38(acc),
            [120, 109, 105, 116] => lookup_321_39(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_322() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_323() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_324() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_325_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_325_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 110, 100, 111, 110] => lookup_325_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_325<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 97, 112, 112, 115] => lookup_325_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_326_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_326<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 98, 112, 50, 112] => lookup_326_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_327() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_328() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_329() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_330() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_331() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_332() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_333_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_333_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_333_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_333_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_333_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_333_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_333_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_333<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 104, 106, 101, 109, 109, 101, 115, 105, 100, 101] => lookup_333_0(acc),
            [98, 105, 122] => lookup_333_1(acc),
            [99, 111] => lookup_333_2(acc),
            [102, 105, 114, 109] => lookup_333_3(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_333_4(acc),
            [114, 101, 103] => lookup_333_5(acc),
            [115, 116, 111, 114, 101] => lookup_333_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_334_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_334_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_334_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_334_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_334_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_334_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_334<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_334_0(acc),
            [99, 111, 109] => lookup_334_1(acc),
            [101, 100, 117] => lookup_334_2(acc),
            [103, 111, 118] => lookup_334_3(acc),
            [110, 101, 116] => lookup_334_4(acc),
            [111, 114, 103] => lookup_334_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_335() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_336_0(acc),
            [99, 111, 109] => lookup_336_1(acc),
            [101, 100, 117] => lookup_336_2(acc),
            [103, 111, 98] => lookup_336_3(acc),
            [103, 111, 118] => lookup_336_4(acc),
            [109, 105, 108] => lookup_336_5(acc),
            [110, 101, 116] => lookup_336_6(acc),
            [111, 114, 103] => lookup_336_7(acc),
            [115, 108, 100] => lookup_336_8(acc),
            [119, 101, 98] => lookup_336_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_337() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_338() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_340() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_341() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_342() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_344() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_346() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_347() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_351_0(acc),
            [97, 115, 115, 111] => lookup_351_1(acc),
            [99, 111, 109] => lookup_351_2(acc),
            [101, 100, 117] => lookup_351_3(acc),
            [103, 111, 118] => lookup_351_4(acc),
            [110, 101, 116] => lookup_351_5(acc),
            [111, 114, 103] => lookup_351_6(acc),
            [112, 111, 108] => lookup_351_7(acc),
            [115, 111, 99] => lookup_351_8(acc),
            [116, 109] => lookup_351_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_352() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_353() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_354_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_354_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 115, 101] => lookup_354_0(acc),
            [99, 111, 109] => lookup_354_1(acc),
            [101, 100, 117] => lookup_354_2(acc),
            [102, 105, 110] => lookup_354_3(acc),
            [103, 111, 98] => lookup_354_4(acc),
            [103, 111, 118] => lookup_354_5(acc),
            [105, 110, 102, 111] => lookup_354_6(acc),
            [107, 49, 50] => lookup_354_7(acc),
            [109, 101, 100] => lookup_354_8(acc),
            [109, 105, 108] => lookup_354_9(acc),
            [110, 101, 116] => lookup_354_10(acc),
            [111, 102, 102, 105, 99, 105, 97, 108] => lookup_354_11(acc),
            [111, 114, 103] => lookup_354_12(acc),
            [112, 114, 111] => lookup_354_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_355() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_357_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [103, 105, 116, 45, 112, 97, 103, 101, 115] => lookup_357_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_357<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 105, 116] => lookup_357_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_358_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_358<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_358_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_359_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 112] => lookup_359_0(acc),
            [99, 111, 109] => lookup_359_1(acc),
            [101, 100, 117] => lookup_359_2(acc),
            [102, 105, 101] => lookup_359_3(acc),
            [103, 111, 118] => lookup_359_4(acc),
            [108, 105, 98] => lookup_359_5(acc),
            [109, 101, 100] => lookup_359_6(acc),
            [111, 114, 103] => lookup_359_7(acc),
            [112, 114, 105] => lookup_359_8(acc),
            [114, 105, 105, 107] => lookup_359_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_360_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_360_0(acc),
            [99, 111, 109] => lookup_360_1(acc),
            [101, 100, 117] => lookup_360_2(acc),
            [101, 117, 110] => lookup_360_3(acc),
            [103, 111, 118] => lookup_360_4(acc),
            [105, 110, 102, 111] => lookup_360_5(acc),
            [109, 101] => lookup_360_6(acc),
            [109, 105, 108] => lookup_360_7(acc),
            [110, 97, 109, 101] => lookup_360_8(acc),
            [110, 101, 116] => lookup_360_9(acc),
            [111, 114, 103] => lookup_360_10(acc),
            [115, 99, 105] => lookup_360_11(acc),
            [115, 112, 111, 114, 116] => lookup_360_12(acc),
            [116, 118] => lookup_360_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_361_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_361_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [111, 110] => lookup_361_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_361_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_361_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [112] => lookup_361_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_361_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_361_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [112] => lookup_361_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_361<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 114, 105, 115, 112] => lookup_361_0(info, labels, acc),
            [116, 97, 119, 107] => lookup_361_1(info, labels, acc),
            [116, 97, 119, 107, 116, 111] => lookup_361_2(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_362() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_364() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_366() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_367() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_369_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_370() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_371() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_372_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_372_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 109, 105, 119, 101, 98] => lookup_372_0(acc),
            [99, 111, 109] => lookup_372_1(acc),
            [101, 100, 117] => lookup_372_2(acc),
            [103, 111, 98] => lookup_372_3(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_372_4(acc),
            [110, 111, 109] => lookup_372_5(acc),
            [111, 114, 103] => lookup_372_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_373() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_374_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_374_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_374<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109, 112, 117, 116, 101] => lookup_374_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_375_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_375_0(acc),
            [99, 111, 109] => lookup_375_1(acc),
            [101, 100, 117] => lookup_375_2(acc),
            [103, 111, 118] => lookup_375_3(acc),
            [105, 110, 102, 111] => lookup_375_4(acc),
            [110, 97, 109, 101] => lookup_375_5(acc),
            [110, 101, 116] => lookup_375_6(acc),
            [111, 114, 103] => lookup_375_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_376_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_376_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_376_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_376_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_376_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_376_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_376_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_376_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_376_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_376_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_376_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_376<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 114, 107, 105, 116, 97, 112, 112, 115] => lookup_376_0(acc),
            [98, 97, 114, 115, 121] => lookup_376_1(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_376_2(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_376_3(acc),
            [100, 111, 103, 97, 100, 111] => lookup_376_4(info, labels, acc),
            [115, 112, 100, 110, 115] => lookup_376_5(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_376_6(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_377() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_378_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_378_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_378<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 114, 116, 121] => lookup_378_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_379_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_379_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_379<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_379_0(acc),
            [107, 111, 111, 98, 105, 110] => lookup_379_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_380() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_381() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_382() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_383() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_385() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_386() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_388() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_389() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_390() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_391() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_392_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_392<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 106] => lookup_392_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_393() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_394() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_395() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_396() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_397() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_398() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_399() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_400_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_400_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_400_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_400_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [102, 105] => lookup_400_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_400_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_400_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_400_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_400_3_0(acc),
            [112, 97, 97, 115] => lookup_400_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_400_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_400_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_400_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_400_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_400_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_400_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_400<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 107, 111, 116, 105, 115, 105, 118, 117] => lookup_400_0(acc),
            [97, 108, 97, 110, 100] => lookup_400_1(acc),
            [99, 108, 111, 117, 100, 112, 108, 97, 116, 102, 111, 114, 109] => {
                lookup_400_2(info, labels, acc)
            }
            [100, 97, 116, 97, 99, 101, 110, 116, 101, 114] => lookup_400_3(info, labels, acc),
            [100, 121] => lookup_400_4(acc),
            [104, 195, 164, 107, 107, 105, 110, 101, 110] => lookup_400_5(acc),
            [105, 107, 105] => lookup_400_6(acc),
            [107, 97, 112, 115, 105] => lookup_400_7(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_400_8(acc),
            [120, 110, 45, 45, 104, 107, 107, 105, 110, 101, 110, 45, 53, 119, 97] => {
                lookup_400_9(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_401() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_403() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_404() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_405() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_406<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_406_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_407() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_408() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_409() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_411() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_412() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_413() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_414_0(acc),
            [98, 105, 122] => lookup_414_1(acc),
            [99, 111, 109] => lookup_414_2(acc),
            [103, 111, 118] => lookup_414_3(acc),
            [105, 110, 102, 111] => lookup_414_4(acc),
            [109, 105, 108] => lookup_414_5(acc),
            [110, 97, 109, 101] => lookup_414_6(acc),
            [110, 101, 116] => lookup_414_7(acc),
            [111, 114, 103] => lookup_414_8(acc),
            [112, 114, 111] => lookup_414_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_415_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_415<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_415_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_416() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_418() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_419() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_420() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_422_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_422_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_422_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_422<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_422_0(acc),
            [101, 100, 117] => lookup_422_1(acc),
            [110, 101, 116] => lookup_422_2(acc),
            [111, 114, 103] => lookup_422_3(acc),
            [114, 97, 100, 105, 111] => lookup_422_4(acc),
            [117, 115, 101, 114] => lookup_422_5(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_423() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_424() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_426() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_427() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_428() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_429() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_431() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_432() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 31usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 115, 105, 116, 101, 119, 101, 98] => lookup_433_0(acc),
            [97, 101, 114, 111, 112, 111, 114, 116] => lookup_433_1(acc),
            [97, 115, 115, 111] => lookup_433_2(acc),
            [97, 118, 111, 99, 97, 116] => lookup_433_3(acc),
            [97, 118, 111, 117, 101, 115] => lookup_433_4(acc),
            [99, 99, 105] => lookup_433_5(acc),
            [99, 104, 97, 109, 98, 97, 103, 114, 105] => lookup_433_6(acc),
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115] => {
                lookup_433_7(acc)
            }
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115, 45, 101, 110, 45, 102, 114, 97, 110, 99, 101] => {
                lookup_433_8(acc)
            }
            [99, 111, 109] => lookup_433_9(acc),
            [100, 101, 100, 105, 98, 111, 120] => lookup_433_10(acc),
            [101, 110, 45, 114, 111, 111, 116] => lookup_433_11(acc),
            [101, 120, 112, 101, 114, 116, 115, 45, 99, 111, 109, 112, 116, 97, 98, 108, 101, 115] => {
                lookup_433_12(acc)
            }
            [102, 98, 120, 45, 111, 115] => lookup_433_13(acc),
            [102, 98, 120, 111, 115] => lookup_433_14(acc),
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_433_15(acc),
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_433_16(acc),
            [103, 111, 117, 112, 105, 108, 101] => lookup_433_17(acc),
            [103, 111, 117, 118] => lookup_433_18(acc),
            [103, 114, 101, 116, 97] => lookup_433_19(acc),
            [104, 117, 105, 115, 115, 105, 101, 114, 45, 106, 117, 115, 116, 105, 99, 101] => {
                lookup_433_20(acc)
            }
            [109, 101, 100, 101, 99, 105, 110] => lookup_433_21(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_433_22(acc),
            [110, 111, 109] => lookup_433_23(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_433_24(acc),
            [111, 110, 45, 119, 101, 98] => lookup_433_25(acc),
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110] => lookup_433_26(acc),
            [112, 111, 114, 116] => lookup_433_27(acc),
            [112, 114, 100] => lookup_433_28(acc),
            [116, 109] => lookup_433_29(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_433_30(acc),
            [121, 110, 104] => lookup_433_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_434() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_435() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_437() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_438() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_439() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_440() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_441() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_442() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_443() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_444() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_447() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_448() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_449() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_452_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_452_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_452<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 108, 101, 121] => lookup_452_0(acc),
            [115, 104, 101, 101, 122, 121] => lookup_452_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_453() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_454() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_455<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_455_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_456() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_457() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_458_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_458_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_458<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_458_0(acc),
            [103, 111, 118] => lookup_458_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_459_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_459<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 110, 112, 121] => lookup_459_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_460_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_460_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_460_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_460_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_460_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_460_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_460_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_460<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_460_0(acc),
            [101, 100, 117] => lookup_460_1(acc),
            [103, 111, 118] => lookup_460_2(acc),
            [110, 101, 116] => lookup_460_3(acc),
            [111, 114, 103] => lookup_460_4(acc),
            [112, 118, 116] => lookup_460_5(acc),
            [115, 99, 104, 111, 111, 108] => lookup_460_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_461() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_463() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_464() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_466_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_466_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_466_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_466_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_466_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_466_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_466_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 101, 109, 111, 110] => lookup_466_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_466_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_466<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 111, 116, 100, 97, 115, 104] => lookup_466_0(acc),
            [99, 111] => lookup_466_1(acc),
            [107, 97, 97, 115] => lookup_466_2(acc),
            [110, 101, 116] => lookup_466_3(acc),
            [111, 114, 103] => lookup_466_4(acc),
            [112, 97, 110, 101, 108] => lookup_466_5(labels, acc),
            [115, 116, 97, 99, 107, 105, 116] => lookup_466_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_467() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_468_0(acc),
            [101, 100, 117] => lookup_468_1(acc),
            [103, 111, 118] => lookup_468_2(acc),
            [109, 105, 108] => lookup_468_3(acc),
            [111, 114, 103] => lookup_468_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_469_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_469_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_469_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_469_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_469_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_469_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_469<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_469_0(acc),
            [101, 100, 117] => lookup_469_1(acc),
            [103, 111, 118] => lookup_469_2(acc),
            [108, 116, 100] => lookup_469_3(acc),
            [109, 111, 100] => lookup_469_4(acc),
            [111, 114, 103] => lookup_469_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_470() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_472() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_474_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_474_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_474_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_474_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_474_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_474_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_474<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_474_0(acc),
            [99, 111] => lookup_474_1(acc),
            [99, 111, 109] => lookup_474_2(acc),
            [101, 100, 117] => lookup_474_3(acc),
            [110, 101, 116] => lookup_474_4(acc),
            [111, 114, 103] => lookup_474_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_475() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_476() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_477() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_479() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_481() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_483() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_484_0(acc),
            [99, 111, 109] => lookup_484_1(acc),
            [101, 100, 117] => lookup_484_2(acc),
            [103, 111, 118] => lookup_484_3(acc),
            [110, 101, 116] => lookup_484_4(acc),
            [111, 114, 103] => lookup_484_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_485() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_486() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_488() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_489() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_490() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_491_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_491_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_491_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_491_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_491_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_491<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_491_0(acc),
            [116, 114, 97, 110, 115, 108, 97, 116, 101] => lookup_491_1(acc),
            [117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_491_2(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_492() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_493() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_495() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_496_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_496_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_496_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_496_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_496_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_496_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_496<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_496_0(acc),
            [99, 111, 109] => lookup_496_1(acc),
            [101, 100, 117] => lookup_496_2(acc),
            [109, 111, 98, 105] => lookup_496_3(acc),
            [110, 101, 116] => lookup_496_4(acc),
            [111, 114, 103] => lookup_496_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_497() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_498_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_498_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_498_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_498_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_498_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_498_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_498_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_498<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_498_0(acc),
            [99, 111, 109] => lookup_498_1(acc),
            [101, 100, 117] => lookup_498_2(acc),
            [103, 111, 118] => lookup_498_3(acc),
            [110, 101, 116] => lookup_498_4(acc),
            [111, 114, 103] => lookup_498_5(acc),
            [115, 105, 109, 112, 108, 101, 115, 105, 116, 101] => lookup_498_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_499() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_500() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_504() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_505_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_505<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_505_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_506() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_507_0(acc),
            [101, 100, 117] => lookup_507_1(acc),
            [103, 111, 98] => lookup_507_2(acc),
            [105, 110, 100] => lookup_507_3(acc),
            [109, 105, 108] => lookup_507_4(acc),
            [110, 101, 116] => lookup_507_5(acc),
            [111, 114, 103] => lookup_507_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_508_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_508_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_508_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_508_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_508_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_508_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_508_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_508_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_508<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_508_0(acc),
            [101, 100, 117] => lookup_508_1(acc),
            [103, 111, 118] => lookup_508_2(acc),
            [103, 117, 97, 109] => lookup_508_3(acc),
            [105, 110, 102, 111] => lookup_508_4(acc),
            [110, 101, 116] => lookup_508_5(acc),
            [111, 114, 103] => lookup_508_6(acc),
            [119, 101, 98] => lookup_508_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_509() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_510() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_512() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_513() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_515_0(acc),
            [99, 111, 109] => lookup_515_1(acc),
            [101, 100, 117] => lookup_515_2(acc),
            [103, 111, 118] => lookup_515_3(acc),
            [110, 101, 116] => lookup_515_4(acc),
            [111, 114, 103] => lookup_515_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_516() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_518() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_519() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_520() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_521() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_523_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_523<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 114, 97] => lookup_523_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_524() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_525() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_527() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_528() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_529() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_530() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_531() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_532() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_533_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_533_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_533_0(acc),
            [101, 100, 117] => lookup_533_1(acc),
            [103, 111, 118] => lookup_533_2(acc),
            [105, 100, 118] => lookup_533_3(acc),
            [105, 110, 99] => lookup_533_4(acc),
            [108, 116, 100] => lookup_533_5(acc),
            [110, 101, 116] => lookup_533_6(acc),
            [111, 114, 103] => lookup_533_7(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_533_8(acc),
            [120, 110, 45, 45, 99, 105, 113, 112, 110] => lookup_533_9(acc),
            [120, 110, 45, 45, 103, 109, 113, 48, 53, 48, 105] => lookup_533_10(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_533_11(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_533_12(acc),
            [120, 110, 45, 45, 108, 99, 118, 114, 51, 50, 100] => lookup_533_13(acc),
            [120, 110, 45, 45, 109, 107, 48, 97, 120, 105] => lookup_533_14(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_533_15(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_533_16(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 113, 51, 98] => lookup_533_17(acc),
            [120, 110, 45, 45, 116, 110, 48, 97, 103] => lookup_533_18(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_533_19(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 121, 52, 97] => lookup_533_20(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_533_21(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 118, 120] => lookup_533_22(acc),
            [228, 184, 170, 228, 186, 186] => lookup_533_23(acc),
            [229, 128, 139, 228, 186, 186] => lookup_533_24(acc),
            [229, 133, 172, 229, 143, 184] => lookup_533_25(acc),
            [230, 148, 191, 229, 186, 156] => lookup_533_26(acc),
            [230, 149, 142, 232, 130, 178] => lookup_533_27(acc),
            [230, 149, 153, 232, 130, 178] => lookup_533_28(acc),
            [231, 174, 135, 228, 186, 186] => lookup_533_29(acc),
            [231, 181, 132, 231, 185, 148] => lookup_533_30(acc),
            [231, 181, 132, 231, 187, 135] => lookup_533_31(acc),
            [231, 182, 178, 231, 181, 161] => lookup_533_32(acc),
            [231, 182, 178, 231, 187, 156] => lookup_533_33(acc),
            [231, 187, 132, 231, 185, 148] => lookup_533_34(acc),
            [231, 187, 132, 231, 187, 135] => lookup_533_35(acc),
            [231, 189, 145, 231, 181, 161] => lookup_533_36(acc),
            [231, 189, 145, 231, 187, 156] => lookup_533_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_534() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_535() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_536_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_536_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_536_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_536_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_536_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_536_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_536<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_536_0(acc),
            [101, 100, 117] => lookup_536_1(acc),
            [103, 111, 98] => lookup_536_2(acc),
            [109, 105, 108] => lookup_536_3(acc),
            [110, 101, 116] => lookup_536_4(acc),
            [111, 114, 103] => lookup_536_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_537() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_538() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_541() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_542() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_545() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_547_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_547_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_547_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_547_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_547_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_547_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_547_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_547_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_547_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_547_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_547_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_547<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_547_0(acc),
            [101, 97, 115, 121, 112, 97, 110, 101, 108] => lookup_547_1(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_547_2(acc),
            [102, 114, 101, 101, 115, 105, 116, 101] => lookup_547_3(acc),
            [104, 97, 108, 102] => lookup_547_4(acc),
            [106, 101, 108, 101] => lookup_547_5(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_547_6(acc),
            [109, 121, 102, 97, 115, 116] => lookup_547_7(acc),
            [116, 101, 109, 112, 117, 114, 108] => lookup_547_8(acc),
            [119, 112, 50] => lookup_547_9(acc),
            [119, 112, 109, 117, 100, 101, 118] => lookup_547_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_548_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_548<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110, 99, 114, 97, 102, 116] => lookup_548_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_549() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_551() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_552() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_554_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 104, 111, 112] => lookup_554_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_554_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 114, 101, 110, 100, 108, 121] => lookup_554_0(info, labels, acc),
            [99, 111, 109] => lookup_554_1(acc),
            [102, 114, 111, 109] => lookup_554_2(acc),
            [105, 122] => lookup_554_3(acc),
            [110, 97, 109, 101] => lookup_554_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_555() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_556_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 117, 108, 116] => lookup_556_0(acc),
            [97, 114, 116] => lookup_556_1(acc),
            [97, 115, 115, 111] => lookup_556_2(acc),
            [99, 111, 109] => lookup_556_3(acc),
            [99, 111, 111, 112] => lookup_556_4(acc),
            [101, 100, 117] => lookup_556_5(acc),
            [102, 105, 114, 109] => lookup_556_6(acc),
            [103, 111, 117, 118] => lookup_556_7(acc),
            [105, 110, 102, 111] => lookup_556_8(acc),
            [109, 101, 100] => lookup_556_9(acc),
            [110, 101, 116] => lookup_556_10(acc),
            [111, 114, 103] => lookup_556_11(acc),
            [112, 101, 114, 115, 111] => lookup_556_12(acc),
            [112, 111, 108] => lookup_556_13(acc),
            [112, 114, 111] => lookup_556_14(acc),
            [114, 101, 108] => lookup_556_15(acc),
            [114, 116] => lookup_556_16(acc),
            [115, 104, 111, 112] => lookup_556_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_557_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [50, 48, 48, 48] => lookup_557_0(acc),
            [97, 103, 114, 97, 114] => lookup_557_1(acc),
            [98, 111, 108, 116] => lookup_557_2(acc),
            [99, 97, 115, 105, 110, 111] => lookup_557_3(acc),
            [99, 105, 116, 121] => lookup_557_4(acc),
            [99, 111] => lookup_557_5(acc),
            [101, 114, 111, 116, 105, 99, 97] => lookup_557_6(acc),
            [101, 114, 111, 116, 105, 107, 97] => lookup_557_7(acc),
            [102, 105, 108, 109] => lookup_557_8(acc),
            [102, 111, 114, 117, 109] => lookup_557_9(acc),
            [103, 97, 109, 101, 115] => lookup_557_10(acc),
            [104, 111, 116, 101, 108] => lookup_557_11(acc),
            [105, 110, 102, 111] => lookup_557_12(acc),
            [105, 110, 103, 97, 116, 108, 97, 110] => lookup_557_13(acc),
            [106, 111, 103, 97, 115, 122] => lookup_557_14(acc),
            [107, 111, 110, 121, 118, 101, 108, 111] => lookup_557_15(acc),
            [108, 97, 107, 97, 115] => lookup_557_16(acc),
            [109, 101, 100, 105, 97] => lookup_557_17(acc),
            [110, 101, 119, 115] => lookup_557_18(acc),
            [111, 114, 103] => lookup_557_19(acc),
            [112, 114, 105, 118] => lookup_557_20(acc),
            [114, 101, 107, 108, 97, 109] => lookup_557_21(acc),
            [115, 101, 120] => lookup_557_22(acc),
            [115, 104, 111, 112] => lookup_557_23(acc),
            [115, 112, 111, 114, 116] => lookup_557_24(acc),
            [115, 117, 108, 105] => lookup_557_25(acc),
            [115, 122, 101, 120] => lookup_557_26(acc),
            [116, 109] => lookup_557_27(acc),
            [116, 111, 122, 115, 100, 101] => lookup_557_28(acc),
            [117, 116, 97, 122, 97, 115] => lookup_557_29(acc),
            [118, 105, 100, 101, 111] => lookup_557_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_558() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_559() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_562() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_563() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_564() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_565_0(acc),
            [98, 105, 122] => lookup_565_1(acc),
            [99, 111] => lookup_565_2(acc),
            [100, 101, 115, 97] => lookup_565_3(acc),
            [103, 111] => lookup_565_4(acc),
            [109, 105, 108] => lookup_565_5(acc),
            [109, 121] => lookup_565_6(acc),
            [110, 101, 116] => lookup_565_7(acc),
            [111, 114] => lookup_565_8(acc),
            [112, 111, 110, 112, 101, 115] => lookup_565_9(acc),
            [115, 99, 104] => lookup_565_10(acc),
            [119, 101, 98] => lookup_565_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_566_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_566_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_566<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_566_0(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_566_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_567() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_570_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_570_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_570_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 116, 97, 98, 105, 116] => lookup_570_1_0(acc),
            [114, 97, 118, 112, 97, 103, 101] => lookup_570_1_1(acc),
            [116, 97, 98, 105, 116, 111, 114, 100, 101, 114] => lookup_570_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_570_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_570_0(acc),
            [99, 111] => lookup_570_1(labels, acc),
            [103, 111, 118] => lookup_570_2(acc),
            [105, 100, 102] => lookup_570_3(acc),
            [107, 49, 50] => lookup_570_4(acc),
            [109, 117, 110, 105] => lookup_570_5(acc),
            [110, 101, 116] => lookup_570_6(acc),
            [111, 114, 103] => lookup_570_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_571_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_571_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_571_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_571_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 116, 100] => lookup_571_1_0(acc),
            [112, 108, 99] => lookup_571_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_571_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_571_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_571_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_571_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_571_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_571<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_571_0(acc),
            [99, 111] => lookup_571_1(labels, acc),
            [99, 111, 109] => lookup_571_2(acc),
            [110, 101, 116] => lookup_571_3(acc),
            [111, 114, 103] => lookup_571_4(acc),
            [116, 116] => lookup_571_5(acc),
            [116, 118] => lookup_571_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_572() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_574() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_576_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_576_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_576_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_576<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [53, 103] => lookup_576_0(acc),
            [54, 103] => lookup_576_1(acc),
            [97, 99] => lookup_576_2(acc),
            [97, 105] => lookup_576_3(acc),
            [97, 109] => lookup_576_4(acc),
            [98, 97, 114, 115, 121] => lookup_576_5(acc),
            [98, 105, 104, 97, 114] => lookup_576_6(acc),
            [98, 105, 122] => lookup_576_7(acc),
            [98, 117, 115, 105, 110, 101, 115, 115] => lookup_576_8(acc),
            [99, 97] => lookup_576_9(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_576_10(acc),
            [99, 110] => lookup_576_11(acc),
            [99, 111] => lookup_576_12(acc),
            [99, 111, 109] => lookup_576_13(acc),
            [99, 111, 111, 112] => lookup_576_14(acc),
            [99, 115] => lookup_576_15(acc),
            [100, 101, 108, 104, 105] => lookup_576_16(acc),
            [100, 114] => lookup_576_17(acc),
            [101, 100, 117] => lookup_576_18(acc),
            [101, 114] => lookup_576_19(acc),
            [102, 105, 114, 109] => lookup_576_20(acc),
            [103, 101, 110] => lookup_576_21(acc),
            [103, 111, 118] => lookup_576_22(acc),
            [103, 117, 106, 97, 114, 97, 116] => lookup_576_23(acc),
            [105, 110, 100] => lookup_576_24(acc),
            [105, 110, 102, 111] => lookup_576_25(acc),
            [105, 110, 116] => lookup_576_26(acc),
            [105, 110, 116, 101, 114, 110, 101, 116] => lookup_576_27(acc),
            [105, 111] => lookup_576_28(acc),
            [109, 101] => lookup_576_29(acc),
            [109, 105, 108] => lookup_576_30(acc),
            [110, 101, 116] => lookup_576_31(acc),
            [110, 105, 99] => lookup_576_32(acc),
            [111, 114, 103] => lookup_576_33(acc),
            [112, 103] => lookup_576_34(acc),
            [112, 111, 115, 116] => lookup_576_35(acc),
            [112, 114, 111] => lookup_576_36(acc),
            [114, 101, 115] => lookup_576_37(acc),
            [115, 117, 112, 97, 98, 97, 115, 101] => lookup_576_38(acc),
            [116, 114, 97, 118, 101, 108] => lookup_576_39(acc),
            [116, 118] => lookup_576_40(acc),
            [117, 107] => lookup_576_41(acc),
            [117, 112] => lookup_576_42(acc),
            [117, 115] => lookup_576_43(acc),
            [119, 101, 98] => lookup_576_44(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_577() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_579() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 114, 101, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_580_0(acc)
            }
            [98, 97, 114, 114, 101, 108, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_580_1(acc)
            }
            [98, 97, 114, 115, 121] => lookup_580_2(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_580_3(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101] => lookup_580_4(acc),
            [100, 118, 114, 99, 97, 109] => lookup_580_5(acc),
            [100, 121, 110, 97, 109, 105, 99, 45, 100, 110, 115] => lookup_580_6(acc),
            [100, 121, 110, 100, 110, 115] => lookup_580_7(acc),
            [102, 111, 114, 45, 111, 117, 114] => lookup_580_8(acc),
            [102, 111, 114, 117, 109, 122] => lookup_580_9(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 101] => lookup_580_10(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 105, 115] => lookup_580_11(acc),
            [104, 101, 114, 101, 45, 102, 111, 114, 45, 109, 111, 114, 101] => lookup_580_12(acc),
            [105, 108, 111, 118, 101, 99, 111, 108, 108, 101, 103, 101] => lookup_580_13(acc),
            [107, 110, 111, 119, 115, 105, 116, 97, 108, 108] => lookup_580_14(acc),
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_580_15(acc),
            [109, 105, 116, 116, 119, 97, 108, 100] => lookup_580_16(acc),
            [109, 105, 116, 116, 119, 97, 108, 100, 115, 101, 114, 118, 101, 114] => {
                lookup_580_17(acc)
            }
            [110, 111, 45, 105, 112] => lookup_580_18(acc),
            [110, 115, 117, 112, 100, 97, 116, 101] => lookup_580_19(acc),
            [115, 101, 108, 102, 105, 112] => lookup_580_20(acc),
            [116, 121, 112, 111, 51, 115, 101, 114, 118, 101, 114] => lookup_580_21(acc),
            [118, 45, 105, 110, 102, 111] => lookup_580_22(acc),
            [119, 101, 98, 104, 111, 112] => lookup_580_23(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_581() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_582() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_583() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_584() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_585() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_586_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_587() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_588() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_589() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_590_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_590_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_590_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 101, 107, 100, 49] => lookup_590_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 107, 48] => lookup_590_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_13_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_13_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 1usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_590_13_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_590_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [115] => lookup_590_13_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110, 100, 110, 115] => lookup_590_19_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_27<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_590_27_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_36<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_590_36_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_41_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_41<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_590_41_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_590_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590_46_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_46_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_46_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_46_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_46_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_46_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_46_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_46<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112] => lookup_590_46_0(acc),
            [97, 117] => lookup_590_46_1(acc),
            [101, 117] => lookup_590_46_2(acc),
            [105, 110] => lookup_590_46_3(acc),
            [106, 112] => lookup_590_46_4(acc),
            [115, 97] => lookup_590_46_5(acc),
            [117, 115] => lookup_590_46_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_47_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_47<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 101] => lookup_590_47_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590_49_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_49<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_590_49_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_590_50_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_50<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_590_50_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_590_51_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_51<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_590_51_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_590_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 111, 99, 107] => lookup_590_55_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_56_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_56_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_590_56_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_590_56<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 121, 115] => lookup_590_56_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_58<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 105, 116, 101] => lookup_590_58_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_61_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_61<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118, 105, 99, 101, 115] => lookup_590_61_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_63<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 105, 101, 110, 116] => lookup_590_63_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_65_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_65<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_590_65_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_590_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_67_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_67_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_67_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_590_67_0_0(acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_590_67_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_67_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_67_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_67_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_590_67_1_0(acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_590_67_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_67_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_67_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_590_67_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_67_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_67_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_67_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_590_67_3_0(acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_590_67_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_67<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_590_67_0(info, labels, acc),
            [100, 105, 115, 114, 101, 99] => lookup_590_67_1(info, labels, acc),
            [112, 114, 111, 100] => lookup_590_67_2(info, labels, acc),
            [116, 101, 115, 116, 105, 110, 103] => lookup_590_67_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_590_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_590<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [50, 48, 51, 56] => lookup_590_0(acc),
            [97, 112, 105, 103, 101, 101] => lookup_590_1(acc),
            [97, 122, 117, 114, 101, 99, 111, 110, 116, 97, 105, 110, 101, 114] => {
                lookup_590_2(info, labels, acc)
            }
            [98, 45, 100, 97, 116, 97] => lookup_590_3(acc),
            [98, 97, 114, 115, 121] => lookup_590_4(acc),
            [98, 97, 115, 105, 99, 115, 101, 114, 118, 101, 114] => lookup_590_5(acc),
            [98, 101, 97, 103, 108, 101, 98, 111, 97, 114, 100] => lookup_590_6(acc),
            [98, 101, 101, 98, 121, 116, 101] => lookup_590_7(info, labels, acc),
            [98, 101, 101, 98, 121, 116, 101, 97, 112, 112] => lookup_590_8(info, labels, acc),
            [98, 105, 103, 118] => lookup_590_9(info, labels, acc),
            [98, 105, 116, 98, 117, 99, 107, 101, 116] => lookup_590_10(acc),
            [98, 108, 117, 101, 98, 105, 116, 101] => lookup_590_11(acc),
            [98, 111, 120, 102, 117, 115, 101] => lookup_590_12(acc),
            [98, 114, 97, 118, 101] => lookup_590_13(info, labels, acc),
            [98, 114, 111, 119, 115, 101, 114, 115, 97, 102, 101, 116, 121, 109, 97, 114, 107] => {
                lookup_590_14(acc)
            }
            [99, 108, 101, 118, 101, 114, 97, 112, 112, 115] => lookup_590_15(acc),
            [99, 108, 111, 117, 100, 98, 101, 101, 115, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_590_16(acc)
            }
            [99, 111] => lookup_590_17(acc),
            [99, 111, 109] => lookup_590_18(acc),
            [100, 97, 112, 112, 110, 111, 100, 101] => lookup_590_19(info, labels, acc),
            [100, 97, 114, 107, 108, 97, 110, 103] => lookup_590_20(acc),
            [100, 101, 100, 121, 110] => lookup_590_21(acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_590_22(acc),
            [101, 100, 105, 116, 111, 114, 120] => lookup_590_23(acc),
            [101, 100, 117] => lookup_590_24(acc),
            [101, 100, 117, 103, 105, 116] => lookup_590_25(acc),
            [102, 104, 45, 109, 117, 101, 110, 115, 116, 101, 114] => lookup_590_26(acc),
            [102, 111, 114, 103, 101, 114, 111, 99, 107] => lookup_590_27(info, labels, acc),
            [103, 105, 116, 104, 117, 98] => lookup_590_28(acc),
            [103, 105, 116, 108, 97, 98] => lookup_590_29(acc),
            [103, 111, 118] => lookup_590_30(acc),
            [104, 97, 115, 117, 114, 97, 45, 97, 112, 112] => lookup_590_31(acc),
            [104, 111, 115, 116, 121, 104, 111, 115, 116, 105, 110, 103] => lookup_590_32(acc),
            [104, 121, 112, 101, 114, 110, 111, 100, 101] => lookup_590_33(acc),
            [104, 122, 99] => lookup_590_34(acc),
            [106, 101, 108, 101] => lookup_590_35(acc),
            [108, 97, 105, 114] => lookup_590_36(info, labels, acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_590_37(acc),
            [108, 111, 108, 105, 112, 111, 112] => lookup_590_38(acc),
            [109, 105, 108] => lookup_590_39(acc),
            [109, 111, 45, 115, 105, 101, 109, 101, 110, 115] => lookup_590_40(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_590_41(info, labels, acc),
            [109, 117, 115, 105, 99, 105, 97, 110] => lookup_590_42(acc),
            [109, 121, 97, 100, 100, 114] => lookup_590_43(acc),
            [109, 121, 114, 100, 98, 120] => lookup_590_44(acc),
            [110, 101, 116] => lookup_590_45(acc),
            [110, 103, 114, 111, 107] => lookup_590_46(labels, acc),
            [110, 111, 100, 101, 97, 114, 116] => lookup_590_47(info, labels, acc),
            [110, 111, 109] => lookup_590_48(acc),
            [111, 110, 45, 97, 99, 111, 114, 110] => lookup_590_49(info, labels, acc),
            [111, 110, 45, 107, 51, 115] => lookup_590_50(info, labels, acc),
            [111, 110, 45, 114, 105, 111] => lookup_590_51(info, labels, acc),
            [111, 114, 103] => lookup_590_52(acc),
            [112, 97, 110, 116, 104, 101, 111, 110, 115, 105, 116, 101] => lookup_590_53(acc),
            [112, 114, 111, 116, 111, 110, 101, 116] => lookup_590_54(acc),
            [112, 115, 116, 109, 110] => lookup_590_55(labels, acc),
            [113, 99, 120] => lookup_590_56(labels, acc),
            [113, 111, 116, 111] => lookup_590_57(acc),
            [114, 98, 45, 104, 111, 115, 116, 105, 110, 103] => lookup_590_58(info, labels, acc),
            [114, 101, 97, 100, 116, 104, 101, 100, 111, 99, 115] => lookup_590_59(acc),
            [114, 101, 115, 105, 110, 100, 101, 118, 105, 99, 101] => lookup_590_60(acc),
            [114, 101, 115, 105, 110, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_590_61(info, labels, acc)
            }
            [115, 97, 110, 100, 99, 97, 116, 115] => lookup_590_62(acc),
            [115, 99, 114, 121, 112, 116, 101, 100] => lookup_590_63(info, labels, acc),
            [115, 104, 119] => lookup_590_64(acc),
            [115, 116, 111, 108, 111, 115] => lookup_590_65(info, labels, acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_590_66(acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116] => lookup_590_67(info, labels, acc),
            [116, 105, 99, 107, 101, 116, 115] => lookup_590_68(acc),
            [117, 116, 119, 101, 110, 116, 101] => lookup_590_69(acc),
            [118, 97, 112, 111, 114, 99, 108, 111, 117, 100] => lookup_590_70(acc),
            [118, 105, 114, 116, 117, 97, 108, 115, 101, 114, 118, 101, 114] => lookup_590_71(acc),
            [119, 101, 98, 102, 108, 111, 119] => lookup_590_72(acc),
            [119, 101, 98, 102, 108, 111, 119, 116, 101, 115, 116] => lookup_590_73(acc),
            [119, 101, 98, 116, 104, 105, 110, 103, 115] => lookup_590_74(acc),
            [119, 105, 120, 115, 116, 117, 100, 105, 111] => lookup_590_75(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_591() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_592_0(acc),
            [101, 100, 117] => lookup_592_1(acc),
            [103, 111, 118] => lookup_592_2(acc),
            [109, 105, 108] => lookup_592_3(acc),
            [110, 101, 116] => lookup_592_4(acc),
            [111, 114, 103] => lookup_592_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_593_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_593_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_593_0(acc),
            [97, 114, 118, 97, 110, 101, 100, 103, 101] => lookup_593_1(acc),
            [99, 111] => lookup_593_2(acc),
            [103, 111, 118] => lookup_593_3(acc),
            [105, 100] => lookup_593_4(acc),
            [110, 101, 116] => lookup_593_5(acc),
            [111, 114, 103] => lookup_593_6(acc),
            [115, 99, 104] => lookup_593_7(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_593_8(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_593_9(acc),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_593_10(acc),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_593_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_595() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_596() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_598() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_219_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599_219<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99] => lookup_599_219_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_599_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_434(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_435(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 104, 111, 109, 101, 112, 97, 103, 101] => lookup_599_0(acc),
            [49, 50, 99, 104, 97, 114, 115] => lookup_599_1(acc),
            [49, 54, 45, 98] => lookup_599_2(acc),
            [51, 50, 45, 98] => lookup_599_3(acc),
            [54, 52, 45, 98] => lookup_599_4(acc),
            [97, 98, 114] => lookup_599_5(acc),
            [97, 98, 114, 117, 122, 122, 111] => lookup_599_6(acc),
            [97, 103] => lookup_599_7(acc),
            [97, 103, 114, 105, 103, 101, 110, 116, 111] => lookup_599_8(acc),
            [97, 108] => lookup_599_9(acc),
            [97, 108, 101, 115, 115, 97, 110, 100, 114, 105, 97] => lookup_599_10(acc),
            [97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => lookup_599_11(acc),
            [97, 108, 116, 111, 97, 100, 105, 103, 101] => lookup_599_12(acc),
            [97, 110] => lookup_599_13(acc),
            [97, 110, 99, 111, 110, 97] => lookup_599_14(acc),
            [97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105] => {
                lookup_599_15(acc)
            }
            [97, 110, 100, 114, 105, 97, 45, 116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_599_16(acc)
            }
            [97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105] => {
                lookup_599_17(acc)
            }
            [97, 110, 100, 114, 105, 97, 116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_599_18(acc)
            }
            [97, 111] => lookup_599_19(acc),
            [97, 111, 115, 116, 97] => lookup_599_20(acc),
            [97, 111, 115, 116, 97, 45, 118, 97, 108, 108, 101, 121] => lookup_599_21(acc),
            [97, 111, 115, 116, 97, 118, 97, 108, 108, 101, 121] => lookup_599_22(acc),
            [97, 111, 115, 116, 101] => lookup_599_23(acc),
            [97, 112] => lookup_599_24(acc),
            [97, 113] => lookup_599_25(acc),
            [97, 113, 117, 105, 108, 97] => lookup_599_26(acc),
            [97, 114] => lookup_599_27(acc),
            [97, 114, 101, 122, 122, 111] => lookup_599_28(acc),
            [97, 115, 99, 111, 108, 105, 45, 112, 105, 99, 101, 110, 111] => lookup_599_29(acc),
            [97, 115, 99, 111, 108, 105, 112, 105, 99, 101, 110, 111] => lookup_599_30(acc),
            [97, 115, 116, 105] => lookup_599_31(acc),
            [97, 116] => lookup_599_32(acc),
            [97, 118] => lookup_599_33(acc),
            [97, 118, 101, 108, 108, 105, 110, 111] => lookup_599_34(acc),
            [98, 97] => lookup_599_35(acc),
            [98, 97, 108, 115, 97, 110] => lookup_599_36(acc),
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_599_37(acc)
            }
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_599_38(acc)
            }
            [98, 97, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_599_39(acc)
            }
            [98, 97, 114, 105] => lookup_599_40(acc),
            [98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_599_41(acc)
            }
            [98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97] => {
                lookup_599_42(acc)
            }
            [98, 97, 115] => lookup_599_43(acc),
            [98, 97, 115, 105, 108, 105, 99, 97, 116, 97] => lookup_599_44(acc),
            [98, 101, 108, 108, 117, 110, 111] => lookup_599_45(acc),
            [98, 101, 110, 101, 118, 101, 110, 116, 111] => lookup_599_46(acc),
            [98, 101, 114, 103, 97, 109, 111] => lookup_599_47(acc),
            [98, 103] => lookup_599_48(acc),
            [98, 105] => lookup_599_49(acc),
            [98, 105, 101, 108, 108, 97] => lookup_599_50(acc),
            [98, 108] => lookup_599_51(acc),
            [98, 110] => lookup_599_52(acc),
            [98, 111] => lookup_599_53(acc),
            [98, 111, 108, 111, 103, 110, 97] => lookup_599_54(acc),
            [98, 111, 108, 122, 97, 110, 111] => lookup_599_55(acc),
            [98, 111, 108, 122, 97, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_599_56(acc)
            }
            [98, 111, 122, 101, 110] => lookup_599_57(acc),
            [98, 111, 122, 101, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_599_58(acc)
            }
            [98, 111, 122, 101, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_599_59(acc)
            }
            [98, 111, 122, 101, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_599_60(acc)
            }
            [98, 114] => lookup_599_61(acc),
            [98, 114, 101, 115, 99, 105, 97] => lookup_599_62(acc),
            [98, 114, 105, 110, 100, 105, 115, 105] => lookup_599_63(acc),
            [98, 115] => lookup_599_64(acc),
            [98, 116] => lookup_599_65(acc),
            [98, 117, 108, 115, 97, 110] => lookup_599_66(acc),
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_599_67(acc)
            }
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_599_68(acc)
            }
            [98, 117, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_599_69(acc)
            }
            [98, 122] => lookup_599_70(acc),
            [99, 97] => lookup_599_71(acc),
            [99, 97, 103, 108, 105, 97, 114, 105] => lookup_599_72(acc),
            [99, 97, 108] => lookup_599_73(acc),
            [99, 97, 108, 97, 98, 114, 105, 97] => lookup_599_74(acc),
            [99, 97, 108, 116, 97, 110, 105, 115, 115, 101, 116, 116, 97] => lookup_599_75(acc),
            [99, 97, 109] => lookup_599_76(acc),
            [99, 97, 109, 112, 97, 110, 105, 97] => lookup_599_77(acc),
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 45, 109, 101, 100, 105, 111] => {
                lookup_599_78(acc)
            }
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 109, 101, 100, 105, 111] => {
                lookup_599_79(acc)
            }
            [99, 97, 109, 112, 111, 98, 97, 115, 115, 111] => lookup_599_80(acc),
            [99, 97, 114, 98, 111, 110, 105, 97, 45, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_599_81(acc)
            }
            [99, 97, 114, 98, 111, 110, 105, 97, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_599_82(acc)
            }
            [99, 97, 114, 114, 97, 114, 97, 45, 109, 97, 115, 115, 97] => lookup_599_83(acc),
            [99, 97, 114, 114, 97, 114, 97, 109, 97, 115, 115, 97] => lookup_599_84(acc),
            [99, 97, 115, 101, 114, 116, 97] => lookup_599_85(acc),
            [99, 97, 116, 97, 110, 105, 97] => lookup_599_86(acc),
            [99, 97, 116, 97, 110, 122, 97, 114, 111] => lookup_599_87(acc),
            [99, 98] => lookup_599_88(acc),
            [99, 101] => lookup_599_89(acc),
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 105] => lookup_599_90(acc),
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 195, 172] => lookup_599_91(acc),
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 105] => lookup_599_92(acc),
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 195, 172] => lookup_599_93(acc),
            [99, 104] => lookup_599_94(acc),
            [99, 104, 105, 101, 116, 105] => lookup_599_95(acc),
            [99, 105] => lookup_599_96(acc),
            [99, 108] => lookup_599_97(acc),
            [99, 110] => lookup_599_98(acc),
            [99, 111] => lookup_599_99(acc),
            [99, 111, 109, 111] => lookup_599_100(acc),
            [99, 111, 115, 101, 110, 122, 97] => lookup_599_101(acc),
            [99, 114] => lookup_599_102(acc),
            [99, 114, 101, 109, 111, 110, 97] => lookup_599_103(acc),
            [99, 114, 111, 116, 111, 110, 101] => lookup_599_104(acc),
            [99, 115] => lookup_599_105(acc),
            [99, 116] => lookup_599_106(acc),
            [99, 117, 110, 101, 111] => lookup_599_107(acc),
            [99, 122] => lookup_599_108(acc),
            [100, 101, 108, 108, 45, 111, 103, 108, 105, 97, 115, 116, 114, 97] => {
                lookup_599_109(acc)
            }
            [100, 101, 108, 108, 111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_599_110(acc),
            [101, 100, 117] => lookup_599_111(acc),
            [101, 109, 105, 108, 105, 97, 45, 114, 111, 109, 97, 103, 110, 97] => {
                lookup_599_112(acc)
            }
            [101, 109, 105, 108, 105, 97, 114, 111, 109, 97, 103, 110, 97] => lookup_599_113(acc),
            [101, 109, 114] => lookup_599_114(acc),
            [101, 110] => lookup_599_115(acc),
            [101, 110, 110, 97] => lookup_599_116(acc),
            [102, 99] => lookup_599_117(acc),
            [102, 101] => lookup_599_118(acc),
            [102, 101, 114, 109, 111] => lookup_599_119(acc),
            [102, 101, 114, 114, 97, 114, 97] => lookup_599_120(acc),
            [102, 103] => lookup_599_121(acc),
            [102, 105] => lookup_599_122(acc),
            [102, 105, 114, 101, 110, 122, 101] => lookup_599_123(acc),
            [102, 108, 111, 114, 101, 110, 99, 101] => lookup_599_124(acc),
            [102, 109] => lookup_599_125(acc),
            [102, 111, 103, 103, 105, 97] => lookup_599_126(acc),
            [102, 111, 114, 108, 105, 45, 99, 101, 115, 101, 110, 97] => lookup_599_127(acc),
            [102, 111, 114, 108, 105, 99, 101, 115, 101, 110, 97] => lookup_599_128(acc),
            [102, 111, 114, 108, 195, 172, 45, 99, 101, 115, 101, 110, 97] => lookup_599_129(acc),
            [102, 111, 114, 108, 195, 172, 99, 101, 115, 101, 110, 97] => lookup_599_130(acc),
            [102, 114] => lookup_599_131(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_599_132(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_599_133(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_599_134(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_599_135(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_599_136(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 103, 105, 117, 108, 105, 97] => {
                lookup_599_137(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_599_138(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_599_139(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_599_140(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_599_141(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_599_142(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 103, 105, 117, 108, 105, 97] => lookup_599_143(acc),
            [102, 114, 111, 115, 105, 110, 111, 110, 101] => lookup_599_144(acc),
            [102, 118, 103] => lookup_599_145(acc),
            [103, 101] => lookup_599_146(acc),
            [103, 101, 110, 111, 97] => lookup_599_147(acc),
            [103, 101, 110, 111, 118, 97] => lookup_599_148(acc),
            [103, 111] => lookup_599_149(acc),
            [103, 111, 114, 105, 122, 105, 97] => lookup_599_150(acc),
            [103, 111, 118] => lookup_599_151(acc),
            [103, 114] => lookup_599_152(acc),
            [103, 114, 111, 115, 115, 101, 116, 111] => lookup_599_153(acc),
            [105, 98, 120, 111, 115] => lookup_599_154(acc),
            [105, 103, 108, 101, 115, 105, 97, 115, 45, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_599_155(acc)
            }
            [105, 103, 108, 101, 115, 105, 97, 115, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_599_156(acc)
            }
            [105, 108, 105, 97, 100, 98, 111, 120, 111, 115] => lookup_599_157(acc),
            [105, 109] => lookup_599_158(acc),
            [105, 109, 112, 101, 114, 105, 97] => lookup_599_159(acc),
            [105, 115] => lookup_599_160(acc),
            [105, 115, 101, 114, 110, 105, 97] => lookup_599_161(acc),
            [107, 114] => lookup_599_162(acc),
            [108, 97, 45, 115, 112, 101, 122, 105, 97] => lookup_599_163(acc),
            [108, 97, 113, 117, 105, 108, 97] => lookup_599_164(acc),
            [108, 97, 115, 112, 101, 122, 105, 97] => lookup_599_165(acc),
            [108, 97, 116, 105, 110, 97] => lookup_599_166(acc),
            [108, 97, 122] => lookup_599_167(acc),
            [108, 97, 122, 105, 111] => lookup_599_168(acc),
            [108, 99] => lookup_599_169(acc),
            [108, 101] => lookup_599_170(acc),
            [108, 101, 99, 99, 101] => lookup_599_171(acc),
            [108, 101, 99, 99, 111] => lookup_599_172(acc),
            [108, 105] => lookup_599_173(acc),
            [108, 105, 103] => lookup_599_174(acc),
            [108, 105, 103, 117, 114, 105, 97] => lookup_599_175(acc),
            [108, 105, 118, 111, 114, 110, 111] => lookup_599_176(acc),
            [108, 111] => lookup_599_177(acc),
            [108, 111, 100, 105] => lookup_599_178(acc),
            [108, 111, 109] => lookup_599_179(acc),
            [108, 111, 109, 98, 97, 114, 100, 105, 97] => lookup_599_180(acc),
            [108, 111, 109, 98, 97, 114, 100, 121] => lookup_599_181(acc),
            [108, 116] => lookup_599_182(acc),
            [108, 117] => lookup_599_183(acc),
            [108, 117, 99, 97, 110, 105, 97] => lookup_599_184(acc),
            [108, 117, 99, 99, 97] => lookup_599_185(acc),
            [109, 97, 99, 101, 114, 97, 116, 97] => lookup_599_186(acc),
            [109, 97, 110, 116, 111, 118, 97] => lookup_599_187(acc),
            [109, 97, 114] => lookup_599_188(acc),
            [109, 97, 114, 99, 104, 101] => lookup_599_189(acc),
            [109, 97, 115, 115, 97, 45, 99, 97, 114, 114, 97, 114, 97] => lookup_599_190(acc),
            [109, 97, 115, 115, 97, 99, 97, 114, 114, 97, 114, 97] => lookup_599_191(acc),
            [109, 97, 116, 101, 114, 97] => lookup_599_192(acc),
            [109, 98] => lookup_599_193(acc),
            [109, 99] => lookup_599_194(acc),
            [109, 101] => lookup_599_195(acc),
            [109, 101, 100, 105, 111, 45, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_599_196(acc)
            }
            [109, 101, 100, 105, 111, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_599_197(acc)
            }
            [109, 101, 115, 115, 105, 110, 97] => lookup_599_198(acc),
            [109, 105] => lookup_599_199(acc),
            [109, 105, 108, 97, 110] => lookup_599_200(acc),
            [109, 105, 108, 97, 110, 111] => lookup_599_201(acc),
            [109, 110] => lookup_599_202(acc),
            [109, 111] => lookup_599_203(acc),
            [109, 111, 100, 101, 110, 97] => lookup_599_204(acc),
            [109, 111, 108] => lookup_599_205(acc),
            [109, 111, 108, 105, 115, 101] => lookup_599_206(acc),
            [109, 111, 110, 122, 97] => lookup_599_207(acc),
            [109, 111, 110, 122, 97, 45, 98, 114, 105, 97, 110, 122, 97] => lookup_599_208(acc),
            [109, 111, 110, 122, 97, 45, 101, 45, 100, 101, 108, 108, 97, 45, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_599_209(acc)
            }
            [109, 111, 110, 122, 97, 98, 114, 105, 97, 110, 122, 97] => lookup_599_210(acc),
            [109, 111, 110, 122, 97, 101, 98, 114, 105, 97, 110, 122, 97] => lookup_599_211(acc),
            [109, 111, 110, 122, 97, 101, 100, 101, 108, 108, 97, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_599_212(acc)
            }
            [109, 115] => lookup_599_213(acc),
            [109, 116] => lookup_599_214(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_599_215(acc),
            [110, 97] => lookup_599_216(acc),
            [110, 97, 112, 108, 101, 115] => lookup_599_217(acc),
            [110, 97, 112, 111, 108, 105] => lookup_599_218(acc),
            [110, 101, 101, 110] => lookup_599_219(info, labels, acc),
            [110, 111] => lookup_599_220(acc),
            [110, 111, 118, 97, 114, 97] => lookup_599_221(acc),
            [110, 117] => lookup_599_222(acc),
            [110, 117, 111, 114, 111] => lookup_599_223(acc),
            [111, 103] => lookup_599_224(acc),
            [111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_599_225(acc),
            [111, 108, 98, 105, 97, 45, 116, 101, 109, 112, 105, 111] => lookup_599_226(acc),
            [111, 108, 98, 105, 97, 116, 101, 109, 112, 105, 111] => lookup_599_227(acc),
            [111, 114] => lookup_599_228(acc),
            [111, 114, 105, 115, 116, 97, 110, 111] => lookup_599_229(acc),
            [111, 116] => lookup_599_230(acc),
            [112, 97] => lookup_599_231(acc),
            [112, 97, 100, 111, 118, 97] => lookup_599_232(acc),
            [112, 97, 100, 117, 97] => lookup_599_233(acc),
            [112, 97, 108, 101, 114, 109, 111] => lookup_599_234(acc),
            [112, 97, 114, 109, 97] => lookup_599_235(acc),
            [112, 97, 118, 105, 97] => lookup_599_236(acc),
            [112, 99] => lookup_599_237(acc),
            [112, 100] => lookup_599_238(acc),
            [112, 101] => lookup_599_239(acc),
            [112, 101, 114, 117, 103, 105, 97] => lookup_599_240(acc),
            [112, 101, 115, 97, 114, 111, 45, 117, 114, 98, 105, 110, 111] => lookup_599_241(acc),
            [112, 101, 115, 97, 114, 111, 117, 114, 98, 105, 110, 111] => lookup_599_242(acc),
            [112, 101, 115, 99, 97, 114, 97] => lookup_599_243(acc),
            [112, 103] => lookup_599_244(acc),
            [112, 105] => lookup_599_245(acc),
            [112, 105, 97, 99, 101, 110, 122, 97] => lookup_599_246(acc),
            [112, 105, 101, 100, 109, 111, 110, 116] => lookup_599_247(acc),
            [112, 105, 101, 109, 111, 110, 116, 101] => lookup_599_248(acc),
            [112, 105, 115, 97] => lookup_599_249(acc),
            [112, 105, 115, 116, 111, 105, 97] => lookup_599_250(acc),
            [112, 109, 110] => lookup_599_251(acc),
            [112, 110] => lookup_599_252(acc),
            [112, 111] => lookup_599_253(acc),
            [112, 111, 114, 100, 101, 110, 111, 110, 101] => lookup_599_254(acc),
            [112, 111, 116, 101, 110, 122, 97] => lookup_599_255(acc),
            [112, 114] => lookup_599_256(acc),
            [112, 114, 97, 116, 111] => lookup_599_257(acc),
            [112, 116] => lookup_599_258(acc),
            [112, 117] => lookup_599_259(acc),
            [112, 117, 103] => lookup_599_260(acc),
            [112, 117, 103, 108, 105, 97] => lookup_599_261(acc),
            [112, 118] => lookup_599_262(acc),
            [112, 122] => lookup_599_263(acc),
            [114, 97] => lookup_599_264(acc),
            [114, 97, 103, 117, 115, 97] => lookup_599_265(acc),
            [114, 97, 118, 101, 110, 110, 97] => lookup_599_266(acc),
            [114, 99] => lookup_599_267(acc),
            [114, 101] => lookup_599_268(acc),
            [114, 101, 103, 103, 105, 111, 45, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_599_269(acc)
            }
            [114, 101, 103, 103, 105, 111, 45, 101, 109, 105, 108, 105, 97] => lookup_599_270(acc),
            [114, 101, 103, 103, 105, 111, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_599_271(acc)
            }
            [114, 101, 103, 103, 105, 111, 101, 109, 105, 108, 105, 97] => lookup_599_272(acc),
            [114, 103] => lookup_599_273(acc),
            [114, 105] => lookup_599_274(acc),
            [114, 105, 101, 116, 105] => lookup_599_275(acc),
            [114, 105, 109, 105, 110, 105] => lookup_599_276(acc),
            [114, 109] => lookup_599_277(acc),
            [114, 110] => lookup_599_278(acc),
            [114, 111] => lookup_599_279(acc),
            [114, 111, 109, 97] => lookup_599_280(acc),
            [114, 111, 109, 101] => lookup_599_281(acc),
            [114, 111, 118, 105, 103, 111] => lookup_599_282(acc),
            [115, 97] => lookup_599_283(acc),
            [115, 97, 108, 101, 114, 110, 111] => lookup_599_284(acc),
            [115, 97, 114] => lookup_599_285(acc),
            [115, 97, 114, 100, 101, 103, 110, 97] => lookup_599_286(acc),
            [115, 97, 114, 100, 105, 110, 105, 97] => lookup_599_287(acc),
            [115, 97, 115, 115, 97, 114, 105] => lookup_599_288(acc),
            [115, 97, 118, 111, 110, 97] => lookup_599_289(acc),
            [115, 105] => lookup_599_290(acc),
            [115, 105, 99] => lookup_599_291(acc),
            [115, 105, 99, 105, 108, 105, 97] => lookup_599_292(acc),
            [115, 105, 99, 105, 108, 121] => lookup_599_293(acc),
            [115, 105, 101, 110, 97] => lookup_599_294(acc),
            [115, 105, 114, 97, 99, 117, 115, 97] => lookup_599_295(acc),
            [115, 111] => lookup_599_296(acc),
            [115, 111, 110, 100, 114, 105, 111] => lookup_599_297(acc),
            [115, 112] => lookup_599_298(acc),
            [115, 114] => lookup_599_299(acc),
            [115, 115] => lookup_599_300(acc),
            [115, 117, 101, 100, 116, 105, 114, 111, 108] => lookup_599_301(acc),
            [115, 118] => lookup_599_302(acc),
            [115, 121, 110, 99, 108, 111, 117, 100] => lookup_599_303(acc),
            [115, 195, 188, 100, 116, 105, 114, 111, 108] => lookup_599_304(acc),
            [116, 97] => lookup_599_305(acc),
            [116, 97, 97] => lookup_599_306(acc),
            [116, 97, 114, 97, 110, 116, 111] => lookup_599_307(acc),
            [116, 101] => lookup_599_308(acc),
            [116, 101, 109, 112, 105, 111, 45, 111, 108, 98, 105, 97] => lookup_599_309(acc),
            [116, 101, 109, 112, 105, 111, 111, 108, 98, 105, 97] => lookup_599_310(acc),
            [116, 101, 114, 97, 109, 111] => lookup_599_311(acc),
            [116, 101, 114, 110, 105] => lookup_599_312(acc),
            [116, 110] => lookup_599_313(acc),
            [116, 111] => lookup_599_314(acc),
            [116, 111, 114, 105, 110, 111] => lookup_599_315(acc),
            [116, 111, 115] => lookup_599_316(acc),
            [116, 111, 115, 99, 97, 110, 97] => lookup_599_317(acc),
            [116, 112] => lookup_599_318(acc),
            [116, 114] => lookup_599_319(acc),
            [116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_599_320(acc)
            }
            [116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_599_321(acc)
            }
            [116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_599_322(acc)
            }
            [116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97, 97, 110, 100, 114, 105, 97] => {
                lookup_599_323(acc)
            }
            [116, 114, 97, 112, 97, 110, 105] => lookup_599_324(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_599_325(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_599_326(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_599_327(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_599_328(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_599_329(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_599_330(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111] => lookup_599_331(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_599_332(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 97, 100, 105, 103, 101] => {
                lookup_599_333(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_599_334(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_599_335(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_599_336(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 116, 105, 114, 111, 108] => {
                lookup_599_337(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_599_338(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_599_339(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_599_340(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_599_341(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_599_342(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_599_343(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_599_344(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 97, 100, 105, 103, 101] => {
                lookup_599_345(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_599_346(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_599_347(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_599_348(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 116, 105, 114, 111, 108] => {
                lookup_599_349(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_599_350(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_599_351(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_599_352(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_599_353(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_599_354(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_599_355(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_599_356(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_599_357(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_599_358(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_599_359(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_599_360(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_599_361(acc)
            }
            [116, 114, 101, 110, 116, 111] => lookup_599_362(acc),
            [116, 114, 101, 118, 105, 115, 111] => lookup_599_363(acc),
            [116, 114, 105, 101, 115, 116, 101] => lookup_599_364(acc),
            [116, 115] => lookup_599_365(acc),
            [116, 117, 114, 105, 110] => lookup_599_366(acc),
            [116, 117, 115, 99, 97, 110, 121] => lookup_599_367(acc),
            [116, 118] => lookup_599_368(acc),
            [117, 100] => lookup_599_369(acc),
            [117, 100, 105, 110, 101] => lookup_599_370(acc),
            [117, 109, 98] => lookup_599_371(acc),
            [117, 109, 98, 114, 105, 97] => lookup_599_372(acc),
            [117, 114, 98, 105, 110, 111, 45, 112, 101, 115, 97, 114, 111] => lookup_599_373(acc),
            [117, 114, 98, 105, 110, 111, 112, 101, 115, 97, 114, 111] => lookup_599_374(acc),
            [118, 97] => lookup_599_375(acc),
            [118, 97, 108, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_599_376(acc),
            [118, 97, 108, 45, 100, 97, 111, 115, 116, 97] => lookup_599_377(acc),
            [118, 97, 108, 100, 45, 97, 111, 115, 116, 97] => lookup_599_378(acc),
            [118, 97, 108, 100, 97, 111, 115, 116, 97] => lookup_599_379(acc),
            [118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 97] => lookup_599_380(acc),
            [118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_599_381(acc),
            [118, 97, 108, 108, 101, 45, 100, 97, 111, 115, 116, 97] => lookup_599_382(acc),
            [118, 97, 108, 108, 101, 97, 111, 115, 116, 97] => lookup_599_383(acc),
            [118, 97, 108, 108, 101, 100, 45, 97, 111, 115, 116, 97] => lookup_599_384(acc),
            [118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 97] => lookup_599_385(acc),
            [118, 97, 108, 108, 101, 101, 45, 97, 111, 115, 116, 101] => lookup_599_386(acc),
            [118, 97, 108, 108, 101, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_599_387(acc)
            }
            [118, 97, 108, 108, 101, 101, 97, 111, 115, 116, 101] => lookup_599_388(acc),
            [118, 97, 108, 108, 101, 101, 100, 97, 111, 115, 116, 101] => lookup_599_389(acc),
            [118, 97, 108, 108, 195, 169, 101, 45, 97, 111, 115, 116, 101] => lookup_599_390(acc),
            [118, 97, 108, 108, 195, 169, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_599_391(acc)
            }
            [118, 97, 108, 108, 195, 169, 101, 97, 111, 115, 116, 101] => lookup_599_392(acc),
            [118, 97, 108, 108, 195, 169, 101, 100, 97, 111, 115, 116, 101] => lookup_599_393(acc),
            [118, 97, 111] => lookup_599_394(acc),
            [118, 97, 114, 101, 115, 101] => lookup_599_395(acc),
            [118, 98] => lookup_599_396(acc),
            [118, 99] => lookup_599_397(acc),
            [118, 100, 97] => lookup_599_398(acc),
            [118, 101] => lookup_599_399(acc),
            [118, 101, 110] => lookup_599_400(acc),
            [118, 101, 110, 101, 116, 111] => lookup_599_401(acc),
            [118, 101, 110, 101, 122, 105, 97] => lookup_599_402(acc),
            [118, 101, 110, 105, 99, 101] => lookup_599_403(acc),
            [118, 101, 114, 98, 97, 110, 105, 97] => lookup_599_404(acc),
            [118, 101, 114, 99, 101, 108, 108, 105] => lookup_599_405(acc),
            [118, 101, 114, 111, 110, 97] => lookup_599_406(acc),
            [118, 105] => lookup_599_407(acc),
            [118, 105, 98, 111, 45, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_599_408(acc),
            [118, 105, 98, 111, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_599_409(acc),
            [118, 105, 99, 101, 110, 122, 97] => lookup_599_410(acc),
            [118, 105, 116, 101, 114, 98, 111] => lookup_599_411(acc),
            [118, 114] => lookup_599_412(acc),
            [118, 115] => lookup_599_413(acc),
            [118, 116] => lookup_599_414(acc),
            [118, 118] => lookup_599_415(acc),
            [120, 110, 45, 45, 98, 97, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_599_416(acc)
            }
            [120, 110, 45, 45, 98, 111, 122, 101, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 50, 111, 98] => {
                lookup_599_417(acc)
            }
            [120, 110, 45, 45, 98, 117, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_599_418(acc)
            }
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 45, 109, 99, 98] => {
                lookup_599_419(acc)
            }
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 45, 105, 56, 97] => {
                lookup_599_420(acc)
            }
            [120, 110, 45, 45, 102, 111, 114, 108, 45, 99, 101, 115, 101, 110, 97, 45, 102, 99, 98] => {
                lookup_599_421(acc)
            }
            [120, 110, 45, 45, 102, 111, 114, 108, 99, 101, 115, 101, 110, 97, 45, 99, 56, 97] => {
                lookup_599_422(acc)
            }
            [120, 110, 45, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 50, 97] => {
                lookup_599_423(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_599_424(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_599_425(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 99, 51, 98] => {
                lookup_599_426(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 116, 105, 114, 111, 108, 45, 115, 122, 98] => {
                lookup_599_427(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_599_428(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_599_429(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 45, 116, 105, 114, 111, 108, 45, 54, 118, 98] => {
                lookup_599_430(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_599_431(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_599_432(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 101, 45, 101, 104, 98] => {
                lookup_599_433(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 97, 111, 115, 116, 101, 45, 101, 55, 97] => {
                lookup_599_434(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_599_435(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_600() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_601() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_602() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_604() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_605_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_605_0(acc),
            [110, 101, 116] => lookup_605_1(acc),
            [111, 102] => lookup_605_2(acc),
            [111, 114, 103] => lookup_605_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_607() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_608() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_610() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_611_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_612() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 103, 114, 105] => lookup_614_0(acc),
            [97, 105] => lookup_614_1(acc),
            [99, 111, 109] => lookup_614_2(acc),
            [101, 100, 117] => lookup_614_3(acc),
            [101, 110, 103] => lookup_614_4(acc),
            [102, 109] => lookup_614_5(acc),
            [103, 111, 118] => lookup_614_6(acc),
            [109, 105, 108] => lookup_614_7(acc),
            [110, 101, 116] => lookup_614_8(acc),
            [111, 114, 103] => lookup_614_9(acc),
            [112, 101, 114] => lookup_614_10(acc),
            [112, 104, 100] => lookup_614_11(acc),
            [115, 99, 104] => lookup_614_12(acc),
            [116, 118] => lookup_614_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_615() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_616() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_617() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 115, 97, 105] => lookup_619_7_0(acc),
            [97, 109, 97] => lookup_619_7_1(acc),
            [97, 110, 106, 111] => lookup_619_7_2(acc),
            [97, 115, 117, 107, 101] => lookup_619_7_3(acc),
            [99, 104, 105, 114, 121, 117] => lookup_619_7_4(acc),
            [99, 104, 105, 116, 97] => lookup_619_7_5(acc),
            [102, 117, 115, 111] => lookup_619_7_6(acc),
            [103, 97, 109, 97, 103, 111, 114, 105] => lookup_619_7_7(acc),
            [104, 97, 110, 100, 97] => lookup_619_7_8(acc),
            [104, 97, 122, 117] => lookup_619_7_9(acc),
            [104, 101, 107, 105, 110, 97, 110] => lookup_619_7_10(acc),
            [104, 105, 103, 97, 115, 104, 105, 117, 114, 97] => lookup_619_7_11(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_619_7_12(acc),
            [105, 110, 97, 122, 97, 119, 97] => lookup_619_7_13(acc),
            [105, 110, 117, 121, 97, 109, 97] => lookup_619_7_14(acc),
            [105, 115, 115, 104, 105, 107, 105] => lookup_619_7_15(acc),
            [105, 119, 97, 107, 117, 114, 97] => lookup_619_7_16(acc),
            [107, 97, 110, 105, 101] => lookup_619_7_17(acc),
            [107, 97, 114, 105, 121, 97] => lookup_619_7_18(acc),
            [107, 97, 115, 117, 103, 97, 105] => lookup_619_7_19(acc),
            [107, 105, 114, 97] => lookup_619_7_20(acc),
            [107, 105, 121, 111, 115, 117] => lookup_619_7_21(acc),
            [107, 111, 109, 97, 107, 105] => lookup_619_7_22(acc),
            [107, 111, 110, 97, 110] => lookup_619_7_23(acc),
            [107, 111, 116, 97] => lookup_619_7_24(acc),
            [109, 105, 104, 97, 109, 97] => lookup_619_7_25(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_619_7_26(acc),
            [110, 105, 115, 104, 105, 111] => lookup_619_7_27(acc),
            [110, 105, 115, 115, 104, 105, 110] => lookup_619_7_28(acc),
            [111, 98, 117] => lookup_619_7_29(acc),
            [111, 103, 117, 99, 104, 105] => lookup_619_7_30(acc),
            [111, 104, 97, 114, 117] => lookup_619_7_31(acc),
            [111, 107, 97, 122, 97, 107, 105] => lookup_619_7_32(acc),
            [111, 119, 97, 114, 105, 97, 115, 97, 104, 105] => lookup_619_7_33(acc),
            [115, 101, 116, 111] => lookup_619_7_34(acc),
            [115, 104, 105, 107, 97, 116, 115, 117] => lookup_619_7_35(acc),
            [115, 104, 105, 110, 115, 104, 105, 114, 111] => lookup_619_7_36(acc),
            [115, 104, 105, 116, 97, 114, 97] => lookup_619_7_37(acc),
            [116, 97, 104, 97, 114, 97] => lookup_619_7_38(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_619_7_39(acc),
            [116, 111, 98, 105, 115, 104, 105, 109, 97] => lookup_619_7_40(acc),
            [116, 111, 101, 105] => lookup_619_7_41(acc),
            [116, 111, 103, 111] => lookup_619_7_42(acc),
            [116, 111, 107, 97, 105] => lookup_619_7_43(acc),
            [116, 111, 107, 111, 110, 97, 109, 101] => lookup_619_7_44(acc),
            [116, 111, 121, 111, 97, 107, 101] => lookup_619_7_45(acc),
            [116, 111, 121, 111, 104, 97, 115, 104, 105] => lookup_619_7_46(acc),
            [116, 111, 121, 111, 107, 97, 119, 97] => lookup_619_7_47(acc),
            [116, 111, 121, 111, 110, 101] => lookup_619_7_48(acc),
            [116, 111, 121, 111, 116, 97] => lookup_619_7_49(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_619_7_50(acc),
            [121, 97, 116, 111, 109, 105] => lookup_619_7_51(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 105, 116, 97] => lookup_619_8_0(acc),
            [100, 97, 105, 115, 101, 110] => lookup_619_8_1(acc),
            [102, 117, 106, 105, 115, 97, 116, 111] => lookup_619_8_2(acc),
            [103, 111, 106, 111, 109, 101] => lookup_619_8_3(acc),
            [104, 97, 99, 104, 105, 114, 111, 103, 97, 116, 97] => lookup_619_8_4(acc),
            [104, 97, 112, 112, 111, 117] => lookup_619_8_5(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 97, 114, 117, 115, 101] => lookup_619_8_6(acc),
            [104, 111, 110, 106, 111] => lookup_619_8_7(acc),
            [104, 111, 110, 106, 121, 111] => lookup_619_8_8(acc),
            [105, 107, 97, 119, 97] => lookup_619_8_9(acc),
            [107, 97, 109, 105, 107, 111, 97, 110, 105] => lookup_619_8_10(acc),
            [107, 97, 109, 105, 111, 107, 97] => lookup_619_8_11(acc),
            [107, 97, 116, 97, 103, 97, 109, 105] => lookup_619_8_12(acc),
            [107, 97, 122, 117, 110, 111] => lookup_619_8_13(acc),
            [107, 105, 116, 97, 97, 107, 105, 116, 97] => lookup_619_8_14(acc),
            [107, 111, 115, 97, 107, 97] => lookup_619_8_15(acc),
            [107, 121, 111, 119, 97] => lookup_619_8_16(acc),
            [109, 105, 115, 97, 116, 111] => lookup_619_8_17(acc),
            [109, 105, 116, 97, 110, 101] => lookup_619_8_18(acc),
            [109, 111, 114, 105, 121, 111, 115, 104, 105] => lookup_619_8_19(acc),
            [110, 105, 107, 97, 104, 111] => lookup_619_8_20(acc),
            [110, 111, 115, 104, 105, 114, 111] => lookup_619_8_21(acc),
            [111, 100, 97, 116, 101] => lookup_619_8_22(acc),
            [111, 103, 97] => lookup_619_8_23(acc),
            [111, 103, 97, 116, 97] => lookup_619_8_24(acc),
            [115, 101, 109, 98, 111, 107, 117] => lookup_619_8_25(acc),
            [121, 111, 107, 111, 116, 101] => lookup_619_8_26(acc),
            [121, 117, 114, 105, 104, 111, 110, 106, 111] => lookup_619_8_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 111, 109, 111, 114, 105] => lookup_619_10_0(acc),
            [103, 111, 110, 111, 104, 101] => lookup_619_10_1(acc),
            [104, 97, 99, 104, 105, 110, 111, 104, 101] => lookup_619_10_2(acc),
            [104, 97, 115, 104, 105, 107, 97, 109, 105] => lookup_619_10_3(acc),
            [104, 105, 114, 97, 110, 97, 105] => lookup_619_10_4(acc),
            [104, 105, 114, 111, 115, 97, 107, 105] => lookup_619_10_5(acc),
            [105, 116, 97, 121, 97, 110, 97, 103, 105] => lookup_619_10_6(acc),
            [107, 117, 114, 111, 105, 115, 104, 105] => lookup_619_10_7(acc),
            [109, 105, 115, 97, 119, 97] => lookup_619_10_8(acc),
            [109, 117, 116, 115, 117] => lookup_619_10_9(acc),
            [110, 97, 107, 97, 100, 111, 109, 97, 114, 105] => lookup_619_10_10(acc),
            [110, 111, 104, 101, 106, 105] => lookup_619_10_11(acc),
            [111, 105, 114, 97, 115, 101] => lookup_619_10_12(acc),
            [111, 119, 97, 110, 105] => lookup_619_10_13(acc),
            [114, 111, 107, 117, 110, 111, 104, 101] => lookup_619_10_14(acc),
            [115, 97, 110, 110, 111, 104, 101] => lookup_619_10_15(acc),
            [115, 104, 105, 99, 104, 105, 110, 111, 104, 101] => lookup_619_10_16(acc),
            [115, 104, 105, 110, 103, 111] => lookup_619_10_17(acc),
            [116, 97, 107, 107, 111] => lookup_619_10_18(acc),
            [116, 111, 119, 97, 100, 97] => lookup_619_10_19(acc),
            [116, 115, 117, 103, 97, 114, 117] => lookup_619_10_20(acc),
            [116, 115, 117, 114, 117, 116, 97] => lookup_619_10_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_27<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 105, 107, 111] => lookup_619_27_0(acc),
            [97, 115, 97, 104, 105] => lookup_619_27_1(acc),
            [99, 104, 111, 110, 97, 110] => lookup_619_27_2(acc),
            [99, 104, 111, 115, 101, 105] => lookup_619_27_3(acc),
            [99, 104, 111, 115, 104, 105] => lookup_619_27_4(acc),
            [99, 104, 117, 111] => lookup_619_27_5(acc),
            [102, 117, 110, 97, 98, 97, 115, 104, 105] => lookup_619_27_6(acc),
            [102, 117, 116, 116, 115, 117] => lookup_619_27_7(acc),
            [104, 97, 110, 97, 109, 105, 103, 97, 119, 97] => lookup_619_27_8(acc),
            [105, 99, 104, 105, 104, 97, 114, 97] => lookup_619_27_9(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_619_27_10(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_619_27_11(acc),
            [105, 110, 122, 97, 105] => lookup_619_27_12(acc),
            [105, 115, 117, 109, 105] => lookup_619_27_13(acc),
            [107, 97, 109, 97, 103, 97, 121, 97] => lookup_619_27_14(acc),
            [107, 97, 109, 111, 103, 97, 119, 97] => lookup_619_27_15(acc),
            [107, 97, 115, 104, 105, 119, 97] => lookup_619_27_16(acc),
            [107, 97, 116, 111, 114, 105] => lookup_619_27_17(acc),
            [107, 97, 116, 115, 117, 117, 114, 97] => lookup_619_27_18(acc),
            [107, 105, 109, 105, 116, 115, 117] => lookup_619_27_19(acc),
            [107, 105, 115, 97, 114, 97, 122, 117] => lookup_619_27_20(acc),
            [107, 111, 122, 97, 107, 105] => lookup_619_27_21(acc),
            [107, 117, 106, 117, 107, 117, 114, 105] => lookup_619_27_22(acc),
            [107, 121, 111, 110, 97, 110] => lookup_619_27_23(acc),
            [109, 97, 116, 115, 117, 100, 111] => lookup_619_27_24(acc),
            [109, 105, 100, 111, 114, 105] => lookup_619_27_25(acc),
            [109, 105, 104, 97, 109, 97] => lookup_619_27_26(acc),
            [109, 105, 110, 97, 109, 105, 98, 111, 115, 111] => lookup_619_27_27(acc),
            [109, 111, 98, 97, 114, 97] => lookup_619_27_28(acc),
            [109, 117, 116, 115, 117, 122, 97, 119, 97] => lookup_619_27_29(acc),
            [110, 97, 103, 97, 114, 97] => lookup_619_27_30(acc),
            [110, 97, 103, 97, 114, 101, 121, 97, 109, 97] => lookup_619_27_31(acc),
            [110, 97, 114, 97, 115, 104, 105, 110, 111] => lookup_619_27_32(acc),
            [110, 97, 114, 105, 116, 97] => lookup_619_27_33(acc),
            [110, 111, 100, 97] => lookup_619_27_34(acc),
            [111, 97, 109, 105, 115, 104, 105, 114, 97, 115, 97, 116, 111] => lookup_619_27_35(acc),
            [111, 109, 105, 103, 97, 119, 97] => lookup_619_27_36(acc),
            [111, 110, 106, 117, 107, 117] => lookup_619_27_37(acc),
            [111, 116, 97, 107, 105] => lookup_619_27_38(acc),
            [115, 97, 107, 97, 101] => lookup_619_27_39(acc),
            [115, 97, 107, 117, 114, 97] => lookup_619_27_40(acc),
            [115, 104, 105, 109, 111, 102, 117, 115, 97] => lookup_619_27_41(acc),
            [115, 104, 105, 114, 97, 107, 111] => lookup_619_27_42(acc),
            [115, 104, 105, 114, 111, 105] => lookup_619_27_43(acc),
            [115, 104, 105, 115, 117, 105] => lookup_619_27_44(acc),
            [115, 111, 100, 101, 103, 97, 117, 114, 97] => lookup_619_27_45(acc),
            [115, 111, 115, 97] => lookup_619_27_46(acc),
            [116, 97, 107, 111] => lookup_619_27_47(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_619_27_48(acc),
            [116, 111, 103, 97, 110, 101] => lookup_619_27_49(acc),
            [116, 111, 104, 110, 111, 115, 104, 111] => lookup_619_27_50(acc),
            [116, 111, 109, 105, 115, 97, 116, 111] => lookup_619_27_51(acc),
            [117, 114, 97, 121, 97, 115, 117] => lookup_619_27_52(acc),
            [121, 97, 99, 104, 105, 109, 97, 116, 97] => lookup_619_27_53(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_619_27_54(acc),
            [121, 111, 107, 97, 105, 99, 104, 105, 98, 97] => lookup_619_27_55(acc),
            [121, 111, 107, 111, 115, 104, 105, 98, 97, 104, 105, 107, 97, 114, 105] => {
                lookup_619_27_56(acc)
            }
            [121, 111, 116, 115, 117, 107, 97, 105, 100, 111] => lookup_619_27_57(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_48_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_48<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 110, 97, 110] => lookup_619_48_0(acc),
            [104, 111, 110, 97, 105] => lookup_619_48_1(acc),
            [105, 107, 97, 116, 97] => lookup_619_48_2(acc),
            [105, 109, 97, 98, 97, 114, 105] => lookup_619_48_3(acc),
            [105, 121, 111] => lookup_619_48_4(acc),
            [107, 97, 109, 105, 106, 105, 109, 97] => lookup_619_48_5(acc),
            [107, 105, 104, 111, 107, 117] => lookup_619_48_6(acc),
            [107, 117, 109, 97, 107, 111, 103, 101, 110] => lookup_619_48_7(acc),
            [109, 97, 115, 97, 107, 105] => lookup_619_48_8(acc),
            [109, 97, 116, 115, 117, 110, 111] => lookup_619_48_9(acc),
            [109, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_619_48_10(acc),
            [110, 97, 109, 105, 107, 97, 116, 97] => lookup_619_48_11(acc),
            [110, 105, 105, 104, 97, 109, 97] => lookup_619_48_12(acc),
            [111, 122, 117] => lookup_619_48_13(acc),
            [115, 97, 105, 106, 111] => lookup_619_48_14(acc),
            [115, 101, 105, 121, 111] => lookup_619_48_15(acc),
            [115, 104, 105, 107, 111, 107, 117, 99, 104, 117, 111] => lookup_619_48_16(acc),
            [116, 111, 98, 101] => lookup_619_48_17(acc),
            [116, 111, 111, 110] => lookup_619_48_18(acc),
            [117, 99, 104, 105, 107, 111] => lookup_619_48_19(acc),
            [117, 119, 97, 106, 105, 109, 97] => lookup_619_48_20(acc),
            [121, 97, 119, 97, 116, 97, 104, 97, 109, 97] => lookup_619_48_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_57_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_57<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 99, 104, 105, 122, 101, 110] => lookup_619_57_0(acc),
            [101, 105, 104, 101, 105, 106, 105] => lookup_619_57_1(acc),
            [102, 117, 107, 117, 105] => lookup_619_57_2(acc),
            [105, 107, 101, 100, 97] => lookup_619_57_3(acc),
            [107, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_619_57_4(acc),
            [109, 105, 104, 97, 109, 97] => lookup_619_57_5(acc),
            [109, 105, 110, 97, 109, 105, 101, 99, 104, 105, 122, 101, 110] => lookup_619_57_6(acc),
            [111, 98, 97, 109, 97] => lookup_619_57_7(acc),
            [111, 104, 105] => lookup_619_57_8(acc),
            [111, 110, 111] => lookup_619_57_9(acc),
            [115, 97, 98, 97, 101] => lookup_619_57_10(acc),
            [115, 97, 107, 97, 105] => lookup_619_57_11(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_619_57_12(acc),
            [116, 115, 117, 114, 117, 103, 97] => lookup_619_57_13(acc),
            [119, 97, 107, 97, 115, 97] => lookup_619_57_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_58<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 104, 105, 121, 97] => lookup_619_58_0(acc),
            [98, 117, 122, 101, 110] => lookup_619_58_1(acc),
            [99, 104, 105, 107, 117, 103, 111] => lookup_619_58_2(acc),
            [99, 104, 105, 107, 117, 104, 111] => lookup_619_58_3(acc),
            [99, 104, 105, 107, 117, 106, 111] => lookup_619_58_4(acc),
            [99, 104, 105, 107, 117, 115, 104, 105, 110, 111] => lookup_619_58_5(acc),
            [99, 104, 105, 107, 117, 122, 101, 110] => lookup_619_58_6(acc),
            [99, 104, 117, 111] => lookup_619_58_7(acc),
            [100, 97, 122, 97, 105, 102, 117] => lookup_619_58_8(acc),
            [102, 117, 107, 117, 99, 104, 105] => lookup_619_58_9(acc),
            [104, 97, 107, 97, 116, 97] => lookup_619_58_10(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_619_58_11(acc),
            [104, 105, 114, 111, 107, 97, 119, 97] => lookup_619_58_12(acc),
            [104, 105, 115, 97, 121, 97, 109, 97] => lookup_619_58_13(acc),
            [105, 105, 122, 117, 107, 97] => lookup_619_58_14(acc),
            [105, 110, 97, 116, 115, 117, 107, 105] => lookup_619_58_15(acc),
            [107, 97, 104, 111] => lookup_619_58_16(acc),
            [107, 97, 115, 117, 103, 97] => lookup_619_58_17(acc),
            [107, 97, 115, 117, 121, 97] => lookup_619_58_18(acc),
            [107, 97, 119, 97, 114, 97] => lookup_619_58_19(acc),
            [107, 101, 105, 115, 101, 110] => lookup_619_58_20(acc),
            [107, 111, 103, 97] => lookup_619_58_21(acc),
            [107, 117, 114, 97, 116, 101] => lookup_619_58_22(acc),
            [107, 117, 114, 111, 103, 105] => lookup_619_58_23(acc),
            [107, 117, 114, 117, 109, 101] => lookup_619_58_24(acc),
            [109, 105, 110, 97, 109, 105] => lookup_619_58_25(acc),
            [109, 105, 121, 97, 107, 111] => lookup_619_58_26(acc),
            [109, 105, 121, 97, 109, 97] => lookup_619_58_27(acc),
            [109, 105, 121, 97, 119, 97, 107, 97] => lookup_619_58_28(acc),
            [109, 105, 122, 117, 109, 97, 107, 105] => lookup_619_58_29(acc),
            [109, 117, 110, 97, 107, 97, 116, 97] => lookup_619_58_30(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_619_58_31(acc),
            [110, 97, 107, 97, 109, 97] => lookup_619_58_32(acc),
            [110, 105, 115, 104, 105] => lookup_619_58_33(acc),
            [110, 111, 103, 97, 116, 97] => lookup_619_58_34(acc),
            [111, 103, 111, 114, 105] => lookup_619_58_35(acc),
            [111, 107, 97, 103, 97, 107, 105] => lookup_619_58_36(acc),
            [111, 107, 97, 119, 97] => lookup_619_58_37(acc),
            [111, 107, 105] => lookup_619_58_38(acc),
            [111, 109, 117, 116, 97] => lookup_619_58_39(acc),
            [111, 110, 103, 97] => lookup_619_58_40(acc),
            [111, 110, 111, 106, 111] => lookup_619_58_41(acc),
            [111, 116, 111] => lookup_619_58_42(acc),
            [115, 97, 105, 103, 97, 119, 97] => lookup_619_58_43(acc),
            [115, 97, 115, 97, 103, 117, 114, 105] => lookup_619_58_44(acc),
            [115, 104, 105, 110, 103, 117] => lookup_619_58_45(acc),
            [115, 104, 105, 110, 121, 111, 115, 104, 105, 116, 111, 109, 105] => {
                lookup_619_58_46(acc)
            }
            [115, 104, 111, 110, 97, 105] => lookup_619_58_47(acc),
            [115, 111, 101, 100, 97] => lookup_619_58_48(acc),
            [115, 117, 101] => lookup_619_58_49(acc),
            [116, 97, 99, 104, 105, 97, 114, 97, 105] => lookup_619_58_50(acc),
            [116, 97, 103, 97, 119, 97] => lookup_619_58_51(acc),
            [116, 97, 107, 97, 116, 97] => lookup_619_58_52(acc),
            [116, 111, 104, 111] => lookup_619_58_53(acc),
            [116, 111, 121, 111, 116, 115, 117] => lookup_619_58_54(acc),
            [116, 115, 117, 105, 107, 105] => lookup_619_58_55(acc),
            [117, 107, 105, 104, 97] => lookup_619_58_56(acc),
            [117, 109, 105] => lookup_619_58_57(acc),
            [117, 115, 117, 105] => lookup_619_58_58(acc),
            [121, 97, 109, 97, 100, 97] => lookup_619_58_59(acc),
            [121, 97, 109, 101] => lookup_619_58_60(acc),
            [121, 97, 110, 97, 103, 97, 119, 97] => lookup_619_58_61(acc),
            [121, 117, 107, 117, 104, 97, 115, 104, 105] => lookup_619_58_62(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_59<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 122, 117, 98, 97, 110, 103, 101] => lookup_619_59_0(acc),
            [97, 105, 122, 117, 109, 105, 115, 97, 116, 111] => lookup_619_59_1(acc),
            [97, 105, 122, 117, 119, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_619_59_2(acc),
            [97, 115, 97, 107, 97, 119, 97] => lookup_619_59_3(acc),
            [98, 97, 110, 100, 97, 105] => lookup_619_59_4(acc),
            [100, 97, 116, 101] => lookup_619_59_5(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_619_59_6(acc),
            [102, 117, 114, 117, 100, 111, 110, 111] => lookup_619_59_7(acc),
            [102, 117, 116, 97, 98, 97] => lookup_619_59_8(acc),
            [104, 97, 110, 97, 119, 97] => lookup_619_59_9(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_619_59_10(acc),
            [104, 105, 114, 97, 116, 97] => lookup_619_59_11(acc),
            [104, 105, 114, 111, 110, 111] => lookup_619_59_12(acc),
            [105, 105, 116, 97, 116, 101] => lookup_619_59_13(acc),
            [105, 110, 97, 119, 97, 115, 104, 105, 114, 111] => lookup_619_59_14(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_619_59_15(acc),
            [105, 119, 97, 107, 105] => lookup_619_59_16(acc),
            [105, 122, 117, 109, 105, 122, 97, 107, 105] => lookup_619_59_17(acc),
            [107, 97, 103, 97, 109, 105, 105, 115, 104, 105] => lookup_619_59_18(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_619_59_19(acc),
            [107, 97, 119, 97, 109, 97, 116, 97] => lookup_619_59_20(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_619_59_21(acc),
            [107, 105, 116, 97, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_619_59_22(acc),
            [107, 111, 111, 114, 105] => lookup_619_59_23(acc),
            [107, 111, 114, 105, 121, 97, 109, 97] => lookup_619_59_24(acc),
            [107, 117, 110, 105, 109, 105] => lookup_619_59_25(acc),
            [109, 105, 104, 97, 114, 117] => lookup_619_59_26(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_619_59_27(acc),
            [110, 97, 109, 105, 101] => lookup_619_59_28(acc),
            [110, 97, 110, 103, 111] => lookup_619_59_29(acc),
            [110, 105, 115, 104, 105, 97, 105, 122, 117] => lookup_619_59_30(acc),
            [110, 105, 115, 104, 105, 103, 111] => lookup_619_59_31(acc),
            [111, 107, 117, 109, 97] => lookup_619_59_32(acc),
            [111, 109, 111, 116, 101, 103, 111] => lookup_619_59_33(acc),
            [111, 110, 111] => lookup_619_59_34(acc),
            [111, 116, 97, 109, 97] => lookup_619_59_35(acc),
            [115, 97, 109, 101, 103, 97, 119, 97] => lookup_619_59_36(acc),
            [115, 104, 105, 109, 111, 103, 111] => lookup_619_59_37(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_619_59_38(acc),
            [115, 104, 111, 119, 97] => lookup_619_59_39(acc),
            [115, 111, 109, 97] => lookup_619_59_40(acc),
            [115, 117, 107, 97, 103, 97, 119, 97] => lookup_619_59_41(acc),
            [116, 97, 105, 115, 104, 105, 110] => lookup_619_59_42(acc),
            [116, 97, 109, 97, 107, 97, 119, 97] => lookup_619_59_43(acc),
            [116, 97, 110, 97, 103, 117, 114, 97] => lookup_619_59_44(acc),
            [116, 101, 110, 101, 105] => lookup_619_59_45(acc),
            [121, 97, 98, 117, 107, 105] => lookup_619_59_46(acc),
            [121, 97, 109, 97, 116, 111] => lookup_619_59_47(acc),
            [121, 97, 109, 97, 116, 115, 117, 114, 105] => lookup_619_59_48(acc),
            [121, 97, 110, 97, 105, 122, 117] => lookup_619_59_49(acc),
            [121, 117, 103, 97, 119, 97] => lookup_619_59_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_60_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_60<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 112, 97, 99, 104, 105] => lookup_619_60_0(acc),
            [101, 110, 97] => lookup_619_60_1(acc),
            [103, 105, 102, 117] => lookup_619_60_2(acc),
            [103, 105, 110, 97, 110] => lookup_619_60_3(acc),
            [103, 111, 100, 111] => lookup_619_60_4(acc),
            [103, 117, 106, 111] => lookup_619_60_5(acc),
            [104, 97, 115, 104, 105, 109, 97] => lookup_619_60_6(acc),
            [104, 105, 99, 104, 105, 115, 111] => lookup_619_60_7(acc),
            [104, 105, 100, 97] => lookup_619_60_8(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 104, 105, 114, 97, 107, 97, 119, 97] => {
                lookup_619_60_9(acc)
            }
            [105, 98, 105, 103, 97, 119, 97] => lookup_619_60_10(acc),
            [105, 107, 101, 100, 97] => lookup_619_60_11(acc),
            [107, 97, 107, 97, 109, 105, 103, 97, 104, 97, 114, 97] => lookup_619_60_12(acc),
            [107, 97, 110, 105] => lookup_619_60_13(acc),
            [107, 97, 115, 97, 104, 97, 114, 97] => lookup_619_60_14(acc),
            [107, 97, 115, 97, 109, 97, 116, 115, 117] => lookup_619_60_15(acc),
            [107, 97, 119, 97, 117, 101] => lookup_619_60_16(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_619_60_17(acc),
            [109, 105, 110, 111] => lookup_619_60_18(acc),
            [109, 105, 110, 111, 107, 97, 109, 111] => lookup_619_60_19(acc),
            [109, 105, 116, 97, 107, 101] => lookup_619_60_20(acc),
            [109, 105, 122, 117, 110, 97, 109, 105] => lookup_619_60_21(acc),
            [109, 111, 116, 111, 115, 117] => lookup_619_60_22(acc),
            [110, 97, 107, 97, 116, 115, 117, 103, 97, 119, 97] => lookup_619_60_23(acc),
            [111, 103, 97, 107, 105] => lookup_619_60_24(acc),
            [115, 97, 107, 97, 104, 111, 103, 105] => lookup_619_60_25(acc),
            [115, 101, 107, 105] => lookup_619_60_26(acc),
            [115, 101, 107, 105, 103, 97, 104, 97, 114, 97] => lookup_619_60_27(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_619_60_28(acc),
            [116, 97, 106, 105, 109, 105] => lookup_619_60_29(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_619_60_30(acc),
            [116, 97, 114, 117, 105] => lookup_619_60_31(acc),
            [116, 111, 107, 105] => lookup_619_60_32(acc),
            [116, 111, 109, 105, 107, 97] => lookup_619_60_33(acc),
            [119, 97, 110, 111, 117, 99, 104, 105] => lookup_619_60_34(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_619_60_35(acc),
            [121, 97, 111, 116, 115, 117] => lookup_619_60_36(acc),
            [121, 111, 114, 111] => lookup_619_60_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_68_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_68<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 110, 97, 107, 97] => lookup_619_68_0(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_619_68_1(acc),
            [102, 117, 106, 105, 111, 107, 97] => lookup_619_68_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 97, 103, 97, 116, 115, 117, 109, 97] => {
                lookup_619_68_3(acc)
            }
            [105, 115, 101, 115, 97, 107, 105] => lookup_619_68_4(acc),
            [105, 116, 97, 107, 117, 114, 97] => lookup_619_68_5(acc),
            [107, 97, 110, 110, 97] => lookup_619_68_6(acc),
            [107, 97, 110, 114, 97] => lookup_619_68_7(acc),
            [107, 97, 116, 97, 115, 104, 105, 110, 97] => lookup_619_68_8(acc),
            [107, 97, 119, 97, 98, 97] => lookup_619_68_9(acc),
            [107, 105, 114, 121, 117] => lookup_619_68_10(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_619_68_11(acc),
            [109, 97, 101, 98, 97, 115, 104, 105] => lookup_619_68_12(acc),
            [109, 101, 105, 119, 97] => lookup_619_68_13(acc),
            [109, 105, 100, 111, 114, 105] => lookup_619_68_14(acc),
            [109, 105, 110, 97, 107, 97, 109, 105] => lookup_619_68_15(acc),
            [110, 97, 103, 97, 110, 111, 104, 97, 114, 97] => lookup_619_68_16(acc),
            [110, 97, 107, 97, 110, 111, 106, 111] => lookup_619_68_17(acc),
            [110, 97, 110, 109, 111, 107, 117] => lookup_619_68_18(acc),
            [110, 117, 109, 97, 116, 97] => lookup_619_68_19(acc),
            [111, 105, 122, 117, 109, 105] => lookup_619_68_20(acc),
            [111, 114, 97] => lookup_619_68_21(acc),
            [111, 116, 97] => lookup_619_68_22(acc),
            [115, 104, 105, 98, 117, 107, 97, 119, 97] => lookup_619_68_23(acc),
            [115, 104, 105, 109, 111, 110, 105, 116, 97] => lookup_619_68_24(acc),
            [115, 104, 105, 110, 116, 111] => lookup_619_68_25(acc),
            [115, 104, 111, 119, 97] => lookup_619_68_26(acc),
            [116, 97, 107, 97, 115, 97, 107, 105] => lookup_619_68_27(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_619_68_28(acc),
            [116, 97, 109, 97, 109, 117, 114, 97] => lookup_619_68_29(acc),
            [116, 97, 116, 101, 98, 97, 121, 97, 115, 104, 105] => lookup_619_68_30(acc),
            [116, 111, 109, 105, 111, 107, 97] => lookup_619_68_31(acc),
            [116, 115, 117, 107, 105, 121, 111, 110, 111] => lookup_619_68_32(acc),
            [116, 115, 117, 109, 97, 103, 111, 105] => lookup_619_68_33(acc),
            [117, 101, 110, 111] => lookup_619_68_34(acc),
            [121, 111, 115, 104, 105, 111, 107, 97] => lookup_619_68_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_79_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_79<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 109, 105, 110, 97, 109, 105] => lookup_619_79_0(acc),
            [100, 97, 105, 119, 97] => lookup_619_79_1(acc),
            [101, 116, 97, 106, 105, 109, 97] => lookup_619_79_2(acc),
            [102, 117, 99, 104, 117] => lookup_619_79_3(acc),
            [102, 117, 107, 117, 121, 97, 109, 97] => lookup_619_79_4(acc),
            [104, 97, 116, 115, 117, 107, 97, 105, 99, 104, 105] => lookup_619_79_5(acc),
            [104, 105, 103, 97, 115, 104, 105, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_619_79_6(acc)
            }
            [104, 111, 110, 103, 111] => lookup_619_79_7(acc),
            [106, 105, 110, 115, 101, 107, 105, 107, 111, 103, 101, 110] => lookup_619_79_8(acc),
            [107, 97, 105, 116, 97] => lookup_619_79_9(acc),
            [107, 117, 105] => lookup_619_79_10(acc),
            [107, 117, 109, 97, 110, 111] => lookup_619_79_11(acc),
            [107, 117, 114, 101] => lookup_619_79_12(acc),
            [109, 105, 104, 97, 114, 97] => lookup_619_79_13(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_619_79_14(acc),
            [110, 97, 107, 97] => lookup_619_79_15(acc),
            [111, 110, 111, 109, 105, 99, 104, 105] => lookup_619_79_16(acc),
            [111, 115, 97, 107, 105, 107, 97, 109, 105, 106, 105, 109, 97] => lookup_619_79_17(acc),
            [111, 116, 97, 107, 101] => lookup_619_79_18(acc),
            [115, 97, 107, 97] => lookup_619_79_19(acc),
            [115, 101, 114, 97] => lookup_619_79_20(acc),
            [115, 101, 114, 97, 110, 105, 115, 104, 105] => lookup_619_79_21(acc),
            [115, 104, 105, 110, 105, 99, 104, 105] => lookup_619_79_22(acc),
            [115, 104, 111, 98, 97, 114, 97] => lookup_619_79_23(acc),
            [116, 97, 107, 101, 104, 97, 114, 97] => lookup_619_79_24(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_80_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_80<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 97, 115, 104, 105, 114, 105] => lookup_619_80_0(acc),
            [97, 98, 105, 114, 97] => lookup_619_80_1(acc),
            [97, 105, 98, 101, 116, 115, 117] => lookup_619_80_2(acc),
            [97, 107, 97, 98, 105, 114, 97] => lookup_619_80_3(acc),
            [97, 107, 107, 101, 115, 104, 105] => lookup_619_80_4(acc),
            [97, 115, 97, 104, 105, 107, 97, 119, 97] => lookup_619_80_5(acc),
            [97, 115, 104, 105, 98, 101, 116, 115, 117] => lookup_619_80_6(acc),
            [97, 115, 104, 111, 114, 111] => lookup_619_80_7(acc),
            [97, 115, 115, 97, 98, 117] => lookup_619_80_8(acc),
            [97, 116, 115, 117, 109, 97] => lookup_619_80_9(acc),
            [98, 105, 98, 97, 105] => lookup_619_80_10(acc),
            [98, 105, 101, 105] => lookup_619_80_11(acc),
            [98, 105, 102, 117, 107, 97] => lookup_619_80_12(acc),
            [98, 105, 104, 111, 114, 111] => lookup_619_80_13(acc),
            [98, 105, 114, 97, 116, 111, 114, 105] => lookup_619_80_14(acc),
            [99, 104, 105, 112, 112, 117, 98, 101, 116, 115, 117] => lookup_619_80_15(acc),
            [99, 104, 105, 116, 111, 115, 101] => lookup_619_80_16(acc),
            [100, 97, 116, 101] => lookup_619_80_17(acc),
            [101, 98, 101, 116, 115, 117] => lookup_619_80_18(acc),
            [101, 109, 98, 101, 116, 115, 117] => lookup_619_80_19(acc),
            [101, 110, 105, 119, 97] => lookup_619_80_20(acc),
            [101, 114, 105, 109, 111] => lookup_619_80_21(acc),
            [101, 115, 97, 110] => lookup_619_80_22(acc),
            [101, 115, 97, 115, 104, 105] => lookup_619_80_23(acc),
            [102, 117, 107, 97, 103, 97, 119, 97] => lookup_619_80_24(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_619_80_25(acc),
            [102, 117, 114, 97, 110, 111] => lookup_619_80_26(acc),
            [102, 117, 114, 117, 98, 105, 114, 97] => lookup_619_80_27(acc),
            [104, 97, 98, 111, 114, 111] => lookup_619_80_28(acc),
            [104, 97, 107, 111, 100, 97, 116, 101] => lookup_619_80_29(acc),
            [104, 97, 109, 97, 116, 111, 110, 98, 101, 116, 115, 117] => lookup_619_80_30(acc),
            [104, 105, 100, 97, 107, 97] => lookup_619_80_31(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 117, 114, 97] => lookup_619_80_32(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 119, 97] => lookup_619_80_33(acc),
            [104, 105, 114, 111, 111] => lookup_619_80_34(acc),
            [104, 111, 107, 117, 114, 121, 117] => lookup_619_80_35(acc),
            [104, 111, 107, 117, 116, 111] => lookup_619_80_36(acc),
            [104, 111, 110, 98, 101, 116, 115, 117] => lookup_619_80_37(acc),
            [104, 111, 114, 111, 107, 97, 110, 97, 105] => lookup_619_80_38(acc),
            [104, 111, 114, 111, 110, 111, 98, 101] => lookup_619_80_39(acc),
            [105, 107, 101, 100, 97] => lookup_619_80_40(acc),
            [105, 109, 97, 107, 97, 110, 101] => lookup_619_80_41(acc),
            [105, 115, 104, 105, 107, 97, 114, 105] => lookup_619_80_42(acc),
            [105, 119, 97, 109, 105, 122, 97, 119, 97] => lookup_619_80_43(acc),
            [105, 119, 97, 110, 97, 105] => lookup_619_80_44(acc),
            [107, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_619_80_45(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_619_80_46(acc),
            [107, 97, 109, 105, 115, 104, 105, 104, 111, 114, 111] => lookup_619_80_47(acc),
            [107, 97, 109, 105, 115, 117, 110, 97, 103, 97, 119, 97] => lookup_619_80_48(acc),
            [107, 97, 109, 111, 101, 110, 97, 105] => lookup_619_80_49(acc),
            [107, 97, 121, 97, 98, 101] => lookup_619_80_50(acc),
            [107, 101, 109, 98, 117, 99, 104, 105] => lookup_619_80_51(acc),
            [107, 105, 107, 111, 110, 97, 105] => lookup_619_80_52(acc),
            [107, 105, 109, 111, 98, 101, 116, 115, 117] => lookup_619_80_53(acc),
            [107, 105, 116, 97, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_619_80_54(acc)
            }
            [107, 105, 116, 97, 109, 105] => lookup_619_80_55(acc),
            [107, 105, 121, 111, 115, 97, 116, 111] => lookup_619_80_56(acc),
            [107, 111, 115, 104, 105, 109, 105, 122, 117] => lookup_619_80_57(acc),
            [107, 117, 110, 110, 101, 112, 112, 117] => lookup_619_80_58(acc),
            [107, 117, 114, 105, 121, 97, 109, 97] => lookup_619_80_59(acc),
            [107, 117, 114, 111, 109, 97, 116, 115, 117, 110, 97, 105] => lookup_619_80_60(acc),
            [107, 117, 115, 104, 105, 114, 111] => lookup_619_80_61(acc),
            [107, 117, 116, 99, 104, 97, 110] => lookup_619_80_62(acc),
            [107, 121, 111, 119, 97] => lookup_619_80_63(acc),
            [109, 97, 115, 104, 105, 107, 101] => lookup_619_80_64(acc),
            [109, 97, 116, 115, 117, 109, 97, 101] => lookup_619_80_65(acc),
            [109, 105, 107, 97, 115, 97] => lookup_619_80_66(acc),
            [109, 105, 110, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_619_80_67(acc),
            [109, 111, 109, 98, 101, 116, 115, 117] => lookup_619_80_68(acc),
            [109, 111, 115, 101, 117, 115, 104, 105] => lookup_619_80_69(acc),
            [109, 117, 107, 97, 119, 97] => lookup_619_80_70(acc),
            [109, 117, 114, 111, 114, 97, 110] => lookup_619_80_71(acc),
            [110, 97, 105, 101] => lookup_619_80_72(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_619_80_73(acc),
            [110, 97, 107, 97, 115, 97, 116, 115, 117, 110, 97, 105] => lookup_619_80_74(acc),
            [110, 97, 107, 97, 116, 111, 109, 98, 101, 116, 115, 117] => lookup_619_80_75(acc),
            [110, 97, 110, 97, 101] => lookup_619_80_76(acc),
            [110, 97, 110, 112, 111, 114, 111] => lookup_619_80_77(acc),
            [110, 97, 121, 111, 114, 111] => lookup_619_80_78(acc),
            [110, 101, 109, 117, 114, 111] => lookup_619_80_79(acc),
            [110, 105, 105, 107, 97, 112, 112, 117] => lookup_619_80_80(acc),
            [110, 105, 107, 105] => lookup_619_80_81(acc),
            [110, 105, 115, 104, 105, 111, 107, 111, 112, 112, 101] => lookup_619_80_82(acc),
            [110, 111, 98, 111, 114, 105, 98, 101, 116, 115, 117] => lookup_619_80_83(acc),
            [110, 117, 109, 97, 116, 97] => lookup_619_80_84(acc),
            [111, 98, 105, 104, 105, 114, 111] => lookup_619_80_85(acc),
            [111, 98, 105, 114, 97] => lookup_619_80_86(acc),
            [111, 107, 101, 116, 111] => lookup_619_80_87(acc),
            [111, 107, 111, 112, 112, 101] => lookup_619_80_88(acc),
            [111, 116, 97, 114, 117] => lookup_619_80_89(acc),
            [111, 116, 111, 98, 101] => lookup_619_80_90(acc),
            [111, 116, 111, 102, 117, 107, 101] => lookup_619_80_91(acc),
            [111, 116, 111, 105, 110, 101, 112, 112, 117] => lookup_619_80_92(acc),
            [111, 117, 109, 117] => lookup_619_80_93(acc),
            [111, 122, 111, 114, 97] => lookup_619_80_94(acc),
            [112, 105, 112, 112, 117] => lookup_619_80_95(acc),
            [114, 97, 110, 107, 111, 115, 104, 105] => lookup_619_80_96(acc),
            [114, 101, 98, 117, 110] => lookup_619_80_97(acc),
            [114, 105, 107, 117, 98, 101, 116, 115, 117] => lookup_619_80_98(acc),
            [114, 105, 115, 104, 105, 114, 105] => lookup_619_80_99(acc),
            [114, 105, 115, 104, 105, 114, 105, 102, 117, 106, 105] => lookup_619_80_100(acc),
            [115, 97, 114, 111, 109, 97] => lookup_619_80_101(acc),
            [115, 97, 114, 117, 102, 117, 116, 115, 117] => lookup_619_80_102(acc),
            [115, 104, 97, 107, 111, 116, 97, 110] => lookup_619_80_103(acc),
            [115, 104, 97, 114, 105] => lookup_619_80_104(acc),
            [115, 104, 105, 98, 101, 99, 104, 97] => lookup_619_80_105(acc),
            [115, 104, 105, 98, 101, 116, 115, 117] => lookup_619_80_106(acc),
            [115, 104, 105, 107, 97, 98, 101] => lookup_619_80_107(acc),
            [115, 104, 105, 107, 97, 111, 105] => lookup_619_80_108(acc),
            [115, 104, 105, 109, 97, 109, 97, 107, 105] => lookup_619_80_109(acc),
            [115, 104, 105, 109, 105, 122, 117] => lookup_619_80_110(acc),
            [115, 104, 105, 109, 111, 107, 97, 119, 97] => lookup_619_80_111(acc),
            [115, 104, 105, 110, 115, 104, 105, 110, 111, 116, 115, 117] => lookup_619_80_112(acc),
            [115, 104, 105, 110, 116, 111, 107, 117] => lookup_619_80_113(acc),
            [115, 104, 105, 114, 97, 110, 117, 107, 97] => lookup_619_80_114(acc),
            [115, 104, 105, 114, 97, 111, 105] => lookup_619_80_115(acc),
            [115, 104, 105, 114, 105, 117, 99, 104, 105] => lookup_619_80_116(acc),
            [115, 111, 98, 101, 116, 115, 117] => lookup_619_80_117(acc),
            [115, 117, 110, 97, 103, 97, 119, 97] => lookup_619_80_118(acc),
            [116, 97, 105, 107, 105] => lookup_619_80_119(acc),
            [116, 97, 107, 97, 115, 117] => lookup_619_80_120(acc),
            [116, 97, 107, 105, 107, 97, 119, 97] => lookup_619_80_121(acc),
            [116, 97, 107, 105, 110, 111, 117, 101] => lookup_619_80_122(acc),
            [116, 101, 115, 104, 105, 107, 97, 103, 97] => lookup_619_80_123(acc),
            [116, 111, 98, 101, 116, 115, 117] => lookup_619_80_124(acc),
            [116, 111, 104, 109, 97] => lookup_619_80_125(acc),
            [116, 111, 109, 97, 107, 111, 109, 97, 105] => lookup_619_80_126(acc),
            [116, 111, 109, 97, 114, 105] => lookup_619_80_127(acc),
            [116, 111, 121, 97] => lookup_619_80_128(acc),
            [116, 111, 121, 97, 107, 111] => lookup_619_80_129(acc),
            [116, 111, 121, 111, 116, 111, 109, 105] => lookup_619_80_130(acc),
            [116, 111, 121, 111, 117, 114, 97] => lookup_619_80_131(acc),
            [116, 115, 117, 98, 101, 116, 115, 117] => lookup_619_80_132(acc),
            [116, 115, 117, 107, 105, 103, 97, 116, 97] => lookup_619_80_133(acc),
            [117, 114, 97, 107, 97, 119, 97] => lookup_619_80_134(acc),
            [117, 114, 97, 117, 115, 117] => lookup_619_80_135(acc),
            [117, 114, 121, 117] => lookup_619_80_136(acc),
            [117, 116, 97, 115, 104, 105, 110, 97, 105] => lookup_619_80_137(acc),
            [119, 97, 107, 107, 97, 110, 97, 105] => lookup_619_80_138(acc),
            [119, 97, 115, 115, 97, 109, 117] => lookup_619_80_139(acc),
            [121, 97, 107, 117, 109, 111] => lookup_619_80_140(acc),
            [121, 111, 105, 99, 104, 105] => lookup_619_80_141(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_83_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_83<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 111, 105] => lookup_619_83_0(acc),
            [97, 107, 97, 115, 104, 105] => lookup_619_83_1(acc),
            [97, 107, 111] => lookup_619_83_2(acc),
            [97, 109, 97, 103, 97, 115, 97, 107, 105] => lookup_619_83_3(acc),
            [97, 111, 103, 97, 107, 105] => lookup_619_83_4(acc),
            [97, 115, 97, 103, 111] => lookup_619_83_5(acc),
            [97, 115, 104, 105, 121, 97] => lookup_619_83_6(acc),
            [97, 119, 97, 106, 105] => lookup_619_83_7(acc),
            [102, 117, 107, 117, 115, 97, 107, 105] => lookup_619_83_8(acc),
            [103, 111, 115, 104, 105, 107, 105] => lookup_619_83_9(acc),
            [104, 97, 114, 105, 109, 97] => lookup_619_83_10(acc),
            [104, 105, 109, 101, 106, 105] => lookup_619_83_11(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_619_83_12(acc),
            [105, 110, 97, 103, 97, 119, 97] => lookup_619_83_13(acc),
            [105, 116, 97, 109, 105] => lookup_619_83_14(acc),
            [107, 97, 107, 111, 103, 97, 119, 97] => lookup_619_83_15(acc),
            [107, 97, 109, 105, 103, 111, 114, 105] => lookup_619_83_16(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_619_83_17(acc),
            [107, 97, 115, 97, 105] => lookup_619_83_18(acc),
            [107, 97, 115, 117, 103, 97] => lookup_619_83_19(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_619_83_20(acc),
            [109, 105, 107, 105] => lookup_619_83_21(acc),
            [109, 105, 110, 97, 109, 105, 97, 119, 97, 106, 105] => lookup_619_83_22(acc),
            [110, 105, 115, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_619_83_23(acc),
            [110, 105, 115, 104, 105, 119, 97, 107, 105] => lookup_619_83_24(acc),
            [111, 110, 111] => lookup_619_83_25(acc),
            [115, 97, 110, 100, 97] => lookup_619_83_26(acc),
            [115, 97, 110, 110, 97, 110] => lookup_619_83_27(acc),
            [115, 97, 115, 97, 121, 97, 109, 97] => lookup_619_83_28(acc),
            [115, 97, 121, 111] => lookup_619_83_29(acc),
            [115, 104, 105, 110, 103, 117] => lookup_619_83_30(acc),
            [115, 104, 105, 110, 111, 110, 115, 101, 110] => lookup_619_83_31(acc),
            [115, 104, 105, 115, 111] => lookup_619_83_32(acc),
            [115, 117, 109, 111, 116, 111] => lookup_619_83_33(acc),
            [116, 97, 105, 115, 104, 105] => lookup_619_83_34(acc),
            [116, 97, 107, 97] => lookup_619_83_35(acc),
            [116, 97, 107, 97, 114, 97, 122, 117, 107, 97] => lookup_619_83_36(acc),
            [116, 97, 107, 97, 115, 97, 103, 111] => lookup_619_83_37(acc),
            [116, 97, 107, 105, 110, 111] => lookup_619_83_38(acc),
            [116, 97, 109, 98, 97] => lookup_619_83_39(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_619_83_40(acc),
            [116, 111, 121, 111, 111, 107, 97] => lookup_619_83_41(acc),
            [121, 97, 98, 117] => lookup_619_83_42(acc),
            [121, 97, 115, 104, 105, 114, 111] => lookup_619_83_43(acc),
            [121, 111, 107, 97] => lookup_619_83_44(acc),
            [121, 111, 107, 97, 119, 97] => lookup_619_83_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_84_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_84<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 105] => lookup_619_84_0(acc),
            [97, 115, 97, 104, 105] => lookup_619_84_1(acc),
            [98, 97, 110, 100, 111] => lookup_619_84_2(acc),
            [99, 104, 105, 107, 117, 115, 101, 105] => lookup_619_84_3(acc),
            [100, 97, 105, 103, 111] => lookup_619_84_4(acc),
            [102, 117, 106, 105, 115, 104, 105, 114, 111] => lookup_619_84_5(acc),
            [104, 105, 116, 97, 99, 104, 105] => lookup_619_84_6(acc),
            [104, 105, 116, 97, 99, 104, 105, 110, 97, 107, 97] => lookup_619_84_7(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 109, 105, 121, 97] => lookup_619_84_8(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 116, 97] => lookup_619_84_9(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_619_84_10(acc),
            [105, 110, 97] => lookup_619_84_11(acc),
            [105, 110, 97, 115, 104, 105, 107, 105] => lookup_619_84_12(acc),
            [105, 116, 97, 107, 111] => lookup_619_84_13(acc),
            [105, 119, 97, 109, 97] => lookup_619_84_14(acc),
            [106, 111, 115, 111] => lookup_619_84_15(acc),
            [107, 97, 109, 105, 115, 117] => lookup_619_84_16(acc),
            [107, 97, 115, 97, 109, 97] => lookup_619_84_17(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_619_84_18(acc),
            [107, 97, 115, 117, 109, 105, 103, 97, 117, 114, 97] => lookup_619_84_19(acc),
            [107, 111, 103, 97] => lookup_619_84_20(acc),
            [109, 105, 104, 111] => lookup_619_84_21(acc),
            [109, 105, 116, 111] => lookup_619_84_22(acc),
            [109, 111, 114, 105, 121, 97] => lookup_619_84_23(acc),
            [110, 97, 107, 97] => lookup_619_84_24(acc),
            [110, 97, 109, 101, 103, 97, 116, 97] => lookup_619_84_25(acc),
            [111, 97, 114, 97, 105] => lookup_619_84_26(acc),
            [111, 103, 97, 119, 97] => lookup_619_84_27(acc),
            [111, 109, 105, 116, 97, 109, 97] => lookup_619_84_28(acc),
            [114, 121, 117, 103, 97, 115, 97, 107, 105] => lookup_619_84_29(acc),
            [115, 97, 107, 97, 105] => lookup_619_84_30(acc),
            [115, 97, 107, 117, 114, 97, 103, 97, 119, 97] => lookup_619_84_31(acc),
            [115, 104, 105, 109, 111, 100, 97, 116, 101] => lookup_619_84_32(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 109, 97] => lookup_619_84_33(acc),
            [115, 104, 105, 114, 111, 115, 97, 116, 111] => lookup_619_84_34(acc),
            [115, 111, 119, 97] => lookup_619_84_35(acc),
            [115, 117, 105, 102, 117] => lookup_619_84_36(acc),
            [116, 97, 107, 97, 104, 97, 103, 105] => lookup_619_84_37(acc),
            [116, 97, 109, 97, 116, 115, 117, 107, 117, 114, 105] => lookup_619_84_38(acc),
            [116, 111, 107, 97, 105] => lookup_619_84_39(acc),
            [116, 111, 109, 111, 98, 101] => lookup_619_84_40(acc),
            [116, 111, 110, 101] => lookup_619_84_41(acc),
            [116, 111, 114, 105, 100, 101] => lookup_619_84_42(acc),
            [116, 115, 117, 99, 104, 105, 117, 114, 97] => lookup_619_84_43(acc),
            [116, 115, 117, 107, 117, 98, 97] => lookup_619_84_44(acc),
            [117, 99, 104, 105, 104, 97, 114, 97] => lookup_619_84_45(acc),
            [117, 115, 104, 105, 107, 117] => lookup_619_84_46(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_619_84_47(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_619_84_48(acc),
            [121, 97, 119, 97, 114, 97] => lookup_619_84_49(acc),
            [121, 117, 107, 105] => lookup_619_84_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_86_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_86<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 109, 105, 122, 117] => lookup_619_86_0(acc),
            [104, 97, 107, 117, 105] => lookup_619_86_1(acc),
            [104, 97, 107, 117, 115, 97, 110] => lookup_619_86_2(acc),
            [107, 97, 103, 97] => lookup_619_86_3(acc),
            [107, 97, 104, 111, 107, 117] => lookup_619_86_4(acc),
            [107, 97, 110, 97, 122, 97, 119, 97] => lookup_619_86_5(acc),
            [107, 97, 119, 97, 107, 105, 116, 97] => lookup_619_86_6(acc),
            [107, 111, 109, 97, 116, 115, 117] => lookup_619_86_7(acc),
            [110, 97, 107, 97, 110, 111, 116, 111] => lookup_619_86_8(acc),
            [110, 97, 110, 97, 111] => lookup_619_86_9(acc),
            [110, 111, 109, 105] => lookup_619_86_10(acc),
            [110, 111, 110, 111, 105, 99, 104, 105] => lookup_619_86_11(acc),
            [110, 111, 116, 111] => lookup_619_86_12(acc),
            [115, 104, 105, 107, 97] => lookup_619_86_13(acc),
            [115, 117, 122, 117] => lookup_619_86_14(acc),
            [116, 115, 117, 98, 97, 116, 97] => lookup_619_86_15(acc),
            [116, 115, 117, 114, 117, 103, 105] => lookup_619_86_16(acc),
            [117, 99, 104, 105, 110, 97, 100, 97] => lookup_619_86_17(acc),
            [119, 97, 106, 105, 109, 97] => lookup_619_86_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_88_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_88<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 100, 97, 105] => lookup_619_88_0(acc),
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_619_88_1(acc),
            [104, 97, 110, 97, 109, 97, 107, 105] => lookup_619_88_2(acc),
            [104, 105, 114, 97, 105, 122, 117, 109, 105] => lookup_619_88_3(acc),
            [104, 105, 114, 111, 110, 111] => lookup_619_88_4(acc),
            [105, 99, 104, 105, 110, 111, 104, 101] => lookup_619_88_5(acc),
            [105, 99, 104, 105, 110, 111, 115, 101, 107, 105] => lookup_619_88_6(acc),
            [105, 119, 97, 105, 122, 117, 109, 105] => lookup_619_88_7(acc),
            [105, 119, 97, 116, 101] => lookup_619_88_8(acc),
            [106, 111, 98, 111, 106, 105] => lookup_619_88_9(acc),
            [107, 97, 109, 97, 105, 115, 104, 105] => lookup_619_88_10(acc),
            [107, 97, 110, 101, 103, 97, 115, 97, 107, 105] => lookup_619_88_11(acc),
            [107, 97, 114, 117, 109, 97, 105] => lookup_619_88_12(acc),
            [107, 97, 119, 97, 105] => lookup_619_88_13(acc),
            [107, 105, 116, 97, 107, 97, 109, 105] => lookup_619_88_14(acc),
            [107, 117, 106, 105] => lookup_619_88_15(acc),
            [107, 117, 110, 111, 104, 101] => lookup_619_88_16(acc),
            [107, 117, 122, 117, 109, 97, 107, 105] => lookup_619_88_17(acc),
            [109, 105, 121, 97, 107, 111] => lookup_619_88_18(acc),
            [109, 105, 122, 117, 115, 97, 119, 97] => lookup_619_88_19(acc),
            [109, 111, 114, 105, 111, 107, 97] => lookup_619_88_20(acc),
            [110, 105, 110, 111, 104, 101] => lookup_619_88_21(acc),
            [110, 111, 100, 97] => lookup_619_88_22(acc),
            [111, 102, 117, 110, 97, 116, 111] => lookup_619_88_23(acc),
            [111, 115, 104, 117] => lookup_619_88_24(acc),
            [111, 116, 115, 117, 99, 104, 105] => lookup_619_88_25(acc),
            [114, 105, 107, 117, 122, 101, 110, 116, 97, 107, 97, 116, 97] => lookup_619_88_26(acc),
            [115, 104, 105, 119, 97] => lookup_619_88_27(acc),
            [115, 104, 105, 122, 117, 107, 117, 105, 115, 104, 105] => lookup_619_88_28(acc),
            [115, 117, 109, 105, 116, 97] => lookup_619_88_29(acc),
            [116, 97, 110, 111, 104, 97, 116, 97] => lookup_619_88_30(acc),
            [116, 111, 110, 111] => lookup_619_88_31(acc),
            [121, 97, 104, 97, 98, 97] => lookup_619_88_32(acc),
            [121, 97, 109, 97, 100, 97] => lookup_619_88_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_91_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_91<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 121, 97, 103, 97, 119, 97] => lookup_619_91_0(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 97, 119, 97] => lookup_619_91_1(acc),
            [107, 97, 110, 111, 110, 106, 105] => lookup_619_91_2(acc),
            [107, 111, 116, 111, 104, 105, 114, 97] => lookup_619_91_3(acc),
            [109, 97, 110, 110, 111] => lookup_619_91_4(acc),
            [109, 97, 114, 117, 103, 97, 109, 101] => lookup_619_91_5(acc),
            [109, 105, 116, 111, 121, 111] => lookup_619_91_6(acc),
            [110, 97, 111, 115, 104, 105, 109, 97] => lookup_619_91_7(acc),
            [115, 97, 110, 117, 107, 105] => lookup_619_91_8(acc),
            [116, 97, 100, 111, 116, 115, 117] => lookup_619_91_9(acc),
            [116, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_619_91_10(acc),
            [116, 111, 110, 111, 115, 104, 111] => lookup_619_91_11(acc),
            [117, 99, 104, 105, 110, 111, 109, 105] => lookup_619_91_12(acc),
            [117, 116, 97, 122, 117] => lookup_619_91_13(acc),
            [122, 101, 110, 116, 115, 117, 106, 105] => lookup_619_91_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_92_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_92<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 117, 110, 101] => lookup_619_92_0(acc),
            [97, 109, 97, 109, 105] => lookup_619_92_1(acc),
            [104, 105, 111, 107, 105] => lookup_619_92_2(acc),
            [105, 115, 97] => lookup_619_92_3(acc),
            [105, 115, 101, 110] => lookup_619_92_4(acc),
            [105, 122, 117, 109, 105] => lookup_619_92_5(acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_619_92_6(acc),
            [107, 97, 110, 111, 121, 97] => lookup_619_92_7(acc),
            [107, 97, 119, 97, 110, 97, 98, 101] => lookup_619_92_8(acc),
            [107, 105, 110, 107, 111] => lookup_619_92_9(acc),
            [107, 111, 117, 121, 97, 109, 97] => lookup_619_92_10(acc),
            [109, 97, 107, 117, 114, 97, 122, 97, 107, 105] => lookup_619_92_11(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_619_92_12(acc),
            [109, 105, 110, 97, 109, 105, 116, 97, 110, 101] => lookup_619_92_13(acc),
            [110, 97, 107, 97, 116, 97, 110, 101] => lookup_619_92_14(acc),
            [110, 105, 115, 104, 105, 110, 111, 111, 109, 111, 116, 101] => lookup_619_92_15(acc),
            [115, 97, 116, 115, 117, 109, 97, 115, 101, 110, 100, 97, 105] => lookup_619_92_16(acc),
            [115, 111, 111] => lookup_619_92_17(acc),
            [116, 97, 114, 117, 109, 105, 122, 117] => lookup_619_92_18(acc),
            [121, 117, 115, 117, 105] => lookup_619_92_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_93_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_93<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 107, 97, 119, 97] => lookup_619_93_0(acc),
            [97, 116, 115, 117, 103, 105] => lookup_619_93_1(acc),
            [97, 121, 97, 115, 101] => lookup_619_93_2(acc),
            [99, 104, 105, 103, 97, 115, 97, 107, 105] => lookup_619_93_3(acc),
            [101, 98, 105, 110, 97] => lookup_619_93_4(acc),
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_619_93_5(acc),
            [104, 97, 100, 97, 110, 111] => lookup_619_93_6(acc),
            [104, 97, 107, 111, 110, 101] => lookup_619_93_7(acc),
            [104, 105, 114, 97, 116, 115, 117, 107, 97] => lookup_619_93_8(acc),
            [105, 115, 101, 104, 97, 114, 97] => lookup_619_93_9(acc),
            [107, 97, 105, 115, 101, 105] => lookup_619_93_10(acc),
            [107, 97, 109, 97, 107, 117, 114, 97] => lookup_619_93_11(acc),
            [107, 105, 121, 111, 107, 97, 119, 97] => lookup_619_93_12(acc),
            [109, 97, 116, 115, 117, 100, 97] => lookup_619_93_13(acc),
            [109, 105, 110, 97, 109, 105, 97, 115, 104, 105, 103, 97, 114, 97] => {
                lookup_619_93_14(acc)
            }
            [109, 105, 117, 114, 97] => lookup_619_93_15(acc),
            [110, 97, 107, 97, 105] => lookup_619_93_16(acc),
            [110, 105, 110, 111, 109, 105, 121, 97] => lookup_619_93_17(acc),
            [111, 100, 97, 119, 97, 114, 97] => lookup_619_93_18(acc),
            [111, 105] => lookup_619_93_19(acc),
            [111, 105, 115, 111] => lookup_619_93_20(acc),
            [115, 97, 103, 97, 109, 105, 104, 97, 114, 97] => lookup_619_93_21(acc),
            [115, 97, 109, 117, 107, 97, 119, 97] => lookup_619_93_22(acc),
            [116, 115, 117, 107, 117, 105] => lookup_619_93_23(acc),
            [121, 97, 109, 97, 107, 105, 116, 97] => lookup_619_93_24(acc),
            [121, 97, 109, 97, 116, 111] => lookup_619_93_25(acc),
            [121, 111, 107, 111, 115, 117, 107, 97] => lookup_619_93_26(acc),
            [121, 117, 103, 97, 119, 97, 114, 97] => lookup_619_93_27(acc),
            [122, 97, 109, 97] => lookup_619_93_28(acc),
            [122, 117, 115, 104, 105] => lookup_619_93_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_95_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_95_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_95<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_619_95_0(acc),
            wild => lookup_619_95_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_619_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_99_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_99_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_99<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_619_99_0(acc),
            wild => lookup_619_99_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_619_100_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_100_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_100<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_619_100_0(acc),
            wild => lookup_619_100_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_619_101_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_101<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 105] => lookup_619_101_0(acc),
            [103, 101, 105, 115, 101, 105] => lookup_619_101_1(acc),
            [104, 105, 100, 97, 107, 97] => lookup_619_101_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 116, 115, 117, 110, 111] => lookup_619_101_3(acc),
            [105, 110, 111] => lookup_619_101_4(acc),
            [107, 97, 103, 97, 109, 105] => lookup_619_101_5(acc),
            [107, 97, 109, 105] => lookup_619_101_6(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_619_101_7(acc),
            [107, 111, 99, 104, 105] => lookup_619_101_8(acc),
            [109, 105, 104, 97, 114, 97] => lookup_619_101_9(acc),
            [109, 111, 116, 111, 121, 97, 109, 97] => lookup_619_101_10(acc),
            [109, 117, 114, 111, 116, 111] => lookup_619_101_11(acc),
            [110, 97, 104, 97, 114, 105] => lookup_619_101_12(acc),
            [110, 97, 107, 97, 109, 117, 114, 97] => lookup_619_101_13(acc),
            [110, 97, 110, 107, 111, 107, 117] => lookup_619_101_14(acc),
            [110, 105, 115, 104, 105, 116, 111, 115, 97] => lookup_619_101_15(acc),
            [110, 105, 121, 111, 100, 111, 103, 97, 119, 97] => lookup_619_101_16(acc),
            [111, 99, 104, 105] => lookup_619_101_17(acc),
            [111, 107, 97, 119, 97] => lookup_619_101_18(acc),
            [111, 116, 111, 121, 111] => lookup_619_101_19(acc),
            [111, 116, 115, 117, 107, 105] => lookup_619_101_20(acc),
            [115, 97, 107, 97, 119, 97] => lookup_619_101_21(acc),
            [115, 117, 107, 117, 109, 111] => lookup_619_101_22(acc),
            [115, 117, 115, 97, 107, 105] => lookup_619_101_23(acc),
            [116, 111, 115, 97] => lookup_619_101_24(acc),
            [116, 111, 115, 97, 115, 104, 105, 109, 105, 122, 117] => lookup_619_101_25(acc),
            [116, 111, 121, 111] => lookup_619_101_26(acc),
            [116, 115, 117, 110, 111] => lookup_619_101_27(acc),
            [117, 109, 97, 106, 105] => lookup_619_101_28(acc),
            [121, 97, 115, 117, 100, 97] => lookup_619_101_29(acc),
            [121, 117, 115, 117, 104, 97, 114, 97] => lookup_619_101_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_102_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_102<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 97, 107, 117, 115, 97] => lookup_619_102_0(acc),
            [97, 114, 97, 111] => lookup_619_102_1(acc),
            [97, 115, 111] => lookup_619_102_2(acc),
            [99, 104, 111, 121, 111] => lookup_619_102_3(acc),
            [103, 121, 111, 107, 117, 116, 111] => lookup_619_102_4(acc),
            [107, 97, 109, 105, 97, 109, 97, 107, 117, 115, 97] => lookup_619_102_5(acc),
            [107, 105, 107, 117, 99, 104, 105] => lookup_619_102_6(acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_619_102_7(acc),
            [109, 97, 115, 104, 105, 107, 105] => lookup_619_102_8(acc),
            [109, 105, 102, 117, 110, 101] => lookup_619_102_9(acc),
            [109, 105, 110, 97, 109, 97, 116, 97] => lookup_619_102_10(acc),
            [109, 105, 110, 97, 109, 105, 111, 103, 117, 110, 105] => lookup_619_102_11(acc),
            [110, 97, 103, 97, 115, 117] => lookup_619_102_12(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_619_102_13(acc),
            [111, 103, 117, 110, 105] => lookup_619_102_14(acc),
            [111, 122, 117] => lookup_619_102_15(acc),
            [115, 117, 109, 111, 116, 111] => lookup_619_102_16(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_619_102_17(acc),
            [117, 107, 105] => lookup_619_102_18(acc),
            [117, 116, 111] => lookup_619_102_19(acc),
            [121, 97, 109, 97, 103, 97] => lookup_619_102_20(acc),
            [121, 97, 109, 97, 116, 111] => lookup_619_102_21(acc),
            [121, 97, 116, 115, 117, 115, 104, 105, 114, 111] => lookup_619_102_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_104_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_104<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 121, 97, 98, 101] => lookup_619_104_0(acc),
            [102, 117, 107, 117, 99, 104, 105, 121, 97, 109, 97] => lookup_619_104_1(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97] => lookup_619_104_2(acc),
            [105, 100, 101] => lookup_619_104_3(acc),
            [105, 110, 101] => lookup_619_104_4(acc),
            [106, 111, 121, 111] => lookup_619_104_5(acc),
            [107, 97, 109, 101, 111, 107, 97] => lookup_619_104_6(acc),
            [107, 97, 109, 111] => lookup_619_104_7(acc),
            [107, 105, 116, 97] => lookup_619_104_8(acc),
            [107, 105, 122, 117] => lookup_619_104_9(acc),
            [107, 117, 109, 105, 121, 97, 109, 97] => lookup_619_104_10(acc),
            [107, 121, 111, 116, 97, 109, 98, 97] => lookup_619_104_11(acc),
            [107, 121, 111, 116, 97, 110, 97, 98, 101] => lookup_619_104_12(acc),
            [107, 121, 111, 116, 97, 110, 103, 111] => lookup_619_104_13(acc),
            [109, 97, 105, 122, 117, 114, 117] => lookup_619_104_14(acc),
            [109, 105, 110, 97, 109, 105] => lookup_619_104_15(acc),
            [109, 105, 110, 97, 109, 105, 121, 97, 109, 97, 115, 104, 105, 114, 111] => {
                lookup_619_104_16(acc)
            }
            [109, 105, 121, 97, 122, 117] => lookup_619_104_17(acc),
            [109, 117, 107, 111] => lookup_619_104_18(acc),
            [110, 97, 103, 97, 111, 107, 97, 107, 121, 111] => lookup_619_104_19(acc),
            [110, 97, 107, 97, 103, 121, 111] => lookup_619_104_20(acc),
            [110, 97, 110, 116, 97, 110] => lookup_619_104_21(acc),
            [111, 121, 97, 109, 97, 122, 97, 107, 105] => lookup_619_104_22(acc),
            [115, 97, 107, 121, 111] => lookup_619_104_23(acc),
            [115, 101, 105, 107, 97] => lookup_619_104_24(acc),
            [116, 97, 110, 97, 98, 101] => lookup_619_104_25(acc),
            [117, 106, 105] => lookup_619_104_26(acc),
            [117, 106, 105, 116, 97, 119, 97, 114, 97] => lookup_619_104_27(acc),
            [119, 97, 122, 117, 107, 97] => lookup_619_104_28(acc),
            [121, 97, 109, 97, 115, 104, 105, 110, 97] => lookup_619_104_29(acc),
            [121, 97, 119, 97, 116, 97] => lookup_619_104_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_114_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_114<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 104, 105] => lookup_619_114_0(acc),
            [105, 110, 97, 98, 101] => lookup_619_114_1(acc),
            [105, 115, 101] => lookup_619_114_2(acc),
            [107, 97, 109, 101, 121, 97, 109, 97] => lookup_619_114_3(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_619_114_4(acc),
            [107, 105, 104, 111] => lookup_619_114_5(acc),
            [107, 105, 115, 111, 115, 97, 107, 105] => lookup_619_114_6(acc),
            [107, 105, 119, 97] => lookup_619_114_7(acc),
            [107, 111, 109, 111, 110, 111] => lookup_619_114_8(acc),
            [107, 117, 109, 97, 110, 111] => lookup_619_114_9(acc),
            [107, 117, 119, 97, 110, 97] => lookup_619_114_10(acc),
            [109, 97, 116, 115, 117, 115, 97, 107, 97] => lookup_619_114_11(acc),
            [109, 101, 105, 119, 97] => lookup_619_114_12(acc),
            [109, 105, 104, 97, 109, 97] => lookup_619_114_13(acc),
            [109, 105, 110, 97, 109, 105, 105, 115, 101] => lookup_619_114_14(acc),
            [109, 105, 115, 117, 103, 105] => lookup_619_114_15(acc),
            [109, 105, 121, 97, 109, 97] => lookup_619_114_16(acc),
            [110, 97, 98, 97, 114, 105] => lookup_619_114_17(acc),
            [115, 104, 105, 109, 97] => lookup_619_114_18(acc),
            [115, 117, 122, 117, 107, 97] => lookup_619_114_19(acc),
            [116, 97, 100, 111] => lookup_619_114_20(acc),
            [116, 97, 105, 107, 105] => lookup_619_114_21(acc),
            [116, 97, 107, 105] => lookup_619_114_22(acc),
            [116, 97, 109, 97, 107, 105] => lookup_619_114_23(acc),
            [116, 111, 98, 97] => lookup_619_114_24(acc),
            [116, 115, 117] => lookup_619_114_25(acc),
            [117, 100, 111, 110, 111] => lookup_619_114_26(acc),
            [117, 114, 101, 115, 104, 105, 110, 111] => lookup_619_114_27(acc),
            [119, 97, 116, 97, 114, 97, 105] => lookup_619_114_28(acc),
            [121, 111, 107, 107, 97, 105, 99, 104, 105] => lookup_619_114_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_116_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_116<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 114, 117, 107, 97, 119, 97] => lookup_619_116_0(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => {
                lookup_619_116_1(acc)
            }
            [105, 115, 104, 105, 110, 111, 109, 97, 107, 105] => lookup_619_116_2(acc),
            [105, 119, 97, 110, 117, 109, 97] => lookup_619_116_3(acc),
            [107, 97, 107, 117, 100, 97] => lookup_619_116_4(acc),
            [107, 97, 109, 105] => lookup_619_116_5(acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_619_116_6(acc),
            [109, 97, 114, 117, 109, 111, 114, 105] => lookup_619_116_7(acc),
            [109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_619_116_8(acc),
            [109, 105, 110, 97, 109, 105, 115, 97, 110, 114, 105, 107, 117] => {
                lookup_619_116_9(acc)
            }
            [109, 105, 115, 97, 116, 111] => lookup_619_116_10(acc),
            [109, 117, 114, 97, 116, 97] => lookup_619_116_11(acc),
            [110, 97, 116, 111, 114, 105] => lookup_619_116_12(acc),
            [111, 103, 97, 119, 97, 114, 97] => lookup_619_116_13(acc),
            [111, 104, 105, 114, 97] => lookup_619_116_14(acc),
            [111, 110, 97, 103, 97, 119, 97] => lookup_619_116_15(acc),
            [111, 115, 97, 107, 105] => lookup_619_116_16(acc),
            [114, 105, 102, 117] => lookup_619_116_17(acc),
            [115, 101, 109, 105, 110, 101] => lookup_619_116_18(acc),
            [115, 104, 105, 98, 97, 116, 97] => lookup_619_116_19(acc),
            [115, 104, 105, 99, 104, 105, 107, 97, 115, 104, 117, 107, 117] => {
                lookup_619_116_20(acc)
            }
            [115, 104, 105, 107, 97, 109, 97] => lookup_619_116_21(acc),
            [115, 104, 105, 111, 103, 97, 109, 97] => lookup_619_116_22(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_619_116_23(acc),
            [116, 97, 103, 97, 106, 111] => lookup_619_116_24(acc),
            [116, 97, 105, 119, 97] => lookup_619_116_25(acc),
            [116, 111, 109, 101] => lookup_619_116_26(acc),
            [116, 111, 109, 105, 121, 97] => lookup_619_116_27(acc),
            [119, 97, 107, 117, 121, 97] => lookup_619_116_28(acc),
            [119, 97, 116, 97, 114, 105] => lookup_619_116_29(acc),
            [121, 97, 109, 97, 109, 111, 116, 111] => lookup_619_116_30(acc),
            [122, 97, 111] => lookup_619_116_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_117_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_117<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 121, 97] => lookup_619_117_0(acc),
            [101, 98, 105, 110, 111] => lookup_619_117_1(acc),
            [103, 111, 107, 97, 115, 101] => lookup_619_117_2(acc),
            [104, 121, 117, 103, 97] => lookup_619_117_3(acc),
            [107, 97, 100, 111, 103, 97, 119, 97] => lookup_619_117_4(acc),
            [107, 97, 119, 97, 109, 105, 110, 97, 109, 105] => lookup_619_117_5(acc),
            [107, 105, 106, 111] => lookup_619_117_6(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_619_117_7(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_619_117_8(acc),
            [107, 105, 116, 97, 117, 114, 97] => lookup_619_117_9(acc),
            [107, 111, 98, 97, 121, 97, 115, 104, 105] => lookup_619_117_10(acc),
            [107, 117, 110, 105, 116, 111, 109, 105] => lookup_619_117_11(acc),
            [107, 117, 115, 104, 105, 109, 97] => lookup_619_117_12(acc),
            [109, 105, 109, 97, 116, 97] => lookup_619_117_13(acc),
            [109, 105, 121, 97, 107, 111, 110, 111, 106, 111] => lookup_619_117_14(acc),
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_619_117_15(acc),
            [109, 111, 114, 111, 116, 115, 117, 107, 97] => lookup_619_117_16(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_619_117_17(acc),
            [110, 105, 115, 104, 105, 109, 101, 114, 97] => lookup_619_117_18(acc),
            [110, 111, 98, 101, 111, 107, 97] => lookup_619_117_19(acc),
            [115, 97, 105, 116, 111] => lookup_619_117_20(acc),
            [115, 104, 105, 105, 98, 97] => lookup_619_117_21(acc),
            [115, 104, 105, 110, 116, 111, 109, 105] => lookup_619_117_22(acc),
            [116, 97, 107, 97, 104, 97, 114, 117] => lookup_619_117_23(acc),
            [116, 97, 107, 97, 110, 97, 98, 101] => lookup_619_117_24(acc),
            [116, 97, 107, 97, 122, 97, 107, 105] => lookup_619_117_25(acc),
            [116, 115, 117, 110, 111] => lookup_619_117_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_123_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_123<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 104, 105] => lookup_619_123_0(acc),
            [97, 103, 101, 109, 97, 116, 115, 117] => lookup_619_123_1(acc),
            [97, 110, 97, 110] => lookup_619_123_2(acc),
            [97, 111, 107, 105] => lookup_619_123_3(acc),
            [97, 115, 97, 104, 105] => lookup_619_123_4(acc),
            [97, 122, 117, 109, 105, 110, 111] => lookup_619_123_5(acc),
            [99, 104, 105, 107, 117, 104, 111, 107, 117] => lookup_619_123_6(acc),
            [99, 104, 105, 107, 117, 109, 97] => lookup_619_123_7(acc),
            [99, 104, 105, 110, 111] => lookup_619_123_8(acc),
            [102, 117, 106, 105, 109, 105] => lookup_619_123_9(acc),
            [104, 97, 107, 117, 98, 97] => lookup_619_123_10(acc),
            [104, 97, 114, 97] => lookup_619_123_11(acc),
            [104, 105, 114, 97, 121, 97] => lookup_619_123_12(acc),
            [105, 105, 100, 97] => lookup_619_123_13(acc),
            [105, 105, 106, 105, 109, 97] => lookup_619_123_14(acc),
            [105, 105, 121, 97, 109, 97] => lookup_619_123_15(acc),
            [105, 105, 122, 117, 110, 97] => lookup_619_123_16(acc),
            [105, 107, 101, 100, 97] => lookup_619_123_17(acc),
            [105, 107, 117, 115, 97, 107, 97] => lookup_619_123_18(acc),
            [105, 110, 97] => lookup_619_123_19(acc),
            [107, 97, 114, 117, 105, 122, 97, 119, 97] => lookup_619_123_20(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_619_123_21(acc),
            [107, 105, 115, 111] => lookup_619_123_22(acc),
            [107, 105, 115, 111, 102, 117, 107, 117, 115, 104, 105, 109, 97] => {
                lookup_619_123_23(acc)
            }
            [107, 105, 116, 97, 97, 105, 107, 105] => lookup_619_123_24(acc),
            [107, 111, 109, 97, 103, 97, 110, 101] => lookup_619_123_25(acc),
            [107, 111, 109, 111, 114, 111] => lookup_619_123_26(acc),
            [109, 97, 116, 115, 117, 107, 97, 119, 97] => lookup_619_123_27(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_619_123_28(acc),
            [109, 105, 97, 115, 97] => lookup_619_123_29(acc),
            [109, 105, 110, 97, 109, 105, 97, 105, 107, 105] => lookup_619_123_30(acc),
            [109, 105, 110, 97, 109, 105, 109, 97, 107, 105] => lookup_619_123_31(acc),
            [109, 105, 110, 97, 109, 105, 109, 105, 110, 111, 119, 97] => lookup_619_123_32(acc),
            [109, 105, 110, 111, 119, 97] => lookup_619_123_33(acc),
            [109, 105, 121, 97, 100, 97] => lookup_619_123_34(acc),
            [109, 105, 121, 111, 116, 97] => lookup_619_123_35(acc),
            [109, 111, 99, 104, 105, 122, 117, 107, 105] => lookup_619_123_36(acc),
            [110, 97, 103, 97, 110, 111] => lookup_619_123_37(acc),
            [110, 97, 103, 97, 119, 97] => lookup_619_123_38(acc),
            [110, 97, 103, 105, 115, 111] => lookup_619_123_39(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_619_123_40(acc),
            [110, 97, 107, 97, 110, 111] => lookup_619_123_41(acc),
            [110, 111, 122, 97, 119, 97, 111, 110, 115, 101, 110] => lookup_619_123_42(acc),
            [111, 98, 117, 115, 101] => lookup_619_123_43(acc),
            [111, 103, 97, 119, 97] => lookup_619_123_44(acc),
            [111, 107, 97, 121, 97] => lookup_619_123_45(acc),
            [111, 109, 97, 99, 104, 105] => lookup_619_123_46(acc),
            [111, 109, 105] => lookup_619_123_47(acc),
            [111, 111, 107, 117, 119, 97] => lookup_619_123_48(acc),
            [111, 111, 115, 104, 105, 107, 97] => lookup_619_123_49(acc),
            [111, 116, 97, 107, 105] => lookup_619_123_50(acc),
            [111, 116, 97, 114, 105] => lookup_619_123_51(acc),
            [115, 97, 107, 97, 101] => lookup_619_123_52(acc),
            [115, 97, 107, 97, 107, 105] => lookup_619_123_53(acc),
            [115, 97, 107, 117] => lookup_619_123_54(acc),
            [115, 97, 107, 117, 104, 111] => lookup_619_123_55(acc),
            [115, 104, 105, 109, 111, 115, 117, 119, 97] => lookup_619_123_56(acc),
            [115, 104, 105, 110, 97, 110, 111, 109, 97, 99, 104, 105] => lookup_619_123_57(acc),
            [115, 104, 105, 111, 106, 105, 114, 105] => lookup_619_123_58(acc),
            [115, 117, 119, 97] => lookup_619_123_59(acc),
            [115, 117, 122, 97, 107, 97] => lookup_619_123_60(acc),
            [116, 97, 107, 97, 103, 105] => lookup_619_123_61(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_619_123_62(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_619_123_63(acc),
            [116, 97, 116, 101, 115, 104, 105, 110, 97] => lookup_619_123_64(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_619_123_65(acc),
            [116, 111, 103, 97, 107, 117, 115, 104, 105] => lookup_619_123_66(acc),
            [116, 111, 103, 117, 114, 97] => lookup_619_123_67(acc),
            [116, 111, 109, 105] => lookup_619_123_68(acc),
            [117, 101, 100, 97] => lookup_619_123_69(acc),
            [119, 97, 100, 97] => lookup_619_123_70(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_619_123_71(acc),
            [121, 97, 109, 97, 110, 111, 117, 99, 104, 105] => lookup_619_123_72(acc),
            [121, 97, 115, 97, 107, 97] => lookup_619_123_73(acc),
            [121, 97, 115, 117, 111, 107, 97] => lookup_619_123_74(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_124_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_124<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 105, 106, 105, 119, 97] => lookup_619_124_0(acc),
            [102, 117, 116, 115, 117] => lookup_619_124_1(acc),
            [103, 111, 116, 111] => lookup_619_124_2(acc),
            [104, 97, 115, 97, 109, 105] => lookup_619_124_3(acc),
            [104, 105, 114, 97, 100, 111] => lookup_619_124_4(acc),
            [105, 107, 105] => lookup_619_124_5(acc),
            [105, 115, 97, 104, 97, 121, 97] => lookup_619_124_6(acc),
            [107, 97, 119, 97, 116, 97, 110, 97] => lookup_619_124_7(acc),
            [107, 117, 99, 104, 105, 110, 111, 116, 115, 117] => lookup_619_124_8(acc),
            [109, 97, 116, 115, 117, 117, 114, 97] => lookup_619_124_9(acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_619_124_10(acc),
            [111, 98, 97, 109, 97] => lookup_619_124_11(acc),
            [111, 109, 117, 114, 97] => lookup_619_124_12(acc),
            [111, 115, 101, 116, 111] => lookup_619_124_13(acc),
            [115, 97, 105, 107, 97, 105] => lookup_619_124_14(acc),
            [115, 97, 115, 101, 98, 111] => lookup_619_124_15(acc),
            [115, 101, 105, 104, 105] => lookup_619_124_16(acc),
            [115, 104, 105, 109, 97, 98, 97, 114, 97] => lookup_619_124_17(acc),
            [115, 104, 105, 110, 107, 97, 109, 105, 103, 111, 116, 111] => lookup_619_124_18(acc),
            [116, 111, 103, 105, 116, 115, 117] => lookup_619_124_19(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_619_124_20(acc),
            [117, 110, 122, 101, 110] => lookup_619_124_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_125_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_125_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_125<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_619_125_0(acc),
            wild => lookup_619_125_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_619_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_127_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_127<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 100, 111] => lookup_619_127_0(acc),
            [103, 111, 115, 101] => lookup_619_127_1(acc),
            [104, 101, 103, 117, 114, 105] => lookup_619_127_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 115, 104, 105, 110, 111] => {
                lookup_619_127_3(acc)
            }
            [105, 107, 97, 114, 117, 103, 97] => lookup_619_127_4(acc),
            [105, 107, 111, 109, 97] => lookup_619_127_5(acc),
            [107, 97, 109, 105, 107, 105, 116, 97, 121, 97, 109, 97] => lookup_619_127_6(acc),
            [107, 97, 110, 109, 97, 107, 105] => lookup_619_127_7(acc),
            [107, 97, 115, 104, 105, 98, 97] => lookup_619_127_8(acc),
            [107, 97, 115, 104, 105, 104, 97, 114, 97] => lookup_619_127_9(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_619_127_10(acc),
            [107, 97, 119, 97, 105] => lookup_619_127_11(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_619_127_12(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_619_127_13(acc),
            [107, 111, 114, 121, 111] => lookup_619_127_14(acc),
            [107, 117, 114, 111, 116, 97, 107, 105] => lookup_619_127_15(acc),
            [109, 105, 116, 115, 117, 101] => lookup_619_127_16(acc),
            [109, 105, 121, 97, 107, 101] => lookup_619_127_17(acc),
            [110, 97, 114, 97] => lookup_619_127_18(acc),
            [110, 111, 115, 101, 103, 97, 119, 97] => lookup_619_127_19(acc),
            [111, 106, 105] => lookup_619_127_20(acc),
            [111, 117, 100, 97] => lookup_619_127_21(acc),
            [111, 121, 111, 100, 111] => lookup_619_127_22(acc),
            [115, 97, 107, 117, 114, 97, 105] => lookup_619_127_23(acc),
            [115, 97, 110, 103, 111] => lookup_619_127_24(acc),
            [115, 104, 105, 109, 111, 105, 99, 104, 105] => lookup_619_127_25(acc),
            [115, 104, 105, 109, 111, 107, 105, 116, 97, 121, 97, 109, 97] => {
                lookup_619_127_26(acc)
            }
            [115, 104, 105, 110, 106, 111] => lookup_619_127_27(acc),
            [115, 111, 110, 105] => lookup_619_127_28(acc),
            [116, 97, 107, 97, 116, 111, 114, 105] => lookup_619_127_29(acc),
            [116, 97, 119, 97, 114, 97, 109, 111, 116, 111] => lookup_619_127_30(acc),
            [116, 101, 110, 107, 97, 119, 97] => lookup_619_127_31(acc),
            [116, 101, 110, 114, 105] => lookup_619_127_32(acc),
            [117, 100, 97] => lookup_619_127_33(acc),
            [121, 97, 109, 97, 116, 111, 107, 111, 114, 105, 121, 97, 109, 97] => {
                lookup_619_127_34(acc)
            }
            [121, 97, 109, 97, 116, 111, 116, 97, 107, 97, 100, 97] => lookup_619_127_35(acc),
            [121, 97, 109, 97, 122, 111, 101] => lookup_619_127_36(acc),
            [121, 111, 115, 104, 105, 110, 111] => lookup_619_127_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_128_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_128_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_619_128_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_128_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_128_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_128_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_128_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_128_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_128_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_128_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_128_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_128_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_128<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 101, 105, 110, 101, 116] => lookup_619_128_0(info, labels, acc),
            [103, 101, 104, 105, 114, 110] => lookup_619_128_1(acc),
            [105, 118, 111, 114, 121] => lookup_619_128_2(acc),
            [109, 97, 105, 108, 45, 98, 111, 120] => lookup_619_128_3(acc),
            [109, 105, 110, 116, 115] => lookup_619_128_4(acc),
            [109, 111, 107, 117, 114, 101, 110] => lookup_619_128_5(acc),
            [111, 112, 97, 108] => lookup_619_128_6(acc),
            [115, 97, 107, 117, 114, 97] => lookup_619_128_7(acc),
            [115, 117, 109, 111, 109, 111] => lookup_619_128_8(acc),
            [116, 111, 112, 97, 122] => lookup_619_128_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_130<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 103, 97] => lookup_619_130_0(acc),
            [97, 103, 97, 110, 111] => lookup_619_130_1(acc),
            [103, 111, 115, 101, 110] => lookup_619_130_2(acc),
            [105, 116, 111, 105, 103, 97, 119, 97] => lookup_619_130_3(acc),
            [105, 122, 117, 109, 111, 122, 97, 107, 105] => lookup_619_130_4(acc),
            [106, 111, 101, 116, 115, 117] => lookup_619_130_5(acc),
            [107, 97, 109, 111] => lookup_619_130_6(acc),
            [107, 97, 114, 105, 119, 97] => lookup_619_130_7(acc),
            [107, 97, 115, 104, 105, 119, 97, 122, 97, 107, 105] => lookup_619_130_8(acc),
            [109, 105, 110, 97, 109, 105, 117, 111, 110, 117, 109, 97] => lookup_619_130_9(acc),
            [109, 105, 116, 115, 117, 107, 101] => lookup_619_130_10(acc),
            [109, 117, 105, 107, 97] => lookup_619_130_11(acc),
            [109, 117, 114, 97, 107, 97, 109, 105] => lookup_619_130_12(acc),
            [109, 121, 111, 107, 111] => lookup_619_130_13(acc),
            [110, 97, 103, 97, 111, 107, 97] => lookup_619_130_14(acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_619_130_15(acc),
            [111, 106, 105, 121, 97] => lookup_619_130_16(acc),
            [111, 109, 105] => lookup_619_130_17(acc),
            [115, 97, 100, 111] => lookup_619_130_18(acc),
            [115, 97, 110, 106, 111] => lookup_619_130_19(acc),
            [115, 101, 105, 114, 111] => lookup_619_130_20(acc),
            [115, 101, 105, 114, 111, 117] => lookup_619_130_21(acc),
            [115, 101, 107, 105, 107, 97, 119, 97] => lookup_619_130_22(acc),
            [115, 104, 105, 98, 97, 116, 97] => lookup_619_130_23(acc),
            [116, 97, 103, 97, 109, 105] => lookup_619_130_24(acc),
            [116, 97, 105, 110, 97, 105] => lookup_619_130_25(acc),
            [116, 111, 99, 104, 105, 111] => lookup_619_130_26(acc),
            [116, 111, 107, 97, 109, 97, 99, 104, 105] => lookup_619_130_27(acc),
            [116, 115, 117, 98, 97, 109, 101] => lookup_619_130_28(acc),
            [116, 115, 117, 110, 97, 110] => lookup_619_130_29(acc),
            [117, 111, 110, 117, 109, 97] => lookup_619_130_30(acc),
            [121, 97, 104, 105, 107, 111] => lookup_619_130_31(acc),
            [121, 111, 105, 116, 97] => lookup_619_130_32(acc),
            [121, 117, 122, 97, 119, 97] => lookup_619_130_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_136_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_136<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 112, 112, 117] => lookup_619_136_0(acc),
            [98, 117, 110, 103, 111, 111, 110, 111] => lookup_619_136_1(acc),
            [98, 117, 110, 103, 111, 116, 97, 107, 97, 100, 97] => lookup_619_136_2(acc),
            [104, 97, 115, 97, 109, 97] => lookup_619_136_3(acc),
            [104, 105, 106, 105] => lookup_619_136_4(acc),
            [104, 105, 109, 101, 115, 104, 105, 109, 97] => lookup_619_136_5(acc),
            [104, 105, 116, 97] => lookup_619_136_6(acc),
            [107, 97, 109, 105, 116, 115, 117, 101] => lookup_619_136_7(acc),
            [107, 111, 107, 111, 110, 111, 101] => lookup_619_136_8(acc),
            [107, 117, 106, 117] => lookup_619_136_9(acc),
            [107, 117, 110, 105, 115, 97, 107, 105] => lookup_619_136_10(acc),
            [107, 117, 115, 117] => lookup_619_136_11(acc),
            [111, 105, 116, 97] => lookup_619_136_12(acc),
            [115, 97, 105, 107, 105] => lookup_619_136_13(acc),
            [116, 97, 107, 101, 116, 97] => lookup_619_136_14(acc),
            [116, 115, 117, 107, 117, 109, 105] => lookup_619_136_15(acc),
            [117, 115, 97] => lookup_619_136_16(acc),
            [117, 115, 117, 107, 105] => lookup_619_136_17(acc),
            [121, 117, 102, 117] => lookup_619_136_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_137_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_137<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 97, 105, 119, 97] => lookup_619_137_0(acc),
            [97, 115, 97, 107, 117, 99, 104, 105] => lookup_619_137_1(acc),
            [98, 105, 122, 101, 110] => lookup_619_137_2(acc),
            [104, 97, 121, 97, 115, 104, 105, 109, 97] => lookup_619_137_3(acc),
            [105, 98, 97, 114, 97] => lookup_619_137_4(acc),
            [107, 97, 103, 97, 109, 105, 110, 111] => lookup_619_137_5(acc),
            [107, 97, 115, 97, 111, 107, 97] => lookup_619_137_6(acc),
            [107, 105, 98, 105, 99, 104, 117, 111] => lookup_619_137_7(acc),
            [107, 117, 109, 101, 110, 97, 110] => lookup_619_137_8(acc),
            [107, 117, 114, 97, 115, 104, 105, 107, 105] => lookup_619_137_9(acc),
            [109, 97, 110, 105, 119, 97] => lookup_619_137_10(acc),
            [109, 105, 115, 97, 107, 105] => lookup_619_137_11(acc),
            [110, 97, 103, 105] => lookup_619_137_12(acc),
            [110, 105, 105, 109, 105] => lookup_619_137_13(acc),
            [110, 105, 115, 104, 105, 97, 119, 97, 107, 117, 114, 97] => lookup_619_137_14(acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_619_137_15(acc),
            [115, 97, 116, 111, 115, 104, 111] => lookup_619_137_16(acc),
            [115, 101, 116, 111, 117, 99, 104, 105] => lookup_619_137_17(acc),
            [115, 104, 105, 110, 106, 111] => lookup_619_137_18(acc),
            [115, 104, 111, 111] => lookup_619_137_19(acc),
            [115, 111, 106, 97] => lookup_619_137_20(acc),
            [116, 97, 107, 97, 104, 97, 115, 104, 105] => lookup_619_137_21(acc),
            [116, 97, 109, 97, 110, 111] => lookup_619_137_22(acc),
            [116, 115, 117, 121, 97, 109, 97] => lookup_619_137_23(acc),
            [119, 97, 107, 101] => lookup_619_137_24(acc),
            [121, 97, 107, 97, 103, 101] => lookup_619_137_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_138_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_138<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 103, 117, 110, 105] => lookup_619_138_0(acc),
            [103, 105, 110, 111, 119, 97, 110] => lookup_619_138_1(acc),
            [103, 105, 110, 111, 122, 97] => lookup_619_138_2(acc),
            [103, 117, 115, 104, 105, 107, 97, 109, 105] => lookup_619_138_3(acc),
            [104, 97, 101, 98, 97, 114, 117] => lookup_619_138_4(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_619_138_5(acc),
            [104, 105, 114, 97, 114, 97] => lookup_619_138_6(acc),
            [105, 104, 101, 121, 97] => lookup_619_138_7(acc),
            [105, 115, 104, 105, 103, 97, 107, 105] => lookup_619_138_8(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_619_138_9(acc),
            [105, 116, 111, 109, 97, 110] => lookup_619_138_10(acc),
            [105, 122, 101, 110, 97] => lookup_619_138_11(acc),
            [107, 97, 100, 101, 110, 97] => lookup_619_138_12(acc),
            [107, 105, 110] => lookup_619_138_13(acc),
            [107, 105, 116, 97, 100, 97, 105, 116, 111] => lookup_619_138_14(acc),
            [107, 105, 116, 97, 110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => {
                lookup_619_138_15(acc)
            }
            [107, 117, 109, 101, 106, 105, 109, 97] => lookup_619_138_16(acc),
            [107, 117, 110, 105, 103, 97, 109, 105] => lookup_619_138_17(acc),
            [109, 105, 110, 97, 109, 105, 100, 97, 105, 116, 111] => lookup_619_138_18(acc),
            [109, 111, 116, 111, 98, 117] => lookup_619_138_19(acc),
            [110, 97, 103, 111] => lookup_619_138_20(acc),
            [110, 97, 104, 97] => lookup_619_138_21(acc),
            [110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => lookup_619_138_22(acc),
            [110, 97, 107, 105, 106, 105, 110] => lookup_619_138_23(acc),
            [110, 97, 110, 106, 111] => lookup_619_138_24(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_619_138_25(acc),
            [111, 103, 105, 109, 105] => lookup_619_138_26(acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_619_138_27(acc),
            [111, 110, 110, 97] => lookup_619_138_28(acc),
            [115, 104, 105, 109, 111, 106, 105] => lookup_619_138_29(acc),
            [116, 97, 107, 101, 116, 111, 109, 105] => lookup_619_138_30(acc),
            [116, 97, 114, 97, 109, 97] => lookup_619_138_31(acc),
            [116, 111, 107, 97, 115, 104, 105, 107, 105] => lookup_619_138_32(acc),
            [116, 111, 109, 105, 103, 117, 115, 117, 107, 117] => lookup_619_138_33(acc),
            [116, 111, 110, 97, 107, 105] => lookup_619_138_34(acc),
            [117, 114, 97, 115, 111, 101] => lookup_619_138_35(acc),
            [117, 114, 117, 109, 97] => lookup_619_138_36(acc),
            [121, 97, 101, 115, 101] => lookup_619_138_37(acc),
            [121, 111, 109, 105, 116, 97, 110] => lookup_619_138_38(acc),
            [121, 111, 110, 97, 98, 97, 114, 117] => lookup_619_138_39(acc),
            [121, 111, 110, 97, 103, 117, 110, 105] => lookup_619_138_40(acc),
            [122, 97, 109, 97, 109, 105] => lookup_619_138_41(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_141<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 101, 110, 111] => lookup_619_141_0(acc),
            [99, 104, 105, 104, 97, 121, 97, 97, 107, 97, 115, 97, 107, 97] => {
                lookup_619_141_1(acc)
            }
            [99, 104, 117, 111] => lookup_619_141_2(acc),
            [100, 97, 105, 116, 111] => lookup_619_141_3(acc),
            [102, 117, 106, 105, 105, 100, 101, 114, 97] => lookup_619_141_4(acc),
            [104, 97, 98, 105, 107, 105, 110, 111] => lookup_619_141_5(acc),
            [104, 97, 110, 110, 97, 110] => lookup_619_141_6(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 115, 97, 107, 97] => lookup_619_141_7(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 117, 109, 105, 121, 111, 115, 104, 105] => {
                lookup_619_141_8(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 100, 111, 103, 97, 119, 97] => {
                lookup_619_141_9(acc)
            }
            [104, 105, 114, 97, 107, 97, 116, 97] => lookup_619_141_10(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_619_141_11(acc),
            [105, 107, 101, 100, 97] => lookup_619_141_12(acc),
            [105, 122, 117, 109, 105] => lookup_619_141_13(acc),
            [105, 122, 117, 109, 105, 111, 116, 115, 117] => lookup_619_141_14(acc),
            [105, 122, 117, 109, 105, 115, 97, 110, 111] => lookup_619_141_15(acc),
            [107, 97, 100, 111, 109, 97] => lookup_619_141_16(acc),
            [107, 97, 105, 122, 117, 107, 97] => lookup_619_141_17(acc),
            [107, 97, 110, 97, 110] => lookup_619_141_18(acc),
            [107, 97, 115, 104, 105, 119, 97, 114, 97] => lookup_619_141_19(acc),
            [107, 97, 116, 97, 110, 111] => lookup_619_141_20(acc),
            [107, 97, 119, 97, 99, 104, 105, 110, 97, 103, 97, 110, 111] => lookup_619_141_21(acc),
            [107, 105, 115, 104, 105, 119, 97, 100, 97] => lookup_619_141_22(acc),
            [107, 105, 116, 97] => lookup_619_141_23(acc),
            [107, 117, 109, 97, 116, 111, 114, 105] => lookup_619_141_24(acc),
            [109, 97, 116, 115, 117, 98, 97, 114, 97] => lookup_619_141_25(acc),
            [109, 105, 110, 97, 116, 111] => lookup_619_141_26(acc),
            [109, 105, 110, 111, 104] => lookup_619_141_27(acc),
            [109, 105, 115, 97, 107, 105] => lookup_619_141_28(acc),
            [109, 111, 114, 105, 103, 117, 99, 104, 105] => lookup_619_141_29(acc),
            [110, 101, 121, 97, 103, 97, 119, 97] => lookup_619_141_30(acc),
            [110, 105, 115, 104, 105] => lookup_619_141_31(acc),
            [110, 111, 115, 101] => lookup_619_141_32(acc),
            [111, 115, 97, 107, 97, 115, 97, 121, 97, 109, 97] => lookup_619_141_33(acc),
            [115, 97, 107, 97, 105] => lookup_619_141_34(acc),
            [115, 97, 121, 97, 109, 97] => lookup_619_141_35(acc),
            [115, 101, 110, 110, 97, 110] => lookup_619_141_36(acc),
            [115, 101, 116, 116, 115, 117] => lookup_619_141_37(acc),
            [115, 104, 105, 106, 111, 110, 97, 119, 97, 116, 101] => lookup_619_141_38(acc),
            [115, 104, 105, 109, 97, 109, 111, 116, 111] => lookup_619_141_39(acc),
            [115, 117, 105, 116, 97] => lookup_619_141_40(acc),
            [116, 97, 100, 97, 111, 107, 97] => lookup_619_141_41(acc),
            [116, 97, 105, 115, 104, 105] => lookup_619_141_42(acc),
            [116, 97, 106, 105, 114, 105] => lookup_619_141_43(acc),
            [116, 97, 107, 97, 105, 115, 104, 105] => lookup_619_141_44(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_619_141_45(acc),
            [116, 111, 110, 100, 97, 98, 97, 121, 97, 115, 104, 105] => lookup_619_141_46(acc),
            [116, 111, 121, 111, 110, 97, 107, 97] => lookup_619_141_47(acc),
            [116, 111, 121, 111, 110, 111] => lookup_619_141_48(acc),
            [121, 97, 111] => lookup_619_141_49(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_162_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_162<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 105, 97, 107, 101] => lookup_619_162_0(acc),
            [97, 114, 105, 116, 97] => lookup_619_162_1(acc),
            [102, 117, 107, 117, 100, 111, 109, 105] => lookup_619_162_2(acc),
            [103, 101, 110, 107, 97, 105] => lookup_619_162_3(acc),
            [104, 97, 109, 97, 116, 97, 109, 97] => lookup_619_162_4(acc),
            [104, 105, 122, 101, 110] => lookup_619_162_5(acc),
            [105, 109, 97, 114, 105] => lookup_619_162_6(acc),
            [107, 97, 109, 105, 109, 105, 110, 101] => lookup_619_162_7(acc),
            [107, 97, 110, 122, 97, 107, 105] => lookup_619_162_8(acc),
            [107, 97, 114, 97, 116, 115, 117] => lookup_619_162_9(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_619_162_10(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_619_162_11(acc),
            [107, 105, 116, 97, 104, 97, 116, 97] => lookup_619_162_12(acc),
            [107, 105, 121, 97, 109, 97] => lookup_619_162_13(acc),
            [107, 111, 117, 104, 111, 107, 117] => lookup_619_162_14(acc),
            [107, 121, 117, 114, 97, 103, 105] => lookup_619_162_15(acc),
            [110, 105, 115, 104, 105, 97, 114, 105, 116, 97] => lookup_619_162_16(acc),
            [111, 103, 105] => lookup_619_162_17(acc),
            [111, 109, 97, 99, 104, 105] => lookup_619_162_18(acc),
            [111, 117, 99, 104, 105] => lookup_619_162_19(acc),
            [115, 97, 103, 97] => lookup_619_162_20(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_619_162_21(acc),
            [116, 97, 107, 117] => lookup_619_162_22(acc),
            [116, 97, 114, 97] => lookup_619_162_23(acc),
            [116, 111, 115, 117] => lookup_619_162_24(acc),
            [121, 111, 115, 104, 105, 110, 111, 103, 97, 114, 105] => lookup_619_162_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_163_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_163<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 97, 107, 97, 119, 97] => lookup_619_163_0(acc),
            [97, 115, 97, 107, 97] => lookup_619_163_1(acc),
            [99, 104, 105, 99, 104, 105, 98, 117] => lookup_619_163_2(acc),
            [102, 117, 106, 105, 109, 105] => lookup_619_163_3(acc),
            [102, 117, 106, 105, 109, 105, 110, 111] => lookup_619_163_4(acc),
            [102, 117, 107, 97, 121, 97] => lookup_619_163_5(acc),
            [104, 97, 110, 110, 111] => lookup_619_163_6(acc),
            [104, 97, 110, 121, 117] => lookup_619_163_7(acc),
            [104, 97, 115, 117, 100, 97] => lookup_619_163_8(acc),
            [104, 97, 116, 111, 103, 97, 121, 97] => lookup_619_163_9(acc),
            [104, 97, 116, 111, 121, 97, 109, 97] => lookup_619_163_10(acc),
            [104, 105, 100, 97, 107, 97] => lookup_619_163_11(acc),
            [104, 105, 103, 97, 115, 104, 105, 99, 104, 105, 99, 104, 105, 98, 117] => {
                lookup_619_163_12(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 121, 97, 109, 97] => {
                lookup_619_163_13(acc)
            }
            [104, 111, 110, 106, 111] => lookup_619_163_14(acc),
            [105, 110, 97] => lookup_619_163_15(acc),
            [105, 114, 117, 109, 97] => lookup_619_163_16(acc),
            [105, 119, 97, 116, 115, 117, 107, 105] => lookup_619_163_17(acc),
            [107, 97, 109, 105, 105, 122, 117, 109, 105] => lookup_619_163_18(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_619_163_19(acc),
            [107, 97, 109, 105, 115, 97, 116, 111] => lookup_619_163_20(acc),
            [107, 97, 115, 117, 107, 97, 98, 101] => lookup_619_163_21(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_619_163_22(acc),
            [107, 97, 119, 97, 103, 117, 99, 104, 105] => lookup_619_163_23(acc),
            [107, 97, 119, 97, 106, 105, 109, 97] => lookup_619_163_24(acc),
            [107, 97, 122, 111] => lookup_619_163_25(acc),
            [107, 105, 116, 97, 109, 111, 116, 111] => lookup_619_163_26(acc),
            [107, 111, 115, 104, 105, 103, 97, 121, 97] => lookup_619_163_27(acc),
            [107, 111, 117, 110, 111, 115, 117] => lookup_619_163_28(acc),
            [107, 117, 107, 105] => lookup_619_163_29(acc),
            [107, 117, 109, 97, 103, 97, 121, 97] => lookup_619_163_30(acc),
            [109, 97, 116, 115, 117, 98, 117, 115, 104, 105] => lookup_619_163_31(acc),
            [109, 105, 110, 97, 110, 111] => lookup_619_163_32(acc),
            [109, 105, 115, 97, 116, 111] => lookup_619_163_33(acc),
            [109, 105, 121, 97, 115, 104, 105, 114, 111] => lookup_619_163_34(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_619_163_35(acc),
            [109, 111, 114, 111, 121, 97, 109, 97] => lookup_619_163_36(acc),
            [110, 97, 103, 97, 116, 111, 114, 111] => lookup_619_163_37(acc),
            [110, 97, 109, 101, 103, 97, 119, 97] => lookup_619_163_38(acc),
            [110, 105, 105, 122, 97] => lookup_619_163_39(acc),
            [111, 103, 97, 110, 111] => lookup_619_163_40(acc),
            [111, 103, 97, 119, 97] => lookup_619_163_41(acc),
            [111, 103, 111, 115, 101] => lookup_619_163_42(acc),
            [111, 107, 101, 103, 97, 119, 97] => lookup_619_163_43(acc),
            [111, 109, 105, 121, 97] => lookup_619_163_44(acc),
            [111, 116, 97, 107, 105] => lookup_619_163_45(acc),
            [114, 97, 110, 122, 97, 110] => lookup_619_163_46(acc),
            [114, 121, 111, 107, 97, 109, 105] => lookup_619_163_47(acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_619_163_48(acc),
            [115, 97, 107, 97, 100, 111] => lookup_619_163_49(acc),
            [115, 97, 116, 116, 101] => lookup_619_163_50(acc),
            [115, 97, 121, 97, 109, 97] => lookup_619_163_51(acc),
            [115, 104, 105, 107, 105] => lookup_619_163_52(acc),
            [115, 104, 105, 114, 97, 111, 107, 97] => lookup_619_163_53(acc),
            [115, 111, 107, 97] => lookup_619_163_54(acc),
            [115, 117, 103, 105, 116, 111] => lookup_619_163_55(acc),
            [116, 111, 100, 97] => lookup_619_163_56(acc),
            [116, 111, 107, 105, 103, 97, 119, 97] => lookup_619_163_57(acc),
            [116, 111, 107, 111, 114, 111, 122, 97, 119, 97] => lookup_619_163_58(acc),
            [116, 115, 117, 114, 117, 103, 97, 115, 104, 105, 109, 97] => lookup_619_163_59(acc),
            [117, 114, 97, 119, 97] => lookup_619_163_60(acc),
            [119, 97, 114, 97, 98, 105] => lookup_619_163_61(acc),
            [121, 97, 115, 104, 105, 111] => lookup_619_163_62(acc),
            [121, 111, 107, 111, 122, 101] => lookup_619_163_63(acc),
            [121, 111, 110, 111] => lookup_619_163_64(acc),
            [121, 111, 114, 105, 105] => lookup_619_163_65(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_619_163_66(acc),
            [121, 111, 115, 104, 105, 107, 97, 119, 97] => lookup_619_163_67(acc),
            [121, 111, 115, 104, 105, 109, 105] => lookup_619_163_68(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_164_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_164_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_619_164_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_164_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_164_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_619_164_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_164<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [105, 115, 107, 48, 49] => lookup_619_164_0(info, labels, acc),
            [105, 115, 107, 48, 50] => lookup_619_164_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_166_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_166_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_166<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_619_166_0(acc),
            wild => lookup_619_166_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_619_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_170_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_170_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_170<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_619_170_0(acc),
            wild => lookup_619_170_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_619_171_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_171<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 115, 104, 111] => lookup_619_171_0(acc),
            [103, 97, 109, 111] => lookup_619_171_1(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 109, 105] => lookup_619_171_2(acc),
            [104, 105, 107, 111, 110, 101] => lookup_619_171_3(acc),
            [107, 111, 107, 97] => lookup_619_171_4(acc),
            [107, 111, 110, 97, 110] => lookup_619_171_5(acc),
            [107, 111, 115, 101, 105] => lookup_619_171_6(acc),
            [107, 111, 116, 111] => lookup_619_171_7(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_619_171_8(acc),
            [109, 97, 105, 98, 97, 114, 97] => lookup_619_171_9(acc),
            [109, 111, 114, 105, 121, 97, 109, 97] => lookup_619_171_10(acc),
            [110, 97, 103, 97, 104, 97, 109, 97] => lookup_619_171_11(acc),
            [110, 105, 115, 104, 105, 97, 122, 97, 105] => lookup_619_171_12(acc),
            [110, 111, 116, 111, 103, 97, 119, 97] => lookup_619_171_13(acc),
            [111, 109, 105, 104, 97, 99, 104, 105, 109, 97, 110] => lookup_619_171_14(acc),
            [111, 116, 115, 117] => lookup_619_171_15(acc),
            [114, 105, 116, 116, 111] => lookup_619_171_16(acc),
            [114, 121, 117, 111, 104] => lookup_619_171_17(acc),
            [116, 97, 107, 97, 115, 104, 105, 109, 97] => lookup_619_171_18(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_619_171_19(acc),
            [116, 111, 114, 97, 104, 105, 109, 101] => lookup_619_171_20(acc),
            [116, 111, 121, 111, 115, 97, 116, 111] => lookup_619_171_21(acc),
            [121, 97, 115, 117] => lookup_619_171_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_172_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_172<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 97, 103, 105] => lookup_619_172_0(acc),
            [97, 109, 97] => lookup_619_172_1(acc),
            [103, 111, 116, 115, 117] => lookup_619_172_2(acc),
            [104, 97, 109, 97, 100, 97] => lookup_619_172_3(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117, 109, 111] => lookup_619_172_4(acc),
            [104, 105, 107, 97, 119, 97] => lookup_619_172_5(acc),
            [104, 105, 107, 105, 109, 105] => lookup_619_172_6(acc),
            [105, 122, 117, 109, 111] => lookup_619_172_7(acc),
            [107, 97, 107, 105, 110, 111, 107, 105] => lookup_619_172_8(acc),
            [109, 97, 115, 117, 100, 97] => lookup_619_172_9(acc),
            [109, 97, 116, 115, 117, 101] => lookup_619_172_10(acc),
            [109, 105, 115, 97, 116, 111] => lookup_619_172_11(acc),
            [110, 105, 115, 104, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_619_172_12(acc),
            [111, 104, 100, 97] => lookup_619_172_13(acc),
            [111, 107, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_619_172_14(acc),
            [111, 107, 117, 105, 122, 117, 109, 111] => lookup_619_172_15(acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_619_172_16(acc),
            [116, 97, 109, 97, 121, 117] => lookup_619_172_17(acc),
            [116, 115, 117, 119, 97, 110, 111] => lookup_619_172_18(acc),
            [117, 110, 110, 97, 110] => lookup_619_172_19(acc),
            [121, 97, 107, 117, 109, 111] => lookup_619_172_20(acc),
            [121, 97, 115, 117, 103, 105] => lookup_619_172_21(acc),
            [121, 97, 116, 115, 117, 107, 97] => lookup_619_172_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_173_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_173<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 97, 105] => lookup_619_173_0(acc),
            [97, 116, 97, 109, 105] => lookup_619_173_1(acc),
            [102, 117, 106, 105] => lookup_619_173_2(acc),
            [102, 117, 106, 105, 101, 100, 97] => lookup_619_173_3(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_619_173_4(acc),
            [102, 117, 106, 105, 110, 111, 109, 105, 121, 97] => lookup_619_173_5(acc),
            [102, 117, 107, 117, 114, 111, 105] => lookup_619_173_6(acc),
            [103, 111, 116, 101, 109, 98, 97] => lookup_619_173_7(acc),
            [104, 97, 105, 98, 97, 114, 97] => lookup_619_173_8(acc),
            [104, 97, 109, 97, 109, 97, 116, 115, 117] => lookup_619_173_9(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117] => lookup_619_173_10(acc),
            [105, 116, 111] => lookup_619_173_11(acc),
            [105, 119, 97, 116, 97] => lookup_619_173_12(acc),
            [105, 122, 117] => lookup_619_173_13(acc),
            [105, 122, 117, 110, 111, 107, 117, 110, 105] => lookup_619_173_14(acc),
            [107, 97, 107, 101, 103, 97, 119, 97] => lookup_619_173_15(acc),
            [107, 97, 110, 110, 97, 109, 105] => lookup_619_173_16(acc),
            [107, 97, 119, 97, 110, 101, 104, 111, 110] => lookup_619_173_17(acc),
            [107, 97, 119, 97, 122, 117] => lookup_619_173_18(acc),
            [107, 105, 107, 117, 103, 97, 119, 97] => lookup_619_173_19(acc),
            [107, 111, 115, 97, 105] => lookup_619_173_20(acc),
            [109, 97, 107, 105, 110, 111, 104, 97, 114, 97] => lookup_619_173_21(acc),
            [109, 97, 116, 115, 117, 122, 97, 107, 105] => lookup_619_173_22(acc),
            [109, 105, 110, 97, 109, 105, 105, 122, 117] => lookup_619_173_23(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_619_173_24(acc),
            [109, 111, 114, 105, 109, 97, 99, 104, 105] => lookup_619_173_25(acc),
            [110, 105, 115, 104, 105, 105, 122, 117] => lookup_619_173_26(acc),
            [110, 117, 109, 97, 122, 117] => lookup_619_173_27(acc),
            [111, 109, 97, 101, 122, 97, 107, 105] => lookup_619_173_28(acc),
            [115, 104, 105, 109, 97, 100, 97] => lookup_619_173_29(acc),
            [115, 104, 105, 109, 105, 122, 117] => lookup_619_173_30(acc),
            [115, 104, 105, 109, 111, 100, 97] => lookup_619_173_31(acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_619_173_32(acc),
            [115, 117, 115, 111, 110, 111] => lookup_619_173_33(acc),
            [121, 97, 105, 122, 117] => lookup_619_173_34(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_619_173_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_183_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_183<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 104, 105, 107, 97, 103, 97] => lookup_619_183_0(acc),
            [98, 97, 116, 111] => lookup_619_183_1(acc),
            [104, 97, 103, 97] => lookup_619_183_2(acc),
            [105, 99, 104, 105, 107, 97, 105] => lookup_619_183_3(acc),
            [105, 119, 97, 102, 117, 110, 101] => lookup_619_183_4(acc),
            [107, 97, 109, 105, 110, 111, 107, 97, 119, 97] => lookup_619_183_5(acc),
            [107, 97, 110, 117, 109, 97] => lookup_619_183_6(acc),
            [107, 97, 114, 97, 115, 117, 121, 97, 109, 97] => lookup_619_183_7(acc),
            [107, 117, 114, 111, 105, 115, 111] => lookup_619_183_8(acc),
            [109, 97, 115, 104, 105, 107, 111] => lookup_619_183_9(acc),
            [109, 105, 98, 117] => lookup_619_183_10(acc),
            [109, 111, 107, 97] => lookup_619_183_11(acc),
            [109, 111, 116, 101, 103, 105] => lookup_619_183_12(acc),
            [110, 97, 115, 117] => lookup_619_183_13(acc),
            [110, 97, 115, 117, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_619_183_14(acc),
            [110, 105, 107, 107, 111] => lookup_619_183_15(acc),
            [110, 105, 115, 104, 105, 107, 97, 116, 97] => lookup_619_183_16(acc),
            [110, 111, 103, 105] => lookup_619_183_17(acc),
            [111, 104, 105, 114, 97] => lookup_619_183_18(acc),
            [111, 104, 116, 97, 119, 97, 114, 97] => lookup_619_183_19(acc),
            [111, 121, 97, 109, 97] => lookup_619_183_20(acc),
            [115, 97, 107, 117, 114, 97] => lookup_619_183_21(acc),
            [115, 97, 110, 111] => lookup_619_183_22(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 107, 101] => lookup_619_183_23(acc),
            [115, 104, 105, 111, 121, 97] => lookup_619_183_24(acc),
            [116, 97, 107, 97, 110, 101, 122, 97, 119, 97] => lookup_619_183_25(acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_619_183_26(acc),
            [116, 115, 117, 103, 97] => lookup_619_183_27(acc),
            [117, 106, 105, 105, 101] => lookup_619_183_28(acc),
            [117, 116, 115, 117, 110, 111, 109, 105, 121, 97] => lookup_619_183_29(acc),
            [121, 97, 105, 116, 97] => lookup_619_183_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_184_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_184<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 122, 117, 109, 105] => lookup_619_184_0(acc),
            [97, 110, 97, 110] => lookup_619_184_1(acc),
            [105, 99, 104, 105, 98, 97] => lookup_619_184_2(acc),
            [105, 116, 97, 110, 111] => lookup_619_184_3(acc),
            [107, 97, 105, 110, 97, 110] => lookup_619_184_4(acc),
            [107, 111, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_619_184_5(acc),
            [109, 97, 116, 115, 117, 115, 104, 105, 103, 101] => lookup_619_184_6(acc),
            [109, 105, 109, 97] => lookup_619_184_7(acc),
            [109, 105, 110, 97, 109, 105] => lookup_619_184_8(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_619_184_9(acc),
            [109, 117, 103, 105] => lookup_619_184_10(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_619_184_11(acc),
            [110, 97, 114, 117, 116, 111] => lookup_619_184_12(acc),
            [115, 97, 110, 97, 103, 111, 99, 104, 105] => lookup_619_184_13(acc),
            [115, 104, 105, 115, 104, 105, 107, 117, 105] => lookup_619_184_14(acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_619_184_15(acc),
            [119, 97, 106, 105, 107, 105] => lookup_619_184_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_185_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_185<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 97, 99, 104, 105] => lookup_619_185_0(acc),
            [97, 107, 105, 114, 117, 110, 111] => lookup_619_185_1(acc),
            [97, 107, 105, 115, 104, 105, 109, 97] => lookup_619_185_2(acc),
            [97, 111, 103, 97, 115, 104, 105, 109, 97] => lookup_619_185_3(acc),
            [97, 114, 97, 107, 97, 119, 97] => lookup_619_185_4(acc),
            [98, 117, 110, 107, 121, 111] => lookup_619_185_5(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_619_185_6(acc),
            [99, 104, 111, 102, 117] => lookup_619_185_7(acc),
            [99, 104, 117, 111] => lookup_619_185_8(acc),
            [101, 100, 111, 103, 97, 119, 97] => lookup_619_185_9(acc),
            [102, 117, 99, 104, 117] => lookup_619_185_10(acc),
            [102, 117, 115, 115, 97] => lookup_619_185_11(acc),
            [104, 97, 99, 104, 105, 106, 111] => lookup_619_185_12(acc),
            [104, 97, 99, 104, 105, 111, 106, 105] => lookup_619_185_13(acc),
            [104, 97, 109, 117, 114, 97] => lookup_619_185_14(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 117, 114, 117, 109, 101] => {
                lookup_619_185_15(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_619_185_16(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97, 116, 111] => {
                lookup_619_185_17(acc)
            }
            [104, 105, 110, 111] => lookup_619_185_18(acc),
            [104, 105, 110, 111, 100, 101] => lookup_619_185_19(acc),
            [104, 105, 110, 111, 104, 97, 114, 97] => lookup_619_185_20(acc),
            [105, 110, 97, 103, 105] => lookup_619_185_21(acc),
            [105, 116, 97, 98, 97, 115, 104, 105] => lookup_619_185_22(acc),
            [107, 97, 116, 115, 117, 115, 104, 105, 107, 97] => lookup_619_185_23(acc),
            [107, 105, 116, 97] => lookup_619_185_24(acc),
            [107, 105, 121, 111, 115, 101] => lookup_619_185_25(acc),
            [107, 111, 100, 97, 105, 114, 97] => lookup_619_185_26(acc),
            [107, 111, 103, 97, 110, 101, 105] => lookup_619_185_27(acc),
            [107, 111, 107, 117, 98, 117, 110, 106, 105] => lookup_619_185_28(acc),
            [107, 111, 109, 97, 101] => lookup_619_185_29(acc),
            [107, 111, 116, 111] => lookup_619_185_30(acc),
            [107, 111, 117, 122, 117, 115, 104, 105, 109, 97] => lookup_619_185_31(acc),
            [107, 117, 110, 105, 116, 97, 99, 104, 105] => lookup_619_185_32(acc),
            [109, 97, 99, 104, 105, 100, 97] => lookup_619_185_33(acc),
            [109, 101, 103, 117, 114, 111] => lookup_619_185_34(acc),
            [109, 105, 110, 97, 116, 111] => lookup_619_185_35(acc),
            [109, 105, 116, 97, 107, 97] => lookup_619_185_36(acc),
            [109, 105, 122, 117, 104, 111] => lookup_619_185_37(acc),
            [109, 117, 115, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_619_185_38(acc)
            }
            [109, 117, 115, 97, 115, 104, 105, 110, 111] => lookup_619_185_39(acc),
            [110, 97, 107, 97, 110, 111] => lookup_619_185_40(acc),
            [110, 101, 114, 105, 109, 97] => lookup_619_185_41(acc),
            [111, 103, 97, 115, 97, 119, 97, 114, 97] => lookup_619_185_42(acc),
            [111, 107, 117, 116, 97, 109, 97] => lookup_619_185_43(acc),
            [111, 109, 101] => lookup_619_185_44(acc),
            [111, 115, 104, 105, 109, 97] => lookup_619_185_45(acc),
            [111, 116, 97] => lookup_619_185_46(acc),
            [115, 101, 116, 97, 103, 97, 121, 97] => lookup_619_185_47(acc),
            [115, 104, 105, 98, 117, 121, 97] => lookup_619_185_48(acc),
            [115, 104, 105, 110, 97, 103, 97, 119, 97] => lookup_619_185_49(acc),
            [115, 104, 105, 110, 106, 117, 107, 117] => lookup_619_185_50(acc),
            [115, 117, 103, 105, 110, 97, 109, 105] => lookup_619_185_51(acc),
            [115, 117, 109, 105, 100, 97] => lookup_619_185_52(acc),
            [116, 97, 99, 104, 105, 107, 97, 119, 97] => lookup_619_185_53(acc),
            [116, 97, 105, 116, 111] => lookup_619_185_54(acc),
            [116, 97, 109, 97] => lookup_619_185_55(acc),
            [116, 111, 115, 104, 105, 109, 97] => lookup_619_185_56(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_187_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_187_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_187_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_187_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_187_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_187_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_187_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_187_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_187_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_187_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_187_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_187_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_187_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_187<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 105, 122, 117] => lookup_619_187_0(acc),
            [104, 105, 110, 111] => lookup_619_187_1(acc),
            [107, 97, 119, 97, 104, 97, 114, 97] => lookup_619_187_2(acc),
            [107, 111, 103, 101] => lookup_619_187_3(acc),
            [107, 111, 116, 111, 117, 114, 97] => lookup_619_187_4(acc),
            [109, 105, 115, 97, 115, 97] => lookup_619_187_5(acc),
            [110, 97, 110, 98, 117] => lookup_619_187_6(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_619_187_7(acc),
            [115, 97, 107, 97, 105, 109, 105, 110, 97, 116, 111] => lookup_619_187_8(acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_619_187_9(acc),
            [119, 97, 107, 97, 115, 97] => lookup_619_187_10(acc),
            [121, 97, 122, 117] => lookup_619_187_11(acc),
            [121, 111, 110, 97, 103, 111] => lookup_619_187_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_188_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_188<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 104, 105] => lookup_619_188_0(acc),
            [102, 117, 99, 104, 117] => lookup_619_188_1(acc),
            [102, 117, 107, 117, 109, 105, 116, 115, 117] => lookup_619_188_2(acc),
            [102, 117, 110, 97, 104, 97, 115, 104, 105] => lookup_619_188_3(acc),
            [104, 105, 109, 105] => lookup_619_188_4(acc),
            [105, 109, 105, 122, 117] => lookup_619_188_5(acc),
            [105, 110, 97, 109, 105] => lookup_619_188_6(acc),
            [106, 111, 104, 97, 110, 97] => lookup_619_188_7(acc),
            [107, 97, 109, 105, 105, 99, 104, 105] => lookup_619_188_8(acc),
            [107, 117, 114, 111, 98, 101] => lookup_619_188_9(acc),
            [110, 97, 107, 97, 110, 105, 105, 107, 97, 119, 97] => lookup_619_188_10(acc),
            [110, 97, 109, 101, 114, 105, 107, 97, 119, 97] => lookup_619_188_11(acc),
            [110, 97, 110, 116, 111] => lookup_619_188_12(acc),
            [110, 121, 117, 122, 101, 110] => lookup_619_188_13(acc),
            [111, 121, 97, 98, 101] => lookup_619_188_14(acc),
            [116, 97, 105, 114, 97] => lookup_619_188_15(acc),
            [116, 97, 107, 97, 111, 107, 97] => lookup_619_188_16(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_619_188_17(acc),
            [116, 111, 103, 97] => lookup_619_188_18(acc),
            [116, 111, 110, 97, 109, 105] => lookup_619_188_19(acc),
            [116, 111, 121, 97, 109, 97] => lookup_619_188_20(acc),
            [117, 110, 97, 122, 117, 107, 105] => lookup_619_188_21(acc),
            [117, 111, 122, 117] => lookup_619_188_22(acc),
            [121, 97, 109, 97, 100, 97] => lookup_619_188_23(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_198_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_198<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 105, 100, 97] => lookup_619_198_0(acc),
            [97, 114, 105, 100, 97, 103, 97, 119, 97] => lookup_619_198_1(acc),
            [103, 111, 98, 111] => lookup_619_198_2(acc),
            [104, 97, 115, 104, 105, 109, 111, 116, 111] => lookup_619_198_3(acc),
            [104, 105, 100, 97, 107, 97] => lookup_619_198_4(acc),
            [104, 105, 114, 111, 103, 97, 119, 97] => lookup_619_198_5(acc),
            [105, 110, 97, 109, 105] => lookup_619_198_6(acc),
            [105, 119, 97, 100, 101] => lookup_619_198_7(acc),
            [107, 97, 105, 110, 97, 110] => lookup_619_198_8(acc),
            [107, 97, 109, 105, 116, 111, 110, 100, 97] => lookup_619_198_9(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_619_198_10(acc),
            [107, 105, 109, 105, 110, 111] => lookup_619_198_11(acc),
            [107, 105, 110, 111, 107, 97, 119, 97] => lookup_619_198_12(acc),
            [107, 105, 116, 97, 121, 97, 109, 97] => lookup_619_198_13(acc),
            [107, 111, 121, 97] => lookup_619_198_14(acc),
            [107, 111, 122, 97] => lookup_619_198_15(acc),
            [107, 111, 122, 97, 103, 97, 119, 97] => lookup_619_198_16(acc),
            [107, 117, 100, 111, 121, 97, 109, 97] => lookup_619_198_17(acc),
            [107, 117, 115, 104, 105, 109, 111, 116, 111] => lookup_619_198_18(acc),
            [109, 105, 104, 97, 109, 97] => lookup_619_198_19(acc),
            [109, 105, 115, 97, 116, 111] => lookup_619_198_20(acc),
            [110, 97, 99, 104, 105, 107, 97, 116, 115, 117, 117, 114, 97] => lookup_619_198_21(acc),
            [115, 104, 105, 110, 103, 117] => lookup_619_198_22(acc),
            [115, 104, 105, 114, 97, 104, 97, 109, 97] => lookup_619_198_23(acc),
            [116, 97, 105, 106, 105] => lookup_619_198_24(acc),
            [116, 97, 110, 97, 98, 101] => lookup_619_198_25(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_619_198_26(acc),
            [121, 117, 97, 115, 97] => lookup_619_198_27(acc),
            [121, 117, 114, 97] => lookup_619_198_28(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_200_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_200_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_200<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [114, 115] => lookup_619_200_0(acc),
            [117, 115, 101, 114] => lookup_619_200_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_253<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 104, 105] => lookup_619_253_0(acc),
            [102, 117, 110, 97, 103, 97, 116, 97] => lookup_619_253_1(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 101] => lookup_619_253_2(acc),
            [105, 105, 100, 101] => lookup_619_253_3(acc),
            [107, 97, 104, 111, 107, 117] => lookup_619_253_4(acc),
            [107, 97, 109, 105, 110, 111, 121, 97, 109, 97] => lookup_619_253_5(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_619_253_6(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_619_253_7(acc),
            [109, 97, 109, 117, 114, 111, 103, 97, 119, 97] => lookup_619_253_8(acc),
            [109, 105, 107, 97, 119, 97] => lookup_619_253_9(acc),
            [109, 117, 114, 97, 121, 97, 109, 97] => lookup_619_253_10(acc),
            [110, 97, 103, 97, 105] => lookup_619_253_11(acc),
            [110, 97, 107, 97, 121, 97, 109, 97] => lookup_619_253_12(acc),
            [110, 97, 110, 121, 111] => lookup_619_253_13(acc),
            [110, 105, 115, 104, 105, 107, 97, 119, 97] => lookup_619_253_14(acc),
            [111, 98, 97, 110, 97, 122, 97, 119, 97] => lookup_619_253_15(acc),
            [111, 101] => lookup_619_253_16(acc),
            [111, 103, 117, 110, 105] => lookup_619_253_17(acc),
            [111, 104, 107, 117, 114, 97] => lookup_619_253_18(acc),
            [111, 105, 115, 104, 105, 100, 97] => lookup_619_253_19(acc),
            [115, 97, 103, 97, 101] => lookup_619_253_20(acc),
            [115, 97, 107, 97, 116, 97] => lookup_619_253_21(acc),
            [115, 97, 107, 101, 103, 97, 119, 97] => lookup_619_253_22(acc),
            [115, 104, 105, 110, 106, 111] => lookup_619_253_23(acc),
            [115, 104, 105, 114, 97, 116, 97, 107, 97] => lookup_619_253_24(acc),
            [115, 104, 111, 110, 97, 105] => lookup_619_253_25(acc),
            [116, 97, 107, 97, 104, 97, 116, 97] => lookup_619_253_26(acc),
            [116, 101, 110, 100, 111] => lookup_619_253_27(acc),
            [116, 111, 122, 97, 119, 97] => lookup_619_253_28(acc),
            [116, 115, 117, 114, 117, 111, 107, 97] => lookup_619_253_29(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_619_253_30(acc),
            [121, 97, 109, 97, 110, 111, 98, 101] => lookup_619_253_31(acc),
            [121, 111, 110, 101, 122, 97, 119, 97] => lookup_619_253_32(acc),
            [121, 117, 122, 97] => lookup_619_253_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_254_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_254<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 117] => lookup_619_254_0(acc),
            [104, 97, 103, 105] => lookup_619_254_1(acc),
            [104, 105, 107, 97, 114, 105] => lookup_619_254_2(acc),
            [104, 111, 102, 117] => lookup_619_254_3(acc),
            [105, 119, 97, 107, 117, 110, 105] => lookup_619_254_4(acc),
            [107, 117, 100, 97, 109, 97, 116, 115, 117] => lookup_619_254_5(acc),
            [109, 105, 116, 111, 117] => lookup_619_254_6(acc),
            [110, 97, 103, 97, 116, 111] => lookup_619_254_7(acc),
            [111, 115, 104, 105, 109, 97] => lookup_619_254_8(acc),
            [115, 104, 105, 109, 111, 110, 111, 115, 101, 107, 105] => lookup_619_254_9(acc),
            [115, 104, 117, 110, 97, 110] => lookup_619_254_10(acc),
            [116, 97, 98, 117, 115, 101] => lookup_619_254_11(acc),
            [116, 111, 107, 117, 121, 97, 109, 97] => lookup_619_254_12(acc),
            [116, 111, 121, 111, 116, 97] => lookup_619_254_13(acc),
            [117, 98, 101] => lookup_619_254_14(acc),
            [121, 117, 117] => lookup_619_254_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_255_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_255<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 117, 111] => lookup_619_255_0(acc),
            [100, 111, 115, 104, 105] => lookup_619_255_1(acc),
            [102, 117, 101, 102, 117, 107, 105] => lookup_619_255_2(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_619_255_3(acc),
            [102, 117, 106, 105, 107, 97, 119, 97, 103, 117, 99, 104, 105, 107, 111] => {
                lookup_619_255_4(acc)
            }
            [102, 117, 106, 105, 121, 111, 115, 104, 105, 100, 97] => lookup_619_255_5(acc),
            [104, 97, 121, 97, 107, 97, 119, 97] => lookup_619_255_6(acc),
            [104, 111, 107, 117, 116, 111] => lookup_619_255_7(acc),
            [105, 99, 104, 105, 107, 97, 119, 97, 109, 105, 115, 97, 116, 111] => {
                lookup_619_255_8(acc)
            }
            [107, 97, 105] => lookup_619_255_9(acc),
            [107, 111, 102, 117] => lookup_619_255_10(acc),
            [107, 111, 115, 104, 117] => lookup_619_255_11(acc),
            [107, 111, 115, 117, 103, 101] => lookup_619_255_12(acc),
            [109, 105, 110, 97, 109, 105, 45, 97, 108, 112, 115] => lookup_619_255_13(acc),
            [109, 105, 110, 111, 98, 117] => lookup_619_255_14(acc),
            [110, 97, 107, 97, 109, 105, 99, 104, 105] => lookup_619_255_15(acc),
            [110, 97, 110, 98, 117] => lookup_619_255_16(acc),
            [110, 97, 114, 117, 115, 97, 119, 97] => lookup_619_255_17(acc),
            [110, 105, 114, 97, 115, 97, 107, 105] => lookup_619_255_18(acc),
            [110, 105, 115, 104, 105, 107, 97, 116, 115, 117, 114, 97] => lookup_619_255_19(acc),
            [111, 115, 104, 105, 110, 111] => lookup_619_255_20(acc),
            [111, 116, 115, 117, 107, 105] => lookup_619_255_21(acc),
            [115, 104, 111, 119, 97] => lookup_619_255_22(acc),
            [116, 97, 98, 97, 121, 97, 109, 97] => lookup_619_255_23(acc),
            [116, 115, 117, 114, 117] => lookup_619_255_24(acc),
            [117, 101, 110, 111, 104, 97, 114, 97] => lookup_619_255_25(acc),
            [121, 97, 109, 97, 110, 97, 107, 97, 107, 111] => lookup_619_255_26(acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_619_255_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619_256_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_256_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_256<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_619_256_0(acc),
            wild => lookup_619_256_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_619_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_619_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48, 97, 109] => lookup_619_0(acc),
            [48, 103, 48] => lookup_619_1(acc),
            [48, 106, 48] => lookup_619_2(acc),
            [48, 116, 48] => lookup_619_3(acc),
            [50, 45, 100] => lookup_619_4(acc),
            [97, 99] => lookup_619_5(acc),
            [97, 100] => lookup_619_6(acc),
            [97, 105, 99, 104, 105] => lookup_619_7(labels, acc),
            [97, 107, 105, 116, 97] => lookup_619_8(labels, acc),
            [97, 110, 103, 114, 121] => lookup_619_9(acc),
            [97, 111, 109, 111, 114, 105] => lookup_619_10(labels, acc),
            [98, 97, 98, 121, 98, 108, 117, 101] => lookup_619_11(acc),
            [98, 97, 98, 121, 109, 105, 108, 107] => lookup_619_12(acc),
            [98, 97, 99, 107, 100, 114, 111, 112] => lookup_619_13(acc),
            [98, 97, 109, 98, 105, 110, 97] => lookup_619_14(acc),
            [98, 105, 116, 116, 101, 114] => lookup_619_15(acc),
            [98, 108, 117, 115, 104] => lookup_619_16(acc),
            [98, 111, 110, 97] => lookup_619_17(acc),
            [98, 111, 111] => lookup_619_18(acc),
            [98, 111, 121] => lookup_619_19(acc),
            [98, 111, 121, 102, 114, 105, 101, 110, 100] => lookup_619_20(acc),
            [98, 117, 116] => lookup_619_21(acc),
            [98, 117, 121, 115, 104, 111, 112] => lookup_619_22(acc),
            [99, 97, 110, 100, 121, 112, 111, 112] => lookup_619_23(acc),
            [99, 97, 112, 111, 111] => lookup_619_24(acc),
            [99, 97, 116, 102, 111, 111, 100] => lookup_619_25(acc),
            [99, 104, 101, 97, 112] => lookup_619_26(acc),
            [99, 104, 105, 98, 97] => lookup_619_27(labels, acc),
            [99, 104, 105, 99, 97, 112, 112, 97] => lookup_619_28(acc),
            [99, 104, 105, 108, 108, 111, 117, 116] => lookup_619_29(acc),
            [99, 104, 105, 112, 115] => lookup_619_30(acc),
            [99, 104, 111, 119, 100, 101, 114] => lookup_619_31(acc),
            [99, 104, 117] => lookup_619_32(acc),
            [99, 105, 97, 111] => lookup_619_33(acc),
            [99, 111] => lookup_619_34(acc),
            [99, 111, 99, 111, 116, 116, 101] => lookup_619_35(acc),
            [99, 111, 111, 108, 98, 108, 111, 103] => lookup_619_36(acc),
            [99, 114, 97, 110, 107, 121] => lookup_619_37(acc),
            [99, 114, 97, 112] => lookup_619_38(acc),
            [99, 117, 116, 101, 103, 105, 114, 108] => lookup_619_39(acc),
            [100, 97, 97] => lookup_619_40(acc),
            [100, 97, 121, 110, 105, 103, 104, 116] => lookup_619_41(acc),
            [100, 101, 99, 97] => lookup_619_42(acc),
            [100, 101, 99, 105] => lookup_619_43(acc),
            [100, 105, 103, 105, 99, 107] => lookup_619_44(acc),
            [101, 100] => lookup_619_45(acc),
            [101, 101, 107] => lookup_619_46(acc),
            [101, 103, 111, 105, 115, 109] => lookup_619_47(acc),
            [101, 104, 105, 109, 101] => lookup_619_48(labels, acc),
            [102, 97, 107, 101, 102, 117, 114] => lookup_619_49(acc),
            [102, 97, 115, 104, 105, 111, 110, 115, 116, 111, 114, 101] => lookup_619_50(acc),
            [102, 101, 109] => lookup_619_51(acc),
            [102, 108, 105, 101, 114] => lookup_619_52(acc),
            [102, 108, 111, 112] => lookup_619_53(acc),
            [102, 108, 111, 112, 112, 121] => lookup_619_54(acc),
            [102, 111, 111, 108] => lookup_619_55(acc),
            [102, 114, 101, 110, 99, 104, 107, 105, 115, 115] => lookup_619_56(acc),
            [102, 117, 107, 117, 105] => lookup_619_57(labels, acc),
            [102, 117, 107, 117, 111, 107, 97] => lookup_619_58(labels, acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_619_59(labels, acc),
            [103, 105, 102, 117] => lookup_619_60(labels, acc),
            [103, 105, 114, 108, 102, 114, 105, 101, 110, 100] => lookup_619_61(acc),
            [103, 105, 114, 108, 121] => lookup_619_62(acc),
            [103, 108, 111, 111, 109, 121] => lookup_619_63(acc),
            [103, 111] => lookup_619_64(acc),
            [103, 111, 110, 110, 97] => lookup_619_65(acc),
            [103, 114] => lookup_619_66(acc),
            [103, 114, 101, 97, 116, 101, 114] => lookup_619_67(acc),
            [103, 117, 110, 109, 97] => lookup_619_68(labels, acc),
            [104, 97, 99, 99, 97] => lookup_619_69(acc),
            [104, 97, 108, 102, 109, 111, 111, 110] => lookup_619_70(acc),
            [104, 97, 110, 100, 99, 114, 97, 102, 116, 101, 100] => lookup_619_71(acc),
            [104, 97, 116, 101, 98, 108, 111] => lookup_619_72(acc),
            [104, 97, 116, 101, 110, 97, 98, 108, 111, 103] => lookup_619_73(acc),
            [104, 97, 116, 101, 110, 97, 100, 105, 97, 114, 121] => lookup_619_74(acc),
            [104, 101, 97, 118, 121] => lookup_619_75(acc),
            [104, 101, 114] => lookup_619_76(acc),
            [104, 105, 104, 111] => lookup_619_77(acc),
            [104, 105, 112, 112, 121] => lookup_619_78(acc),
            [104, 105, 114, 111, 115, 104, 105, 109, 97] => lookup_619_79(labels, acc),
            [104, 111, 107, 107, 97, 105, 100, 111] => lookup_619_80(labels, acc),
            [104, 111, 108, 121] => lookup_619_81(acc),
            [104, 117, 110, 103, 114, 121] => lookup_619_82(acc),
            [104, 121, 111, 103, 111] => lookup_619_83(labels, acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_619_84(labels, acc),
            [105, 99, 117, 114, 117, 115] => lookup_619_85(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_619_86(labels, acc),
            [105, 116, 105, 103, 111] => lookup_619_87(acc),
            [105, 119, 97, 116, 101] => lookup_619_88(labels, acc),
            [106, 101, 101, 122] => lookup_619_89(acc),
            [106, 101, 108, 108, 121, 98, 101, 97, 110] => lookup_619_90(acc),
            [107, 97, 103, 97, 119, 97] => lookup_619_91(labels, acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_619_92(labels, acc),
            [107, 97, 110, 97, 103, 97, 119, 97] => lookup_619_93(labels, acc),
            [107, 97, 119, 97, 105, 105, 115, 104, 111, 112] => lookup_619_94(acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_619_95(info, labels, acc),
            [107, 105, 107, 105, 114, 97, 114, 97] => lookup_619_96(acc),
            [107, 105, 108, 108] => lookup_619_97(acc),
            [107, 105, 108, 111] => lookup_619_98(acc),
            [107, 105, 116, 97, 107, 121, 117, 115, 104, 117] => lookup_619_99(info, labels, acc),
            [107, 111, 98, 101] => lookup_619_100(info, labels, acc),
            [107, 111, 99, 104, 105] => lookup_619_101(labels, acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_619_102(labels, acc),
            [107, 117, 114, 111, 110] => lookup_619_103(acc),
            [107, 121, 111, 116, 111] => lookup_619_104(labels, acc),
            [108, 103] => lookup_619_105(acc),
            [108, 105, 116, 116, 108, 101, 115, 116, 97, 114] => lookup_619_106(acc),
            [108, 111, 108, 105, 112, 111, 112, 109, 99] => lookup_619_107(acc),
            [108, 111, 108, 105, 116, 97, 112, 117, 110, 107] => lookup_619_108(acc),
            [108, 111, 109, 111] => lookup_619_109(acc),
            [108, 111, 118, 101, 112, 111, 112] => lookup_619_110(acc),
            [108, 111, 118, 101, 115, 105, 99, 107] => lookup_619_111(acc),
            [109, 97, 105, 110] => lookup_619_112(acc),
            [109, 97, 116, 114, 105, 120] => lookup_619_113(acc),
            [109, 105, 101] => lookup_619_114(labels, acc),
            [109, 105, 109, 111, 122, 97] => lookup_619_115(acc),
            [109, 105, 121, 97, 103, 105] => lookup_619_116(labels, acc),
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_619_117(labels, acc),
            [109, 111, 100, 115] => lookup_619_118(acc),
            [109, 111, 110, 100] => lookup_619_119(acc),
            [109, 111, 110, 103, 111, 108, 105, 97, 110] => lookup_619_120(acc),
            [109, 111, 111] => lookup_619_121(acc),
            [109, 121, 100, 110, 115] => lookup_619_122(acc),
            [110, 97, 103, 97, 110, 111] => lookup_619_123(labels, acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_619_124(labels, acc),
            [110, 97, 103, 111, 121, 97] => lookup_619_125(info, labels, acc),
            [110, 97, 109, 97, 115, 116, 101] => lookup_619_126(acc),
            [110, 97, 114, 97] => lookup_619_127(labels, acc),
            [110, 101] => lookup_619_128(labels, acc),
            [110, 101, 116, 103, 97, 109, 101, 114, 115] => lookup_619_129(acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_619_130(labels, acc),
            [110, 105, 107, 105, 116, 97] => lookup_619_131(acc),
            [110, 111, 98, 117, 115, 104, 105] => lookup_619_132(acc),
            [110, 111, 111, 114] => lookup_619_133(acc),
            [110, 121, 97, 110, 116, 97] => lookup_619_134(acc),
            [111, 48, 111, 48] => lookup_619_135(acc),
            [111, 105, 116, 97] => lookup_619_136(labels, acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_619_137(labels, acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_619_138(labels, acc),
            [111, 111, 112, 115] => lookup_619_139(acc),
            [111, 114] => lookup_619_140(acc),
            [111, 115, 97, 107, 97] => lookup_619_141(labels, acc),
            [112, 97, 114, 97, 108, 108, 101, 108] => lookup_619_142(acc),
            [112, 97, 114, 97, 115, 105, 116, 101] => lookup_619_143(acc),
            [112, 101, 99, 111, 114, 105] => lookup_619_144(acc),
            [112, 101, 101, 119, 101, 101] => lookup_619_145(acc),
            [112, 101, 110, 110, 101] => lookup_619_146(acc),
            [112, 101, 112, 112, 101, 114] => lookup_619_147(acc),
            [112, 101, 114, 109, 97] => lookup_619_148(acc),
            [112, 103, 119] => lookup_619_149(acc),
            [112, 105, 103, 98, 111, 97, 116] => lookup_619_150(acc),
            [112, 105, 110, 111, 107, 111] => lookup_619_151(acc),
            [112, 117, 110, 121, 117] => lookup_619_152(acc),
            [112, 117, 112, 117] => lookup_619_153(acc),
            [112, 117, 115, 115, 121, 99, 97, 116] => lookup_619_154(acc),
            [112, 121, 97] => lookup_619_155(acc),
            [114, 97, 105, 110, 100, 114, 111, 112] => lookup_619_156(acc),
            [114, 100, 121] => lookup_619_157(acc),
            [114, 101, 97, 100, 121, 109, 97, 100, 101] => lookup_619_158(acc),
            [114, 103, 114] => lookup_619_159(acc),
            [114, 117, 108, 101, 122] => lookup_619_160(acc),
            [115, 97, 100, 105, 115, 116] => lookup_619_161(acc),
            [115, 97, 103, 97] => lookup_619_162(labels, acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_619_163(labels, acc),
            [115, 97, 107, 117, 114, 97, 115, 116, 111, 114, 97, 103, 101] => {
                lookup_619_164(info, labels, acc)
            }
            [115, 97, 108, 111, 111, 110] => lookup_619_165(acc),
            [115, 97, 112, 112, 111, 114, 111] => lookup_619_166(info, labels, acc),
            [115, 98, 108, 111] => lookup_619_167(acc),
            [115, 99, 104, 111, 111, 108, 98, 117, 115] => lookup_619_168(acc),
            [115, 101, 99, 114, 101, 116] => lookup_619_169(acc),
            [115, 101, 110, 100, 97, 105] => lookup_619_170(info, labels, acc),
            [115, 104, 105, 103, 97] => lookup_619_171(labels, acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_619_172(labels, acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_619_173(labels, acc),
            [115, 107, 114] => lookup_619_174(acc),
            [115, 116, 97, 98, 97] => lookup_619_175(acc),
            [115, 116, 114, 105, 112, 112, 101, 114] => lookup_619_176(acc),
            [115, 117, 98] => lookup_619_177(acc),
            [115, 117, 110, 110, 121, 100, 97, 121] => lookup_619_178(acc),
            [115, 117, 112, 101, 114, 115, 97, 108, 101] => lookup_619_179(acc),
            [116, 97, 110, 107] => lookup_619_180(acc),
            [116, 104, 101, 115, 104, 111, 112] => lookup_619_181(acc),
            [116, 104, 105, 99, 107] => lookup_619_182(acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_619_183(labels, acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_619_184(labels, acc),
            [116, 111, 107, 121, 111] => lookup_619_185(labels, acc),
            [116, 111, 110, 107, 111, 116, 115, 117] => lookup_619_186(acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_619_187(labels, acc),
            [116, 111, 121, 97, 109, 97] => lookup_619_188(labels, acc),
            [117, 104, 45, 111, 104] => lookup_619_189(acc),
            [117, 110, 100, 101, 114] => lookup_619_190(acc),
            [117, 110, 100, 111] => lookup_619_191(acc),
            [117, 112, 112, 101, 114] => lookup_619_192(acc),
            [117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_619_193(acc),
            [118, 101, 108, 118, 101, 116] => lookup_619_194(acc),
            [118, 101, 114, 115, 101] => lookup_619_195(acc),
            [118, 101, 114, 115, 117, 115] => lookup_619_196(acc),
            [118, 105, 118, 105, 97, 110] => lookup_619_197(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_619_198(labels, acc),
            [119, 97, 116, 115, 111, 110] => lookup_619_199(acc),
            [119, 101, 98, 97, 99, 99, 101, 108] => lookup_619_200(info, labels, acc),
            [119, 101, 98, 108, 105, 107, 101] => lookup_619_201(acc),
            [119, 101, 98, 115, 111, 122, 97, 105] => lookup_619_202(acc),
            [119, 104, 105, 116, 101, 115, 110, 111, 119] => lookup_619_203(acc),
            [119, 106, 103] => lookup_619_204(acc),
            [120, 105, 105] => lookup_619_205(acc),
            [120, 110, 45, 45, 48, 116, 114, 113, 55, 112, 55, 110, 110] => lookup_619_206(acc),
            [120, 110, 45, 45, 49, 99, 116, 119, 111] => lookup_619_207(acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 48, 51, 110] => lookup_619_208(acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 55, 49, 100] => lookup_619_209(acc),
            [120, 110, 45, 45, 50, 109, 52, 97, 49, 53, 101] => lookup_619_210(acc),
            [120, 110, 45, 45, 51, 50, 118, 112, 51, 48, 104] => lookup_619_211(acc),
            [120, 110, 45, 45, 52, 105, 116, 49, 54, 56, 100] => lookup_619_212(acc),
            [120, 110, 45, 45, 52, 105, 116, 55, 57, 55, 107] => lookup_619_213(acc),
            [120, 110, 45, 45, 52, 112, 118, 120, 115] => lookup_619_214(acc),
            [120, 110, 45, 45, 53, 106, 115, 48, 52, 53, 100] => lookup_619_215(acc),
            [120, 110, 45, 45, 53, 114, 116, 112, 52, 57, 99] => lookup_619_216(acc),
            [120, 110, 45, 45, 53, 114, 116, 113, 51, 52, 107] => lookup_619_217(acc),
            [120, 110, 45, 45, 54, 98, 116, 119, 53, 97] => lookup_619_218(acc),
            [120, 110, 45, 45, 54, 111, 114, 120, 50, 114] => lookup_619_219(acc),
            [120, 110, 45, 45, 55, 116, 48, 97, 50, 54, 52, 99] => lookup_619_220(acc),
            [120, 110, 45, 45, 56, 108, 116, 114, 54, 50, 107] => lookup_619_221(acc),
            [120, 110, 45, 45, 56, 112, 118, 114, 52, 117] => lookup_619_222(acc),
            [120, 110, 45, 45, 99, 51, 115, 49, 52, 109] => lookup_619_223(acc),
            [120, 110, 45, 45, 100, 53, 113, 118, 55, 122, 56, 55, 54, 99] => lookup_619_224(acc),
            [120, 110, 45, 45, 100, 106, 114, 115, 55, 50, 100, 54, 117, 121] => {
                lookup_619_225(acc)
            }
            [120, 110, 45, 45, 100, 106, 116, 121, 52, 107] => lookup_619_226(acc),
            [120, 110, 45, 45, 101, 102, 118, 110, 57, 115] => lookup_619_227(acc),
            [120, 110, 45, 45, 101, 104, 113, 122, 53, 54, 110] => lookup_619_228(acc),
            [120, 110, 45, 45, 101, 108, 113, 113, 49, 54, 104] => lookup_619_229(acc),
            [120, 110, 45, 45, 102, 54, 113, 120, 53, 51, 97] => lookup_619_230(acc),
            [120, 110, 45, 45, 107, 55, 121, 110, 57, 53, 101] => lookup_619_231(acc),
            [120, 110, 45, 45, 107, 98, 114, 113, 55, 111] => lookup_619_232(acc),
            [120, 110, 45, 45, 107, 108, 116, 55, 56, 55, 100] => lookup_619_233(acc),
            [120, 110, 45, 45, 107, 108, 116, 112, 55, 100] => lookup_619_234(acc),
            [120, 110, 45, 45, 107, 108, 116, 120, 57, 97] => lookup_619_235(acc),
            [120, 110, 45, 45, 107, 108, 116, 121, 53, 120] => lookup_619_236(acc),
            [120, 110, 45, 45, 109, 107, 114, 117, 52, 53, 105] => lookup_619_237(acc),
            [120, 110, 45, 45, 110, 105, 116, 50, 50, 53, 107] => lookup_619_238(acc),
            [120, 110, 45, 45, 110, 116, 115, 111, 48, 105, 113, 120, 51, 97] => {
                lookup_619_239(acc)
            }
            [120, 110, 45, 45, 110, 116, 115, 113, 49, 55, 103] => lookup_619_240(acc),
            [120, 110, 45, 45, 112, 115, 115, 117, 51, 51, 108] => lookup_619_241(acc),
            [120, 110, 45, 45, 113, 113, 113, 116, 49, 49, 109] => lookup_619_242(acc),
            [120, 110, 45, 45, 114, 104, 116, 50, 55, 122] => lookup_619_243(acc),
            [120, 110, 45, 45, 114, 104, 116, 51, 100] => lookup_619_244(acc),
            [120, 110, 45, 45, 114, 104, 116, 54, 49, 101] => lookup_619_245(acc),
            [120, 110, 45, 45, 114, 110, 121, 51, 49, 104] => lookup_619_246(acc),
            [120, 110, 45, 45, 116, 111, 114, 49, 51, 49, 111] => lookup_619_247(acc),
            [120, 110, 45, 45, 117, 105, 115, 116, 50, 50, 104] => lookup_619_248(acc),
            [120, 110, 45, 45, 117, 105, 115, 122, 51, 103] => lookup_619_249(acc),
            [120, 110, 45, 45, 117, 117, 119, 117, 53, 56, 97] => lookup_619_250(acc),
            [120, 110, 45, 45, 118, 103, 117, 52, 48, 50, 99] => lookup_619_251(acc),
            [120, 110, 45, 45, 122, 98, 120, 48, 50, 53, 100] => lookup_619_252(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_619_253(labels, acc),
            [121, 97, 109, 97, 103, 117, 99, 104, 105] => lookup_619_254(labels, acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_619_255(labels, acc),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_619_256(info, labels, acc),
            [122, 111, 109, 98, 105, 101] => lookup_619_257(acc),
            [228, 184, 137, 233, 135, 141] => lookup_619_258(acc),
            [228, 186, 172, 233, 131, 189] => lookup_619_259(acc),
            [228, 189, 144, 232, 179, 128] => lookup_619_260(acc),
            [229, 133, 181, 229, 186, 171] => lookup_619_261(acc),
            [229, 140, 151, 230, 181, 183, 233, 129, 147] => lookup_619_262(acc),
            [229, 141, 131, 232, 145, 137] => lookup_619_263(acc),
            [229, 146, 140, 230, 173, 140, 229, 177, 177] => lookup_619_264(acc),
            [229, 159, 188, 231, 142, 137] => lookup_619_265(acc),
            [229, 164, 167, 229, 136, 134] => lookup_619_266(acc),
            [229, 164, 167, 233, 152, 170] => lookup_619_267(acc),
            [229, 165, 136, 232, 137, 175] => lookup_619_268(acc),
            [229, 174, 174, 229, 159, 142] => lookup_619_269(acc),
            [229, 174, 174, 229, 180, 142] => lookup_619_270(acc),
            [229, 175, 140, 229, 177, 177] => lookup_619_271(acc),
            [229, 177, 177, 229, 143, 163] => lookup_619_272(acc),
            [229, 177, 177, 229, 189, 162] => lookup_619_273(acc),
            [229, 177, 177, 230, 162, 168] => lookup_619_274(acc),
            [229, 178, 144, 233, 152, 156] => lookup_619_275(acc),
            [229, 178, 161, 229, 177, 177] => lookup_619_276(acc),
            [229, 178, 169, 230, 137, 139] => lookup_619_277(acc),
            [229, 179, 182, 230, 160, 185] => lookup_619_278(acc),
            [229, 186, 131, 229, 179, 182] => lookup_619_279(acc),
            [229, 190, 179, 229, 179, 182] => lookup_619_280(acc),
            [230, 132, 155, 229, 170, 155] => lookup_619_281(acc),
            [230, 132, 155, 231, 159, 165] => lookup_619_282(acc),
            [230, 150, 176, 230, 189, 159] => lookup_619_283(acc),
            [230, 157, 177, 228, 186, 172] => lookup_619_284(acc),
            [230, 160, 131, 230, 156, 168] => lookup_619_285(acc),
            [230, 178, 150, 231, 184, 132] => lookup_619_286(acc),
            [230, 187, 139, 232, 179, 128] => lookup_619_287(acc),
            [231, 134, 138, 230, 156, 172] => lookup_619_288(acc),
            [231, 159, 179, 229, 183, 157] => lookup_619_289(acc),
            [231, 165, 158, 229, 165, 136, 229, 183, 157] => lookup_619_290(acc),
            [231, 166, 143, 228, 186, 149] => lookup_619_291(acc),
            [231, 166, 143, 229, 178, 161] => lookup_619_292(acc),
            [231, 166, 143, 229, 179, 182] => lookup_619_293(acc),
            [231, 167, 139, 231, 148, 176] => lookup_619_294(acc),
            [231, 190, 164, 233, 166, 172] => lookup_619_295(acc),
            [232, 140, 168, 229, 159, 142] => lookup_619_296(acc),
            [233, 149, 183, 229, 180, 142] => lookup_619_297(acc),
            [233, 149, 183, 233, 135, 142] => lookup_619_298(acc),
            [233, 157, 146, 230, 163, 174] => lookup_619_299(acc),
            [233, 157, 153, 229, 178, 161] => lookup_619_300(acc),
            [233, 166, 153, 229, 183, 157] => lookup_619_301(acc),
            [233, 171, 152, 231, 159, 165] => lookup_619_302(acc),
            [233, 179, 165, 229, 143, 150] => lookup_619_303(acc),
            [233, 185, 191, 229, 133, 144, 229, 179, 182] => lookup_619_304(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_620() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_621() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_622() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_624() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_625() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_626_0(acc),
            [99, 111] => lookup_626_1(acc),
            [103, 111] => lookup_626_2(acc),
            [105, 110, 102, 111] => lookup_626_3(acc),
            [109, 101] => lookup_626_4(acc),
            [109, 111, 98, 105] => lookup_626_5(acc),
            [110, 101] => lookup_626_6(acc),
            [111, 114] => lookup_626_7(acc),
            [115, 99] => lookup_626_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_627() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_628() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_629() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_631_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_631_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_631_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_631_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_631_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_631_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_631_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_631<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_631_0(acc),
            [101, 100, 117] => lookup_631_1(acc),
            [103, 111, 118] => lookup_631_2(acc),
            [109, 105, 108] => lookup_631_3(acc),
            [110, 101, 116] => lookup_631_4(acc),
            [111, 114, 103] => lookup_631_5(acc),
            [117, 115] => lookup_631_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_632_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_632<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_632_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_633_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_633_0(acc),
            [99, 111, 109] => lookup_633_1(acc),
            [101, 100, 117] => lookup_633_2(acc),
            [103, 111, 118] => lookup_633_3(acc),
            [105, 110, 102, 111] => lookup_633_4(acc),
            [110, 101, 116] => lookup_633_5(acc),
            [111, 114, 103] => lookup_633_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_634() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_636() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_637() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_639() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115] => lookup_640_0(acc),
            [97, 115, 115, 111] => lookup_640_1(acc),
            [99, 111, 109] => lookup_640_2(acc),
            [99, 111, 111, 112] => lookup_640_3(acc),
            [101, 100, 117] => lookup_640_4(acc),
            [103, 111, 117, 118] => lookup_640_5(acc),
            [103, 111, 118] => lookup_640_6(acc),
            [109, 101, 100, 101, 99, 105, 110] => lookup_640_7(acc),
            [109, 105, 108] => lookup_640_8(acc),
            [110, 111, 109] => lookup_640_9(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_640_10(acc),
            [111, 114, 103] => lookup_640_11(acc),
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110, 115] => lookup_640_12(acc),
            [112, 114, 100] => lookup_640_13(acc),
            [112, 114, 101, 115, 115, 101] => lookup_640_14(acc),
            [116, 109] => lookup_640_15(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_640_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_641_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_641_0(acc),
            [103, 111, 118] => lookup_641_1(acc),
            [110, 101, 116] => lookup_641_2(acc),
            [111, 114, 103] => lookup_641_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_642() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_643() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_645_0(acc),
            [101, 100, 117] => lookup_645_1(acc),
            [103, 111, 118] => lookup_645_2(acc),
            [111, 114, 103] => lookup_645_3(acc),
            [114, 101, 112] => lookup_645_4(acc),
            [116, 114, 97] => lookup_645_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_646() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_648_0(acc),
            [98, 117, 115, 97, 110] => lookup_648_1(acc),
            [99, 104, 117, 110, 103, 98, 117, 107] => lookup_648_2(acc),
            [99, 104, 117, 110, 103, 110, 97, 109] => lookup_648_3(acc),
            [99, 111] => lookup_648_4(acc),
            [100, 97, 101, 103, 117] => lookup_648_5(acc),
            [100, 97, 101, 106, 101, 111, 110] => lookup_648_6(acc),
            [101, 115] => lookup_648_7(acc),
            [103, 97, 110, 103, 119, 111, 110] => lookup_648_8(acc),
            [103, 111] => lookup_648_9(acc),
            [103, 119, 97, 110, 103, 106, 117] => lookup_648_10(acc),
            [103, 121, 101, 111, 110, 103, 98, 117, 107] => lookup_648_11(acc),
            [103, 121, 101, 111, 110, 103, 103, 105] => lookup_648_12(acc),
            [103, 121, 101, 111, 110, 103, 110, 97, 109] => lookup_648_13(acc),
            [104, 115] => lookup_648_14(acc),
            [105, 110, 99, 104, 101, 111, 110] => lookup_648_15(acc),
            [106, 101, 106, 117] => lookup_648_16(acc),
            [106, 101, 111, 110, 98, 117, 107] => lookup_648_17(acc),
            [106, 101, 111, 110, 110, 97, 109] => lookup_648_18(acc),
            [107, 103] => lookup_648_19(acc),
            [109, 105, 108] => lookup_648_20(acc),
            [109, 115] => lookup_648_21(acc),
            [110, 101] => lookup_648_22(acc),
            [111, 114] => lookup_648_23(acc),
            [112, 101] => lookup_648_24(acc),
            [114, 101] => lookup_648_25(acc),
            [115, 99] => lookup_648_26(acc),
            [115, 101, 111, 117, 108] => lookup_648_27(acc),
            [117, 108, 115, 97, 110] => lookup_648_28(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_649_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_649_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_649<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_649_0(acc),
            [101, 100, 117] => lookup_649_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_650() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_651() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_652_0(acc),
            [101, 100, 117] => lookup_652_1(acc),
            [101, 109, 98] => lookup_652_2(acc),
            [103, 111, 118] => lookup_652_3(acc),
            [105, 110, 100] => lookup_652_4(acc),
            [110, 101, 116] => lookup_652_5(acc),
            [111, 114, 103] => lookup_652_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_653_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_653_0(acc),
            [101, 100, 117] => lookup_653_1(acc),
            [110, 101, 116] => lookup_653_2(acc),
            [111, 114, 103] => lookup_653_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_654() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_655_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_655_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_655_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_655_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_655_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_655_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_655_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_655<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_655_0(acc),
            [101, 100, 117] => lookup_655_1(acc),
            [103, 111, 118] => lookup_655_2(acc),
            [106, 99, 108, 111, 117, 100] => lookup_655_3(acc),
            [109, 105, 108] => lookup_655_4(acc),
            [110, 101, 116] => lookup_655_5(acc),
            [111, 114, 103] => lookup_655_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_656_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_656_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 110, 114] => lookup_656_0(acc),
            [99, 111, 109] => lookup_656_1(acc),
            [101, 100, 117] => lookup_656_2(acc),
            [103, 111, 118] => lookup_656_3(acc),
            [105, 110, 102, 111] => lookup_656_4(acc),
            [105, 110, 116] => lookup_656_5(acc),
            [110, 101, 116] => lookup_656_6(acc),
            [111, 114, 103] => lookup_656_7(acc),
            [112, 101, 114] => lookup_656_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_657() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_661() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_663() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_664() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_666() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_667() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_668() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_670_0(acc),
            [101, 100, 117] => lookup_670_1(acc),
            [103, 111, 118] => lookup_670_2(acc),
            [110, 101, 116] => lookup_670_3(acc),
            [111, 114, 103] => lookup_670_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_671_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_671_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_671_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_671_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_671_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_671_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_671_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_671<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_671_0(acc),
            [99, 111, 109] => lookup_671_1(acc),
            [101, 100, 117] => lookup_671_2(acc),
            [103, 111, 118] => lookup_671_3(acc),
            [110, 101, 116] => lookup_671_4(acc),
            [111, 114, 103] => lookup_671_5(acc),
            [111, 121] => lookup_671_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_672() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_676() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_678() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_680() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_681() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_682() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_683() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_684() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_686() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_687() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_688() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_689() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_690() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_691_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_691_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_691_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_691_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_691_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_691_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_691_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_691_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [105, 112, 102, 115] => lookup_691_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_691<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 121, 111, 110] => lookup_691_0(acc),
            [100, 119, 101, 98] => lookup_691_1(info, labels, acc),
            [109, 121, 102, 114, 105, 116, 122] => lookup_691_2(acc),
            [109, 121, 112, 101, 112] => lookup_691_3(acc),
            [110, 102, 116, 115, 116, 111, 114, 97, 103, 101] => lookup_691_4(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_692() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_693_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_693_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_693_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_693<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 101, 109] => lookup_693_0(acc),
            [101, 119, 112] => lookup_693_1(info, labels, acc),
            [104, 108, 120] => lookup_693_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_694() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_695_0(acc),
            [97, 115, 115, 110] => lookup_695_1(acc),
            [99, 111, 109] => lookup_695_2(acc),
            [101, 100, 117] => lookup_695_3(acc),
            [103, 111, 118] => lookup_695_4(acc),
            [103, 114, 112] => lookup_695_5(acc),
            [104, 111, 116, 101, 108] => lookup_695_6(acc),
            [105, 110, 116] => lookup_695_7(acc),
            [108, 116, 100] => lookup_695_8(acc),
            [110, 101, 116] => lookup_695_9(acc),
            [110, 103, 111] => lookup_695_10(acc),
            [111, 114, 103] => lookup_695_11(acc),
            [115, 99, 104] => lookup_695_12(acc),
            [115, 111, 99] => lookup_695_13(acc),
            [119, 101, 98] => lookup_695_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_696() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_697() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_698() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_700() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_701() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_702_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_702<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 109, 103] => lookup_702_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_703() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_704() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_705() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_706() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_707() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_708() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_709_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_709_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_709_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_709_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_709_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_709<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_709_0(acc),
            [101, 100, 117] => lookup_709_1(acc),
            [103, 111, 118] => lookup_709_2(acc),
            [110, 101, 116] => lookup_709_3(acc),
            [111, 114, 103] => lookup_709_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_710_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_710_0(acc),
            [98, 105, 122] => lookup_710_1(acc),
            [99, 111] => lookup_710_2(acc),
            [101, 100, 117] => lookup_710_3(acc),
            [103, 111, 118] => lookup_710_4(acc),
            [105, 110, 102, 111] => lookup_710_5(acc),
            [110, 101, 116] => lookup_710_6(acc),
            [111, 114, 103] => lookup_710_7(acc),
            [115, 99] => lookup_710_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_711_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_711<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_711_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_712() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_714<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 105, 116, 101] => lookup_714_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_715() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_717() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 110] => lookup_718_0(acc),
            [99, 111, 109] => lookup_718_1(acc),
            [99, 111, 110, 102] => lookup_718_2(acc),
            [101, 100, 117] => lookup_718_3(acc),
            [103, 111, 118] => lookup_718_4(acc),
            [105, 100] => lookup_718_5(acc),
            [109, 105, 108] => lookup_718_6(acc),
            [110, 101, 116] => lookup_718_7(acc),
            [111, 114, 103] => lookup_718_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_719_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_719_0(acc),
            [101, 100, 117] => lookup_719_1(acc),
            [103, 111, 118] => lookup_719_2(acc),
            [105, 100] => lookup_719_3(acc),
            [109, 101, 100] => lookup_719_4(acc),
            [110, 101, 116] => lookup_719_5(acc),
            [111, 114, 103] => lookup_719_6(acc),
            [112, 108, 99] => lookup_719_7(acc),
            [115, 99, 104] => lookup_719_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_720_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_720_0(acc),
            [99, 111] => lookup_720_1(acc),
            [103, 111, 118] => lookup_720_2(acc),
            [110, 101, 116] => lookup_720_3(acc),
            [111, 114, 103] => lookup_720_4(acc),
            [112, 114, 101, 115, 115] => lookup_720_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_721() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_724() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_725() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_726_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_726<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 111, 117, 116, 101, 114] => lookup_726_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_727() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_728() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_729() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_730() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_731() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_732() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_733() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_734() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_736_0(acc),
            [116, 109] => lookup_736_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_737() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_738<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 114] => lookup_738_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_739_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_31_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_31<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 105, 116, 101] => lookup_739_31_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_739_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_739_0(acc),
            [98, 97, 114, 115, 121] => lookup_739_1(acc),
            [98, 114, 97, 115, 105, 108, 105, 97] => lookup_739_2(acc),
            [99, 54, 54] => lookup_739_3(acc),
            [99, 111] => lookup_739_4(acc),
            [99, 114, 97, 102, 116] => lookup_739_5(acc),
            [100, 100, 110, 115] => lookup_739_6(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_739_7(acc),
            [100, 110, 115, 102, 111, 114] => lookup_739_8(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_739_9(acc),
            [101, 100, 103, 101, 115, 116, 97, 99, 107] => lookup_739_10(acc),
            [101, 100, 117] => lookup_739_11(acc),
            [102, 105, 108, 101, 103, 101, 97, 114] => lookup_739_12(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 115, 103] => lookup_739_13(acc),
            [103, 108, 105, 116, 99, 104] => lookup_739_14(acc),
            [103, 111, 118] => lookup_739_15(acc),
            [104, 111, 112, 116, 111] => lookup_739_16(acc),
            [105, 50, 51, 52] => lookup_739_17(acc),
            [105, 116, 115] => lookup_739_18(acc),
            [108, 111, 103, 105, 110, 116, 111] => lookup_739_19(acc),
            [108, 111, 104, 109, 117, 115] => lookup_739_20(acc),
            [109, 99, 100, 105, 114] => lookup_739_21(acc),
            [109, 121, 100, 115] => lookup_739_22(acc),
            [110, 101, 116] => lookup_739_23(acc),
            [110, 111, 104, 111, 115, 116] => lookup_739_24(acc),
            [110, 111, 105, 112] => lookup_739_25(acc),
            [111, 114, 103] => lookup_739_26(acc),
            [112, 114, 105, 118] => lookup_739_27(acc),
            [115, 111, 117, 110, 100, 99, 97, 115, 116] => lookup_739_28(acc),
            [115, 121, 110, 111, 108, 111, 103, 121] => lookup_739_29(acc),
            [116, 99, 112, 52] => lookup_739_30(acc),
            [116, 114, 97, 110, 115, 105, 112] => lookup_739_31(info, labels, acc),
            [118, 112, 52] => lookup_739_32(acc),
            [119, 101, 98, 104, 111, 112] => lookup_739_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_740() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_741<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 109, 101, 114] => lookup_741_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_742() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_745() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_746() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_747_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_747<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_747_0(acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_747_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_748() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_749() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_750_0(acc),
            [99, 111, 109] => lookup_750_1(acc),
            [101, 100, 117] => lookup_750_2(acc),
            [103, 111, 118] => lookup_750_3(acc),
            [109, 105, 108] => lookup_750_4(acc),
            [110, 111, 109] => lookup_750_5(acc),
            [111, 114, 103] => lookup_750_6(acc),
            [112, 114, 100] => lookup_750_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_751() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_752() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_754() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_755() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_757() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_759_0(acc),
            [101, 100, 117] => lookup_759_1(acc),
            [103, 111, 118] => lookup_759_2(acc),
            [105, 110, 102] => lookup_759_3(acc),
            [110, 97, 109, 101] => lookup_759_4(acc),
            [110, 101, 116] => lookup_759_5(acc),
            [111, 114, 103] => lookup_759_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_760_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_760_0(acc),
            [101, 100, 117] => lookup_760_1(acc),
            [103, 111, 117, 118] => lookup_760_2(acc),
            [103, 111, 118] => lookup_760_3(acc),
            [110, 101, 116] => lookup_760_4(acc),
            [111, 114, 103] => lookup_760_5(acc),
            [112, 114, 101, 115, 115, 101] => lookup_760_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_761() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_763_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_764() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_765_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_765_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_765_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_765_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_765<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_765_0(acc),
            [103, 111, 118] => lookup_765_1(acc),
            [110, 121, 99] => lookup_765_2(acc),
            [111, 114, 103] => lookup_765_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_766_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_766_0(acc),
            [101, 100, 117] => lookup_766_1(acc),
            [103, 111, 118] => lookup_766_2(acc),
            [110, 101, 116] => lookup_766_3(acc),
            [111, 114, 103] => lookup_766_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_767_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_767_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_767<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_767_0(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_767_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_768() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_769() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_770() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_771() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_772<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 100] => lookup_772_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_773() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_774() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_775() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_777() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_779() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_780() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_781() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_782() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_783_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_783<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 117] => lookup_783_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_784() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_785_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_785<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_785_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_786_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_786_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_786_0(acc),
            [101, 100, 117] => lookup_786_1(acc),
            [103, 111, 118] => lookup_786_2(acc),
            [109, 105, 110, 105, 115, 105, 116, 101] => lookup_786_3(acc),
            [110, 101, 116] => lookup_786_4(acc),
            [111, 114, 103] => lookup_786_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_787() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_788_0(acc),
            [101, 100, 117] => lookup_788_1(acc),
            [110, 101, 116] => lookup_788_2(acc),
            [111, 114, 103] => lookup_788_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_789() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_791_0(acc),
            [99, 111] => lookup_791_1(acc),
            [99, 111, 109] => lookup_791_2(acc),
            [103, 111, 118] => lookup_791_3(acc),
            [110, 101, 116] => lookup_791_4(acc),
            [111, 114] => lookup_791_5(acc),
            [111, 114, 103] => lookup_791_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_792() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 101, 114, 111] => lookup_794_0(acc),
            [98, 105, 122] => lookup_794_1(acc),
            [99, 111, 109] => lookup_794_2(acc),
            [99, 111, 111, 112] => lookup_794_3(acc),
            [101, 100, 117] => lookup_794_4(acc),
            [103, 111, 118] => lookup_794_5(acc),
            [105, 110, 102, 111] => lookup_794_6(acc),
            [105, 110, 116] => lookup_794_7(acc),
            [109, 105, 108] => lookup_794_8(acc),
            [109, 117, 115, 101, 117, 109] => lookup_794_9(acc),
            [110, 97, 109, 101] => lookup_794_10(acc),
            [110, 101, 116] => lookup_794_11(acc),
            [111, 114, 103] => lookup_794_12(acc),
            [112, 114, 111] => lookup_794_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_795_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_795_0(acc),
            [98, 105, 122] => lookup_795_1(acc),
            [99, 111] => lookup_795_2(acc),
            [99, 111, 109] => lookup_795_3(acc),
            [99, 111, 111, 112] => lookup_795_4(acc),
            [101, 100, 117] => lookup_795_5(acc),
            [103, 111, 118] => lookup_795_6(acc),
            [105, 110, 116] => lookup_795_7(acc),
            [110, 101, 116] => lookup_795_8(acc),
            [111, 114, 103] => lookup_795_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_796_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_796_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_796_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_796_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_796_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_796<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_796_0(acc),
            [101, 100, 117] => lookup_796_1(acc),
            [103, 111, 98] => lookup_796_2(acc),
            [110, 101, 116] => lookup_796_3(acc),
            [111, 114, 103] => lookup_796_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_797_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_797_0(acc),
            [99, 111, 109] => lookup_797_1(acc),
            [101, 100, 117] => lookup_797_2(acc),
            [103, 111, 118] => lookup_797_3(acc),
            [109, 105, 108] => lookup_797_4(acc),
            [110, 97, 109, 101] => lookup_797_5(acc),
            [110, 101, 116] => lookup_797_6(acc),
            [111, 114, 103] => lookup_797_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_798_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_798_0(acc),
            [97, 100, 118] => lookup_798_1(acc),
            [99, 111] => lookup_798_2(acc),
            [101, 100, 117] => lookup_798_3(acc),
            [103, 111, 118] => lookup_798_4(acc),
            [109, 105, 108] => lookup_798_5(acc),
            [110, 101, 116] => lookup_798_6(acc),
            [111, 114, 103] => lookup_798_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_799_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108, 116] => lookup_799_0(acc),
            [99, 111] => lookup_799_1(acc),
            [99, 111, 109] => lookup_799_2(acc),
            [103, 111, 118] => lookup_799_3(acc),
            [110, 101, 116] => lookup_799_4(acc),
            [111, 114, 103] => lookup_799_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_800() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_802_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_802_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_802_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_802_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_802_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_802<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114] => lookup_802_0(info, labels, acc),
            [104, 105, 115] => lookup_802_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_803() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_805_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_805_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_805<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_805_0(acc),
            [110, 111, 109] => lookup_805_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_806() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_808_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_18_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_18_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 100, 110] => lookup_808_18_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111, 100] => lookup_808_18_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_23_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_23_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_23_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_23_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_23_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_23_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_23_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_23_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_23_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [49] => lookup_808_23_0(acc),
            [50] => lookup_808_23_1(acc),
            [51] => lookup_808_23_2(acc),
            [52] => lookup_808_23_3(acc),
            [53] => lookup_808_23_4(acc),
            [54] => lookup_808_23_5(acc),
            [55] => lookup_808_23_6(acc),
            [99, 101, 110, 116, 114, 97, 108, 117, 115] => lookup_808_23_7(acc),
            [101, 97, 115, 116, 97, 115, 105, 97] => lookup_808_23_8(acc),
            [101, 97, 115, 116, 117, 115, 50] => lookup_808_23_9(acc),
            [119, 101, 115, 116, 101, 117, 114, 111, 112, 101] => lookup_808_23_10(acc),
            [119, 101, 115, 116, 117, 115, 50] => lookup_808_23_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_36<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_808_36_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_38<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117] => lookup_808_38_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_42_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_42<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 100, 110] => lookup_808_42_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_43_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_43<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 17usize;
    match labels.next() {
        Some(label) => match label {
            [99, 100, 110] => lookup_808_43_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_44<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 100, 110] => lookup_808_44_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_45<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    match labels.next() {
        Some(label) => match label {
            [99, 100, 110] => lookup_808_45_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_48_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_48_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_48<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 49, 45, 100, 101] => lookup_808_48_0(acc),
            [119, 101, 115, 116, 49, 45, 117, 115] => lookup_808_48_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_51_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_51<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_808_51_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_808_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_76_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_76_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_76_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_76<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108, 115, 45, 115, 116, 111, 49] => lookup_808_76_0(acc),
            [106, 108, 115, 45, 115, 116, 111, 50] => lookup_808_76_1(acc),
            [106, 108, 115, 45, 115, 116, 111, 51] => lookup_808_76_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_79_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_79_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_79_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_79_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_79_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_808_79_2_0(acc),
            [103, 108, 111, 98, 97, 108] => lookup_808_79_2_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_79_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_79_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_79_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_79_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_808_79_3_0(acc),
            [98] => lookup_808_79_3_1(acc),
            [103, 108, 111, 98, 97, 108] => lookup_808_79_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_79<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [102, 114, 101, 101, 116, 108, 115] => lookup_808_79_0(acc),
            [109, 97, 112] => lookup_808_79_1(acc),
            [112, 114, 111, 100] => lookup_808_79_2(info, labels, acc),
            [115, 115, 108] => lookup_808_79_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_80_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_80<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 112] => lookup_808_80_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_118_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_118_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_118_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_118_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_118_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_118_0_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_118_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [102, 114, 45, 49] => lookup_808_118_0_0(acc),
            [108, 111, 110, 45, 49] => lookup_808_118_0_1(acc),
            [108, 111, 110, 45, 50] => lookup_808_118_0_2(acc),
            [110, 121, 45, 49] => lookup_808_118_0_3(acc),
            [110, 121, 45, 50] => lookup_808_118_0_4(acc),
            [115, 103, 45, 49] => lookup_808_118_0_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_118<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_808_118_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_128_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_128<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 110] => lookup_808_128_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_138_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_138_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_808_138_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_808_138_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_138_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_808_138_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_808_138<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [104, 111, 115, 116, 105, 110, 103] => lookup_808_138_0(info, labels, acc),
            [119, 101, 98, 112, 97, 97, 115] => lookup_808_138_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_148_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_148_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_148<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_808_148_0(acc),
            [110, 111, 114, 100, 101, 115, 116, 101, 45, 105, 100, 99] => lookup_808_148_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_149_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_149<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_808_149_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_166_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_166_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_166<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [115, 111, 99] => lookup_808_166_0(acc),
            [117, 115, 101, 114] => lookup_808_166_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_171_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_171<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_808_171_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_173_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_173_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 1usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_808_173_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_808_173<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [99] => lookup_808_173_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_178_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_178_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_178_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_178_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [97, 116, 108] => lookup_808_178_0_0(acc),
            [110, 106, 115] => lookup_808_178_0_1(acc),
            [114, 105, 99] => lookup_808_178_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_178<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_808_178_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_181_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_181_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 98] => lookup_808_181_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_181_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_181<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 111, 114, 101] => lookup_808_181_0(info, labels, acc),
            [115, 101, 114, 118, 105, 99, 101, 98, 117, 115] => lookup_808_181_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_182_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_182_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808_182<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 97, 103, 101] => lookup_808_182_0(acc),
            [119, 101, 98, 115, 105, 116, 101] => lookup_808_182_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_808_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_808<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => lookup_808_0(acc),
            [97, 100, 111, 98, 101, 105, 111, 45, 115, 116, 97, 116, 105, 99] => lookup_808_1(acc),
            [97, 100, 111, 98, 101, 105, 111, 114, 117, 110, 116, 105, 109, 101] => {
                lookup_808_2(acc)
            }
            [97, 107, 97, 100, 110, 115] => lookup_808_3(acc),
            [97, 107, 97, 109, 97, 105] => lookup_808_4(acc),
            [97, 107, 97, 109, 97, 105, 45, 115, 116, 97, 103, 105, 110, 103] => lookup_808_5(acc),
            [97, 107, 97, 109, 97, 105, 101, 100, 103, 101] => lookup_808_6(acc),
            [97, 107, 97, 109, 97, 105, 101, 100, 103, 101, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_808_7(acc)
            }
            [97, 107, 97, 109, 97, 105, 104, 100] => lookup_808_8(acc),
            [97, 107, 97, 109, 97, 105, 104, 100, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_808_9(acc)
            }
            [97, 107, 97, 109, 97, 105, 111, 114, 105, 103, 105, 110] => lookup_808_10(acc),
            [97, 107, 97, 109, 97, 105, 111, 114, 105, 103, 105, 110, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_808_11(acc)
            }
            [97, 107, 97, 109, 97, 105, 122, 101, 100] => lookup_808_12(acc),
            [97, 107, 97, 109, 97, 105, 122, 101, 100, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_808_13(acc)
            }
            [97, 108, 119, 97, 121, 115, 100, 97, 116, 97] => lookup_808_14(acc),
            [97, 112, 112, 115, 45, 49, 97, 110, 100, 49] => lookup_808_15(acc),
            [97, 112, 112, 117, 100, 111] => lookup_808_16(acc),
            [97, 116, 45, 98, 97, 110, 100, 45, 99, 97, 109, 112] => lookup_808_17(acc),
            [97, 116, 108, 97, 115, 115, 105, 97, 110, 45, 100, 101, 118] => {
                lookup_808_18(info, labels, acc)
            }
            [97, 122, 117, 114, 101, 45, 97, 112, 105] => lookup_808_19(acc),
            [97, 122, 117, 114, 101, 45, 109, 111, 98, 105, 108, 101] => lookup_808_20(acc),
            [97, 122, 117, 114, 101, 101, 100, 103, 101] => lookup_808_21(acc),
            [97, 122, 117, 114, 101, 102, 100] => lookup_808_22(acc),
            [97, 122, 117, 114, 101, 115, 116, 97, 116, 105, 99, 97, 112, 112, 115] => {
                lookup_808_23(labels, acc)
            }
            [97, 122, 117, 114, 101, 119, 101, 98, 115, 105, 116, 101, 115] => lookup_808_24(acc),
            [98, 97, 114, 115, 121] => lookup_808_25(acc),
            [98, 108, 97, 99, 107, 98, 97, 117, 100, 99, 100, 110] => lookup_808_26(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_808_27(acc),
            [98, 111, 111, 109, 108, 97] => lookup_808_28(acc),
            [98, 111, 116, 100, 97, 115, 104] => lookup_808_29(acc),
            [98, 111, 117, 110, 99, 101, 109, 101] => lookup_808_30(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_808_31(acc),
            [98, 114, 111, 107, 101, 45, 105, 116] => lookup_808_32(acc),
            [98, 117, 121, 115, 104, 111, 117, 115, 101, 115] => lookup_808_33(acc),
            [99, 97, 115, 97, 99, 97, 109] => lookup_808_34(acc),
            [99, 100, 110, 45, 101, 100, 103, 101, 115] => lookup_808_35(acc),
            [99, 100, 110, 55, 55] => lookup_808_36(info, labels, acc),
            [99, 100, 110, 55, 55, 45, 115, 115, 108] => lookup_808_37(acc),
            [99, 104, 97, 110, 110, 101, 108, 115, 100, 118, 114] => lookup_808_38(labels, acc),
            [99, 108, 105, 99, 107, 114, 105, 115, 105, 110, 103] => lookup_808_39(acc),
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_808_40(acc),
            [99, 108, 111, 117, 100, 97, 112, 112] => lookup_808_41(acc),
            [99, 108, 111, 117, 100, 102, 108, 97, 114, 101] => lookup_808_42(labels, acc),
            [99, 108, 111, 117, 100, 102, 108, 97, 114, 101, 97, 110, 121, 99, 97, 115, 116] => {
                lookup_808_43(info, labels, acc)
            }
            [99, 108, 111, 117, 100, 102, 108, 97, 114, 101, 99, 110] => {
                lookup_808_44(info, labels, acc)
            }
            [99, 108, 111, 117, 100, 102, 108, 97, 114, 101, 103, 108, 111, 98, 97, 108] => {
                lookup_808_45(info, labels, acc)
            }
            [99, 108, 111, 117, 100, 102, 114, 111, 110, 116] => lookup_808_46(acc),
            [99, 108, 111, 117, 100, 102, 117, 110, 99, 116, 105, 111, 110, 115] => {
                lookup_808_47(acc)
            }
            [99, 108, 111, 117, 100, 106, 105, 102, 102, 121] => lookup_808_48(labels, acc),
            [99, 108, 111, 117, 100, 121, 99, 108, 117, 115, 116, 101, 114] => lookup_808_49(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_808_50(acc),
            [99, 114, 121, 112, 116, 111, 110, 111, 109, 105, 99] => {
                lookup_808_51(info, labels, acc)
            }
            [99, 116, 102, 99, 108, 111, 117, 100] => lookup_808_52(acc),
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_808_53(acc),
            [100, 100, 110, 115] => lookup_808_54(acc),
            [100, 100, 110, 115, 45, 105, 112] => lookup_808_55(acc),
            [100, 101, 98, 105, 97, 110] => lookup_808_56(acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_808_57(acc),
            [100, 110, 115, 45, 99, 108, 111, 117, 100] => lookup_808_58(acc),
            [100, 110, 115, 45, 100, 121, 110, 97, 109, 105, 99] => lookup_808_59(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_808_60(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_808_61(acc),
            [100, 110, 115, 117, 112] => lookup_808_62(acc),
            [100, 111, 101, 115, 45, 105, 116] => lookup_808_63(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_808_64(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_808_65(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_808_66(acc),
            [100, 121, 110, 97, 116, 104, 111, 109, 101] => lookup_808_67(acc),
            [100, 121, 110, 117] => lookup_808_68(acc),
            [100, 121, 110, 118, 54] => lookup_808_69(acc),
            [101, 97, 116, 105, 110, 103, 45, 111, 114, 103, 97, 110, 105, 99] => {
                lookup_808_70(acc)
            }
            [101, 100, 103, 101, 97, 112, 112] => lookup_808_71(acc),
            [101, 100, 103, 101, 107, 101, 121] => lookup_808_72(acc),
            [101, 100, 103, 101, 107, 101, 121, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_808_73(acc)
            }
            [101, 100, 103, 101, 115, 117, 105, 116, 101] => lookup_808_74(acc),
            [101, 100, 103, 101, 115, 117, 105, 116, 101, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_808_75(acc)
            }
            [101, 108, 97, 115, 116, 120] => lookup_808_76(info, labels, acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => lookup_808_77(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_808_78(acc),
            [102, 97, 115, 116, 108, 121] => lookup_808_79(info, labels, acc),
            [102, 97, 115, 116, 108, 121, 108, 98] => lookup_808_80(labels, acc),
            [102, 101, 115, 116, 101, 45, 105, 112] => lookup_808_81(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_808_82(acc)
            }
            [102, 114, 111, 109, 45, 97, 122] => lookup_808_83(acc),
            [102, 114, 111, 109, 45, 99, 111] => lookup_808_84(acc),
            [102, 114, 111, 109, 45, 108, 97] => lookup_808_85(acc),
            [102, 114, 111, 109, 45, 110, 121] => lookup_808_86(acc),
            [103, 98] => lookup_808_87(acc),
            [103, 101, 116, 115, 45, 105, 116] => lookup_808_88(acc),
            [103, 103, 102, 102] => lookup_808_89(acc),
            [103, 114, 97, 102, 97, 110, 97, 45, 100, 101, 118] => lookup_808_90(acc),
            [104, 97, 109, 45, 114, 97, 100, 105, 111, 45, 111, 112] => lookup_808_91(acc),
            [104, 101, 116, 101, 109, 108] => lookup_808_92(acc),
            [104, 105, 99, 97, 109] => lookup_808_93(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_808_94(acc),
            [104, 111, 109, 101, 105, 112] => lookup_808_95(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_808_96(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_808_97(acc),
            [104, 117] => lookup_808_98(acc),
            [105, 110] => lookup_808_99(acc),
            [105, 110, 45, 100, 115, 108] => lookup_808_100(acc),
            [105, 110, 45, 116, 104, 101, 45, 98, 97, 110, 100] => lookup_808_101(acc),
            [105, 110, 45, 118, 112, 110] => lookup_808_102(acc),
            [105, 111, 98, 98] => lookup_808_103(acc),
            [105, 112, 105, 102, 111, 110, 121] => lookup_808_104(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_808_105(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_808_106(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_808_107(acc),
            [106, 112] => lookup_808_108(acc),
            [107, 101, 121, 119, 111, 114, 100, 45, 111, 110] => lookup_808_109(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_808_110(acc),
            [107, 105, 110, 103, 104, 111, 115, 116] => lookup_808_111(acc),
            [107, 110, 120, 45, 115, 101, 114, 118, 101, 114] => lookup_808_112(acc),
            [107, 114, 101, 108, 108, 105, 97, 110] => lookup_808_113(acc),
            [108, 105, 118, 101, 45, 111, 110] => lookup_808_114(acc),
            [108, 111, 99, 97, 108, 99, 101, 114, 116] => lookup_808_115(acc),
            [108, 111, 99, 97, 108, 104, 111, 115, 116, 99, 101, 114, 116] => lookup_808_116(acc),
            [109, 97, 102, 101, 108, 111] => lookup_808_117(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_808_118(info, labels, acc)
            }
            [109, 101, 105, 110, 102, 111, 114, 117, 109] => lookup_808_119(acc),
            [109, 101, 109, 115, 101, 116] => lookup_808_120(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_808_121(acc),
            [109, 121, 97, 109, 97, 122, 101] => lookup_808_122(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_808_123(acc),
            [109, 121, 100, 105, 115, 115, 101, 110, 116] => lookup_808_124(acc),
            [109, 121, 101, 102, 102, 101, 99, 116] => lookup_808_125(acc),
            [109, 121, 102, 114, 105, 116, 122] => lookup_808_126(acc),
            [109, 121, 109, 101, 100, 105, 97, 112, 99] => lookup_808_127(acc),
            [109, 121, 110, 101, 116, 110, 97, 109, 101] => lookup_808_128(info, labels, acc),
            [109, 121, 112, 115, 120] => lookup_808_129(acc),
            [109, 121, 114, 97, 100, 119, 101, 98] => lookup_808_130(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_808_131(acc)
            }
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_808_132(acc),
            [110, 104, 108, 102, 97, 110] => lookup_808_133(acc),
            [110, 111, 45, 105, 112] => lookup_808_134(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_808_135(acc),
            [111, 102, 102, 105, 99, 101, 45, 111, 110, 45, 116, 104, 101] => lookup_808_136(acc),
            [111, 110, 97, 118, 115, 116, 97, 99, 107] => lookup_808_137(acc),
            [111, 118, 104] => lookup_808_138(info, labels, acc),
            [111, 119, 110, 105, 112] => lookup_808_139(acc),
            [112, 103, 97, 102, 97, 110] => lookup_808_140(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_808_141(acc),
            [112, 114, 105, 118, 97, 116, 105, 122, 101, 104, 101, 97, 108, 116, 104, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_808_142(acc)
            }
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_808_143(acc),
            [114, 101, 100, 105, 114, 101, 99, 116, 109, 101] => lookup_808_144(acc),
            [114, 101, 115, 101, 114, 118, 101, 45, 111, 110, 108, 105, 110, 101] => {
                lookup_808_145(acc)
            }
            [114, 111, 117, 116, 105, 110, 103, 116, 104, 101, 99, 108, 111, 117, 100] => {
                lookup_808_146(acc)
            }
            [114, 117] => lookup_808_147(acc),
            [115, 97, 118, 101, 105, 110, 99, 108, 111, 117, 100] => {
                lookup_808_148(info, labels, acc)
            }
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_808_149(info, labels, acc),
            [115, 99, 104, 111, 107, 111, 107, 101, 107, 115] => lookup_808_150(acc),
            [115, 99, 114, 97, 112, 112, 101, 114, 45, 115, 105, 116, 101] => lookup_808_151(acc),
            [115, 101] => lookup_808_152(acc),
            [115, 101, 105, 100, 97, 116] => lookup_808_153(acc),
            [115, 101, 108, 102, 105, 112] => lookup_808_154(acc),
            [115, 101, 108, 108, 115, 45, 105, 116] => lookup_808_155(acc),
            [115, 101, 110, 115, 101, 101, 114, 105, 110, 103] => lookup_808_156(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_808_157(acc),
            [115, 101, 114, 118, 101, 98, 108, 111, 103] => lookup_808_158(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_808_159(acc),
            [115, 101, 114, 118, 101, 109, 105, 110, 101, 99, 114, 97, 102, 116] => {
                lookup_808_160(acc)
            }
            [115, 101, 114, 118, 101, 114, 45, 111, 110] => lookup_808_161(acc),
            [115, 104, 111, 112, 115, 101, 108, 101, 99, 116] => lookup_808_162(acc),
            [115, 105, 116, 101, 108, 101, 97, 102] => lookup_808_163(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_808_164(acc),
            [115, 113, 117, 97, 114, 101, 115] => lookup_808_165(acc),
            [115, 114, 99, 102] => lookup_808_166(info, labels, acc),
            [115, 116, 97, 116, 105, 99, 45, 97, 99, 99, 101, 115, 115] => lookup_808_167(acc),
            [115, 117, 112, 97, 98, 97, 115, 101] => lookup_808_168(acc),
            [115, 121, 116, 101, 115] => lookup_808_169(acc),
            [116, 104, 114, 117, 104, 101, 114, 101] => lookup_808_170(acc),
            [116, 111, 114, 112, 114, 111, 106, 101, 99, 116] => lookup_808_171(labels, acc),
            [116, 114, 97, 102, 102, 105, 99, 109, 97, 110, 97, 103, 101, 114] => {
                lookup_808_172(acc)
            }
            [116, 115] => lookup_808_173(labels, acc),
            [116, 119, 109, 97, 105, 108] => lookup_808_174(acc),
            [117, 107] => lookup_808_175(acc),
            [117, 110, 105, 53] => lookup_808_176(acc),
            [118, 112, 110, 100, 110, 115] => lookup_808_177(acc),
            [118, 112, 115, 45, 104, 111, 115, 116] => lookup_808_178(labels, acc),
            [118, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_808_179(acc),
            [119, 101, 98, 104, 111, 112] => lookup_808_180(acc),
            [119, 105, 110, 100, 111, 119, 115] => lookup_808_181(info, labels, acc),
            [121, 97, 110, 100, 101, 120, 99, 108, 111, 117, 100] => lookup_808_182(labels, acc),
            [122, 97] => lookup_808_183(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_809() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_810() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_811_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_811_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_811_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_811_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_811_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_811_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_811_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_811<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108, 99, 101, 115] => lookup_811_0(info, labels, acc),
            [97, 114, 118, 111] => lookup_811_1(acc),
            [97, 122, 105, 109, 117, 116, 104] => lookup_811_2(acc),
            [99, 111] => lookup_811_3(acc),
            [116, 108, 111, 110] => lookup_811_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_814<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 105, 99, 101, 97, 98, 108, 101] => lookup_814_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_816() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_818_0(acc),
            [99, 111, 109] => lookup_818_1(acc),
            [102, 105, 114, 109] => lookup_818_2(acc),
            [105, 110, 102, 111] => lookup_818_3(acc),
            [110, 101, 116] => lookup_818_4(acc),
            [111, 116, 104, 101, 114] => lookup_818_5(acc),
            [112, 101, 114] => lookup_818_6(acc),
            [114, 101, 99] => lookup_818_7(acc),
            [115, 116, 111, 114, 101] => lookup_818_8(acc),
            [119, 101, 98] => lookup_818_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_819() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_820_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_820_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_820_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_820_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_820_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_820_0_0(acc),
            [100, 108] => lookup_820_0_1(acc),
            [103, 111] => lookup_820_0_2(acc),
            [108, 103] => lookup_820_0_3(acc),
            [111, 110] => lookup_820_0_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_820_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_820_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_820_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_820_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_820_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_820_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_820_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_820_0(labels, acc),
            [99, 111, 108] => lookup_820_1(acc),
            [99, 111, 109] => lookup_820_2(acc),
            [101, 100, 117] => lookup_820_3(acc),
            [102, 105, 114, 109] => lookup_820_4(acc),
            [103, 101, 110] => lookup_820_5(acc),
            [103, 111, 118] => lookup_820_6(acc),
            [105] => lookup_820_7(acc),
            [108, 116, 100] => lookup_820_8(acc),
            [109, 105, 108] => lookup_820_9(acc),
            [109, 111, 98, 105] => lookup_820_10(acc),
            [110, 97, 109, 101] => lookup_820_11(acc),
            [110, 101, 116] => lookup_820_12(acc),
            [110, 103, 111] => lookup_820_13(acc),
            [111, 114, 103] => lookup_820_14(acc),
            [112, 108, 99] => lookup_820_15(acc),
            [115, 99, 104] => lookup_820_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_821() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_823_0(acc),
            [98, 105, 122] => lookup_823_1(acc),
            [99, 111] => lookup_823_2(acc),
            [99, 111, 109] => lookup_823_3(acc),
            [101, 100, 117] => lookup_823_4(acc),
            [103, 111, 98] => lookup_823_5(acc),
            [105, 110] => lookup_823_6(acc),
            [105, 110, 102, 111] => lookup_823_7(acc),
            [105, 110, 116] => lookup_823_8(acc),
            [109, 105, 108] => lookup_823_9(acc),
            [110, 101, 116] => lookup_823_10(acc),
            [110, 111, 109] => lookup_823_11(acc),
            [111, 114, 103] => lookup_823_12(acc),
            [119, 101, 98] => lookup_823_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_824() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_828() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_829() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_830_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_830_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_830_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_830_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_830_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_830_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_830_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_830_8_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_830_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_830_8_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_830<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 105, 116, 101] => lookup_830_0(acc),
            [99, 105, 115, 116, 114, 111, 110] => lookup_830_1(acc),
            [99, 111] => lookup_830_2(acc),
            [100, 101, 109, 111, 110] => lookup_830_3(acc),
            [103, 111, 118] => lookup_830_4(acc),
            [104, 111, 115, 116, 105, 110, 103, 45, 99, 108, 117, 115, 116, 101, 114] => {
                lookup_830_5(acc)
            }
            [107, 104, 112, 108, 97, 121] => lookup_830_6(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_830_7(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_830_8(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_831_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_831_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_84_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_84<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_84_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_86_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_86<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_831_86_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_831_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_153_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_153<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_153_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_221_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_221_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_221_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_221_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_221<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_831_221_0(acc),
            [118, 97, 108, 101, 114] => lookup_831_221_1(acc),
            [118, 195, 165, 108, 101, 114] => lookup_831_221_2(acc),
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_831_221_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_229_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_229<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_229_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_230_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_230<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_230_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_241_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_241<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_831_241_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_264_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_264<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_264_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_381_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_381_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_381<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114, 111, 121] => lookup_831_381_0(acc),
            [115, 97, 110, 100, 101] => lookup_831_381_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_388_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_388<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_388_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_831_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_397_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_397_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_397<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114, 195, 184, 121] => lookup_831_397_0(acc),
            [115, 97, 110, 100, 101] => lookup_831_397_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_416_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_416<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_416_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_422_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_422_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_422_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_422_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_422_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_422_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_422<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 111] => lookup_831_422_0(acc),
            [98, 195, 184] => lookup_831_422_1(acc),
            [104, 101, 114, 111, 121] => lookup_831_422_2(acc),
            [104, 101, 114, 195, 184, 121] => lookup_831_422_3(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_831_422_4(acc),
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_831_422_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_428_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_428<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_428_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_434_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_434<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_434_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_435(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_436_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_436<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_436_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_437(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_438(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_439(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_440(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_441(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_442(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_443(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_444(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_445(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_446(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_447_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_447<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_447_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_448(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_449(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_450(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_451_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_451<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [118, 97, 108, 101, 114] => lookup_831_451_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_452(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_453(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_454(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_455(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_456(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_457(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_458(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_459(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_460(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_461(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_462(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_463(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_464(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_465(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_466(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_467(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_468(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_469(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_470(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_471(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_472(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_473(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_474(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_475(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_476(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_477(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_478(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_479(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_480(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_481(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_482(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_483(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_484(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_485(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_486_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_486<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_486_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_487(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_488(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_489(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_490(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_491(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_492(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_493(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_494(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_495(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_496(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_497(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_498(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_499(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_500(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_501(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_502(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_503(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_504(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_505(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_506(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_507(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_508(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_509(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_510(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_511(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_512(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_513(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_514(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_515(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_516(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_517(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_518(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_519(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_520(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_521(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_522(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_523(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_524(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_525(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_526_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_526<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_526_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_527(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_528(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_529(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_530(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_531(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_532(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_533(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_534(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_535(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_536(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_537(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_538(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_539(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_540(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_541(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_542(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_543(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_544(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_545(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_546(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_547(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_548(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_549(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_550(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_551(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_552(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_553(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_554(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_555(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_556(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_557(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_558(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_559(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_560(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_561(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_562(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_563(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_564(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_565(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_566(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_567(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_568(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_569(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_570(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_571(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_572(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_573(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_574(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_575_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_575<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_575_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_576(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_577(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_578(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_579(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_580(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_581(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_582(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_583(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_584(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_585(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_586(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_587(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_588(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_589(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_590(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_591(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_592(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_593(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_594(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_595(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_596(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_597(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_598(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_599(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_600_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_600<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_600_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_601(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_602(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_603(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_604(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_605(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_606(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_607(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_608(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_609(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_610(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_611(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_612(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_613(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_614(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_615(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_616(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_617(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_618_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_618_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_618_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_618<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 111] => lookup_831_618_0(acc),
            [98, 195, 184] => lookup_831_618_1(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_831_618_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_619(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_620(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_621(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_622(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_623(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_624(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_625_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_625<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_625_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_626(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_627(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_628(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_629(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_630_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_630<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_630_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_631(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_632(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_633(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_634(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_635(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_636(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_637(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_638(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_639(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_640(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_641(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_642(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_643(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_644(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_645(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_646(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_647(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_648(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_649(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_650(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_651(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_652(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_653(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_654(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_655(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_656(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_657(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_658_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_658<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_658_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_659(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_660(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_661(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_662(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_663(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_664(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_665(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_666(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_667(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_668(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_669(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_670(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_671(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_672(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_673(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_674(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_675(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_676(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_677(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_678(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_679(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_680(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_681_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_681<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_831_681_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_682(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_683(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_684(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_685(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_686(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_687(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_688_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_688<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_831_688_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_689(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_690(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_691(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_692(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_693(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_694(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_695(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_696(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_697(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_698(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_699(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_700(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_701(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_702(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_703(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_704(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_705(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_706(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_707(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_708(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_709(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_710(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_711(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_712(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_713(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_714(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_715(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_716(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_717(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_718(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_719(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_720(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_721(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_722(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_723(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_724(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_725(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_726(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_727(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_728(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_729(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_730(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_731(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_732(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_733(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_734(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_735(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_736(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_737(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_738(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_739(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_740(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_741(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_742(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_743(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_744(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_745(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_746(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_747(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_748(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_749(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_750(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_751(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_752(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_753(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_754(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_755(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_756(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_757(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_758(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_759(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_760(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_761(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_762(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_763(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_764(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_765(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_766(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_767(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_768(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_769(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_770(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_771(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_772(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_773(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_774(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_775(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_776(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_777(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_778(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_779(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_780(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_781(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_782(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_783(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_784(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_785(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_786(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_787(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_788(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_789(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_790_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_790_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_790<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 22usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_831_790_0(acc),
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_831_790_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_791(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_792(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_793(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_794(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_795(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_796(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_797(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_798(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_799(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_800(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_801(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_802(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_803(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_804(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_805(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_806(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_807(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_808(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_809(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_810(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_811(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_812(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_813(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_814(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_815(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_816(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_817(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_818(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_819(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_820(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_821(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_822(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_823(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_824(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_825(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_826(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_827(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_828(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_829(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_830(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_831(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_832(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_833(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_834(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_835(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_836(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_837(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_838(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_839(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_840(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_841(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_842(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_843(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_844(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_845_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_845<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_831_845_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_846(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_847(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_848(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_849(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_850(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_851(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_852(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_853(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_854(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_855(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_856(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_857(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_858(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_859(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_860(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_861(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_862(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_863(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_864(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_865(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_866(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_867(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_868(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_869(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_870(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_871(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_872(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_873(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_874(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_875(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_876(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_877(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_878(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_879(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_880(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_881(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_882(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_883(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_884(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_885(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_886(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_887(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_888_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_888<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 195, 165, 108, 101, 114] => lookup_831_888_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_831_889(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_890(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_891(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_892(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_893(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_894(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 104, 106, 101, 109, 109, 101, 115, 105, 100, 101] => lookup_831_0(acc),
            [97, 97] => lookup_831_1(labels, acc),
            [97, 97, 114, 98, 111, 114, 116, 101] => lookup_831_2(acc),
            [97, 101, 106, 114, 105, 101] => lookup_831_3(acc),
            [97, 102, 106, 111, 114, 100] => lookup_831_4(acc),
            [97, 103, 100, 101, 110, 101, 115] => lookup_831_5(acc),
            [97, 104] => lookup_831_6(labels, acc),
            [97, 107, 101, 114, 115, 104, 117, 115] => lookup_831_7(info, labels, acc),
            [97, 107, 110, 111, 108, 117, 111, 107, 116, 97] => lookup_831_8(acc),
            [97, 107, 114, 101, 104, 97, 109, 110] => lookup_831_9(acc),
            [97, 108] => lookup_831_10(acc),
            [97, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_831_11(acc),
            [97, 108, 101, 115, 117, 110, 100] => lookup_831_12(acc),
            [97, 108, 103, 97, 114, 100] => lookup_831_13(acc),
            [97, 108, 115, 116, 97, 104, 97, 117, 103] => lookup_831_14(acc),
            [97, 108, 116, 97] => lookup_831_15(acc),
            [97, 108, 118, 100, 97, 108] => lookup_831_16(acc),
            [97, 109, 108, 105] => lookup_831_17(acc),
            [97, 109, 111, 116] => lookup_831_18(acc),
            [97, 110, 100, 97, 115, 117, 111, 108, 111] => lookup_831_19(acc),
            [97, 110, 100, 101, 98, 117] => lookup_831_20(acc),
            [97, 110, 100, 111, 121] => lookup_831_21(acc),
            [97, 110, 100, 195, 184, 121] => lookup_831_22(acc),
            [97, 114, 100, 97, 108] => lookup_831_23(acc),
            [97, 114, 101, 109, 97, 114, 107] => lookup_831_24(acc),
            [97, 114, 101, 110, 100, 97, 108] => lookup_831_25(acc),
            [97, 114, 110, 97] => lookup_831_26(acc),
            [97, 115, 101, 114, 97, 108] => lookup_831_27(acc),
            [97, 115, 107, 101, 114] => lookup_831_28(acc),
            [97, 115, 107, 105, 109] => lookup_831_29(acc),
            [97, 115, 107, 111, 121] => lookup_831_30(acc),
            [97, 115, 107, 118, 111, 108, 108] => lookup_831_31(acc),
            [97, 115, 107, 195, 184, 121] => lookup_831_32(acc),
            [97, 115, 110, 101, 115] => lookup_831_33(acc),
            [97, 117, 100, 110, 101, 100, 97, 108, 110] => lookup_831_34(acc),
            [97, 117, 107, 114, 97] => lookup_831_35(acc),
            [97, 117, 114, 101] => lookup_831_36(acc),
            [97, 117, 114, 108, 97, 110, 100] => lookup_831_37(acc),
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 111, 108, 97, 110, 100] => {
                lookup_831_38(acc)
            }
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 195, 184, 108, 97, 110, 100] => {
                lookup_831_39(acc)
            }
            [97, 117, 115, 116, 101, 118, 111, 108, 108] => lookup_831_40(acc),
            [97, 117, 115, 116, 114, 104, 101, 105, 109] => lookup_831_41(acc),
            [97, 118, 101, 114, 111, 121] => lookup_831_42(acc),
            [97, 118, 101, 114, 195, 184, 121] => lookup_831_43(acc),
            [98, 97, 100, 97, 100, 100, 106, 97] => lookup_831_44(acc),
            [98, 97, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_831_45(acc),
            [98, 97, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_831_46(acc),
            [98, 97, 105, 100, 97, 114] => lookup_831_47(acc),
            [98, 97, 106, 100, 100, 97, 114] => lookup_831_48(acc),
            [98, 97, 108, 97, 116] => lookup_831_49(acc),
            [98, 97, 108, 101, 115, 116, 114, 97, 110, 100] => lookup_831_50(acc),
            [98, 97, 108, 108, 97, 110, 103, 101, 110] => lookup_831_51(acc),
            [98, 97, 108, 115, 102, 106, 111, 114, 100] => lookup_831_52(acc),
            [98, 97, 109, 98, 108, 101] => lookup_831_53(acc),
            [98, 97, 114, 100, 117] => lookup_831_54(acc),
            [98, 97, 114, 117, 109] => lookup_831_55(acc),
            [98, 97, 116, 115, 102, 106, 111, 114, 100] => lookup_831_56(acc),
            [98, 101, 97, 114, 97, 108, 118, 97, 104, 107, 105] => lookup_831_57(acc),
            [98, 101, 97, 114, 97, 108, 118, 195, 161, 104, 107, 105] => lookup_831_58(acc),
            [98, 101, 97, 114, 100, 117] => lookup_831_59(acc),
            [98, 101, 105, 97, 114, 110] => lookup_831_60(acc),
            [98, 101, 114, 103] => lookup_831_61(acc),
            [98, 101, 114, 103, 101, 110] => lookup_831_62(acc),
            [98, 101, 114, 108, 101, 118, 97, 103] => lookup_831_63(acc),
            [98, 101, 114, 108, 101, 118, 195, 165, 103] => lookup_831_64(acc),
            [98, 105, 101, 118, 97, 116] => lookup_831_65(acc),
            [98, 105, 101, 118, 195, 161, 116] => lookup_831_66(acc),
            [98, 105, 110, 100, 97, 108] => lookup_831_67(acc),
            [98, 105, 114, 107, 101, 110, 101, 115] => lookup_831_68(acc),
            [98, 106, 97, 114, 107, 111, 121] => lookup_831_69(acc),
            [98, 106, 97, 114, 107, 195, 184, 121] => lookup_831_70(acc),
            [98, 106, 101, 114, 107, 114, 101, 105, 109] => lookup_831_71(acc),
            [98, 106, 117, 103, 110] => lookup_831_72(acc),
            [98, 111, 100, 111] => lookup_831_73(acc),
            [98, 111, 100, 195, 184] => lookup_831_74(acc),
            [98, 111, 107, 110] => lookup_831_75(acc),
            [98, 111, 109, 108, 111] => lookup_831_76(acc),
            [98, 114, 101, 109, 97, 110, 103, 101, 114] => lookup_831_77(acc),
            [98, 114, 111, 110, 110, 111, 121] => lookup_831_78(acc),
            [98, 114, 111, 110, 110, 111, 121, 115, 117, 110, 100] => lookup_831_79(acc),
            [98, 114, 117, 109, 117, 110, 100, 100, 97, 108] => lookup_831_80(acc),
            [98, 114, 121, 110, 101] => lookup_831_81(acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121] => lookup_831_82(acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121, 115, 117, 110, 100] => lookup_831_83(acc),
            [98, 117] => lookup_831_84(labels, acc),
            [98, 117, 100, 101, 106, 106, 117] => lookup_831_85(acc),
            [98, 117, 115, 107, 101, 114, 117, 100] => lookup_831_86(info, labels, acc),
            [98, 121, 103, 108, 97, 110, 100] => lookup_831_87(acc),
            [98, 121, 107, 108, 101] => lookup_831_88(acc),
            [98, 195, 161, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_831_89(acc),
            [98, 195, 161, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_831_90(acc),
            [98, 195, 161, 105, 100, 195, 161, 114] => lookup_831_91(acc),
            [98, 195, 161, 106, 100, 100, 97, 114] => lookup_831_92(acc),
            [98, 195, 161, 108, 195, 161, 116] => lookup_831_93(acc),
            [98, 195, 165, 100, 195, 165, 100, 100, 106, 195, 165] => lookup_831_94(acc),
            [98, 195, 165, 116, 115, 102, 106, 111, 114, 100] => lookup_831_95(acc),
            [98, 195, 166, 114, 117, 109] => lookup_831_96(acc),
            [98, 195, 184, 109, 108, 111] => lookup_831_97(acc),
            [99, 97, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_831_98(acc),
            [99, 111] => lookup_831_99(acc),
            [100, 97, 118, 118, 101, 110, 106, 97, 114, 103, 97] => lookup_831_100(acc),
            [100, 97, 118, 118, 101, 110, 106, 195, 161, 114, 103, 97] => lookup_831_101(acc),
            [100, 97, 118, 118, 101, 115, 105, 105, 100, 97] => lookup_831_102(acc),
            [100, 101, 97, 116, 110, 117] => lookup_831_103(acc),
            [100, 101, 112] => lookup_831_104(acc),
            [100, 105, 101, 108, 100, 100, 97, 110, 117, 111, 114, 114, 105] => lookup_831_105(acc),
            [100, 105, 118, 116, 97, 115, 118, 117, 111, 100, 110, 97] => lookup_831_106(acc),
            [100, 105, 118, 116, 116, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_831_107(acc),
            [100, 111, 110, 110, 97] => lookup_831_108(acc),
            [100, 111, 118, 114, 101] => lookup_831_109(acc),
            [100, 114, 97, 109, 109, 101, 110] => lookup_831_110(acc),
            [100, 114, 97, 110, 103, 101, 100, 97, 108] => lookup_831_111(acc),
            [100, 114, 111, 98, 97, 107] => lookup_831_112(acc),
            [100, 114, 195, 184, 98, 97, 107] => lookup_831_113(acc),
            [100, 121, 114, 111, 121] => lookup_831_114(acc),
            [100, 121, 114, 195, 184, 121] => lookup_831_115(acc),
            [100, 195, 184, 110, 110, 97] => lookup_831_116(acc),
            [101, 103, 101, 114, 115, 117, 110, 100] => lookup_831_117(acc),
            [101, 105, 100] => lookup_831_118(acc),
            [101, 105, 100, 102, 106, 111, 114, 100] => lookup_831_119(acc),
            [101, 105, 100, 115, 98, 101, 114, 103] => lookup_831_120(acc),
            [101, 105, 100, 115, 107, 111, 103] => lookup_831_121(acc),
            [101, 105, 100, 115, 118, 111, 108, 108] => lookup_831_122(acc),
            [101, 105, 103, 101, 114, 115, 117, 110, 100] => lookup_831_123(acc),
            [101, 108, 118, 101, 114, 117, 109] => lookup_831_124(acc),
            [101, 110, 101, 98, 97, 107, 107] => lookup_831_125(acc),
            [101, 110, 103, 101, 114, 100, 97, 108] => lookup_831_126(acc),
            [101, 116, 110, 101] => lookup_831_127(acc),
            [101, 116, 110, 101, 100, 97, 108] => lookup_831_128(acc),
            [101, 118, 101, 110, 97, 115, 115, 105] => lookup_831_129(acc),
            [101, 118, 101, 110, 101, 115] => lookup_831_130(acc),
            [101, 118, 101, 110, 195, 161, 197, 161, 197, 161, 105] => lookup_831_131(acc),
            [101, 118, 106, 101, 45, 111, 103, 45, 104, 111, 114, 110, 110, 101, 115] => {
                lookup_831_132(acc)
            }
            [102, 97, 114, 115, 117, 110, 100] => lookup_831_133(acc),
            [102, 97, 117, 115, 107, 101] => lookup_831_134(acc),
            [102, 101, 100, 106, 101] => lookup_831_135(acc),
            [102, 101, 116] => lookup_831_136(acc),
            [102, 101, 116, 115, 117, 110, 100] => lookup_831_137(acc),
            [102, 104, 115] => lookup_831_138(acc),
            [102, 105, 110, 110, 111, 121] => lookup_831_139(acc),
            [102, 105, 110, 110, 195, 184, 121] => lookup_831_140(acc),
            [102, 105, 116, 106, 97, 114] => lookup_831_141(acc),
            [102, 106, 97, 108, 101, 114] => lookup_831_142(acc),
            [102, 106, 101, 108, 108] => lookup_831_143(acc),
            [102, 108, 97] => lookup_831_144(acc),
            [102, 108, 97, 107, 115, 116, 97, 100] => lookup_831_145(acc),
            [102, 108, 97, 116, 97, 110, 103, 101, 114] => lookup_831_146(acc),
            [102, 108, 101, 107, 107, 101, 102, 106, 111, 114, 100] => lookup_831_147(acc),
            [102, 108, 101, 115, 98, 101, 114, 103] => lookup_831_148(acc),
            [102, 108, 111, 114, 97] => lookup_831_149(acc),
            [102, 108, 111, 114, 111] => lookup_831_150(acc),
            [102, 108, 111, 114, 195, 184] => lookup_831_151(acc),
            [102, 108, 195, 165] => lookup_831_152(acc),
            [102, 109] => lookup_831_153(labels, acc),
            [102, 111, 108, 107, 101, 98, 105, 98, 108] => lookup_831_154(acc),
            [102, 111, 108, 108, 100, 97, 108] => lookup_831_155(acc),
            [102, 111, 114, 100, 101] => lookup_831_156(acc),
            [102, 111, 114, 115, 97, 110, 100] => lookup_831_157(acc),
            [102, 111, 115, 110, 101, 115] => lookup_831_158(acc),
            [102, 114, 97, 110, 97] => lookup_831_159(acc),
            [102, 114, 101, 100, 114, 105, 107, 115, 116, 97, 100] => lookup_831_160(acc),
            [102, 114, 101, 105] => lookup_831_161(acc),
            [102, 114, 111, 103, 110] => lookup_831_162(acc),
            [102, 114, 111, 108, 97, 110, 100] => lookup_831_163(acc),
            [102, 114, 111, 115, 116, 97] => lookup_831_164(acc),
            [102, 114, 111, 121, 97] => lookup_831_165(acc),
            [102, 114, 195, 166, 110, 97] => lookup_831_166(acc),
            [102, 114, 195, 184, 121, 97] => lookup_831_167(acc),
            [102, 117, 111, 105, 115, 107, 117] => lookup_831_168(acc),
            [102, 117, 111, 115, 115, 107, 111] => lookup_831_169(acc),
            [102, 117, 115, 97] => lookup_831_170(acc),
            [102, 121, 108, 107, 101, 115, 98, 105, 98, 108] => lookup_831_171(acc),
            [102, 121, 114, 101, 115, 100, 97, 108] => lookup_831_172(acc),
            [102, 195, 184, 114, 100, 101] => lookup_831_173(acc),
            [103, 97, 105, 118, 117, 111, 116, 110, 97] => lookup_831_174(acc),
            [103, 97, 108, 115, 97] => lookup_831_175(acc),
            [103, 97, 109, 118, 105, 107] => lookup_831_176(acc),
            [103, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_831_177(acc),
            [103, 97, 117, 108, 97, 114] => lookup_831_178(acc),
            [103, 97, 117, 115, 100, 97, 108] => lookup_831_179(acc),
            [103, 105, 101, 104, 116, 97, 118, 117, 111, 97, 116, 110, 97] => lookup_831_180(acc),
            [103, 105, 108, 100, 101, 115, 107, 97, 108] => lookup_831_181(acc),
            [103, 105, 108, 100, 101, 115, 107, 195, 165, 108] => lookup_831_182(acc),
            [103, 105, 115, 107, 101] => lookup_831_183(acc),
            [103, 106, 101, 109, 110, 101, 115] => lookup_831_184(acc),
            [103, 106, 101, 114, 100, 114, 117, 109] => lookup_831_185(acc),
            [103, 106, 101, 114, 115, 116, 97, 100] => lookup_831_186(acc),
            [103, 106, 101, 115, 100, 97, 108] => lookup_831_187(acc),
            [103, 106, 111, 118, 105, 107] => lookup_831_188(acc),
            [103, 106, 195, 184, 118, 105, 107] => lookup_831_189(acc),
            [103, 108, 111, 112, 112, 101, 110] => lookup_831_190(acc),
            [103, 111, 108] => lookup_831_191(acc),
            [103, 114, 97, 110] => lookup_831_192(acc),
            [103, 114, 97, 110, 101] => lookup_831_193(acc),
            [103, 114, 97, 110, 118, 105, 110] => lookup_831_194(acc),
            [103, 114, 97, 116, 97, 110, 103, 101, 110] => lookup_831_195(acc),
            [103, 114, 105, 109, 115, 116, 97, 100] => lookup_831_196(acc),
            [103, 114, 111, 110, 103] => lookup_831_197(acc),
            [103, 114, 117, 101] => lookup_831_198(acc),
            [103, 117, 108, 101, 110] => lookup_831_199(acc),
            [103, 117, 111, 118, 100, 97, 103, 101, 97, 105, 100, 110, 117] => lookup_831_200(acc),
            [103, 195, 161, 105, 118, 117, 111, 116, 110, 97] => lookup_831_201(acc),
            [103, 195, 161, 108, 115, 195, 161] => lookup_831_202(acc),
            [103, 195, 161, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_831_203(acc),
            [104, 97] => lookup_831_204(acc),
            [104, 97, 98, 109, 101, 114] => lookup_831_205(acc),
            [104, 97, 100, 115, 101, 108] => lookup_831_206(acc),
            [104, 97, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_831_207(acc),
            [104, 97, 108, 100, 101, 110] => lookup_831_208(acc),
            [104, 97, 108, 115, 97] => lookup_831_209(acc),
            [104, 97, 109, 97, 114] => lookup_831_210(acc),
            [104, 97, 109, 97, 114, 111, 121] => lookup_831_211(acc),
            [104, 97, 109, 109, 97, 114, 102, 101, 97, 115, 116, 97] => lookup_831_212(acc),
            [104, 97, 109, 109, 101, 114, 102, 101, 115, 116] => lookup_831_213(acc),
            [104, 97, 112, 109, 105, 114] => lookup_831_214(acc),
            [104, 97, 114, 97, 109] => lookup_831_215(acc),
            [104, 97, 114, 101, 105, 100] => lookup_831_216(acc),
            [104, 97, 114, 115, 116, 97, 100] => lookup_831_217(acc),
            [104, 97, 115, 118, 105, 107] => lookup_831_218(acc),
            [104, 97, 116, 116, 102, 106, 101, 108, 108, 100, 97, 108] => lookup_831_219(acc),
            [104, 97, 117, 103, 101, 115, 117, 110, 100] => lookup_831_220(acc),
            [104, 101, 100, 109, 97, 114, 107] => lookup_831_221(info, labels, acc),
            [104, 101, 109, 110, 101] => lookup_831_222(acc),
            [104, 101, 109, 110, 101, 115] => lookup_831_223(acc),
            [104, 101, 109, 115, 101, 100, 97, 108] => lookup_831_224(acc),
            [104, 101, 114, 97, 100] => lookup_831_225(acc),
            [104, 105, 116, 114, 97] => lookup_831_226(acc),
            [104, 106, 97, 114, 116, 100, 97, 108] => lookup_831_227(acc),
            [104, 106, 101, 108, 109, 101, 108, 97, 110, 100] => lookup_831_228(acc),
            [104, 108] => lookup_831_229(labels, acc),
            [104, 109] => lookup_831_230(labels, acc),
            [104, 111, 98, 111, 108] => lookup_831_231(acc),
            [104, 111, 98, 195, 184, 108] => lookup_831_232(acc),
            [104, 111, 102] => lookup_831_233(acc),
            [104, 111, 107, 107, 115, 117, 110, 100] => lookup_831_234(acc),
            [104, 111, 108] => lookup_831_235(acc),
            [104, 111, 108, 101] => lookup_831_236(acc),
            [104, 111, 108, 109, 101, 115, 116, 114, 97, 110, 100] => lookup_831_237(acc),
            [104, 111, 108, 116, 97, 108, 101, 110] => lookup_831_238(acc),
            [104, 111, 108, 116, 195, 165, 108, 101, 110] => lookup_831_239(acc),
            [104, 111, 110, 101, 102, 111, 115, 115] => lookup_831_240(acc),
            [104, 111, 114, 100, 97, 108, 97, 110, 100] => lookup_831_241(info, labels, acc),
            [104, 111, 114, 110, 105, 110, 100, 97, 108] => lookup_831_242(acc),
            [104, 111, 114, 116, 101, 110] => lookup_831_243(acc),
            [104, 111, 121, 97, 110, 103, 101, 114] => lookup_831_244(acc),
            [104, 111, 121, 108, 97, 110, 100, 101, 116] => lookup_831_245(acc),
            [104, 117, 114, 100, 97, 108] => lookup_831_246(acc),
            [104, 117, 114, 117, 109] => lookup_831_247(acc),
            [104, 118, 97, 108, 101, 114] => lookup_831_248(acc),
            [104, 121, 108, 108, 101, 115, 116, 97, 100] => lookup_831_249(acc),
            [104, 195, 161, 98, 109, 101, 114] => lookup_831_250(acc),
            [104, 195, 161, 109, 109, 195, 161, 114, 102, 101, 97, 115, 116, 97] => {
                lookup_831_251(acc)
            }
            [104, 195, 161, 112, 109, 105, 114] => lookup_831_252(acc),
            [104, 195, 165] => lookup_831_253(acc),
            [104, 195, 166, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_831_254(acc),
            [104, 195, 184, 110, 101, 102, 111, 115, 115] => lookup_831_255(acc),
            [104, 195, 184, 121, 97, 110, 103, 101, 114] => lookup_831_256(acc),
            [104, 195, 184, 121, 108, 97, 110, 100, 101, 116] => lookup_831_257(acc),
            [105, 98, 101, 115, 116, 97, 100] => lookup_831_258(acc),
            [105, 100, 114, 101, 116, 116] => lookup_831_259(acc),
            [105, 110, 100, 101, 114, 111, 121] => lookup_831_260(acc),
            [105, 110, 100, 101, 114, 195, 184, 121] => lookup_831_261(acc),
            [105, 118, 101, 108, 97, 110, 100] => lookup_831_262(acc),
            [105, 118, 103, 117] => lookup_831_263(acc),
            [106, 97, 110, 45, 109, 97, 121, 101, 110] => lookup_831_264(labels, acc),
            [106, 101, 115, 115, 104, 101, 105, 109] => lookup_831_265(acc),
            [106, 101, 118, 110, 97, 107, 101, 114] => lookup_831_266(acc),
            [106, 111, 108, 115, 116, 101, 114] => lookup_831_267(acc),
            [106, 111, 110, 100, 97, 108] => lookup_831_268(acc),
            [106, 111, 114, 112, 101, 108, 97, 110, 100] => lookup_831_269(acc),
            [106, 195, 184, 108, 115, 116, 101, 114] => lookup_831_270(acc),
            [106, 195, 184, 114, 112, 101, 108, 97, 110, 100] => lookup_831_271(acc),
            [107, 97, 102, 106, 111, 114, 100] => lookup_831_272(acc),
            [107, 97, 114, 97, 115, 106, 111, 104, 107, 97] => lookup_831_273(acc),
            [107, 97, 114, 97, 115, 106, 111, 107] => lookup_831_274(acc),
            [107, 97, 114, 108, 115, 111, 121] => lookup_831_275(acc),
            [107, 97, 114, 109, 111, 121] => lookup_831_276(acc),
            [107, 97, 114, 109, 195, 184, 121] => lookup_831_277(acc),
            [107, 97, 117, 116, 111, 107, 101, 105, 110, 111] => lookup_831_278(acc),
            [107, 105, 114, 107, 101, 110, 101, 115] => lookup_831_279(acc),
            [107, 108, 97, 98, 117] => lookup_831_280(acc),
            [107, 108, 101, 112, 112] => lookup_831_281(acc),
            [107, 108, 195, 166, 98, 117] => lookup_831_282(acc),
            [107, 111, 109, 109, 117, 110, 101] => lookup_831_283(acc),
            [107, 111, 110, 103, 115, 98, 101, 114, 103] => lookup_831_284(acc),
            [107, 111, 110, 103, 115, 118, 105, 110, 103, 101, 114] => lookup_831_285(acc),
            [107, 111, 112, 101, 114, 118, 105, 107] => lookup_831_286(acc),
            [107, 114, 97, 97, 110, 103, 104, 107, 101] => lookup_831_287(acc),
            [107, 114, 97, 103, 101, 114, 111] => lookup_831_288(acc),
            [107, 114, 97, 103, 101, 114, 195, 184] => lookup_831_289(acc),
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 97, 110, 100] => lookup_831_290(acc),
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 117, 110, 100] => lookup_831_291(acc),
            [107, 114, 111, 100, 115, 104, 101, 114, 97, 100] => lookup_831_292(acc),
            [107, 114, 111, 107, 115, 116, 97, 100, 101, 108, 118, 97] => lookup_831_293(acc),
            [107, 114, 195, 165, 97, 110, 103, 104, 107, 101] => lookup_831_294(acc),
            [107, 114, 195, 184, 100, 115, 104, 101, 114, 97, 100] => lookup_831_295(acc),
            [107, 118, 97, 102, 106, 111, 114, 100] => lookup_831_296(acc),
            [107, 118, 97, 108, 115, 117, 110, 100] => lookup_831_297(acc),
            [107, 118, 97, 109] => lookup_831_298(acc),
            [107, 118, 97, 110, 97, 110, 103, 101, 110] => lookup_831_299(acc),
            [107, 118, 105, 110, 101, 115, 100, 97, 108] => lookup_831_300(acc),
            [107, 118, 105, 110, 110, 104, 101, 114, 97, 100] => lookup_831_301(acc),
            [107, 118, 105, 116, 101, 115, 101, 105, 100] => lookup_831_302(acc),
            [107, 118, 105, 116, 115, 111, 121] => lookup_831_303(acc),
            [107, 118, 105, 116, 115, 195, 184, 121] => lookup_831_304(acc),
            [107, 118, 195, 166, 102, 106, 111, 114, 100] => lookup_831_305(acc),
            [107, 118, 195, 166, 110, 97, 110, 103, 101, 110] => lookup_831_306(acc),
            [107, 195, 161, 114, 195, 161, 197, 161, 106, 111, 104, 107, 97] => lookup_831_307(acc),
            [107, 195, 165, 102, 106, 111, 114, 100] => lookup_831_308(acc),
            [108, 97, 97, 107, 101, 115, 118, 117, 101, 109, 105, 101] => lookup_831_309(acc),
            [108, 97, 104, 112, 112, 105] => lookup_831_310(acc),
            [108, 97, 110, 103, 101, 118, 97, 103] => lookup_831_311(acc),
            [108, 97, 110, 103, 101, 118, 195, 165, 103] => lookup_831_312(acc),
            [108, 97, 114, 100, 97, 108] => lookup_831_313(acc),
            [108, 97, 114, 118, 105, 107] => lookup_831_314(acc),
            [108, 97, 118, 97, 103, 105, 115] => lookup_831_315(acc),
            [108, 97, 118, 97, 110, 103, 101, 110] => lookup_831_316(acc),
            [108, 101, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_831_317(acc),
            [108, 101, 97, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_831_318(acc),
            [108, 101, 98, 101, 115, 98, 121] => lookup_831_319(acc),
            [108, 101, 105, 107, 97, 110, 103, 101, 114] => lookup_831_320(acc),
            [108, 101, 105, 114, 102, 106, 111, 114, 100] => lookup_831_321(acc),
            [108, 101, 105, 114, 118, 105, 107] => lookup_831_322(acc),
            [108, 101, 107, 97] => lookup_831_323(acc),
            [108, 101, 107, 115, 118, 105, 107] => lookup_831_324(acc),
            [108, 101, 110, 118, 105, 107] => lookup_831_325(acc),
            [108, 101, 114, 100, 97, 108] => lookup_831_326(acc),
            [108, 101, 115, 106, 97] => lookup_831_327(acc),
            [108, 101, 118, 97, 110, 103, 101, 114] => lookup_831_328(acc),
            [108, 105, 101, 114] => lookup_831_329(acc),
            [108, 105, 101, 114, 110, 101] => lookup_831_330(acc),
            [108, 105, 108, 108, 101, 104, 97, 109, 109, 101, 114] => lookup_831_331(acc),
            [108, 105, 108, 108, 101, 115, 97, 110, 100] => lookup_831_332(acc),
            [108, 105, 110, 100, 97, 115] => lookup_831_333(acc),
            [108, 105, 110, 100, 101, 115, 110, 101, 115] => lookup_831_334(acc),
            [108, 105, 110, 100, 195, 165, 115] => lookup_831_335(acc),
            [108, 111, 97, 98, 97, 116] => lookup_831_336(acc),
            [108, 111, 97, 98, 195, 161, 116] => lookup_831_337(acc),
            [108, 111, 100, 105, 110, 103, 101, 110] => lookup_831_338(acc),
            [108, 111, 109] => lookup_831_339(acc),
            [108, 111, 112, 112, 97] => lookup_831_340(acc),
            [108, 111, 114, 101, 110, 115, 107, 111, 103] => lookup_831_341(acc),
            [108, 111, 116, 101, 110] => lookup_831_342(acc),
            [108, 117, 110, 100] => lookup_831_343(acc),
            [108, 117, 110, 110, 101, 114] => lookup_831_344(acc),
            [108, 117, 114, 111, 121] => lookup_831_345(acc),
            [108, 117, 114, 195, 184, 121] => lookup_831_346(acc),
            [108, 117, 115, 116, 101, 114] => lookup_831_347(acc),
            [108, 121, 110, 103, 100, 97, 108] => lookup_831_348(acc),
            [108, 121, 110, 103, 101, 110] => lookup_831_349(acc),
            [108, 195, 161, 104, 112, 112, 105] => lookup_831_350(acc),
            [108, 195, 166, 114, 100, 97, 108] => lookup_831_351(acc),
            [108, 195, 184, 100, 105, 110, 103, 101, 110] => lookup_831_352(acc),
            [108, 195, 184, 114, 101, 110, 115, 107, 111, 103] => lookup_831_353(acc),
            [108, 195, 184, 116, 101, 110] => lookup_831_354(acc),
            [109, 97, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_831_355(acc),
            [109, 97, 108, 115, 101, 108, 118] => lookup_831_356(acc),
            [109, 97, 108, 118, 105, 107] => lookup_831_357(acc),
            [109, 97, 110, 100, 97, 108] => lookup_831_358(acc),
            [109, 97, 114, 107, 101, 114] => lookup_831_359(acc),
            [109, 97, 114, 110, 97, 114, 100, 97, 108] => lookup_831_360(acc),
            [109, 97, 115, 102, 106, 111, 114, 100, 101, 110] => lookup_831_361(acc),
            [109, 97, 115, 111, 121] => lookup_831_362(acc),
            [109, 97, 116, 116, 97, 45, 118, 97, 114, 106, 106, 97, 116] => lookup_831_363(acc),
            [109, 101, 108, 97, 110, 100] => lookup_831_364(acc),
            [109, 101, 108, 100, 97, 108] => lookup_831_365(acc),
            [109, 101, 108, 104, 117, 115] => lookup_831_366(acc),
            [109, 101, 108, 111, 121] => lookup_831_367(acc),
            [109, 101, 108, 195, 184, 121] => lookup_831_368(acc),
            [109, 101, 114, 97, 107, 101, 114] => lookup_831_369(acc),
            [109, 101, 114, 195, 165, 107, 101, 114] => lookup_831_370(acc),
            [109, 105, 100, 115, 117, 110, 100] => lookup_831_371(acc),
            [109, 105, 100, 116, 114, 101, 45, 103, 97, 117, 108, 100, 97, 108] => {
                lookup_831_372(acc)
            }
            [109, 105, 108] => lookup_831_373(acc),
            [109, 106, 111, 110, 100, 97, 108, 101, 110] => lookup_831_374(acc),
            [109, 106, 195, 184, 110, 100, 97, 108, 101, 110] => lookup_831_375(acc),
            [109, 111, 45, 105, 45, 114, 97, 110, 97] => lookup_831_376(acc),
            [109, 111, 97, 114, 101, 107, 101] => lookup_831_377(acc),
            [109, 111, 100, 97, 108, 101, 110] => lookup_831_378(acc),
            [109, 111, 100, 117, 109] => lookup_831_379(acc),
            [109, 111, 108, 100, 101] => lookup_831_380(acc),
            [109, 111, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_831_381(info, labels, acc)
            }
            [109, 111, 115, 106, 111, 101, 110] => lookup_831_382(acc),
            [109, 111, 115, 106, 195, 184, 101, 110] => lookup_831_383(acc),
            [109, 111, 115, 107, 101, 110, 101, 115] => lookup_831_384(acc),
            [109, 111, 115, 115] => lookup_831_385(acc),
            [109, 111, 115, 118, 105, 107] => lookup_831_386(acc),
            [109, 111, 195, 165, 114, 101, 107, 101] => lookup_831_387(acc),
            [109, 114] => lookup_831_388(labels, acc),
            [109, 117, 111, 115, 97, 116] => lookup_831_389(acc),
            [109, 117, 111, 115, 195, 161, 116] => lookup_831_390(acc),
            [109, 117, 115, 101, 117, 109] => lookup_831_391(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_831_392(acc),
            [109, 195, 161, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_831_393(acc),
            [109, 195, 161, 116, 116, 97, 45, 118, 195, 161, 114, 106, 106, 97, 116] => {
                lookup_831_394(acc)
            }
            [109, 195, 165, 108, 115, 101, 108, 118] => lookup_831_395(acc),
            [109, 195, 165, 115, 195, 184, 121] => lookup_831_396(acc),
            [109, 195, 184, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_831_397(info, labels, acc)
            }
            [110, 97, 97, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_831_398(acc)
            }
            [110, 97, 109, 100, 97, 108, 115, 101, 105, 100] => lookup_831_399(acc),
            [110, 97, 109, 115, 111, 115] => lookup_831_400(acc),
            [110, 97, 109, 115, 115, 107, 111, 103, 97, 110] => lookup_831_401(acc),
            [110, 97, 110, 110, 101, 115, 116, 97, 100] => lookup_831_402(acc),
            [110, 97, 114, 111, 121] => lookup_831_403(acc),
            [110, 97, 114, 118, 105, 105, 107, 97] => lookup_831_404(acc),
            [110, 97, 114, 118, 105, 107] => lookup_831_405(acc),
            [110, 97, 117, 115, 116, 100, 97, 108] => lookup_831_406(acc),
            [110, 97, 118, 117, 111, 116, 110, 97] => lookup_831_407(acc),
            [110, 101, 100, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_831_408(acc),
            [110, 101, 115, 110, 97] => lookup_831_409(acc),
            [110, 101, 115, 111, 100, 100, 101, 110] => lookup_831_410(acc),
            [110, 101, 115, 111, 100, 100, 116, 97, 110, 103, 101, 110] => lookup_831_411(acc),
            [110, 101, 115, 115, 101, 98, 121] => lookup_831_412(acc),
            [110, 101, 115, 115, 101, 116] => lookup_831_413(acc),
            [110, 105, 115, 115, 101, 100, 97, 108] => lookup_831_414(acc),
            [110, 105, 116, 116, 101, 100, 97, 108] => lookup_831_415(acc),
            [110, 108] => lookup_831_416(labels, acc),
            [110, 111, 114, 100, 45, 97, 117, 114, 100, 97, 108] => lookup_831_417(acc),
            [110, 111, 114, 100, 45, 102, 114, 111, 110] => lookup_831_418(acc),
            [110, 111, 114, 100, 45, 111, 100, 97, 108] => lookup_831_419(acc),
            [110, 111, 114, 100, 100, 97, 108] => lookup_831_420(acc),
            [110, 111, 114, 100, 107, 97, 112, 112] => lookup_831_421(acc),
            [110, 111, 114, 100, 108, 97, 110, 100] => lookup_831_422(info, labels, acc),
            [110, 111, 114, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_831_423(acc),
            [110, 111, 114, 100, 114, 101, 105, 115, 97] => lookup_831_424(acc),
            [110, 111, 114, 101, 45, 111, 103, 45, 117, 118, 100, 97, 108] => lookup_831_425(acc),
            [110, 111, 116, 111, 100, 100, 101, 110] => lookup_831_426(acc),
            [110, 111, 116, 116, 101, 114, 111, 121] => lookup_831_427(acc),
            [110, 116] => lookup_831_428(labels, acc),
            [110, 195, 161, 118, 117, 111, 116, 110, 97] => lookup_831_429(acc),
            [110, 195, 165, 195, 165, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_831_430(acc)
            }
            [110, 195, 166, 114, 195, 184, 121] => lookup_831_431(acc),
            [110, 195, 184, 116, 116, 101, 114, 195, 184, 121] => lookup_831_432(acc),
            [111, 100, 100, 97] => lookup_831_433(acc),
            [111, 102] => lookup_831_434(labels, acc),
            [111, 107, 115, 110, 101, 115] => lookup_831_435(acc),
            [111, 108] => lookup_831_436(labels, acc),
            [111, 109, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_831_437(acc),
            [111, 112, 112, 100, 97, 108] => lookup_831_438(acc),
            [111, 112, 112, 101, 103, 97, 114, 100] => lookup_831_439(acc),
            [111, 112, 112, 101, 103, 195, 165, 114, 100] => lookup_831_440(acc),
            [111, 114, 107, 97, 110, 103, 101, 114] => lookup_831_441(acc),
            [111, 114, 107, 100, 97, 108] => lookup_831_442(acc),
            [111, 114, 108, 97, 110, 100] => lookup_831_443(acc),
            [111, 114, 115, 107, 111, 103] => lookup_831_444(acc),
            [111, 114, 115, 116, 97] => lookup_831_445(acc),
            [111, 115, 101, 110] => lookup_831_446(acc),
            [111, 115, 108, 111] => lookup_831_447(labels, acc),
            [111, 115, 111, 121, 114, 111] => lookup_831_448(acc),
            [111, 115, 116, 101, 114, 111, 121] => lookup_831_449(acc),
            [111, 115, 116, 101, 114, 195, 184, 121] => lookup_831_450(acc),
            [111, 115, 116, 102, 111, 108, 100] => lookup_831_451(info, labels, acc),
            [111, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_831_452(acc),
            [111, 115, 195, 184, 121, 114, 111] => lookup_831_453(acc),
            [111, 118, 101, 114, 104, 97, 108, 108, 97] => lookup_831_454(acc),
            [111, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_831_455(acc),
            [111, 121, 101, 114] => lookup_831_456(acc),
            [111, 121, 103, 97, 114, 100, 101, 110] => lookup_831_457(acc),
            [111, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => lookup_831_458(acc),
            [112, 111, 114, 115, 97, 110, 103, 101, 114] => lookup_831_459(acc),
            [112, 111, 114, 115, 97, 110, 103, 117] => lookup_831_460(acc),
            [112, 111, 114, 115, 103, 114, 117, 110, 110] => lookup_831_461(acc),
            [112, 111, 114, 115, 195, 161, 197, 139, 103, 117] => lookup_831_462(acc),
            [112, 114, 105, 118] => lookup_831_463(acc),
            [114, 97, 100, 101] => lookup_831_464(acc),
            [114, 97, 100, 111, 121] => lookup_831_465(acc),
            [114, 97, 100, 195, 184, 121] => lookup_831_466(acc),
            [114, 97, 104, 107, 107, 101, 114, 97, 118, 106, 117] => lookup_831_467(acc),
            [114, 97, 104, 111, 108, 116] => lookup_831_468(acc),
            [114, 97, 105, 115, 97] => lookup_831_469(acc),
            [114, 97, 107, 107, 101, 115, 116, 97, 100] => lookup_831_470(acc),
            [114, 97, 108, 105, 110, 103, 101, 110] => lookup_831_471(acc),
            [114, 97, 110, 97] => lookup_831_472(acc),
            [114, 97, 110, 100, 97, 98, 101, 114, 103] => lookup_831_473(acc),
            [114, 97, 117, 109, 97] => lookup_831_474(acc),
            [114, 101, 110, 100, 97, 108, 101, 110] => lookup_831_475(acc),
            [114, 101, 110, 110, 101, 98, 117] => lookup_831_476(acc),
            [114, 101, 110, 110, 101, 115, 111, 121] => lookup_831_477(acc),
            [114, 101, 110, 110, 101, 115, 195, 184, 121] => lookup_831_478(acc),
            [114, 105, 110, 100, 97, 108] => lookup_831_479(acc),
            [114, 105, 110, 103, 101, 98, 117] => lookup_831_480(acc),
            [114, 105, 110, 103, 101, 114, 105, 107, 101] => lookup_831_481(acc),
            [114, 105, 110, 103, 115, 97, 107, 101, 114] => lookup_831_482(acc),
            [114, 105, 115, 111, 114] => lookup_831_483(acc),
            [114, 105, 115, 115, 97] => lookup_831_484(acc),
            [114, 105, 115, 195, 184, 114] => lookup_831_485(acc),
            [114, 108] => lookup_831_486(labels, acc),
            [114, 111, 97, 110] => lookup_831_487(acc),
            [114, 111, 100, 111, 121] => lookup_831_488(acc),
            [114, 111, 108, 108, 97, 103] => lookup_831_489(acc),
            [114, 111, 109, 115, 97] => lookup_831_490(acc),
            [114, 111, 109, 115, 107, 111, 103] => lookup_831_491(acc),
            [114, 111, 114, 111, 115] => lookup_831_492(acc),
            [114, 111, 115, 116] => lookup_831_493(acc),
            [114, 111, 121, 107, 101, 110] => lookup_831_494(acc),
            [114, 111, 121, 114, 118, 105, 107] => lookup_831_495(acc),
            [114, 117, 111, 118, 97, 116] => lookup_831_496(acc),
            [114, 121, 103, 103, 101] => lookup_831_497(acc),
            [114, 195, 161, 104, 107, 107, 101, 114, 195, 161, 118, 106, 117] => {
                lookup_831_498(acc)
            }
            [114, 195, 161, 105, 115, 97] => lookup_831_499(acc),
            [114, 195, 165, 100, 101] => lookup_831_500(acc),
            [114, 195, 165, 104, 111, 108, 116] => lookup_831_501(acc),
            [114, 195, 166, 108, 105, 110, 103, 101, 110] => lookup_831_502(acc),
            [114, 195, 184, 100, 195, 184, 121] => lookup_831_503(acc),
            [114, 195, 184, 109, 115, 107, 111, 103] => lookup_831_504(acc),
            [114, 195, 184, 114, 111, 115] => lookup_831_505(acc),
            [114, 195, 184, 115, 116] => lookup_831_506(acc),
            [114, 195, 184, 121, 107, 101, 110] => lookup_831_507(acc),
            [114, 195, 184, 121, 114, 118, 105, 107] => lookup_831_508(acc),
            [115, 97, 108, 97, 110, 103, 101, 110] => lookup_831_509(acc),
            [115, 97, 108, 97, 116] => lookup_831_510(acc),
            [115, 97, 108, 116, 100, 97, 108] => lookup_831_511(acc),
            [115, 97, 109, 110, 97, 110, 103, 101, 114] => lookup_831_512(acc),
            [115, 97, 110, 100, 101, 102, 106, 111, 114, 100] => lookup_831_513(acc),
            [115, 97, 110, 100, 110, 101, 115] => lookup_831_514(acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 111, 101, 110] => lookup_831_515(acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 195, 184, 101, 110] => lookup_831_516(acc),
            [115, 97, 110, 100, 111, 121] => lookup_831_517(acc),
            [115, 97, 110, 100, 195, 184, 121] => lookup_831_518(acc),
            [115, 97, 114, 112, 115, 98, 111, 114, 103] => lookup_831_519(acc),
            [115, 97, 117, 100, 97] => lookup_831_520(acc),
            [115, 97, 117, 104, 101, 114, 97, 100] => lookup_831_521(acc),
            [115, 101, 108] => lookup_831_522(acc),
            [115, 101, 108, 98, 117] => lookup_831_523(acc),
            [115, 101, 108, 106, 101] => lookup_831_524(acc),
            [115, 101, 108, 106, 111, 114, 100] => lookup_831_525(acc),
            [115, 102] => lookup_831_526(labels, acc),
            [115, 105, 101, 108, 108, 97, 107] => lookup_831_527(acc),
            [115, 105, 103, 100, 97, 108] => lookup_831_528(acc),
            [115, 105, 108, 106, 97, 110] => lookup_831_529(acc),
            [115, 105, 114, 100, 97, 108] => lookup_831_530(acc),
            [115, 107, 97, 110, 105, 116] => lookup_831_531(acc),
            [115, 107, 97, 110, 108, 97, 110, 100] => lookup_831_532(acc),
            [115, 107, 97, 117, 110] => lookup_831_533(acc),
            [115, 107, 101, 100, 115, 109, 111] => lookup_831_534(acc),
            [115, 107, 101, 100, 115, 109, 111, 107, 111, 114, 115, 101, 116] => {
                lookup_831_535(acc)
            }
            [115, 107, 105] => lookup_831_536(acc),
            [115, 107, 105, 101, 110] => lookup_831_537(acc),
            [115, 107, 105, 101, 114, 118, 97] => lookup_831_538(acc),
            [115, 107, 105, 101, 114, 118, 195, 161] => lookup_831_539(acc),
            [115, 107, 105, 112, 116, 118, 101, 116] => lookup_831_540(acc),
            [115, 107, 106, 97, 107] => lookup_831_541(acc),
            [115, 107, 106, 101, 114, 118, 111, 121] => lookup_831_542(acc),
            [115, 107, 106, 101, 114, 118, 195, 184, 121] => lookup_831_543(acc),
            [115, 107, 106, 195, 165, 107] => lookup_831_544(acc),
            [115, 107, 111, 100, 106, 101] => lookup_831_545(acc),
            [115, 107, 195, 161, 110, 105, 116] => lookup_831_546(acc),
            [115, 107, 195, 165, 110, 108, 97, 110, 100] => lookup_831_547(acc),
            [115, 108, 97, 116, 116, 117, 109] => lookup_831_548(acc),
            [115, 109, 111, 108, 97] => lookup_831_549(acc),
            [115, 109, 195, 184, 108, 97] => lookup_831_550(acc),
            [115, 110, 97, 97, 115, 101] => lookup_831_551(acc),
            [115, 110, 97, 115, 97] => lookup_831_552(acc),
            [115, 110, 105, 108, 108, 102, 106, 111, 114, 100] => lookup_831_553(acc),
            [115, 110, 111, 97, 115, 97] => lookup_831_554(acc),
            [115, 110, 195, 165, 97, 115, 101] => lookup_831_555(acc),
            [115, 110, 195, 165, 115, 97] => lookup_831_556(acc),
            [115, 111, 103, 110, 100, 97, 108] => lookup_831_557(acc),
            [115, 111, 103, 110, 101] => lookup_831_558(acc),
            [115, 111, 107, 110, 100, 97, 108] => lookup_831_559(acc),
            [115, 111, 108, 97] => lookup_831_560(acc),
            [115, 111, 108, 117, 110, 100] => lookup_831_561(acc),
            [115, 111, 109, 110, 97] => lookup_831_562(acc),
            [115, 111, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_831_563(acc),
            [115, 111, 110, 103, 100, 97, 108, 101, 110] => lookup_831_564(acc),
            [115, 111, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_831_565(acc),
            [115, 111, 114, 45, 102, 114, 111, 110] => lookup_831_566(acc),
            [115, 111, 114, 45, 111, 100, 97, 108] => lookup_831_567(acc),
            [115, 111, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_831_568(acc),
            [115, 111, 114, 102, 111, 108, 100] => lookup_831_569(acc),
            [115, 111, 114, 114, 101, 105, 115, 97] => lookup_831_570(acc),
            [115, 111, 114, 116, 108, 97, 110, 100] => lookup_831_571(acc),
            [115, 111, 114, 117, 109] => lookup_831_572(acc),
            [115, 112, 106, 101, 108, 107, 97, 118, 105, 107] => lookup_831_573(acc),
            [115, 112, 121, 100, 101, 98, 101, 114, 103] => lookup_831_574(acc),
            [115, 116] => lookup_831_575(labels, acc),
            [115, 116, 97, 110, 103, 101] => lookup_831_576(acc),
            [115, 116, 97, 116] => lookup_831_577(acc),
            [115, 116, 97, 116, 104, 101, 108, 108, 101] => lookup_831_578(acc),
            [115, 116, 97, 118, 97, 110, 103, 101, 114] => lookup_831_579(acc),
            [115, 116, 97, 118, 101, 114, 110] => lookup_831_580(acc),
            [115, 116, 101, 105, 103, 101, 110] => lookup_831_581(acc),
            [115, 116, 101, 105, 110, 107, 106, 101, 114] => lookup_831_582(acc),
            [115, 116, 106, 111, 114, 100, 97, 108] => lookup_831_583(acc),
            [115, 116, 106, 111, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_831_584(acc)
            }
            [115, 116, 106, 195, 184, 114, 100, 97, 108] => lookup_831_585(acc),
            [115, 116, 106, 195, 184, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_831_586(acc)
            }
            [115, 116, 111, 107, 107, 101] => lookup_831_587(acc),
            [115, 116, 111, 114, 45, 101, 108, 118, 100, 97, 108] => lookup_831_588(acc),
            [115, 116, 111, 114, 100] => lookup_831_589(acc),
            [115, 116, 111, 114, 100, 97, 108] => lookup_831_590(acc),
            [115, 116, 111, 114, 102, 106, 111, 114, 100] => lookup_831_591(acc),
            [115, 116, 114, 97, 110, 100] => lookup_831_592(acc),
            [115, 116, 114, 97, 110, 100, 97] => lookup_831_593(acc),
            [115, 116, 114, 121, 110] => lookup_831_594(acc),
            [115, 117, 108, 97] => lookup_831_595(acc),
            [115, 117, 108, 100, 97, 108] => lookup_831_596(acc),
            [115, 117, 110, 100] => lookup_831_597(acc),
            [115, 117, 110, 110, 100, 97, 108] => lookup_831_598(acc),
            [115, 117, 114, 110, 97, 100, 97, 108] => lookup_831_599(acc),
            [115, 118, 97, 108, 98, 97, 114, 100] => lookup_831_600(labels, acc),
            [115, 118, 101, 105, 111] => lookup_831_601(acc),
            [115, 118, 101, 108, 118, 105, 107] => lookup_831_602(acc),
            [115, 121, 107, 107, 121, 108, 118, 101, 110] => lookup_831_603(acc),
            [115, 195, 161, 108, 97, 116] => lookup_831_604(acc),
            [115, 195, 161, 108, 195, 161, 116] => lookup_831_605(acc),
            [115, 195, 184, 103, 110, 101] => lookup_831_606(acc),
            [115, 195, 184, 109, 110, 97] => lookup_831_607(acc),
            [115, 195, 184, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_831_608(acc),
            [115, 195, 184, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_831_609(acc),
            [115, 195, 184, 114, 45, 102, 114, 111, 110] => lookup_831_610(acc),
            [115, 195, 184, 114, 45, 111, 100, 97, 108] => lookup_831_611(acc),
            [115, 195, 184, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_831_612(acc),
            [115, 195, 184, 114, 102, 111, 108, 100] => lookup_831_613(acc),
            [115, 195, 184, 114, 114, 101, 105, 115, 97] => lookup_831_614(acc),
            [115, 195, 184, 114, 117, 109] => lookup_831_615(acc),
            [116, 97, 110, 97] => lookup_831_616(acc),
            [116, 97, 110, 97, 110, 103, 101, 114] => lookup_831_617(acc),
            [116, 101, 108, 101, 109, 97, 114, 107] => lookup_831_618(info, labels, acc),
            [116, 105, 109, 101] => lookup_831_619(acc),
            [116, 105, 110, 103, 118, 111, 108, 108] => lookup_831_620(acc),
            [116, 105, 110, 110] => lookup_831_621(acc),
            [116, 106, 101, 108, 100, 115, 117, 110, 100] => lookup_831_622(acc),
            [116, 106, 111, 109, 101] => lookup_831_623(acc),
            [116, 106, 195, 184, 109, 101] => lookup_831_624(acc),
            [116, 109] => lookup_831_625(labels, acc),
            [116, 111, 107, 107, 101] => lookup_831_626(acc),
            [116, 111, 108, 103, 97] => lookup_831_627(acc),
            [116, 111, 110, 115, 98, 101, 114, 103] => lookup_831_628(acc),
            [116, 111, 114, 115, 107, 101, 110] => lookup_831_629(acc),
            [116, 114] => lookup_831_630(labels, acc),
            [116, 114, 97, 110, 97] => lookup_831_631(acc),
            [116, 114, 97, 110, 98, 121] => lookup_831_632(acc),
            [116, 114, 97, 110, 111, 121] => lookup_831_633(acc),
            [116, 114, 97, 110, 195, 184, 121] => lookup_831_634(acc),
            [116, 114, 111, 97, 110, 100, 105, 110] => lookup_831_635(acc),
            [116, 114, 111, 103, 115, 116, 97, 100] => lookup_831_636(acc),
            [116, 114, 111, 109, 115, 97] => lookup_831_637(acc),
            [116, 114, 111, 109, 115, 111] => lookup_831_638(acc),
            [116, 114, 111, 109, 115, 195, 184] => lookup_831_639(acc),
            [116, 114, 111, 110, 100, 104, 101, 105, 109] => lookup_831_640(acc),
            [116, 114, 121, 115, 105, 108] => lookup_831_641(acc),
            [116, 114, 195, 166, 110, 97] => lookup_831_642(acc),
            [116, 114, 195, 184, 103, 115, 116, 97, 100] => lookup_831_643(acc),
            [116, 118, 101, 100, 101, 115, 116, 114, 97, 110, 100] => lookup_831_644(acc),
            [116, 121, 100, 97, 108] => lookup_831_645(acc),
            [116, 121, 110, 115, 101, 116] => lookup_831_646(acc),
            [116, 121, 115, 102, 106, 111, 114, 100] => lookup_831_647(acc),
            [116, 121, 115, 110, 101, 115] => lookup_831_648(acc),
            [116, 121, 115, 118, 97, 114] => lookup_831_649(acc),
            [116, 121, 115, 118, 195, 166, 114] => lookup_831_650(acc),
            [116, 195, 184, 110, 115, 98, 101, 114, 103] => lookup_831_651(acc),
            [117, 108, 108, 101, 110, 115, 97, 107, 101, 114] => lookup_831_652(acc),
            [117, 108, 108, 101, 110, 115, 118, 97, 110, 103] => lookup_831_653(acc),
            [117, 108, 118, 105, 107] => lookup_831_654(acc),
            [117, 110, 106, 97, 114, 103, 97] => lookup_831_655(acc),
            [117, 110, 106, 195, 161, 114, 103, 97] => lookup_831_656(acc),
            [117, 116, 115, 105, 114, 97] => lookup_831_657(acc),
            [118, 97] => lookup_831_658(labels, acc),
            [118, 97, 97, 112, 115, 116, 101] => lookup_831_659(acc),
            [118, 97, 100, 115, 111] => lookup_831_660(acc),
            [118, 97, 100, 115, 195, 184] => lookup_831_661(acc),
            [118, 97, 103, 97] => lookup_831_662(acc),
            [118, 97, 103, 97, 110] => lookup_831_663(acc),
            [118, 97, 103, 115, 111, 121] => lookup_831_664(acc),
            [118, 97, 107, 115, 100, 97, 108] => lookup_831_665(acc),
            [118, 97, 108, 108, 101] => lookup_831_666(acc),
            [118, 97, 110, 103] => lookup_831_667(acc),
            [118, 97, 110, 121, 108, 118, 101, 110] => lookup_831_668(acc),
            [118, 97, 114, 100, 111] => lookup_831_669(acc),
            [118, 97, 114, 100, 195, 184] => lookup_831_670(acc),
            [118, 97, 114, 103, 103, 97, 116] => lookup_831_671(acc),
            [118, 97, 114, 111, 121] => lookup_831_672(acc),
            [118, 101, 102, 115, 110] => lookup_831_673(acc),
            [118, 101, 103, 97] => lookup_831_674(acc),
            [118, 101, 103, 97, 114, 115, 104, 101, 105] => lookup_831_675(acc),
            [118, 101, 103, 195, 165, 114, 115, 104, 101, 105] => lookup_831_676(acc),
            [118, 101, 110, 110, 101, 115, 108, 97] => lookup_831_677(acc),
            [118, 101, 114, 100, 97, 108] => lookup_831_678(acc),
            [118, 101, 114, 114, 97, 110] => lookup_831_679(acc),
            [118, 101, 115, 116, 98, 121] => lookup_831_680(acc),
            [118, 101, 115, 116, 102, 111, 108, 100] => lookup_831_681(info, labels, acc),
            [118, 101, 115, 116, 110, 101, 115] => lookup_831_682(acc),
            [118, 101, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => lookup_831_683(acc),
            [118, 101, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_831_684(acc),
            [118, 101, 115, 116, 118, 97, 103, 111, 121] => lookup_831_685(acc),
            [118, 101, 115, 116, 118, 195, 165, 103, 195, 184, 121] => lookup_831_686(acc),
            [118, 101, 118, 101, 108, 115, 116, 97, 100] => lookup_831_687(acc),
            [118, 102] => lookup_831_688(labels, acc),
            [118, 103, 115] => lookup_831_689(acc),
            [118, 105, 107] => lookup_831_690(acc),
            [118, 105, 107, 110, 97] => lookup_831_691(acc),
            [118, 105, 110, 100, 97, 102, 106, 111, 114, 100] => lookup_831_692(acc),
            [118, 111, 97, 103, 97, 116] => lookup_831_693(acc),
            [118, 111, 108, 100, 97] => lookup_831_694(acc),
            [118, 111, 115, 115] => lookup_831_695(acc),
            [118, 111, 115, 115, 101, 118, 97, 110, 103, 101, 110] => lookup_831_696(acc),
            [118, 195, 161, 114, 103, 103, 195, 161, 116] => lookup_831_697(acc),
            [118, 195, 165, 103, 97, 110] => lookup_831_698(acc),
            [118, 195, 165, 103, 115, 195, 184, 121] => lookup_831_699(acc),
            [118, 195, 165, 103, 195, 165] => lookup_831_700(acc),
            [118, 195, 166, 114, 195, 184, 121] => lookup_831_701(acc),
            [120, 110, 45, 45, 97, 110, 100, 121, 45, 105, 114, 97] => lookup_831_702(acc),
            [120, 110, 45, 45, 97, 115, 107, 121, 45, 105, 114, 97] => lookup_831_703(acc),
            [120, 110, 45, 45, 97, 117, 114, 115, 107, 111, 103, 45, 104, 108, 97, 110, 100, 45, 106, 110, 98] => {
                lookup_831_704(acc)
            }
            [120, 110, 45, 45, 97, 118, 101, 114, 121, 45, 121, 117, 97] => lookup_831_705(acc),
            [120, 110, 45, 45, 98, 100, 100, 100, 106, 45, 109, 114, 97, 98, 100] => {
                lookup_831_706(acc)
            }
            [120, 110, 45, 45, 98, 101, 97, 114, 97, 108, 118, 104, 107, 105, 45, 121, 52, 97] => {
                lookup_831_707(acc)
            }
            [120, 110, 45, 45, 98, 101, 114, 108, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_831_708(acc)
            }
            [120, 110, 45, 45, 98, 104, 99, 97, 118, 117, 111, 116, 110, 97, 45, 115, 52, 97] => {
                lookup_831_709(acc)
            }
            [120, 110, 45, 45, 98, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97, 45, 107, 55, 97] => {
                lookup_831_710(acc)
            }
            [120, 110, 45, 45, 98, 105, 100, 114, 45, 53, 110, 97, 99] => lookup_831_711(acc),
            [120, 110, 45, 45, 98, 105, 101, 118, 116, 45, 48, 113, 97] => lookup_831_712(acc),
            [120, 110, 45, 45, 98, 106, 97, 114, 107, 121, 45, 102, 121, 97] => lookup_831_713(acc),
            [120, 110, 45, 45, 98, 106, 100, 100, 97, 114, 45, 112, 116, 97] => lookup_831_714(acc),
            [120, 110, 45, 45, 98, 108, 116, 45, 101, 108, 97, 98] => lookup_831_715(acc),
            [120, 110, 45, 45, 98, 109, 108, 111, 45, 103, 114, 97] => lookup_831_716(acc),
            [120, 110, 45, 45, 98, 111, 100, 45, 50, 110, 97] => lookup_831_717(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 45, 119, 117, 97, 99] => lookup_831_718(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 115, 117, 110, 100, 45, 109, 56, 97, 99] => {
                lookup_831_719(acc)
            }
            [120, 110, 45, 45, 98, 114, 117, 109, 45, 118, 111, 97] => lookup_831_720(acc),
            [120, 110, 45, 45, 98, 116, 115, 102, 106, 111, 114, 100, 45, 57, 122, 97] => {
                lookup_831_721(acc)
            }
            [120, 110, 45, 45, 100, 97, 118, 118, 101, 110, 106, 114, 103, 97, 45, 121, 52, 97] => {
                lookup_831_722(acc)
            }
            [120, 110, 45, 45, 100, 110, 110, 97, 45, 103, 114, 97] => lookup_831_723(acc),
            [120, 110, 45, 45, 100, 114, 98, 97, 107, 45, 119, 117, 97] => lookup_831_724(acc),
            [120, 110, 45, 45, 100, 121, 114, 121, 45, 105, 114, 97] => lookup_831_725(acc),
            [120, 110, 45, 45, 101, 118, 101, 110, 105, 45, 48, 113, 97, 48, 49, 103, 97] => {
                lookup_831_726(acc)
            }
            [120, 110, 45, 45, 102, 105, 110, 110, 121, 45, 121, 117, 97] => lookup_831_727(acc),
            [120, 110, 45, 45, 102, 106, 111, 114, 100, 45, 108, 114, 97] => lookup_831_728(acc),
            [120, 110, 45, 45, 102, 108, 45, 122, 105, 97] => lookup_831_729(acc),
            [120, 110, 45, 45, 102, 108, 111, 114, 45, 106, 114, 97] => lookup_831_730(acc),
            [120, 110, 45, 45, 102, 114, 100, 101, 45, 103, 114, 97] => lookup_831_731(acc),
            [120, 110, 45, 45, 102, 114, 110, 97, 45, 119, 111, 97] => lookup_831_732(acc),
            [120, 110, 45, 45, 102, 114, 121, 97, 45, 104, 114, 97] => lookup_831_733(acc),
            [120, 110, 45, 45, 103, 103, 97, 118, 105, 105, 107, 97, 45, 56, 121, 97, 52, 55, 104] => {
                lookup_831_734(acc)
            }
            [120, 110, 45, 45, 103, 105, 108, 100, 101, 115, 107, 108, 45, 103, 48, 97] => {
                lookup_831_735(acc)
            }
            [120, 110, 45, 45, 103, 105, 118, 117, 111, 116, 110, 97, 45, 56, 121, 97] => {
                lookup_831_736(acc)
            }
            [120, 110, 45, 45, 103, 106, 118, 105, 107, 45, 119, 117, 97] => lookup_831_737(acc),
            [120, 110, 45, 45, 103, 108, 115, 45, 101, 108, 97, 99] => lookup_831_738(acc),
            [120, 110, 45, 45, 104, 45, 50, 102, 97] => lookup_831_739(acc),
            [120, 110, 45, 45, 104, 98, 109, 101, 114, 45, 120, 113, 97] => lookup_831_740(acc),
            [120, 110, 45, 45, 104, 99, 101, 115, 117, 111, 108, 111, 45, 55, 121, 97, 51, 53, 98] => {
                lookup_831_741(acc)
            }
            [120, 110, 45, 45, 104, 103, 101, 98, 111, 115, 116, 97, 100, 45, 103, 51, 97] => {
                lookup_831_742(acc)
            }
            [120, 110, 45, 45, 104, 109, 109, 114, 102, 101, 97, 115, 116, 97, 45, 115, 52, 97, 99] => {
                lookup_831_743(acc)
            }
            [120, 110, 45, 45, 104, 110, 101, 102, 111, 115, 115, 45, 113, 49, 97] => {
                lookup_831_744(acc)
            }
            [120, 110, 45, 45, 104, 111, 98, 108, 45, 105, 114, 97] => lookup_831_745(acc),
            [120, 110, 45, 45, 104, 111, 108, 116, 108, 101, 110, 45, 104, 120, 97] => {
                lookup_831_746(acc)
            }
            [120, 110, 45, 45, 104, 112, 109, 105, 114, 45, 120, 113, 97] => lookup_831_747(acc),
            [120, 110, 45, 45, 104, 121, 97, 110, 103, 101, 114, 45, 113, 49, 97] => {
                lookup_831_748(acc)
            }
            [120, 110, 45, 45, 104, 121, 108, 97, 110, 100, 101, 116, 45, 53, 52, 97] => {
                lookup_831_749(acc)
            }
            [120, 110, 45, 45, 105, 110, 100, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_831_750(acc)
            }
            [120, 110, 45, 45, 106, 108, 115, 116, 101, 114, 45, 98, 121, 97] => {
                lookup_831_751(acc)
            }
            [120, 110, 45, 45, 106, 114, 112, 101, 108, 97, 110, 100, 45, 53, 52, 97] => {
                lookup_831_752(acc)
            }
            [120, 110, 45, 45, 107, 97, 114, 109, 121, 45, 121, 117, 97] => lookup_831_753(acc),
            [120, 110, 45, 45, 107, 102, 106, 111, 114, 100, 45, 105, 117, 97] => {
                lookup_831_754(acc)
            }
            [120, 110, 45, 45, 107, 108, 98, 117, 45, 119, 111, 97] => lookup_831_755(acc),
            [120, 110, 45, 45, 107, 111, 108, 117, 111, 107, 116, 97, 45, 55, 121, 97, 53, 55, 104] => {
                lookup_831_756(acc)
            }
            [120, 110, 45, 45, 107, 114, 97, 103, 101, 114, 45, 103, 121, 97] => {
                lookup_831_757(acc)
            }
            [120, 110, 45, 45, 107, 114, 97, 110, 103, 104, 107, 101, 45, 98, 48, 97] => {
                lookup_831_758(acc)
            }
            [120, 110, 45, 45, 107, 114, 100, 115, 104, 101, 114, 97, 100, 45, 109, 56, 97] => {
                lookup_831_759(acc)
            }
            [120, 110, 45, 45, 107, 114, 101, 104, 97, 109, 110, 45, 100, 120, 97] => {
                lookup_831_760(acc)
            }
            [120, 110, 45, 45, 107, 114, 106, 111, 104, 107, 97, 45, 104, 119, 97, 98, 52, 57, 106] => {
                lookup_831_761(acc)
            }
            [120, 110, 45, 45, 107, 115, 110, 101, 115, 45, 117, 117, 97] => lookup_831_762(acc),
            [120, 110, 45, 45, 107, 118, 102, 106, 111, 114, 100, 45, 110, 120, 97] => {
                lookup_831_763(acc)
            }
            [120, 110, 45, 45, 107, 118, 105, 116, 115, 121, 45, 102, 121, 97] => {
                lookup_831_764(acc)
            }
            [120, 110, 45, 45, 107, 118, 110, 97, 110, 103, 101, 110, 45, 107, 48, 97] => {
                lookup_831_765(acc)
            }
            [120, 110, 45, 45, 108, 45, 49, 102, 97] => lookup_831_766(acc),
            [120, 110, 45, 45, 108, 97, 104, 101, 97, 100, 106, 117, 45, 55, 121, 97] => {
                lookup_831_767(acc)
            }
            [120, 110, 45, 45, 108, 97, 110, 103, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_831_768(acc)
            }
            [120, 110, 45, 45, 108, 100, 105, 110, 103, 101, 110, 45, 113, 49, 97] => {
                lookup_831_769(acc)
            }
            [120, 110, 45, 45, 108, 101, 97, 103, 97, 118, 105, 105, 107, 97, 45, 53, 50, 98] => {
                lookup_831_770(acc)
            }
            [120, 110, 45, 45, 108, 101, 115, 117, 110, 100, 45, 104, 117, 97] => {
                lookup_831_771(acc)
            }
            [120, 110, 45, 45, 108, 103, 114, 100, 45, 112, 111, 97, 99] => lookup_831_772(acc),
            [120, 110, 45, 45, 108, 104, 112, 112, 105, 45, 120, 113, 97] => lookup_831_773(acc),
            [120, 110, 45, 45, 108, 105, 110, 100, 115, 45, 112, 114, 97] => lookup_831_774(acc),
            [120, 110, 45, 45, 108, 111, 97, 98, 116, 45, 48, 113, 97] => lookup_831_775(acc),
            [120, 110, 45, 45, 108, 114, 100, 97, 108, 45, 115, 114, 97] => lookup_831_776(acc),
            [120, 110, 45, 45, 108, 114, 101, 110, 115, 107, 111, 103, 45, 53, 52, 97] => {
                lookup_831_777(acc)
            }
            [120, 110, 45, 45, 108, 116, 45, 108, 105, 97, 99] => lookup_831_778(acc),
            [120, 110, 45, 45, 108, 116, 101, 110, 45, 103, 114, 97] => lookup_831_779(acc),
            [120, 110, 45, 45, 108, 117, 114, 121, 45, 105, 114, 97] => lookup_831_780(acc),
            [120, 110, 45, 45, 109, 101, 108, 121, 45, 105, 114, 97] => lookup_831_781(acc),
            [120, 110, 45, 45, 109, 101, 114, 107, 101, 114, 45, 107, 117, 97] => {
                lookup_831_782(acc)
            }
            [120, 110, 45, 45, 109, 106, 110, 100, 97, 108, 101, 110, 45, 54, 52, 97] => {
                lookup_831_783(acc)
            }
            [120, 110, 45, 45, 109, 108, 97, 116, 118, 117, 111, 112, 109, 105, 45, 115, 52, 97] => {
                lookup_831_784(acc)
            }
            [120, 110, 45, 45, 109, 108, 105, 45, 116, 108, 97] => lookup_831_785(acc),
            [120, 110, 45, 45, 109, 108, 115, 101, 108, 118, 45, 105, 117, 97] => {
                lookup_831_786(acc)
            }
            [120, 110, 45, 45, 109, 111, 114, 101, 107, 101, 45, 106, 117, 97] => {
                lookup_831_787(acc)
            }
            [120, 110, 45, 45, 109, 111, 115, 106, 101, 110, 45, 101, 121, 97] => {
                lookup_831_788(acc)
            }
            [120, 110, 45, 45, 109, 111, 116, 45, 116, 108, 97] => lookup_831_789(acc),
            [120, 110, 45, 45, 109, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108, 45, 113, 113, 98] => {
                lookup_831_790(info, labels, acc)
            }
            [120, 110, 45, 45, 109, 115, 121, 45, 117, 108, 97, 48, 104] => lookup_831_791(acc),
            [120, 110, 45, 45, 109, 116, 116, 97, 45, 118, 114, 106, 106, 97, 116, 45, 107, 55, 97, 102] => {
                lookup_831_792(acc)
            }
            [120, 110, 45, 45, 109, 117, 111, 115, 116, 45, 48, 113, 97] => lookup_831_793(acc),
            [120, 110, 45, 45, 110, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101, 45, 116, 99, 98, 97] => {
                lookup_831_794(acc)
            }
            [120, 110, 45, 45, 110, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_831_795(acc),
            [120, 110, 45, 45, 110, 116, 116, 101, 114, 121, 45, 98, 121, 97, 101] => {
                lookup_831_796(acc)
            }
            [120, 110, 45, 45, 110, 118, 117, 111, 116, 110, 97, 45, 104, 119, 97] => {
                lookup_831_797(acc)
            }
            [120, 110, 45, 45, 111, 112, 112, 101, 103, 114, 100, 45, 105, 120, 97] => {
                lookup_831_798(acc)
            }
            [120, 110, 45, 45, 111, 115, 116, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_831_799(acc)
            }
            [120, 110, 45, 45, 111, 115, 121, 114, 111, 45, 119, 117, 97] => lookup_831_800(acc),
            [120, 110, 45, 45, 112, 111, 114, 115, 103, 117, 45, 115, 116, 97, 50, 54, 102] => {
                lookup_831_801(acc)
            }
            [120, 110, 45, 45, 114, 97, 100, 121, 45, 105, 114, 97] => lookup_831_802(acc),
            [120, 110, 45, 45, 114, 100, 97, 108, 45, 112, 111, 97] => lookup_831_803(acc),
            [120, 110, 45, 45, 114, 100, 101, 45, 117, 108, 97] => lookup_831_804(acc),
            [120, 110, 45, 45, 114, 100, 121, 45, 48, 110, 97, 98] => lookup_831_805(acc),
            [120, 110, 45, 45, 114, 101, 110, 110, 101, 115, 121, 45, 118, 49, 97] => {
                lookup_831_806(acc)
            }
            [120, 110, 45, 45, 114, 104, 107, 107, 101, 114, 118, 106, 117, 45, 48, 49, 97, 102] => {
                lookup_831_807(acc)
            }
            [120, 110, 45, 45, 114, 104, 111, 108, 116, 45, 109, 114, 97] => lookup_831_808(acc),
            [120, 110, 45, 45, 114, 105, 115, 97, 45, 53, 110, 97] => lookup_831_809(acc),
            [120, 110, 45, 45, 114, 105, 115, 114, 45, 105, 114, 97] => lookup_831_810(acc),
            [120, 110, 45, 45, 114, 108, 97, 110, 100, 45, 117, 117, 97] => lookup_831_811(acc),
            [120, 110, 45, 45, 114, 108, 105, 110, 103, 101, 110, 45, 109, 120, 97] => {
                lookup_831_812(acc)
            }
            [120, 110, 45, 45, 114, 109, 115, 107, 111, 103, 45, 98, 121, 97] => {
                lookup_831_813(acc)
            }
            [120, 110, 45, 45, 114, 114, 111, 115, 45, 103, 114, 97] => lookup_831_814(acc),
            [120, 110, 45, 45, 114, 115, 107, 111, 103, 45, 117, 117, 97] => lookup_831_815(acc),
            [120, 110, 45, 45, 114, 115, 116, 45, 48, 110, 97] => lookup_831_816(acc),
            [120, 110, 45, 45, 114, 115, 116, 97, 45, 102, 114, 97] => lookup_831_817(acc),
            [120, 110, 45, 45, 114, 121, 107, 101, 110, 45, 118, 117, 97] => lookup_831_818(acc),
            [120, 110, 45, 45, 114, 121, 114, 118, 105, 107, 45, 98, 121, 97] => {
                lookup_831_819(acc)
            }
            [120, 110, 45, 45, 115, 45, 49, 102, 97] => lookup_831_820(acc),
            [120, 110, 45, 45, 115, 97, 110, 100, 110, 101, 115, 115, 106, 101, 110, 45, 111, 103, 98] => {
                lookup_831_821(acc)
            }
            [120, 110, 45, 45, 115, 97, 110, 100, 121, 45, 121, 117, 97] => lookup_831_822(acc),
            [120, 110, 45, 45, 115, 101, 114, 97, 108, 45, 108, 114, 97] => lookup_831_823(acc),
            [120, 110, 45, 45, 115, 103, 110, 101, 45, 103, 114, 97] => lookup_831_824(acc),
            [120, 110, 45, 45, 115, 107, 105, 101, 114, 118, 45, 117, 116, 97] => {
                lookup_831_825(acc)
            }
            [120, 110, 45, 45, 115, 107, 106, 101, 114, 118, 121, 45, 118, 49, 97] => {
                lookup_831_826(acc)
            }
            [120, 110, 45, 45, 115, 107, 106, 107, 45, 115, 111, 97] => lookup_831_827(acc),
            [120, 110, 45, 45, 115, 107, 110, 105, 116, 45, 121, 113, 97] => lookup_831_828(acc),
            [120, 110, 45, 45, 115, 107, 110, 108, 97, 110, 100, 45, 102, 120, 97] => {
                lookup_831_829(acc)
            }
            [120, 110, 45, 45, 115, 108, 97, 116, 45, 53, 110, 97] => lookup_831_830(acc),
            [120, 110, 45, 45, 115, 108, 116, 45, 101, 108, 97, 98] => lookup_831_831(acc),
            [120, 110, 45, 45, 115, 109, 108, 97, 45, 104, 114, 97] => lookup_831_832(acc),
            [120, 110, 45, 45, 115, 109, 110, 97, 45, 103, 114, 97] => lookup_831_833(acc),
            [120, 110, 45, 45, 115, 110, 97, 115, 101, 45, 110, 114, 97] => lookup_831_834(acc),
            [120, 110, 45, 45, 115, 110, 100, 114, 101, 45, 108, 97, 110, 100, 45, 48, 99, 98] => {
                lookup_831_835(acc)
            }
            [120, 110, 45, 45, 115, 110, 101, 115, 45, 112, 111, 97] => lookup_831_836(acc),
            [120, 110, 45, 45, 115, 110, 115, 97, 45, 114, 111, 97] => lookup_831_837(acc),
            [120, 110, 45, 45, 115, 114, 45, 97, 117, 114, 100, 97, 108, 45, 108, 56, 97] => {
                lookup_831_838(acc)
            }
            [120, 110, 45, 45, 115, 114, 45, 102, 114, 111, 110, 45, 113, 49, 97] => {
                lookup_831_839(acc)
            }
            [120, 110, 45, 45, 115, 114, 45, 111, 100, 97, 108, 45, 113, 49, 97] => {
                lookup_831_840(acc)
            }
            [120, 110, 45, 45, 115, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114, 45, 103, 103, 98] => {
                lookup_831_841(acc)
            }
            [120, 110, 45, 45, 115, 114, 102, 111, 108, 100, 45, 98, 121, 97] => {
                lookup_831_842(acc)
            }
            [120, 110, 45, 45, 115, 114, 114, 101, 105, 115, 97, 45, 113, 49, 97] => {
                lookup_831_843(acc)
            }
            [120, 110, 45, 45, 115, 114, 117, 109, 45, 103, 114, 97] => lookup_831_844(acc),
            [120, 110, 45, 45, 115, 116, 102, 111, 108, 100, 45, 57, 120, 97] => {
                lookup_831_845(info, labels, acc)
            }
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 45, 115, 49, 97] => {
                lookup_831_846(acc)
            }
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110, 45, 115, 113, 98] => {
                lookup_831_847(acc)
            }
            [120, 110, 45, 45, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110, 45, 122, 99, 98] => {
                lookup_831_848(acc)
            }
            [120, 110, 45, 45, 116, 106, 109, 101, 45, 104, 114, 97] => lookup_831_849(acc),
            [120, 110, 45, 45, 116, 110, 115, 98, 101, 114, 103, 45, 113, 49, 97] => {
                lookup_831_850(acc)
            }
            [120, 110, 45, 45, 116, 114, 97, 110, 121, 45, 121, 117, 97] => lookup_831_851(acc),
            [120, 110, 45, 45, 116, 114, 103, 115, 116, 97, 100, 45, 114, 49, 97] => {
                lookup_831_852(acc)
            }
            [120, 110, 45, 45, 116, 114, 110, 97, 45, 119, 111, 97] => lookup_831_853(acc),
            [120, 110, 45, 45, 116, 114, 111, 109, 115, 45, 122, 117, 97] => lookup_831_854(acc),
            [120, 110, 45, 45, 116, 121, 115, 118, 114, 45, 118, 114, 97] => lookup_831_855(acc),
            [120, 110, 45, 45, 117, 110, 106, 114, 103, 97, 45, 114, 116, 97] => {
                lookup_831_856(acc)
            }
            [120, 110, 45, 45, 118, 97, 100, 115, 45, 106, 114, 97] => lookup_831_857(acc),
            [120, 110, 45, 45, 118, 97, 114, 100, 45, 106, 114, 97] => lookup_831_858(acc),
            [120, 110, 45, 45, 118, 101, 103, 114, 115, 104, 101, 105, 45, 99, 48, 97] => {
                lookup_831_859(acc)
            }
            [120, 110, 45, 45, 118, 101, 115, 116, 118, 103, 121, 45, 105, 120, 97, 54, 111] => {
                lookup_831_860(acc)
            }
            [120, 110, 45, 45, 118, 103, 45, 121, 105, 97, 98] => lookup_831_861(acc),
            [120, 110, 45, 45, 118, 103, 97, 110, 45, 113, 111, 97] => lookup_831_862(acc),
            [120, 110, 45, 45, 118, 103, 115, 121, 45, 113, 111, 97, 48, 106] => {
                lookup_831_863(acc)
            }
            [120, 110, 45, 45, 118, 114, 101, 45, 101, 105, 107, 101, 114, 45, 107, 56, 97] => {
                lookup_831_864(acc)
            }
            [120, 110, 45, 45, 118, 114, 103, 103, 116, 45, 120, 113, 97, 100] => {
                lookup_831_865(acc)
            }
            [120, 110, 45, 45, 118, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_831_866(acc),
            [120, 110, 45, 45, 121, 101, 114, 45, 122, 110, 97] => lookup_831_867(acc),
            [120, 110, 45, 45, 121, 103, 97, 114, 100, 101, 110, 45, 112, 49, 97] => {
                lookup_831_868(acc)
            }
            [120, 110, 45, 45, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101, 45, 117, 106, 98] => {
                lookup_831_869(acc)
            }
            [195, 161, 107, 197, 139, 111, 108, 117, 111, 107, 116, 97] => lookup_831_870(acc),
            [195, 161, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_831_871(acc),
            [195, 161, 108, 116, 195, 161] => lookup_831_872(acc),
            [195, 165, 102, 106, 111, 114, 100] => lookup_831_873(acc),
            [195, 165, 107, 114, 101, 104, 97, 109, 110] => lookup_831_874(acc),
            [195, 165, 108] => lookup_831_875(acc),
            [195, 165, 108, 101, 115, 117, 110, 100] => lookup_831_876(acc),
            [195, 165, 108, 103, 195, 165, 114, 100] => lookup_831_877(acc),
            [195, 165, 109, 108, 105] => lookup_831_878(acc),
            [195, 165, 109, 111, 116] => lookup_831_879(acc),
            [195, 165, 114, 100, 97, 108] => lookup_831_880(acc),
            [195, 165, 115] => lookup_831_881(acc),
            [195, 165, 115, 101, 114, 97, 108] => lookup_831_882(acc),
            [195, 165, 115, 110, 101, 115] => lookup_831_883(acc),
            [195, 184, 107, 115, 110, 101, 115] => lookup_831_884(acc),
            [195, 184, 114, 108, 97, 110, 100] => lookup_831_885(acc),
            [195, 184, 114, 115, 107, 111, 103] => lookup_831_886(acc),
            [195, 184, 114, 115, 116, 97] => lookup_831_887(acc),
            [195, 184, 115, 116, 102, 111, 108, 100] => lookup_831_888(info, labels, acc),
            [195, 184, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_831_889(acc),
            [195, 184, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_831_890(acc),
            [195, 184, 121, 101, 114] => lookup_831_891(acc),
            [195, 184, 121, 103, 97, 114, 100, 101, 110] => lookup_831_892(acc),
            [195, 184, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => {
                lookup_831_893(acc)
            }
            [196, 141, 195, 161, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_831_894(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_832() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_833() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_834() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_836() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_837_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_838_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_838_0(acc),
            [99, 111, 109] => lookup_838_1(acc),
            [101, 100, 117] => lookup_838_2(acc),
            [103, 111, 118] => lookup_838_3(acc),
            [105, 110, 102, 111] => lookup_838_4(acc),
            [110, 101, 116] => lookup_838_5(acc),
            [111, 114, 103] => lookup_838_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_839() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_841() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_842_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_842_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_842_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_842_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_842<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 99, 108, 111, 117, 100] => {
                lookup_842_0(acc)
            }
            [109, 101, 114, 115, 101, 105, 110, 101] => lookup_842_1(acc),
            [109, 105, 110, 101] => lookup_842_2(acc),
            [115, 104, 97, 99, 107, 110, 101, 116] => lookup_842_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_843() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_844_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_844_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_844_1(acc),
            [99, 111] => lookup_844_2(acc),
            [99, 114, 105] => lookup_844_3(acc),
            [103, 101, 101, 107] => lookup_844_4(acc),
            [103, 101, 110] => lookup_844_5(acc),
            [103, 111, 118, 116] => lookup_844_6(acc),
            [104, 101, 97, 108, 116, 104] => lookup_844_7(acc),
            [105, 119, 105] => lookup_844_8(acc),
            [107, 105, 119, 105] => lookup_844_9(acc),
            [109, 97, 111, 114, 105] => lookup_844_10(acc),
            [109, 105, 108] => lookup_844_11(acc),
            [109, 196, 129, 111, 114, 105] => lookup_844_12(acc),
            [110, 101, 116] => lookup_844_13(acc),
            [111, 114, 103] => lookup_844_14(acc),
            [112, 97, 114, 108, 105, 97, 109, 101, 110, 116] => lookup_844_15(acc),
            [115, 99, 104, 111, 111, 108] => lookup_844_16(acc),
            [120, 110, 45, 45, 109, 111, 114, 105, 45, 113, 115, 97] => lookup_844_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_845() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_847() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_849() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_850() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_852_0(acc),
            [99, 111, 109] => lookup_852_1(acc),
            [101, 100, 117] => lookup_852_2(acc),
            [103, 111, 118] => lookup_852_3(acc),
            [109, 101, 100] => lookup_852_4(acc),
            [109, 117, 115, 101, 117, 109] => lookup_852_5(acc),
            [110, 101, 116] => lookup_852_6(acc),
            [111, 114, 103] => lookup_852_7(acc),
            [112, 114, 111] => lookup_852_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_853() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_854_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_854_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_854_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_854_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_854<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 105, 110] => lookup_854_0(info, labels, acc),
            [115, 101, 114, 118, 105, 99, 101] => lookup_854_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_855_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_855<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 98, 108] => lookup_855_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_856() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_857() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_858_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_858_0(acc),
            [101, 101, 114, 111] => lookup_858_1(acc),
            [101, 101, 114, 111, 45, 115, 116, 97, 103, 101] => lookup_858_2(acc),
            [119, 101, 98, 115, 105, 116, 101, 98, 117, 105, 108, 100, 101, 114] => {
                lookup_858_3(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_860() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_862_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_862<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 101, 99, 104] => lookup_862_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [99] => lookup_863_10_0(acc),
            [114, 115, 99] => lookup_863_10_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_11_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_11_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [115, 115, 108] => lookup_863_11_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 114, 105, 103, 105, 110] => lookup_863_11_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_26_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_26_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_26<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111] => lookup_863_26_0(acc),
            [104, 111, 109, 101] => lookup_863_26_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108] => lookup_863_30_0(acc),
            [97, 115, 115, 111] => lookup_863_30_1(acc),
            [97, 116] => lookup_863_30_2(acc),
            [97, 117] => lookup_863_30_3(acc),
            [98, 101] => lookup_863_30_4(acc),
            [98, 103] => lookup_863_30_5(acc),
            [99, 97] => lookup_863_30_6(acc),
            [99, 100] => lookup_863_30_7(acc),
            [99, 104] => lookup_863_30_8(acc),
            [99, 110] => lookup_863_30_9(acc),
            [99, 121] => lookup_863_30_10(acc),
            [99, 122] => lookup_863_30_11(acc),
            [100, 101] => lookup_863_30_12(acc),
            [100, 107] => lookup_863_30_13(acc),
            [101, 100, 117] => lookup_863_30_14(acc),
            [101, 101] => lookup_863_30_15(acc),
            [101, 115] => lookup_863_30_16(acc),
            [102, 105] => lookup_863_30_17(acc),
            [102, 114] => lookup_863_30_18(acc),
            [103, 114] => lookup_863_30_19(acc),
            [104, 114] => lookup_863_30_20(acc),
            [104, 117] => lookup_863_30_21(acc),
            [105, 101] => lookup_863_30_22(acc),
            [105, 108] => lookup_863_30_23(acc),
            [105, 110] => lookup_863_30_24(acc),
            [105, 110, 116] => lookup_863_30_25(acc),
            [105, 115] => lookup_863_30_26(acc),
            [105, 116] => lookup_863_30_27(acc),
            [106, 112] => lookup_863_30_28(acc),
            [107, 114] => lookup_863_30_29(acc),
            [108, 116] => lookup_863_30_30(acc),
            [108, 117] => lookup_863_30_31(acc),
            [108, 118] => lookup_863_30_32(acc),
            [109, 101] => lookup_863_30_33(acc),
            [109, 107] => lookup_863_30_34(acc),
            [109, 116] => lookup_863_30_35(acc),
            [109, 121] => lookup_863_30_36(acc),
            [110, 101, 116] => lookup_863_30_37(acc),
            [110, 103] => lookup_863_30_38(acc),
            [110, 108] => lookup_863_30_39(acc),
            [110, 111] => lookup_863_30_40(acc),
            [110, 122] => lookup_863_30_41(acc),
            [112, 108] => lookup_863_30_42(acc),
            [112, 116] => lookup_863_30_43(acc),
            [114, 111] => lookup_863_30_44(acc),
            [114, 117] => lookup_863_30_45(acc),
            [115, 101] => lookup_863_30_46(acc),
            [115, 105] => lookup_863_30_47(acc),
            [115, 107] => lookup_863_30_48(acc),
            [116, 114] => lookup_863_30_49(acc),
            [117, 107] => lookup_863_30_50(acc),
            [117, 115] => lookup_863_30_51(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_34_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_34_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_34_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_863_34_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_34_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_34_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_863_34_2_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_34_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_863_34_2_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_34<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_863_34_0(acc),
            [111, 115] => lookup_863_34_1(info, labels, acc),
            [115, 116, 103] => lookup_863_34_2(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_103_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_103<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_863_103_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 99, 101, 115, 115, 99, 97, 109] => lookup_863_0(acc),
            [97, 101] => lookup_863_1(acc),
            [97, 108, 116, 101, 114, 118, 105, 115, 116, 97] => lookup_863_2(acc),
            [98, 97, 114, 115, 121] => lookup_863_3(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_863_4(acc),
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_863_5(acc),
            [98, 109, 111, 97, 116, 116, 97, 99, 104, 109, 101, 110, 116, 115] => lookup_863_6(acc),
            [98, 111, 108, 100, 108, 121, 103, 111, 105, 110, 103, 110, 111, 119, 104, 101, 114, 101] => {
                lookup_863_7(acc)
            }
            [99, 97, 98, 108, 101, 45, 109, 111, 100, 101, 109] => lookup_863_8(acc),
            [99, 97, 109, 100, 118, 114] => lookup_863_9(acc),
            [99, 100, 110, 55, 55] => lookup_863_10(info, labels, acc),
            [99, 100, 110, 55, 55, 45, 115, 101, 99, 117, 114, 101] => {
                lookup_863_11(info, labels, acc)
            }
            [99, 108, 111, 117, 100, 110, 115] => lookup_863_12(acc),
            [99, 111, 108, 108, 101, 103, 101, 102, 97, 110] => lookup_863_13(acc),
            [99, 111, 117, 99, 104, 112, 111, 116, 97, 116, 111, 102, 114, 105, 101, 115] => {
                lookup_863_14(acc)
            }
            [100, 100, 110, 115, 115] => lookup_863_15(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_863_16(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_863_17(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_863_18(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_863_19(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_863_20(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_863_21(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_863_22(acc),
            [100, 117, 99, 107, 100, 110, 115] => lookup_863_23(acc),
            [100, 118, 114, 100, 110, 115] => lookup_863_24(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_863_25(acc),
            [100, 121, 110, 100, 110, 115] => lookup_863_26(labels, acc),
            [100, 121, 110, 115, 101, 114, 118] => lookup_863_27(acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => lookup_863_28(acc),
            [101, 110, 100, 111, 102, 116, 104, 101, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_863_29(acc)
            }
            [101, 117] => lookup_863_30(labels, acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_863_31(acc),
            [102, 101, 100, 111, 114, 97, 105, 110, 102, 114, 97, 99, 108, 111, 117, 100] => {
                lookup_863_32(acc)
            }
            [102, 101, 100, 111, 114, 97, 112, 101, 111, 112, 108, 101] => lookup_863_33(acc),
            [102, 101, 100, 111, 114, 97, 112, 114, 111, 106, 101, 99, 116] => {
                lookup_863_34(info, labels, acc)
            }
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_863_35(acc),
            [102, 114, 101, 101, 100, 101, 115, 107, 116, 111, 112] => lookup_863_36(acc),
            [102, 114, 111, 109, 45, 109, 101] => lookup_863_37(acc),
            [103, 97, 109, 101, 45, 104, 111, 115, 116] => lookup_863_38(acc),
            [103, 111, 116, 100, 110, 115] => lookup_863_39(acc),
            [104, 97, 116, 101, 110, 97, 100, 105, 97, 114, 121] => lookup_863_40(acc),
            [104, 101, 112, 102, 111, 114, 103, 101] => lookup_863_41(acc),
            [104, 107] => lookup_863_42(acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_863_43(acc),
            [104, 111, 109, 101, 100, 110, 115] => lookup_863_44(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_863_45(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_863_46(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_863_47(acc),
            [104, 111, 112, 116, 111] => lookup_863_48(acc),
            [104, 116, 116, 112, 98, 105, 110] => lookup_863_49(acc),
            [105, 110, 45, 100, 115, 108] => lookup_863_50(acc),
            [105, 110, 45, 118, 112, 110] => lookup_863_51(acc),
            [105, 112, 45, 100, 121, 110, 97, 109, 105, 99] => lookup_863_52(acc),
            [105, 115, 45, 97, 45, 98, 114, 117, 105, 110, 115, 102, 97, 110] => lookup_863_53(acc),
            [105, 115, 45, 97, 45, 99, 97, 110, 100, 105, 100, 97, 116, 101] => lookup_863_54(acc),
            [105, 115, 45, 97, 45, 99, 101, 108, 116, 105, 99, 115, 102, 97, 110] => {
                lookup_863_55(acc)
            }
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_863_56(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_863_57(acc),
            [105, 115, 45, 97, 45, 107, 110, 105, 103, 104, 116] => lookup_863_58(acc),
            [105, 115, 45, 97, 45, 108, 105, 110, 117, 120, 45, 117, 115, 101, 114] => {
                lookup_863_59(acc)
            }
            [105, 115, 45, 97, 45, 112, 97, 116, 115, 102, 97, 110] => lookup_863_60(acc),
            [105, 115, 45, 97, 45, 115, 111, 120, 102, 97, 110] => lookup_863_61(acc),
            [105, 115, 45, 102, 111, 117, 110, 100] => lookup_863_62(acc),
            [105, 115, 45, 108, 111, 99, 97, 108] => lookup_863_63(acc),
            [105, 115, 45, 108, 111, 115, 116] => lookup_863_64(acc),
            [105, 115, 45, 115, 97, 118, 101, 100] => lookup_863_65(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 98, 97, 100] => lookup_863_66(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 101, 118, 105, 108] => lookup_863_67(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 103, 111, 111, 100] => lookup_863_68(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 110, 105, 99, 101] => lookup_863_69(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 115, 119, 101, 101, 116] => lookup_863_70(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_863_71(acc),
            [106, 112, 110] => lookup_863_72(acc),
            [106, 115] => lookup_863_73(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_863_74(acc),
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_863_75(acc),
            [109, 105, 115, 99, 111, 110, 102, 117, 115, 101, 100] => lookup_863_76(acc),
            [109, 108, 98, 102, 97, 110] => lookup_863_77(acc),
            [109, 121, 45, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_863_78(acc),
            [109, 121, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_863_79(acc),
            [109, 121, 102, 116, 112] => lookup_863_80(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_863_81(acc)
            }
            [109, 121, 119, 105, 114, 101] => lookup_863_82(acc),
            [110, 102, 108, 102, 97, 110] => lookup_863_83(acc),
            [110, 111, 45, 105, 112] => lookup_863_84(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_863_85(acc),
            [112, 105, 109, 105, 101, 110, 116, 97] => lookup_863_86(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_863_87(acc),
            [112, 111, 105, 118, 114, 111, 110] => lookup_863_88(acc),
            [112, 111, 116, 97, 103, 101, 114] => lookup_863_89(acc),
            [112, 117, 98, 116, 108, 115] => lookup_863_90(acc),
            [114, 101, 97, 100, 45, 98, 111, 111, 107, 115] => lookup_863_91(acc),
            [114, 101, 97, 100, 109, 121, 98, 108, 111, 103] => lookup_863_92(acc),
            [114, 111, 117, 116, 105, 110, 103, 116, 104, 101, 99, 108, 111, 117, 100] => {
                lookup_863_93(acc)
            }
            [115, 101, 108, 102, 105, 112] => lookup_863_94(acc),
            [115, 101, 108, 108, 115, 121, 111, 117, 114, 104, 111, 109, 101] => lookup_863_95(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_863_96(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_863_97(acc),
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_863_98(acc),
            [115, 109, 97, 108, 108, 45, 119, 101, 98] => lookup_863_99(acc),
            [115, 112, 100, 110, 115] => lookup_863_100(acc),
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_863_101(acc),
            [115, 119, 101, 101, 116, 112, 101, 112, 112, 101, 114] => lookup_863_102(acc),
            [116, 101, 99, 107, 105, 100, 115] => lookup_863_103(info, labels, acc),
            [116, 111, 111, 108, 102, 111, 114, 103, 101] => lookup_863_104(acc),
            [116, 117, 110, 107] => lookup_863_105(acc),
            [116, 117, 120, 102, 97, 109, 105, 108, 121] => lookup_863_106(acc),
            [116, 119, 109, 97, 105, 108] => lookup_863_107(acc),
            [117, 102, 99, 102, 97, 110] => lookup_863_108(acc),
            [117, 115] => lookup_863_109(acc),
            [119, 101, 98, 104, 111, 112] => lookup_863_110(acc),
            [119, 101, 98, 114, 101, 100, 105, 114, 101, 99, 116] => lookup_863_111(acc),
            [119, 109, 99, 108, 111, 117, 100] => lookup_863_112(acc),
            [119, 109, 102, 108, 97, 98, 115] => lookup_863_113(acc),
            [122, 97] => lookup_863_114(acc),
            [122, 97, 112, 116, 111] => lookup_863_115(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_864() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_866() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_868() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_869_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_869<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 114, 100, 112, 111, 108] => lookup_869_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_870_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 111] => lookup_870_0(acc),
            [97, 99] => lookup_870_1(acc),
            [99, 111, 109] => lookup_870_2(acc),
            [101, 100, 117] => lookup_870_3(acc),
            [103, 111, 98] => lookup_870_4(acc),
            [105, 110, 103] => lookup_870_5(acc),
            [109, 101, 100] => lookup_870_6(acc),
            [110, 101, 116] => lookup_870_7(acc),
            [110, 111, 109] => lookup_870_8(acc),
            [111, 114, 103] => lookup_870_9(acc),
            [115, 108, 100] => lookup_870_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_871_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_871_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_871_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_871_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_871_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_871_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_871_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_871_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_871_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_871_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_871<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 101, 109] => lookup_871_0(acc),
            [99, 111, 100, 101, 98, 101, 114, 103] => lookup_871_1(acc),
            [104, 101, 121, 102, 108, 111, 119] => lookup_871_2(acc),
            [104, 108, 120] => lookup_871_3(acc),
            [104, 108, 120, 51] => lookup_871_4(acc),
            [112, 100, 110, 115] => lookup_871_5(acc),
            [112, 108, 101, 115, 107] => lookup_871_6(acc),
            [112, 114, 118, 99, 121] => lookup_871_7(acc),
            [114, 111, 99, 107, 121] => lookup_871_8(acc),
            [116, 114, 97, 110, 115, 108, 97, 116, 101, 100] => lookup_871_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_872() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_875() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_876() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_877() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_879() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_880_0(acc),
            [101, 100, 117] => lookup_880_1(acc),
            [103, 111, 98] => lookup_880_2(acc),
            [109, 105, 108] => lookup_880_3(acc),
            [110, 101, 116] => lookup_880_4(acc),
            [110, 111, 109] => lookup_880_5(acc),
            [111, 114, 103] => lookup_880_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_882_0(acc),
            [101, 100, 117] => lookup_882_1(acc),
            [111, 114, 103] => lookup_882_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_883() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_884_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_884<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_884_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_885_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_885<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_885_0(acc),
            [99, 111, 109] => lookup_885_1(acc),
            [101, 100, 117] => lookup_885_2(acc),
            [103, 111, 118] => lookup_885_3(acc),
            [105] => lookup_885_4(acc),
            [109, 105, 108] => lookup_885_5(acc),
            [110, 101, 116] => lookup_885_6(acc),
            [110, 103, 111] => lookup_885_7(acc),
            [111, 114, 103] => lookup_885_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_886() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_887() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_888() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_889() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_890() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_892<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 109, 101, 114] => lookup_892_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_893() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_895() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_896_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_896<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 51, 51, 55] => lookup_896_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_897() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_898() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_899() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_901() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_902<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 103, 114, 111, 107] => lookup_902_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_903_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_903_0(acc),
            [98, 105, 122] => lookup_903_1(acc),
            [99, 111, 109] => lookup_903_2(acc),
            [101, 100, 117] => lookup_903_3(acc),
            [102, 97, 109] => lookup_903_4(acc),
            [103, 107, 112] => lookup_903_5(acc),
            [103, 111, 98] => lookup_903_6(acc),
            [103, 111, 103] => lookup_903_7(acc),
            [103, 111, 107] => lookup_903_8(acc),
            [103, 111, 112] => lookup_903_9(acc),
            [103, 111, 115] => lookup_903_10(acc),
            [103, 111, 118] => lookup_903_11(acc),
            [110, 101, 116] => lookup_903_12(acc),
            [111, 114, 103] => lookup_903_13(acc),
            [119, 101, 98] => lookup_903_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_40<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112] => lookup_904_40_0(acc),
            [103, 114, 105, 119] => lookup_904_40_1(acc),
            [105, 99] => lookup_904_40_2(acc),
            [105, 115] => lookup_904_40_3(acc),
            [107, 109, 112, 115, 112] => lookup_904_40_4(acc),
            [107, 111, 110, 115, 117, 108, 97, 116] => lookup_904_40_5(acc),
            [107, 112, 112, 115, 112] => lookup_904_40_6(acc),
            [107, 119, 112] => lookup_904_40_7(acc),
            [107, 119, 112, 115, 112] => lookup_904_40_8(acc),
            [109, 117, 112] => lookup_904_40_9(acc),
            [109, 119] => lookup_904_40_10(acc),
            [111, 105, 97] => lookup_904_40_11(acc),
            [111, 105, 114, 109] => lookup_904_40_12(acc),
            [111, 107, 101] => lookup_904_40_13(acc),
            [111, 111, 119] => lookup_904_40_14(acc),
            [111, 115, 99, 104, 114] => lookup_904_40_15(acc),
            [111, 117, 109] => lookup_904_40_16(acc),
            [112, 97] => lookup_904_40_17(acc),
            [112, 105, 110, 98] => lookup_904_40_18(acc),
            [112, 105, 119] => lookup_904_40_19(acc),
            [112, 111] => lookup_904_40_20(acc),
            [112, 114] => lookup_904_40_21(acc),
            [112, 115, 112] => lookup_904_40_22(acc),
            [112, 115, 115, 101] => lookup_904_40_23(acc),
            [112, 117, 112] => lookup_904_40_24(acc),
            [114, 122, 103, 119] => lookup_904_40_25(acc),
            [115, 97] => lookup_904_40_26(acc),
            [115, 100, 110] => lookup_904_40_27(acc),
            [115, 107, 111] => lookup_904_40_28(acc),
            [115, 111] => lookup_904_40_29(acc),
            [115, 114] => lookup_904_40_30(acc),
            [115, 116, 97, 114, 111, 115, 116, 119, 111] => lookup_904_40_31(acc),
            [117, 103] => lookup_904_40_32(acc),
            [117, 103, 105, 109] => lookup_904_40_33(acc),
            [117, 109] => lookup_904_40_34(acc),
            [117, 109, 105, 103] => lookup_904_40_35(acc),
            [117, 112, 111, 119] => lookup_904_40_36(acc),
            [117, 112, 112, 111] => lookup_904_40_37(acc),
            [117, 115] => lookup_904_40_38(acc),
            [117, 119] => lookup_904_40_39(acc),
            [117, 122, 115] => lookup_904_40_40(acc),
            [119, 105, 102] => lookup_904_40_41(acc),
            [119, 105, 105, 104] => lookup_904_40_42(acc),
            [119, 105, 110, 98] => lookup_904_40_43(acc),
            [119, 105, 111, 115] => lookup_904_40_44(acc),
            [119, 105, 116, 100] => lookup_904_40_45(acc),
            [119, 105, 119] => lookup_904_40_46(acc),
            [119, 107, 122] => lookup_904_40_47(acc),
            [119, 115, 97] => lookup_904_40_48(acc),
            [119, 115, 107, 114] => lookup_904_40_49(acc),
            [119, 115, 115, 101] => lookup_904_40_50(acc),
            [119, 117, 111, 122] => lookup_904_40_51(acc),
            [119, 122, 109, 105, 117, 119] => lookup_904_40_52(acc),
            [122, 112] => lookup_904_40_53(acc),
            [122, 112, 105, 115, 100, 110] => lookup_904_40_54(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_904_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 103, 114, 111] => lookup_904_0(acc),
            [97, 105, 100] => lookup_904_1(acc),
            [97, 114, 116] => lookup_904_2(acc),
            [97, 116, 109] => lookup_904_3(acc),
            [97, 117, 103, 117, 115, 116, 111, 119] => lookup_904_4(acc),
            [97, 117, 116, 111] => lookup_904_5(acc),
            [98, 97, 98, 105, 97, 45, 103, 111, 114, 97] => lookup_904_6(acc),
            [98, 101, 100, 122, 105, 110] => lookup_904_7(acc),
            [98, 101, 101, 112] => lookup_904_8(acc),
            [98, 101, 115, 107, 105, 100, 121] => lookup_904_9(acc),
            [98, 105, 97, 108, 111, 119, 105, 101, 122, 97] => lookup_904_10(acc),
            [98, 105, 97, 108, 121, 115, 116, 111, 107] => lookup_904_11(acc),
            [98, 105, 101, 108, 97, 119, 97] => lookup_904_12(acc),
            [98, 105, 101, 108, 115, 107, 111] => lookup_904_13(acc),
            [98, 105, 101, 115, 122, 99, 122, 97, 100, 121] => lookup_904_14(acc),
            [98, 105, 122] => lookup_904_15(acc),
            [98, 111, 108, 101, 115, 108, 97, 119, 105, 101, 99] => lookup_904_16(acc),
            [98, 121, 100, 103, 111, 115, 122, 99, 122] => lookup_904_17(acc),
            [98, 121, 116, 111, 109] => lookup_904_18(acc),
            [99, 102, 111, 108, 107, 115] => lookup_904_19(acc),
            [99, 105, 101, 115, 122, 121, 110] => lookup_904_20(acc),
            [99, 111] => lookup_904_21(acc),
            [99, 111, 109] => lookup_904_22(acc),
            [99, 122, 101, 108, 97, 100, 122] => lookup_904_23(acc),
            [99, 122, 101, 115, 116] => lookup_904_24(acc),
            [100, 102, 105, 114, 109, 97] => lookup_904_25(acc),
            [100, 107, 111, 110, 116, 111] => lookup_904_26(acc),
            [100, 108, 117, 103, 111, 108, 101, 107, 97] => lookup_904_27(acc),
            [101, 99, 111, 109, 109, 101, 114, 99, 101, 45, 115, 104, 111, 112] => {
                lookup_904_28(acc)
            }
            [101, 100, 117] => lookup_904_29(acc),
            [101, 108, 98, 108, 97, 103] => lookup_904_30(acc),
            [101, 108, 107] => lookup_904_31(acc),
            [103, 100, 97] => lookup_904_32(acc),
            [103, 100, 97, 110, 115, 107] => lookup_904_33(acc),
            [103, 100, 121, 110, 105, 97] => lookup_904_34(acc),
            [103, 108, 105, 119, 105, 99, 101] => lookup_904_35(acc),
            [103, 108, 111, 103, 111, 119] => lookup_904_36(acc),
            [103, 109, 105, 110, 97] => lookup_904_37(acc),
            [103, 110, 105, 101, 122, 110, 111] => lookup_904_38(acc),
            [103, 111, 114, 108, 105, 99, 101] => lookup_904_39(acc),
            [103, 111, 118] => lookup_904_40(labels, acc),
            [103, 114, 97, 106, 101, 119, 111] => lookup_904_41(acc),
            [103, 115, 109] => lookup_904_42(acc),
            [104, 111, 109, 101, 115, 107, 108, 101, 112] => lookup_904_43(acc),
            [105, 108, 97, 119, 97] => lookup_904_44(acc),
            [105, 110, 102, 111] => lookup_904_45(acc),
            [106, 97, 119, 111, 114, 122, 110, 111] => lookup_904_46(acc),
            [106, 101, 108, 101, 110, 105, 97, 45, 103, 111, 114, 97] => lookup_904_47(acc),
            [106, 103, 111, 114, 97] => lookup_904_48(acc),
            [107, 97, 108, 105, 115, 122] => lookup_904_49(acc),
            [107, 97, 114, 112, 97, 99, 122] => lookup_904_50(acc),
            [107, 97, 114, 116, 117, 122, 121] => lookup_904_51(acc),
            [107, 97, 115, 122, 117, 98, 121] => lookup_904_52(acc),
            [107, 97, 116, 111, 119, 105, 99, 101] => lookup_904_53(acc),
            [107, 97, 122, 105, 109, 105, 101, 114, 122, 45, 100, 111, 108, 110, 121] => {
                lookup_904_54(acc)
            }
            [107, 101, 112, 110, 111] => lookup_904_55(acc),
            [107, 101, 116, 114, 122, 121, 110] => lookup_904_56(acc),
            [107, 108, 111, 100, 122, 107, 111] => lookup_904_57(acc),
            [107, 111, 98, 105, 101, 114, 122, 121, 99, 101] => lookup_904_58(acc),
            [107, 111, 108, 111, 98, 114, 122, 101, 103] => lookup_904_59(acc),
            [107, 111, 110, 105, 110] => lookup_904_60(acc),
            [107, 111, 110, 115, 107, 111, 119, 111, 108, 97] => lookup_904_61(acc),
            [107, 114, 97, 107, 111, 119] => lookup_904_62(acc),
            [107, 114, 97, 115, 110, 105, 107] => lookup_904_63(acc),
            [107, 117, 116, 110, 111] => lookup_904_64(acc),
            [108, 97, 112, 121] => lookup_904_65(acc),
            [108, 101, 98, 111, 114, 107] => lookup_904_66(acc),
            [108, 101, 99, 122, 110, 97] => lookup_904_67(acc),
            [108, 101, 103, 110, 105, 99, 97] => lookup_904_68(acc),
            [108, 101, 122, 97, 106, 115, 107] => lookup_904_69(acc),
            [108, 105, 109, 97, 110, 111, 119, 97] => lookup_904_70(acc),
            [108, 111, 100, 122] => lookup_904_71(acc),
            [108, 111, 109, 122, 97] => lookup_904_72(acc),
            [108, 111, 119, 105, 99, 122] => lookup_904_73(acc),
            [108, 117, 98, 97, 114, 116, 111, 119] => lookup_904_74(acc),
            [108, 117, 98, 105, 110] => lookup_904_75(acc),
            [108, 117, 98, 108, 105, 110] => lookup_904_76(acc),
            [108, 117, 107, 111, 119] => lookup_904_77(acc),
            [109, 97, 105, 108] => lookup_904_78(acc),
            [109, 97, 108, 98, 111, 114, 107] => lookup_904_79(acc),
            [109, 97, 108, 111, 112, 111, 108, 115, 107, 97] => lookup_904_80(acc),
            [109, 97, 122, 111, 119, 115, 122, 101] => lookup_904_81(acc),
            [109, 97, 122, 117, 114, 121] => lookup_904_82(acc),
            [109, 101, 100] => lookup_904_83(acc),
            [109, 101, 100, 105, 97] => lookup_904_84(acc),
            [109, 105, 97, 115, 116, 97] => lookup_904_85(acc),
            [109, 105, 101, 108, 101, 99] => lookup_904_86(acc),
            [109, 105, 101, 108, 110, 111] => lookup_904_87(acc),
            [109, 105, 108] => lookup_904_88(acc),
            [109, 114, 97, 103, 111, 119, 111] => lookup_904_89(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_904_90(acc),
            [110, 97, 107, 108, 111] => lookup_904_91(acc),
            [110, 101, 116] => lookup_904_92(acc),
            [110, 105, 101, 114, 117, 99, 104, 111, 109, 111, 115, 99, 105] => lookup_904_93(acc),
            [110, 111, 109] => lookup_904_94(acc),
            [110, 111, 119, 97, 114, 117, 100, 97] => lookup_904_95(acc),
            [110, 121, 115, 97] => lookup_904_96(acc),
            [111, 108, 97, 119, 97] => lookup_904_97(acc),
            [111, 108, 101, 99, 107, 111] => lookup_904_98(acc),
            [111, 108, 107, 117, 115, 122] => lookup_904_99(acc),
            [111, 108, 115, 122, 116, 121, 110] => lookup_904_100(acc),
            [111, 112, 111, 99, 122, 110, 111] => lookup_904_101(acc),
            [111, 112, 111, 108, 101] => lookup_904_102(acc),
            [111, 114, 103] => lookup_904_103(acc),
            [111, 115, 116, 114, 111, 100, 97] => lookup_904_104(acc),
            [111, 115, 116, 114, 111, 108, 101, 107, 97] => lookup_904_105(acc),
            [111, 115, 116, 114, 111, 119, 105, 101, 99] => lookup_904_106(acc),
            [111, 115, 116, 114, 111, 119, 119, 108, 107, 112] => lookup_904_107(acc),
            [112, 97, 98, 105, 97, 110, 105, 99, 101] => lookup_904_108(acc),
            [112, 99] => lookup_904_109(acc),
            [112, 105, 108, 97] => lookup_904_110(acc),
            [112, 105, 115, 122] => lookup_904_111(acc),
            [112, 108, 111, 99, 107] => lookup_904_112(acc),
            [112, 111, 100, 104, 97, 108, 101] => lookup_904_113(acc),
            [112, 111, 100, 108, 97, 115, 105, 101] => lookup_904_114(acc),
            [112, 111, 108, 107, 111, 119, 105, 99, 101] => lookup_904_115(acc),
            [112, 111, 109, 111, 114, 115, 107, 105, 101] => lookup_904_116(acc),
            [112, 111, 109, 111, 114, 122, 101] => lookup_904_117(acc),
            [112, 111, 110, 105, 97, 116, 111, 119, 97] => lookup_904_118(acc),
            [112, 111, 119, 105, 97, 116] => lookup_904_119(acc),
            [112, 111, 122, 110, 97, 110] => lookup_904_120(acc),
            [112, 114, 105, 118] => lookup_904_121(acc),
            [112, 114, 111, 99, 104, 111, 119, 105, 99, 101] => lookup_904_122(acc),
            [112, 114, 117, 115, 122, 107, 111, 119] => lookup_904_123(acc),
            [112, 114, 122, 101, 119, 111, 114, 115, 107] => lookup_904_124(acc),
            [112, 117, 108, 97, 119, 121] => lookup_904_125(acc),
            [114, 97, 100, 111, 109] => lookup_904_126(acc),
            [114, 97, 119, 97, 45, 109, 97, 122] => lookup_904_127(acc),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_904_128(acc),
            [114, 101, 108] => lookup_904_129(acc),
            [114, 121, 98, 110, 105, 107] => lookup_904_130(acc),
            [114, 122, 101, 115, 122, 111, 119] => lookup_904_131(acc),
            [115, 97, 110, 111, 107] => lookup_904_132(acc),
            [115, 100, 115, 99, 108, 111, 117, 100] => lookup_904_133(acc),
            [115, 101, 106, 110, 121] => lookup_904_134(acc),
            [115, 101, 120] => lookup_904_135(acc),
            [115, 104, 111, 112] => lookup_904_136(acc),
            [115, 104, 111, 112, 97, 114, 101, 110, 97] => lookup_904_137(acc),
            [115, 105, 101, 114, 97, 100, 122] => lookup_904_138(acc),
            [115, 105, 109, 112, 108, 101, 115, 105, 116, 101] => lookup_904_139(acc),
            [115, 107, 105, 101, 114, 110, 105, 101, 119, 105, 99, 101] => lookup_904_140(acc),
            [115, 107, 108, 101, 112] => lookup_904_141(acc),
            [115, 107, 111, 99, 122, 111, 119] => lookup_904_142(acc),
            [115, 108, 97, 115, 107] => lookup_904_143(acc),
            [115, 108, 117, 112, 115, 107] => lookup_904_144(acc),
            [115, 111, 112, 111, 116] => lookup_904_145(acc),
            [115, 111, 115] => lookup_904_146(acc),
            [115, 111, 115, 110, 111, 119, 105, 101, 99] => lookup_904_147(acc),
            [115, 116, 97, 108, 111, 119, 97, 45, 119, 111, 108, 97] => lookup_904_148(acc),
            [115, 116, 97, 114, 97, 99, 104, 111, 119, 105, 99, 101] => lookup_904_149(acc),
            [115, 116, 97, 114, 103, 97, 114, 100] => lookup_904_150(acc),
            [115, 117, 119, 97, 108, 107, 105] => lookup_904_151(acc),
            [115, 119, 105, 100, 110, 105, 99, 97] => lookup_904_152(acc),
            [115, 119, 105, 100, 110, 105, 107] => lookup_904_153(acc),
            [115, 119, 105, 101, 98, 111, 100, 122, 105, 110] => lookup_904_154(acc),
            [115, 119, 105, 110, 111, 117, 106, 115, 99, 105, 101] => lookup_904_155(acc),
            [115, 122, 99, 122, 101, 99, 105, 110] => lookup_904_156(acc),
            [115, 122, 99, 122, 121, 116, 110, 111] => lookup_904_157(acc),
            [115, 122, 107, 111, 108, 97] => lookup_904_158(acc),
            [116, 97, 114, 103, 105] => lookup_904_159(acc),
            [116, 97, 114, 110, 111, 98, 114, 122, 101, 103] => lookup_904_160(acc),
            [116, 103, 111, 114, 121] => lookup_904_161(acc),
            [116, 109] => lookup_904_162(acc),
            [116, 111, 114, 117, 110] => lookup_904_163(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_904_164(acc),
            [116, 114, 97, 118, 101, 108] => lookup_904_165(acc),
            [116, 117, 114, 101, 107] => lookup_904_166(acc),
            [116, 117, 114, 121, 115, 116, 121, 107, 97] => lookup_904_167(acc),
            [116, 121, 99, 104, 121] => lookup_904_168(acc),
            [117, 110, 105, 99, 108, 111, 117, 100] => lookup_904_169(acc),
            [117, 115, 116, 107, 97] => lookup_904_170(acc),
            [119, 97, 108, 98, 114, 122, 121, 99, 104] => lookup_904_171(acc),
            [119, 97, 114, 109, 105, 97] => lookup_904_172(acc),
            [119, 97, 114, 115, 122, 97, 119, 97] => lookup_904_173(acc),
            [119, 97, 119] => lookup_904_174(acc),
            [119, 101, 103, 114, 111, 119] => lookup_904_175(acc),
            [119, 105, 101, 108, 117, 110] => lookup_904_176(acc),
            [119, 108, 111, 99, 108] => lookup_904_177(acc),
            [119, 108, 111, 99, 108, 97, 119, 101, 107] => lookup_904_178(acc),
            [119, 111, 100, 122, 105, 115, 108, 97, 119] => lookup_904_179(acc),
            [119, 111, 108, 111, 109, 105, 110] => lookup_904_180(acc),
            [119, 114, 111, 99] => lookup_904_181(acc),
            [119, 114, 111, 99, 108, 97, 119] => lookup_904_182(acc),
            [121, 111, 117, 50] => lookup_904_183(acc),
            [122, 97, 99, 104, 112, 111, 109, 111, 114] => lookup_904_184(acc),
            [122, 97, 103, 97, 110] => lookup_904_185(acc),
            [122, 97, 107, 111, 112, 97, 110, 101] => lookup_904_186(acc),
            [122, 97, 114, 111, 119] => lookup_904_187(acc),
            [122, 103, 105, 101, 114, 122] => lookup_904_188(acc),
            [122, 103, 111, 114, 97] => lookup_904_189(acc),
            [122, 103, 111, 114, 122, 101, 108, 101, 99] => lookup_904_190(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_905_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_905<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_905_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_906() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_909() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_910_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_910_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_910<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101] => lookup_910_0(acc),
            [111, 119, 110] => lookup_910_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_911_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_911_0(acc),
            [101, 100, 117] => lookup_911_1(acc),
            [103, 111, 118] => lookup_911_2(acc),
            [110, 101, 116] => lookup_911_3(acc),
            [111, 114, 103] => lookup_911_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_912() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_913() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_914() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_915() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_917() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_918_0(acc),
            [98, 105, 122] => lookup_918_1(acc),
            [99, 111, 109] => lookup_918_2(acc),
            [101, 100, 117] => lookup_918_3(acc),
            [101, 115, 116] => lookup_918_4(acc),
            [103, 111, 118] => lookup_918_5(acc),
            [105, 110, 102, 111] => lookup_918_6(acc),
            [105, 115, 108, 97] => lookup_918_7(acc),
            [110, 97, 109, 101] => lookup_918_8(acc),
            [110, 101, 116] => lookup_918_9(acc),
            [111, 114, 103] => lookup_918_10(acc),
            [112, 114, 111] => lookup_918_11(acc),
            [112, 114, 111, 102] => lookup_918_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_919() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_920() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_921() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_923_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_923_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_923_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_923_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 99, 104, 97, 114, 115] => lookup_923_0(acc),
            [97, 97, 97] => lookup_923_1(acc),
            [97, 99, 97] => lookup_923_2(acc),
            [97, 99, 99, 116] => lookup_923_3(acc),
            [97, 118, 111, 99, 97, 116] => lookup_923_4(acc),
            [98, 97, 114] => lookup_923_5(acc),
            [98, 97, 114, 115, 121] => lookup_923_6(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_923_7(acc),
            [99, 112, 97] => lookup_923_8(acc),
            [101, 110, 103] => lookup_923_9(acc),
            [106, 117, 114] => lookup_923_10(acc),
            [108, 97, 119] => lookup_923_11(acc),
            [109, 101, 100] => lookup_923_12(acc),
            [110, 103, 114, 111, 107] => lookup_923_13(acc),
            [114, 101, 99, 104, 116] => lookup_923_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_924() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_928() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_930() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_931() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_932() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_934_0(acc),
            [101, 100, 117] => lookup_934_1(acc),
            [103, 111, 118] => lookup_934_2(acc),
            [110, 101, 116] => lookup_934_3(acc),
            [111, 114, 103] => lookup_934_4(acc),
            [112, 108, 111] => lookup_934_5(acc),
            [115, 101, 99] => lookup_934_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_935_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 112, 97, 103, 105, 110, 97, 119, 101, 98] => lookup_935_0(acc),
            [99, 111, 109] => lookup_935_1(acc),
            [101, 100, 117] => lookup_935_2(acc),
            [103, 111, 118] => lookup_935_3(acc),
            [105, 110, 116] => lookup_935_4(acc),
            [110, 101, 116] => lookup_935_5(acc),
            [110, 111, 109, 101] => lookup_935_6(acc),
            [111, 114, 103] => lookup_935_7(acc),
            [112, 117, 98, 108] => lookup_935_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_936_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_936_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_936_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_936_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_936<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_936_0(acc),
            [105, 100] => lookup_936_1(info, labels, acc),
            [107, 105, 110] => lookup_936_2(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_937_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_937_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_937_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_937<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_937_0(acc),
            [103, 111, 118] => lookup_937_1(acc),
            [120, 52, 52, 51] => lookup_937_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_938() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_939_0(acc),
            [99, 111, 111, 112] => lookup_939_1(acc),
            [101, 100, 117] => lookup_939_2(acc),
            [103, 111, 118] => lookup_939_3(acc),
            [109, 105, 108] => lookup_939_4(acc),
            [110, 101, 116] => lookup_939_5(acc),
            [111, 114, 103] => lookup_939_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_940_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_940_0(acc),
            [101, 100, 117] => lookup_940_1(acc),
            [103, 111, 118] => lookup_940_2(acc),
            [109, 105, 108] => lookup_940_3(acc),
            [110, 97, 109, 101] => lookup_940_4(acc),
            [110, 101, 116] => lookup_940_5(acc),
            [111, 114, 103] => lookup_940_6(acc),
            [115, 99, 104] => lookup_940_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_941() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_942() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_943() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_945() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_946_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_946<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_946_0(acc),
            [99, 97, 110] => lookup_946_1(acc),
            [99, 111, 109] => lookup_946_2(acc),
            [110, 101, 116, 108, 105, 98] => lookup_946_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_947() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_948() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_951() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_952() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_953() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_955() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_956() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_958() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_959() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_961() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_964() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_966() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_967() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_968() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_969() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_970() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_972() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_973() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_974() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_976_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_976<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 97, 110] => lookup_976_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_977_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_977_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_977_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_977_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_977_0(acc),
            [98, 97, 114, 115, 121] => lookup_977_1(acc),
            [99, 111] => lookup_977_2(acc),
            [99, 111, 109] => lookup_977_3(acc),
            [102, 105, 114, 109] => lookup_977_4(acc),
            [105, 110, 102, 111] => lookup_977_5(acc),
            [110, 111, 109] => lookup_977_6(acc),
            [110, 116] => lookup_977_7(acc),
            [111, 114, 103] => lookup_977_8(acc),
            [114, 101, 99] => lookup_977_9(acc),
            [115, 104, 111, 112] => lookup_977_10(acc),
            [115, 116, 111, 114, 101] => lookup_977_11(acc),
            [116, 109] => lookup_977_12(acc),
            [119, 119, 119] => lookup_977_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_978_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_978_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_978_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_978_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_978<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_978_0(acc),
            [109, 121, 100, 100, 110, 115] => lookup_978_1(acc),
            [115, 116, 97, 99, 107, 105, 116] => lookup_978_2(acc),
            [119, 101, 98, 115, 112, 97, 99, 101] => lookup_978_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_979() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_980() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_982_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_982_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_982_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_982_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 104, 111, 112] => lookup_982_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_982_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_982_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_982_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_982_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_982_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_982_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_982<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_982_0(acc),
            [98, 97, 114, 115, 121] => lookup_982_1(acc),
            [98, 114, 101, 110, 100, 108, 121] => lookup_982_2(info, labels, acc),
            [99, 111] => lookup_982_3(acc),
            [101, 100, 117] => lookup_982_4(acc),
            [103, 111, 118] => lookup_982_5(acc),
            [105, 110] => lookup_982_6(acc),
            [111, 114, 103] => lookup_982_7(acc),
            [111, 120] => lookup_982_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_983() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_984_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [104, 98] => lookup_984_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_984_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 112, 115] => lookup_984_17_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_984_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_23_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_23_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_984_23_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_984_23_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_23_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_984_23_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_984_23_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_23_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_984_23_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_984_23_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_23_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_984_23_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_984_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 115, 116, 105, 110, 103] => lookup_984_23_0(info, labels, acc),
            [108, 97, 110, 100, 105, 110, 103] => lookup_984_23_1(info, labels, acc),
            [115, 112, 101, 99, 116, 114, 117, 109] => lookup_984_23_2(info, labels, acc),
            [118, 112, 115] => lookup_984_23_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_984_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_984<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_984_0(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_984_1(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_984_2(acc),
            [98, 105, 114] => lookup_984_3(acc),
            [99, 98, 103] => lookup_984_4(acc),
            [99, 108, 100, 109, 97, 105, 108] => lookup_984_5(info, labels, acc),
            [99, 111, 109] => lookup_984_6(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_984_7(acc),
            [101, 100, 117] => lookup_984_8(acc),
            [101, 117, 114, 111, 100, 105, 114] => lookup_984_9(acc),
            [103, 111, 118] => lookup_984_10(acc),
            [103, 114, 111, 122, 110, 121] => lookup_984_11(acc),
            [105, 110, 116] => lookup_984_12(acc),
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_984_13(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_984_14(acc),
            [108, 107, 51] => lookup_984_15(acc),
            [109, 97, 114, 105, 110, 101] => lookup_984_16(acc),
            [109, 99, 100, 105, 114] => lookup_984_17(labels, acc),
            [109, 99, 112, 114, 101] => lookup_984_18(acc),
            [109, 105, 108] => lookup_984_19(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_984_20(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_984_21(acc),
            [109, 115, 107] => lookup_984_22(acc),
            [109, 121, 106, 105, 110, 111] => lookup_984_23(labels, acc),
            [109, 121, 116, 105, 115] => lookup_984_24(acc),
            [110, 97, 52, 117] => lookup_984_25(acc),
            [110, 97, 108, 99, 104, 105, 107] => lookup_984_26(acc),
            [110, 101, 116] => lookup_984_27(acc),
            [110, 111, 118] => lookup_984_28(acc),
            [111, 114, 103] => lookup_984_29(acc),
            [112, 112] => lookup_984_30(acc),
            [112, 121, 97, 116, 105, 103, 111, 114, 115, 107] => lookup_984_31(acc),
            [114, 97, 115] => lookup_984_32(acc),
            [115, 112, 98] => lookup_984_33(acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_984_34(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_984_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_985() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_986() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_987_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_987_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_987_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_987_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_987_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_987_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_987_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_987_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_987_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_987_4_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_987_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_987_4_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_987_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_987_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_987_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_987_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_987_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_987_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_987_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_987_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [101, 120, 112, 114, 101, 115, 115] => lookup_987_10_0(acc),
            [119, 101, 98] => lookup_987_10_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_987_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_987<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 117, 105, 108, 100] => lookup_987_0(info, labels, acc),
            [99, 111, 100, 101] => lookup_987_1(info, labels, acc),
            [100, 97, 116, 97, 98, 97, 115, 101] => lookup_987_2(info, labels, acc),
            [100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116] => lookup_987_3(acc),
            [109, 105, 103, 114, 97, 116, 105, 111, 110] => lookup_987_4(info, labels, acc),
            [111, 110, 112, 111, 114, 116, 101, 114] => lookup_987_5(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_987_6(acc),
            [114, 101, 112, 108] => lookup_987_7(acc),
            [115, 101, 114, 118, 101, 114, 115] => lookup_987_8(acc),
            [115, 116, 97, 99, 107, 105, 116] => lookup_987_9(acc),
            [118, 97, 108] => lookup_987_10(info, labels, acc),
            [119, 105, 120] => lookup_987_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_988_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_988_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_988_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_988_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_988_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_988_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_988_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_988<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_988_0(acc),
            [99, 111] => lookup_988_1(acc),
            [99, 111, 111, 112] => lookup_988_2(acc),
            [103, 111, 118] => lookup_988_3(acc),
            [109, 105, 108] => lookup_988_4(acc),
            [110, 101, 116] => lookup_988_5(acc),
            [111, 114, 103] => lookup_988_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_989() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_990() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_991_0(acc),
            [101, 100, 117] => lookup_991_1(acc),
            [103, 111, 118] => lookup_991_2(acc),
            [109, 101, 100] => lookup_991_3(acc),
            [110, 101, 116] => lookup_991_4(acc),
            [111, 114, 103] => lookup_991_5(acc),
            [112, 117, 98] => lookup_991_6(acc),
            [115, 99, 104] => lookup_991_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_992() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_993() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_996() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_997() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_998() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_999() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1001() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1002() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1003() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1004() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1005() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1006() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1007() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1008_0(acc),
            [101, 100, 117] => lookup_1008_1(acc),
            [103, 111, 118] => lookup_1008_2(acc),
            [110, 101, 116] => lookup_1008_3(acc),
            [111, 114, 103] => lookup_1008_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1009() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1010() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1011_0(acc),
            [101, 100, 117] => lookup_1011_1(acc),
            [103, 111, 118] => lookup_1011_2(acc),
            [110, 101, 116] => lookup_1011_3(acc),
            [111, 114, 103] => lookup_1011_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1012() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1016() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1017() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1018() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1019() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1020_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118, 105, 99, 101] => lookup_1020_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1020<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1020_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1021_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1021_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1021_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1021_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1021_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1021_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1021_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1021_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1021<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1021_0(acc),
            [101, 100, 117] => lookup_1021_1(acc),
            [103, 111, 118] => lookup_1021_2(acc),
            [105, 110, 102, 111] => lookup_1021_3(acc),
            [109, 101, 100] => lookup_1021_4(acc),
            [110, 101, 116] => lookup_1021_5(acc),
            [111, 114, 103] => lookup_1021_6(acc),
            [116, 118] => lookup_1021_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1022_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1022_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1022_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1022_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1022_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1022_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 109, 105, 110, 115, 105, 100, 97] => lookup_1022_0(acc),
            [97] => lookup_1022_1(acc),
            [97, 99] => lookup_1022_2(acc),
            [98] => lookup_1022_3(acc),
            [98, 100] => lookup_1022_4(acc),
            [98, 114, 97, 110, 100] => lookup_1022_5(acc),
            [99] => lookup_1022_6(acc),
            [99, 111, 109] => lookup_1022_7(acc),
            [100] => lookup_1022_8(acc),
            [101] => lookup_1022_9(acc),
            [102] => lookup_1022_10(acc),
            [102, 104] => lookup_1022_11(acc),
            [102, 104, 115, 107] => lookup_1022_12(acc),
            [102, 104, 118] => lookup_1022_13(acc),
            [103] => lookup_1022_14(acc),
            [104] => lookup_1022_15(acc),
            [105] => lookup_1022_16(acc),
            [105, 111, 112, 115, 121, 115] => lookup_1022_17(acc),
            [105, 116, 99, 111, 117, 108, 100, 98, 101, 119, 111, 114] => lookup_1022_18(acc),
            [107] => lookup_1022_19(acc),
            [107, 111, 109, 102, 111, 114, 98] => lookup_1022_20(acc),
            [107, 111, 109, 109, 117, 110, 97, 108, 102, 111, 114, 98, 117, 110, 100] => {
                lookup_1022_21(acc)
            }
            [107, 111, 109, 118, 117, 120] => lookup_1022_22(acc),
            [108] => lookup_1022_23(acc),
            [108, 97, 110, 98, 105, 98] => lookup_1022_24(acc),
            [109] => lookup_1022_25(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_1022_26(acc),
            [110] => lookup_1022_27(acc),
            [110, 97, 116, 117, 114, 98, 114, 117, 107, 115, 103, 121, 109, 110] => {
                lookup_1022_28(acc)
            }
            [111] => lookup_1022_29(acc),
            [111, 114, 103] => lookup_1022_30(acc),
            [112] => lookup_1022_31(acc),
            [112, 97, 114, 116, 105] => lookup_1022_32(acc),
            [112, 112] => lookup_1022_33(acc),
            [112, 114, 101, 115, 115] => lookup_1022_34(acc),
            [114] => lookup_1022_35(acc),
            [115] => lookup_1022_36(acc),
            [116] => lookup_1022_37(acc),
            [116, 109] => lookup_1022_38(acc),
            [117] => lookup_1022_39(acc),
            [119] => lookup_1022_40(acc),
            [120] => lookup_1022_41(acc),
            [121] => lookup_1022_42(acc),
            [122] => lookup_1022_43(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1023() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1024() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1027() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1028() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1029() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1030_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1030<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1030_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1031() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1032() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1033() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1035() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1036_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1036_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1036_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1036_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1036_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1036_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1036<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1036_0(acc),
            [101, 100, 117] => lookup_1036_1(acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_1036_2(acc),
            [103, 111, 118] => lookup_1036_3(acc),
            [110, 101, 116] => lookup_1036_4(acc),
            [111, 114, 103] => lookup_1036_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1037_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1037_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1037_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1037_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1037_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1037_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1037_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1037_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1037_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1037_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1037_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1037_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 110, 116] => lookup_1037_8_0(acc),
            [101, 117] => lookup_1037_8_1(acc),
            [117, 115] => lookup_1037_8_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1037<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 111, 116, 100, 97] => lookup_1037_0(acc),
            [99, 111, 109] => lookup_1037_1(acc),
            [103, 111, 118] => lookup_1037_2(acc),
            [104, 97, 115, 104, 98, 97, 110, 103] => lookup_1037_3(acc),
            [109, 105, 108] => lookup_1037_4(acc),
            [110, 101, 116] => lookup_1037_5(acc),
            [110, 111, 119] => lookup_1037_6(acc),
            [111, 114, 103] => lookup_1037_7(acc),
            [112, 108, 97, 116, 102, 111, 114, 109] => lookup_1037_8(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1038() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1039() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1041() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1043() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1044_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1044_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1044_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1044_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1044_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1044<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1044_0(acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_1044_1(acc),
            [98, 97, 115, 101] => lookup_1044_2(acc),
            [104, 111, 112, 108, 105, 120] => lookup_1044_3(acc),
            [115, 104, 111, 112, 119, 97, 114, 101] => lookup_1044_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1045() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1048_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1048_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1048_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1048<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 53] => lookup_1048_0(acc),
            [103, 105, 116, 97, 112, 112] => lookup_1048_1(acc),
            [103, 105, 116, 112, 97, 103, 101] => lookup_1048_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1049() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1050() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1051() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1052_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_2_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1052_2_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1052_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [109, 121] => lookup_1052_2_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1052_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1052_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1052_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_16_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1052_16_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1052_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_18_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1052_18_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1052_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1052_0(acc),
            [98, 121, 101, 110] => lookup_1052_1(acc),
            [99, 97, 110, 118, 97] => lookup_1052_2(info, labels, acc),
            [99, 108, 111, 117, 100, 101, 114, 97] => lookup_1052_3(info, labels, acc),
            [99, 111, 110, 118, 101, 120] => lookup_1052_4(acc),
            [99, 121, 111, 110] => lookup_1052_5(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_1052_6(acc),
            [104, 101, 121, 102, 108, 111, 119] => lookup_1052_7(acc),
            [106, 101, 108, 101] => lookup_1052_8(acc),
            [106, 111, 117, 119, 119, 101, 98] => lookup_1052_9(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1052_10(acc),
            [109, 97, 100, 101, 116, 104, 105, 115] => lookup_1052_11(acc),
            [110, 111, 116, 105, 111, 110] => lookup_1052_12(acc),
            [110, 111, 118, 101, 99, 111, 114, 101] => lookup_1052_13(acc),
            [111, 109, 110, 105, 119, 101] => lookup_1052_14(acc),
            [111, 112, 101, 110, 115, 111, 99, 105, 97, 108] => lookup_1052_15(acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 115, 104] => lookup_1052_16(info, labels, acc),
            [115, 114, 104, 116] => lookup_1052_17(acc),
            [116, 115, 116] => lookup_1052_18(info, labels, acc),
            [119, 112, 115, 113, 117, 97, 114, 101, 100] => lookup_1052_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1053() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1056() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1057() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1058() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1059_0(acc),
            [101, 100, 117] => lookup_1059_1(acc),
            [103, 111, 118] => lookup_1059_2(acc),
            [110, 101, 116] => lookup_1059_3(acc),
            [111, 114, 103] => lookup_1059_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1060() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1062() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1063() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_1064_0(acc),
            [99, 111, 109] => lookup_1064_1(acc),
            [101, 100, 117] => lookup_1064_2(acc),
            [103, 111, 117, 118] => lookup_1064_3(acc),
            [111, 114, 103] => lookup_1064_4(acc),
            [112, 101, 114, 115, 111] => lookup_1064_5(acc),
            [117, 110, 105, 118] => lookup_1064_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1065() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1066_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1066_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1066_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1066_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1066_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1066_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1066_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1066<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1066_0(acc),
            [101, 100, 117] => lookup_1066_1(acc),
            [103, 111, 118] => lookup_1066_2(acc),
            [109, 101] => lookup_1066_3(acc),
            [110, 101, 116] => lookup_1066_4(acc),
            [111, 114, 103] => lookup_1066_5(acc),
            [115, 117, 114, 118, 101, 121, 115] => lookup_1066_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1067() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1068() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1070() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1072() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1073() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1074() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1075() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1076() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1077() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1078_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1078_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1078_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1078_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_1078_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1078_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1078_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1078_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1078_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1078<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 45, 105, 111, 110, 111, 115] => lookup_1078_0(acc),
            [104, 101, 105, 121, 117] => lookup_1078_1(acc),
            [104, 102] => lookup_1078_2(labels, acc),
            [109, 121, 102, 97, 115, 116] => lookup_1078_3(acc),
            [112, 114, 111, 106, 101, 99, 116] => lookup_1078_4(acc),
            [117, 98, 101, 114] => lookup_1078_5(acc),
            [120, 115, 52, 97, 108, 108] => lookup_1078_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1079() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1080() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1081() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1082() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1083_0(acc),
            [99, 111] => lookup_1083_1(acc),
            [99, 111, 109] => lookup_1083_2(acc),
            [101, 100, 117] => lookup_1083_3(acc),
            [103, 111, 118] => lookup_1083_4(acc),
            [109, 101] => lookup_1083_5(acc),
            [110, 101, 116] => lookup_1083_6(acc),
            [111, 114, 103] => lookup_1083_7(acc),
            [115, 99, 104] => lookup_1083_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1084_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1084_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1084_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1084_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1084_0(acc),
            [99, 111, 109] => lookup_1084_1(acc),
            [99, 111, 110, 115, 117, 108, 97, 100, 111] => lookup_1084_2(acc),
            [101, 100, 117] => lookup_1084_3(acc),
            [101, 109, 98, 97, 105, 120, 97, 100, 97] => lookup_1084_4(acc),
            [104, 101, 108, 105, 111, 104, 111] => lookup_1084_5(acc),
            [107, 105, 114, 97, 114, 97] => lookup_1084_6(acc),
            [109, 105, 108] => lookup_1084_7(acc),
            [110, 101, 116] => lookup_1084_8(acc),
            [110, 111, 104, 111] => lookup_1084_9(acc),
            [111, 114, 103] => lookup_1084_10(acc),
            [112, 114, 105, 110, 99, 105, 112, 101] => lookup_1084_11(acc),
            [115, 97, 111, 116, 111, 109, 101] => lookup_1084_12(acc),
            [115, 116, 111, 114, 101] => lookup_1084_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1085() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1086() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1087() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1090() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1093() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1094_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1094_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1094_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1094_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1094<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1094_0(acc),
            [115, 101, 108, 108, 102, 121] => lookup_1094_1(acc),
            [115, 104, 111, 112, 119, 97, 114, 101] => lookup_1094_2(acc),
            [115, 116, 111, 114, 101, 98, 97, 115, 101] => lookup_1094_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1095() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1096() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1099_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 107, 104, 97, 122, 105, 97] => lookup_1099_0(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_1099_1(acc),
            [97, 107, 116, 121, 117, 98, 105, 110, 115, 107] => lookup_1099_2(acc),
            [97, 114, 107, 104, 97, 110, 103, 101, 108, 115, 107] => lookup_1099_3(acc),
            [97, 114, 109, 101, 110, 105, 97] => lookup_1099_4(acc),
            [97, 115, 104, 103, 97, 98, 97, 100] => lookup_1099_5(acc),
            [97, 122, 101, 114, 98, 97, 105, 106, 97, 110] => lookup_1099_6(acc),
            [98, 97, 108, 97, 115, 104, 111, 118] => lookup_1099_7(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_1099_8(acc),
            [98, 114, 121, 97, 110, 115, 107] => lookup_1099_9(acc),
            [98, 117, 107, 104, 97, 114, 97] => lookup_1099_10(acc),
            [99, 104, 105, 109, 107, 101, 110, 116] => lookup_1099_11(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_1099_12(acc),
            [101, 97, 115, 116, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1099_13(acc)
            }
            [101, 120, 110, 101, 116] => lookup_1099_14(acc),
            [103, 101, 111, 114, 103, 105, 97] => lookup_1099_15(acc),
            [103, 114, 111, 122, 110, 121] => lookup_1099_16(acc),
            [105, 118, 97, 110, 111, 118, 111] => lookup_1099_17(acc),
            [106, 97, 109, 98, 121, 108] => lookup_1099_18(acc),
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_1099_19(acc),
            [107, 97, 108, 117, 103, 97] => lookup_1099_20(acc),
            [107, 97, 114, 97, 99, 111, 108] => lookup_1099_21(acc),
            [107, 97, 114, 97, 103, 97, 110, 100, 97] => lookup_1099_22(acc),
            [107, 97, 114, 101, 108, 105, 97] => lookup_1099_23(acc),
            [107, 104, 97, 107, 97, 115, 115, 105, 97] => lookup_1099_24(acc),
            [107, 114, 97, 115, 110, 111, 100, 97, 114] => lookup_1099_25(acc),
            [107, 117, 114, 103, 97, 110] => lookup_1099_26(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_1099_27(acc),
            [108, 101, 110, 117, 103] => lookup_1099_28(acc),
            [109, 97, 110, 103, 121, 115, 104, 108, 97, 107] => lookup_1099_29(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_1099_30(acc),
            [109, 115, 107] => lookup_1099_31(acc),
            [109, 117, 114, 109, 97, 110, 115, 107] => lookup_1099_32(acc),
            [110, 97, 108, 99, 104, 105, 107] => lookup_1099_33(acc),
            [110, 97, 118, 111, 105] => lookup_1099_34(acc),
            [110, 111, 114, 116, 104, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1099_35(acc)
            }
            [110, 111, 118] => lookup_1099_36(acc),
            [111, 98, 110, 105, 110, 115, 107] => lookup_1099_37(acc),
            [112, 101, 110, 122, 97] => lookup_1099_38(acc),
            [112, 111, 107, 114, 111, 118, 115, 107] => lookup_1099_39(acc),
            [115, 111, 99, 104, 105] => lookup_1099_40(acc),
            [115, 112, 98] => lookup_1099_41(acc),
            [116, 97, 115, 104, 107, 101, 110, 116] => lookup_1099_42(acc),
            [116, 101, 114, 109, 101, 122] => lookup_1099_43(acc),
            [116, 111, 103, 108, 105, 97, 116, 116, 105] => lookup_1099_44(acc),
            [116, 114, 111, 105, 116, 115, 107] => lookup_1099_45(acc),
            [116, 115, 101, 108, 105, 110, 111, 103, 114, 97, 100] => lookup_1099_46(acc),
            [116, 117, 108, 97] => lookup_1099_47(acc),
            [116, 117, 118, 97] => lookup_1099_48(acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_1099_49(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_1099_50(acc),
            [118, 111, 108, 111, 103, 100, 97] => lookup_1099_51(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1100() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1101() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1102() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1103_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1103<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1103_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1104() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1105() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1106() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1107_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1107_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1107_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1107_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1107_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1107<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1107_0(acc),
            [101, 100, 117] => lookup_1107_1(acc),
            [103, 111, 98] => lookup_1107_2(acc),
            [111, 114, 103] => lookup_1107_3(acc),
            [114, 101, 100] => lookup_1107_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1108() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1109() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1110_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1111_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1111_0(acc),
            [101, 100, 117] => lookup_1111_1(acc),
            [103, 111, 118] => lookup_1111_2(acc),
            [109, 105, 108] => lookup_1111_3(acc),
            [110, 101, 116] => lookup_1111_4(acc),
            [111, 114, 103] => lookup_1111_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1112() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1113_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1113<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 110, 105, 103, 104, 116, 112, 111, 105, 110, 116] => lookup_1113_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1114_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1114_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1114_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1114<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1114_0(acc),
            [99, 111] => lookup_1114_1(acc),
            [111, 114, 103] => lookup_1114_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1115() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1116() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1118() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1122() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1123() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1124() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1126() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1127() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1128() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1129_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1129_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1129<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_1129_0(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1129_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1130<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 101, 118, 101, 114, 97, 112, 112, 115] => lookup_1130_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1131_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1131<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1131_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1132() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1133() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1134() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1136<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104] => lookup_1136_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1137() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1138_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1138<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1138_0(acc),
            [99, 111] => lookup_1138_1(acc),
            [103, 111] => lookup_1138_2(acc),
            [105, 110] => lookup_1138_3(acc),
            [109, 105] => lookup_1138_4(acc),
            [110, 101, 116] => lookup_1138_5(acc),
            [111, 110, 108, 105, 110, 101] => lookup_1138_6(acc),
            [111, 114] => lookup_1138_7(acc),
            [115, 104, 111, 112] => lookup_1138_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1139() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1140() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1141() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1142() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1145() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1146() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1148_0(acc),
            [98, 105, 122] => lookup_1148_1(acc),
            [99, 111] => lookup_1148_2(acc),
            [99, 111, 109] => lookup_1148_3(acc),
            [101, 100, 117] => lookup_1148_4(acc),
            [103, 111] => lookup_1148_5(acc),
            [103, 111, 118] => lookup_1148_6(acc),
            [105, 110, 116] => lookup_1148_7(acc),
            [109, 105, 108] => lookup_1148_8(acc),
            [110, 97, 109, 101] => lookup_1148_9(acc),
            [110, 101, 116] => lookup_1148_10(acc),
            [110, 105, 99] => lookup_1148_11(acc),
            [111, 114, 103] => lookup_1148_12(acc),
            [116, 101, 115, 116] => lookup_1148_13(acc),
            [119, 101, 98] => lookup_1148_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1149() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1150() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1152() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1153_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1154_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1154_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1154_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1154_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1154_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1154_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1154_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1154_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1154<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1154_0(acc),
            [99, 111, 109] => lookup_1154_1(acc),
            [101, 100, 117] => lookup_1154_2(acc),
            [103, 111, 118] => lookup_1154_3(acc),
            [109, 105, 108] => lookup_1154_4(acc),
            [110, 101, 116] => lookup_1154_5(acc),
            [110, 111, 109] => lookup_1154_6(acc),
            [111, 114, 103] => lookup_1154_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1155() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1156_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1156_0(acc),
            [101, 110, 115] => lookup_1156_1(acc),
            [102, 105, 110] => lookup_1156_2(acc),
            [103, 111, 118] => lookup_1156_3(acc),
            [105, 110, 100] => lookup_1156_4(acc),
            [105, 110, 102, 111] => lookup_1156_5(acc),
            [105, 110, 116, 108] => lookup_1156_6(acc),
            [109, 105, 110, 99, 111, 109] => lookup_1156_7(acc),
            [110, 97, 116] => lookup_1156_8(acc),
            [110, 101, 116] => lookup_1156_9(acc),
            [111, 114, 97, 110, 103, 101, 99, 108, 111, 117, 100] => lookup_1156_10(acc),
            [111, 114, 103] => lookup_1156_11(acc),
            [112, 101, 114, 115, 111] => lookup_1156_12(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_1156_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1157_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1157_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1157_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1157_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1157_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1157_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1157_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1157_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1157_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1157_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 105, 114, 101, 99, 116] => lookup_1157_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1157_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1157_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1157<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [54, 49, 49] => lookup_1157_0(acc),
            [99, 111, 109] => lookup_1157_1(acc),
            [101, 100, 117] => lookup_1157_2(acc),
            [103, 111, 118] => lookup_1157_3(acc),
            [109, 105, 108] => lookup_1157_4(acc),
            [110, 101, 116] => lookup_1157_5(acc),
            [111, 114, 103] => lookup_1157_6(acc),
            [111, 121, 97] => lookup_1157_7(acc),
            [113, 117, 105, 99, 107, 99, 111, 110, 110, 101, 99, 116] => {
                lookup_1157_8(info, labels, acc)
            }
            [118, 112, 110, 112, 108, 117, 115] => lookup_1157_9(acc),
            [120, 48] => lookup_1157_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1158_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1158<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 101, 113, 117, 97, 108, 105, 102, 121, 109, 101] => lookup_1158_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1159() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1160_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1160_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_1160_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1160_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1160<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 100, 114] => lookup_1160_0(info, labels, acc),
            [109, 121, 97, 100, 100, 114] => lookup_1160_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1161_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1161_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1161_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1161_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1161<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 116, 100, 108, 108] => lookup_1161_0(acc),
            [119, 97, 100, 108] => lookup_1161_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1162() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1163() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1164() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1169_14_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1169_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 118] => lookup_1169_0(acc),
            [98, 98, 115] => lookup_1169_1(acc),
            [98, 101, 108] => lookup_1169_2(acc),
            [98, 105, 122] => lookup_1169_3(acc),
            [99, 111, 109] => lookup_1169_4(acc),
            [100, 114] => lookup_1169_5(acc),
            [101, 100, 117] => lookup_1169_6(acc),
            [103, 101, 110] => lookup_1169_7(acc),
            [103, 111, 118] => lookup_1169_8(acc),
            [105, 110, 102, 111] => lookup_1169_9(acc),
            [107, 49, 50] => lookup_1169_10(acc),
            [107, 101, 112] => lookup_1169_11(acc),
            [109, 105, 108] => lookup_1169_12(acc),
            [110, 97, 109, 101] => lookup_1169_13(acc),
            [110, 99] => lookup_1169_14(labels, acc),
            [110, 101, 116] => lookup_1169_15(acc),
            [111, 114, 103] => lookup_1169_16(acc),
            [112, 111, 108] => lookup_1169_17(acc),
            [116, 101, 108] => lookup_1169_18(acc),
            [116, 115, 107] => lookup_1169_19(acc),
            [116, 118] => lookup_1169_20(acc),
            [119, 101, 98] => lookup_1169_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1170() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1171() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1172() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1175() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1177() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1178_0(acc),
            [99, 111] => lookup_1178_1(acc),
            [99, 111, 109] => lookup_1178_2(acc),
            [101, 100, 117] => lookup_1178_3(acc),
            [103, 111, 118] => lookup_1178_4(acc),
            [105, 110, 102, 111] => lookup_1178_5(acc),
            [109, 105, 108] => lookup_1178_6(acc),
            [110, 97, 109, 101] => lookup_1178_7(acc),
            [110, 101, 116] => lookup_1178_8(acc),
            [111, 114, 103] => lookup_1178_9(acc),
            [112, 114, 111] => lookup_1178_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1179() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1181() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1183<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116, 116, 101, 114, 45, 116, 104, 97, 110] => lookup_1183_0(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1183_1(acc),
            [102, 114, 111, 109] => lookup_1183_2(acc),
            [111, 110, 45, 116, 104, 101, 45, 119, 101, 98] => lookup_1183_3(acc),
            [115, 97, 107, 117, 114, 97] => lookup_1183_4(acc),
            [119, 111, 114, 115, 101, 45, 116, 104, 97, 110] => lookup_1183_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1184() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1185_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 109, 97, 105, 108, 101, 114] => lookup_1185_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1185_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1185_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1185<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 117, 98] => lookup_1185_0(acc),
            [99, 111, 109] => lookup_1185_1(labels, acc),
            [101, 98, 105, 122] => lookup_1185_2(acc),
            [101, 100, 117] => lookup_1185_3(acc),
            [103, 97, 109, 101] => lookup_1185_4(acc),
            [103, 111, 118] => lookup_1185_5(acc),
            [105, 100, 118] => lookup_1185_6(acc),
            [109, 105, 108] => lookup_1185_7(acc),
            [109, 121, 100, 110, 115] => lookup_1185_8(acc),
            [110, 101, 116] => lookup_1185_9(acc),
            [111, 114, 103] => lookup_1185_10(acc),
            [117, 114, 108] => lookup_1185_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1186_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1186_0(acc),
            [99, 111] => lookup_1186_1(acc),
            [103, 111] => lookup_1186_2(acc),
            [104, 111, 116, 101, 108] => lookup_1186_3(acc),
            [105, 110, 102, 111] => lookup_1186_4(acc),
            [109, 101] => lookup_1186_5(acc),
            [109, 105, 108] => lookup_1186_6(acc),
            [109, 111, 98, 105] => lookup_1186_7(acc),
            [110, 101] => lookup_1186_8(acc),
            [111, 114] => lookup_1186_9(acc),
            [115, 99] => lookup_1186_10(acc),
            [116, 118] => lookup_1186_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1187_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1187_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1187_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1187_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1187_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1187_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1187_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1187_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1187_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1187_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1187_0(acc),
            [99, 99] => lookup_1187_1(acc),
            [99, 104, 101, 114, 107, 97, 115, 115, 121] => lookup_1187_2(acc),
            [99, 104, 101, 114, 107, 97, 115, 121] => lookup_1187_3(acc),
            [99, 104, 101, 114, 110, 105, 103, 111, 118] => lookup_1187_4(acc),
            [99, 104, 101, 114, 110, 105, 104, 105, 118] => lookup_1187_5(acc),
            [99, 104, 101, 114, 110, 105, 118, 116, 115, 105] => lookup_1187_6(acc),
            [99, 104, 101, 114, 110, 111, 118, 116, 115, 121] => lookup_1187_7(acc),
            [99, 107] => lookup_1187_8(acc),
            [99, 110] => lookup_1187_9(acc),
            [99, 111] => lookup_1187_10(acc),
            [99, 111, 109] => lookup_1187_11(acc),
            [99, 114] => lookup_1187_12(acc),
            [99, 114, 105, 109, 101, 97] => lookup_1187_13(acc),
            [99, 118] => lookup_1187_14(acc),
            [99, 120] => lookup_1187_15(acc),
            [100, 110] => lookup_1187_16(acc),
            [100, 110, 101, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_1187_17(acc)
            }
            [100, 110, 105, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_1187_18(acc)
            }
            [100, 111, 110, 101, 116, 115, 107] => lookup_1187_19(acc),
            [100, 112] => lookup_1187_20(acc),
            [101, 100, 117] => lookup_1187_21(acc),
            [103, 111, 118] => lookup_1187_22(acc),
            [105, 101] => lookup_1187_23(acc),
            [105, 102] => lookup_1187_24(acc),
            [105, 110] => lookup_1187_25(acc),
            [105, 110, 102] => lookup_1187_26(acc),
            [105, 118, 97, 110, 111, 45, 102, 114, 97, 110, 107, 105, 118, 115, 107] => {
                lookup_1187_27(acc)
            }
            [107, 104] => lookup_1187_28(acc),
            [107, 104, 97, 114, 107, 105, 118] => lookup_1187_29(acc),
            [107, 104, 97, 114, 107, 111, 118] => lookup_1187_30(acc),
            [107, 104, 101, 114, 115, 111, 110] => lookup_1187_31(acc),
            [107, 104, 109, 101, 108, 110, 105, 116, 115, 107, 105, 121] => lookup_1187_32(acc),
            [107, 104, 109, 101, 108, 110, 121, 116, 115, 107, 121, 105] => lookup_1187_33(acc),
            [107, 105, 101, 118] => lookup_1187_34(acc),
            [107, 105, 114, 111, 118, 111, 103, 114, 97, 100] => lookup_1187_35(acc),
            [107, 109] => lookup_1187_36(acc),
            [107, 114] => lookup_1187_37(acc),
            [107, 114, 111, 112, 121, 118, 110, 121, 116, 115, 107, 121, 105] => {
                lookup_1187_38(acc)
            }
            [107, 114, 121, 109] => lookup_1187_39(acc),
            [107, 115] => lookup_1187_40(acc),
            [107, 118] => lookup_1187_41(acc),
            [107, 121, 105, 118] => lookup_1187_42(acc),
            [108, 103] => lookup_1187_43(acc),
            [108, 116] => lookup_1187_44(acc),
            [108, 116, 100] => lookup_1187_45(acc),
            [108, 117, 103, 97, 110, 115, 107] => lookup_1187_46(acc),
            [108, 117, 104, 97, 110, 115, 107] => lookup_1187_47(acc),
            [108, 117, 116, 115, 107] => lookup_1187_48(acc),
            [108, 118] => lookup_1187_49(acc),
            [108, 118, 105, 118] => lookup_1187_50(acc),
            [109, 107] => lookup_1187_51(acc),
            [109, 121, 107, 111, 108, 97, 105, 118] => lookup_1187_52(acc),
            [110, 101, 116] => lookup_1187_53(acc),
            [110, 105, 107, 111, 108, 97, 101, 118] => lookup_1187_54(acc),
            [111, 100] => lookup_1187_55(acc),
            [111, 100, 101, 115, 97] => lookup_1187_56(acc),
            [111, 100, 101, 115, 115, 97] => lookup_1187_57(acc),
            [111, 114, 103] => lookup_1187_58(acc),
            [112, 108] => lookup_1187_59(acc),
            [112, 111, 108, 116, 97, 118, 97] => lookup_1187_60(acc),
            [112, 112] => lookup_1187_61(acc),
            [114, 105, 118, 110, 101] => lookup_1187_62(acc),
            [114, 111, 118, 110, 111] => lookup_1187_63(acc),
            [114, 118] => lookup_1187_64(acc),
            [115, 98] => lookup_1187_65(acc),
            [115, 101, 98, 97, 115, 116, 111, 112, 111, 108] => lookup_1187_66(acc),
            [115, 101, 118, 97, 115, 116, 111, 112, 111, 108] => lookup_1187_67(acc),
            [115, 109] => lookup_1187_68(acc),
            [115, 117, 109, 121] => lookup_1187_69(acc),
            [116, 101] => lookup_1187_70(acc),
            [116, 101, 114, 110, 111, 112, 105, 108] => lookup_1187_71(acc),
            [117, 122] => lookup_1187_72(acc),
            [117, 122, 104, 103, 111, 114, 111, 100] => lookup_1187_73(acc),
            [117, 122, 104, 104, 111, 114, 111, 100] => lookup_1187_74(acc),
            [118] => lookup_1187_75(acc),
            [118, 105, 110, 110, 105, 99, 97] => lookup_1187_76(acc),
            [118, 105, 110, 110, 121, 116, 115, 105, 97] => lookup_1187_77(acc),
            [118, 110] => lookup_1187_78(acc),
            [118, 111, 108, 121, 110] => lookup_1187_79(acc),
            [121, 97, 108, 116, 97] => lookup_1187_80(acc),
            [122, 97, 107, 97, 114, 112, 97, 116, 116, 105, 97] => lookup_1187_81(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 101] => lookup_1187_82(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 105, 97] => lookup_1187_83(acc),
            [122, 104, 105, 116, 111, 109, 105, 114] => lookup_1187_84(acc),
            [122, 104, 121, 116, 111, 109, 121, 114] => lookup_1187_85(acc),
            [122, 112] => lookup_1187_86(acc),
            [122, 116] => lookup_1187_87(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1188() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1189() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1190_0(acc),
            [99, 111] => lookup_1190_1(acc),
            [99, 111, 109] => lookup_1190_2(acc),
            [103, 111] => lookup_1190_3(acc),
            [110, 101] => lookup_1190_4(acc),
            [111, 114] => lookup_1190_5(acc),
            [111, 114, 103] => lookup_1190_6(acc),
            [115, 99] => lookup_1190_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1191_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_2_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_2_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_2_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 104] => lookup_1191_2_3_0(acc),
            [118, 109] => lookup_1191_2_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1191_2_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_2_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_1191_2_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1191_2_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_2_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_2_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_2_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_2_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1191_2_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1191_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 105, 109, 111] => lookup_1191_2_0(acc),
            [98, 97, 114, 115, 121] => lookup_1191_2_1(acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_1191_2_2(acc),
            [98, 121, 116, 101, 109, 97, 114, 107] => lookup_1191_2_3(info, labels, acc),
            [108, 97, 121, 101, 114, 115, 104, 105, 102, 116] => lookup_1191_2_4(info, labels, acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_1191_2_5(acc),
            [110, 104, 45, 115, 101, 114, 118] => lookup_1191_2_6(acc),
            [110, 111, 45, 105, 112] => lookup_1191_2_7(acc),
            [114, 101, 116, 114, 111, 115, 110, 117, 98] => lookup_1191_2_8(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1191_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112, 105] => lookup_1191_5_0(acc),
            [99, 97, 109, 112, 97, 105, 103, 110] => lookup_1191_5_1(acc),
            [115, 101, 114, 118, 105, 99, 101] => lookup_1191_5_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1191_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_17_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1191_17_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1191_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_18_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_18_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_18_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_18_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_18_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_18<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 102, 102, 105, 110, 105, 116, 121, 108, 111, 116, 116, 101, 114, 121] => {
                lookup_1191_18_0(acc)
            }
            [103, 108, 117, 103] => lookup_1191_18_1(acc),
            [108, 117, 103] => lookup_1191_18_2(acc),
            [108, 117, 103, 115] => lookup_1191_18_3(acc),
            [114, 97, 102, 102, 108, 101, 101, 110, 116, 114, 121] => lookup_1191_18_4(acc),
            [119, 101, 101, 107, 108, 121, 108, 111, 116, 116, 101, 114, 121] => {
                lookup_1191_18_5(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1191_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1191_24_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_24<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1191_24_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1191<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1191_0(acc),
            [98, 97, 114, 115, 121] => lookup_1191_1(acc),
            [99, 111] => lookup_1191_2(labels, acc),
            [99, 111, 110, 110] => lookup_1191_3(acc),
            [99, 111, 112, 114, 111] => lookup_1191_4(acc),
            [103, 111, 118] => lookup_1191_5(labels, acc),
            [104, 111, 115, 112] => lookup_1191_6(acc),
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 99, 111, 109, 109, 105, 115, 115, 105, 111, 110] => {
                lookup_1191_7(acc)
            }
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 105, 110, 113, 117, 101, 115, 116] => {
                lookup_1191_8(acc)
            }
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 105, 110, 113, 117, 105, 114, 121] => {
                lookup_1191_9(acc)
            }
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 112, 97, 110, 101, 108] => {
                lookup_1191_10(acc)
            }
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 114, 101, 118, 105, 101, 119] => {
                lookup_1191_11(acc)
            }
            [108, 116, 100] => lookup_1191_12(acc),
            [109, 101] => lookup_1191_13(acc),
            [110, 101, 116] => lookup_1191_14(acc),
            [110, 104, 115] => lookup_1191_15(acc),
            [110, 105, 109, 115, 105, 116, 101] => lookup_1191_16(acc),
            [111, 114, 97, 99, 108, 101, 103, 111, 118, 99, 108, 111, 117, 100, 97, 112, 112, 115] => {
                lookup_1191_17(info, labels, acc)
            }
            [111, 114, 103] => lookup_1191_18(labels, acc),
            [112, 108, 99] => lookup_1191_19(acc),
            [112, 111, 108, 105, 99, 101] => lookup_1191_20(acc),
            [112, 117, 98, 108, 105, 99, 45, 105, 110, 113, 117, 105, 114, 121] => {
                lookup_1191_21(acc)
            }
            [112, 121, 109, 110, 116] => lookup_1191_22(acc),
            [114, 111, 121, 97, 108, 45, 99, 111, 109, 109, 105, 115, 115, 105, 111, 110] => {
                lookup_1191_23(acc)
            }
            [115, 99, 104] => lookup_1191_24(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1192() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1194() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_0_0(acc),
            [107, 49, 50] => lookup_1197_0_1(acc),
            [108, 105, 98] => lookup_1197_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_1_0(acc),
            [107, 49, 50] => lookup_1197_1_1(acc),
            [108, 105, 98] => lookup_1197_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_2_0(acc),
            [107, 49, 50] => lookup_1197_2_1(acc),
            [108, 105, 98] => lookup_1197_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_3_0(acc),
            [107, 49, 50] => lookup_1197_3_1(acc),
            [108, 105, 98] => lookup_1197_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_4_0(acc),
            [107, 49, 50] => lookup_1197_4_1(acc),
            [108, 105, 98] => lookup_1197_4_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_5_0(acc),
            [107, 49, 50] => lookup_1197_5_1(acc),
            [108, 105, 98] => lookup_1197_5_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_7_0(acc),
            [107, 49, 50] => lookup_1197_7_1(acc),
            [108, 105, 98] => lookup_1197_7_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_8_0(acc),
            [107, 49, 50] => lookup_1197_8_1(acc),
            [108, 105, 98] => lookup_1197_8_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_9_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_9_0(acc),
            [107, 49, 50] => lookup_1197_9_1(acc),
            [108, 105, 98] => lookup_1197_9_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_10_0(acc),
            [108, 105, 98] => lookup_1197_10_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 104, 120] => lookup_1197_12_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_13_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_13_0(acc),
            [107, 49, 50] => lookup_1197_13_1(acc),
            [108, 105, 98] => lookup_1197_13_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_15_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_15<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_15_0(acc),
            [107, 49, 50] => lookup_1197_15_1(acc),
            [108, 105, 98] => lookup_1197_15_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_17_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_17_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_17_0(acc),
            [107, 49, 50] => lookup_1197_17_1(acc),
            [108, 105, 98] => lookup_1197_17_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_19<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_19_0(acc),
            [108, 105, 98] => lookup_1197_19_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_20_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_20_0(acc),
            [107, 49, 50] => lookup_1197_20_1(acc),
            [108, 105, 98] => lookup_1197_20_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_21_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_21<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_21_0(acc),
            [107, 49, 50] => lookup_1197_21_1(acc),
            [108, 105, 98] => lookup_1197_21_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_22_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_22<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_22_0(acc),
            [107, 49, 50] => lookup_1197_22_1(acc),
            [108, 105, 98] => lookup_1197_22_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_23_0(acc),
            [107, 49, 50] => lookup_1197_23_1(acc),
            [108, 105, 98] => lookup_1197_23_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_26_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_26_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_26_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_26<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_26_0(acc),
            [107, 49, 50] => lookup_1197_26_1(acc),
            [108, 105, 98] => lookup_1197_26_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_27_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_27_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_27<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_27_0(acc),
            [107, 49, 50] => lookup_1197_27_1(acc),
            [108, 105, 98] => lookup_1197_27_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_28_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_28_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_28<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_28_0(acc),
            [107, 49, 50] => lookup_1197_28_1(acc),
            [108, 105, 98] => lookup_1197_28_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_30_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_30_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_30_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_30_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 116, 114] => lookup_1197_30_1_0(acc),
            [112, 97, 114, 111, 99, 104] => lookup_1197_30_1_1(acc),
            [112, 118, 116] => lookup_1197_30_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_30_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_30_0(acc),
            [107, 49, 50] => lookup_1197_30_1(labels, acc),
            [108, 105, 98] => lookup_1197_30_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_31_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_31_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_31_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_31<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_31_0(acc),
            [107, 49, 50] => lookup_1197_31_1(acc),
            [108, 105, 98] => lookup_1197_31_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_32_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_32_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_32<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_32_0(acc),
            [107, 49, 50] => lookup_1197_32_1(acc),
            [108, 105, 98] => lookup_1197_32_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_33_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_33_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_33_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_33_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_33_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_33_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_33_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_33_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_33_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_33_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_33_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_33<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 110, 45, 97, 114, 98, 111, 114] => lookup_1197_33_0(acc),
            [99, 99] => lookup_1197_33_1(acc),
            [99, 111, 103] => lookup_1197_33_2(acc),
            [100, 115, 116] => lookup_1197_33_3(acc),
            [101, 97, 116, 111, 110] => lookup_1197_33_4(acc),
            [103, 101, 110] => lookup_1197_33_5(acc),
            [107, 49, 50] => lookup_1197_33_6(acc),
            [108, 105, 98] => lookup_1197_33_7(acc),
            [109, 117, 115] => lookup_1197_33_8(acc),
            [116, 101, 99] => lookup_1197_33_9(acc),
            [119, 97, 115, 104, 116, 101, 110, 97, 119] => lookup_1197_33_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_35_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_35_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_35<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_35_0(acc),
            [107, 49, 50] => lookup_1197_35_1(acc),
            [108, 105, 98] => lookup_1197_35_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_36_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_36_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_36<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_36_0(acc),
            [107, 49, 50] => lookup_1197_36_1(acc),
            [108, 105, 98] => lookup_1197_36_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_37_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_37_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_37_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_37<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_37_0(acc),
            [107, 49, 50] => lookup_1197_37_1(acc),
            [108, 105, 98] => lookup_1197_37_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_38_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_38_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_38<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_38_0(acc),
            [107, 49, 50] => lookup_1197_38_1(acc),
            [108, 105, 98] => lookup_1197_38_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_39_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_39_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_39_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_39<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_39_0(acc),
            [107, 49, 50] => lookup_1197_39_1(acc),
            [108, 105, 98] => lookup_1197_39_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_40_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_40_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_40<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_40_0(acc),
            [108, 105, 98] => lookup_1197_40_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_41_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_41_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_41_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_41<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_41_0(acc),
            [107, 49, 50] => lookup_1197_41_1(acc),
            [108, 105, 98] => lookup_1197_41_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_43_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_43_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_43_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_43<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_43_0(acc),
            [107, 49, 50] => lookup_1197_43_1(acc),
            [108, 105, 98] => lookup_1197_43_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_44_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_44<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_44_0(acc),
            [107, 49, 50] => lookup_1197_44_1(acc),
            [108, 105, 98] => lookup_1197_44_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_45_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_45_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_45<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_45_0(acc),
            [107, 49, 50] => lookup_1197_45_1(acc),
            [108, 105, 98] => lookup_1197_45_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_48_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_48_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_48_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_48<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_48_0(acc),
            [107, 49, 50] => lookup_1197_48_1(acc),
            [108, 105, 98] => lookup_1197_48_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_49_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_49_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_49_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_49<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_49_0(acc),
            [107, 49, 50] => lookup_1197_49_1(acc),
            [108, 105, 98] => lookup_1197_49_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_50_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_50_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_50<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_50_0(acc),
            [107, 49, 50] => lookup_1197_50_1(acc),
            [108, 105, 98] => lookup_1197_50_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_51_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_51_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_51_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_51<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_51_0(acc),
            [107, 49, 50] => lookup_1197_51_1(acc),
            [108, 105, 98] => lookup_1197_51_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_52_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_52_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_52<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_52_0(acc),
            [107, 49, 50] => lookup_1197_52_1(acc),
            [108, 105, 98] => lookup_1197_52_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_53_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_53_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_53_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_53<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_53_0(acc),
            [107, 49, 50] => lookup_1197_53_1(acc),
            [108, 105, 98] => lookup_1197_53_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_56_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_56_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_56_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_56<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_56_0(acc),
            [107, 49, 50] => lookup_1197_56_1(acc),
            [108, 105, 98] => lookup_1197_56_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_57_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_57_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_57<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_57_0(acc),
            [108, 105, 98] => lookup_1197_57_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_58_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_58_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_58<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_58_0(acc),
            [107, 49, 50] => lookup_1197_58_1(acc),
            [108, 105, 98] => lookup_1197_58_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_59_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_59<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_59_0(acc),
            [108, 105, 98] => lookup_1197_59_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_61_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_61_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_61<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 104] => lookup_1197_61_0(acc),
            [103, 108] => lookup_1197_61_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_63<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_63_0(acc),
            [107, 49, 50] => lookup_1197_63_1(acc),
            [108, 105, 98] => lookup_1197_63_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_64_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_64_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_64<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_64_0(acc),
            [107, 49, 50] => lookup_1197_64_1(acc),
            [108, 105, 98] => lookup_1197_64_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_65_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_65_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_65<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_65_0(acc),
            [107, 49, 50] => lookup_1197_65_1(acc),
            [108, 105, 98] => lookup_1197_65_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_66_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_66_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_66_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_66<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_66_0(acc),
            [107, 49, 50] => lookup_1197_66_1(acc),
            [108, 105, 98] => lookup_1197_66_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_67<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_67_0(acc),
            [107, 49, 50] => lookup_1197_67_1(acc),
            [108, 105, 98] => lookup_1197_67_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_68_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_68_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_68_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_68<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_68_0(acc),
            [107, 49, 50] => lookup_1197_68_1(acc),
            [108, 105, 98] => lookup_1197_68_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_69_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_69_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_69_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_69<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_69_0(acc),
            [107, 49, 50] => lookup_1197_69_1(acc),
            [108, 105, 98] => lookup_1197_69_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_70_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_70_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_70<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_70_0(acc),
            [107, 49, 50] => lookup_1197_70_1(acc),
            [108, 105, 98] => lookup_1197_70_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_71_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_71<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_71_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_72_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_72_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_72_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_72<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1197_72_0(acc),
            [107, 49, 50] => lookup_1197_72_1(acc),
            [108, 105, 98] => lookup_1197_72_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107] => lookup_1197_0(labels, acc),
            [97, 108] => lookup_1197_1(labels, acc),
            [97, 114] => lookup_1197_2(labels, acc),
            [97, 115] => lookup_1197_3(labels, acc),
            [97, 122] => lookup_1197_4(labels, acc),
            [99, 97] => lookup_1197_5(labels, acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1197_6(acc),
            [99, 111] => lookup_1197_7(labels, acc),
            [99, 116] => lookup_1197_8(labels, acc),
            [100, 99] => lookup_1197_9(labels, acc),
            [100, 101] => lookup_1197_10(labels, acc),
            [100, 110, 105] => lookup_1197_11(acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_1197_12(info, labels, acc),
            [102, 108] => lookup_1197_13(labels, acc),
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_1197_14(acc),
            [103, 97] => lookup_1197_15(labels, acc),
            [103, 111, 108, 102, 102, 97, 110] => lookup_1197_16(acc),
            [103, 117] => lookup_1197_17(labels, acc),
            [104, 101, 108, 105, 111, 104, 111, 115, 116] => lookup_1197_18(acc),
            [104, 105] => lookup_1197_19(labels, acc),
            [105, 97] => lookup_1197_20(labels, acc),
            [105, 100] => lookup_1197_21(labels, acc),
            [105, 108] => lookup_1197_22(labels, acc),
            [105, 110] => lookup_1197_23(labels, acc),
            [105, 115, 45, 98, 121] => lookup_1197_24(acc),
            [105, 115, 97] => lookup_1197_25(acc),
            [107, 115] => lookup_1197_26(labels, acc),
            [107, 121] => lookup_1197_27(labels, acc),
            [108, 97] => lookup_1197_28(labels, acc),
            [108, 97, 110, 100, 45, 52, 45, 115, 97, 108, 101] => lookup_1197_29(acc),
            [109, 97] => lookup_1197_30(labels, acc),
            [109, 100] => lookup_1197_31(labels, acc),
            [109, 101] => lookup_1197_32(labels, acc),
            [109, 105] => lookup_1197_33(labels, acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_1197_34(acc),
            [109, 110] => lookup_1197_35(labels, acc),
            [109, 111] => lookup_1197_36(labels, acc),
            [109, 115] => lookup_1197_37(labels, acc),
            [109, 116] => lookup_1197_38(labels, acc),
            [110, 99] => lookup_1197_39(labels, acc),
            [110, 100] => lookup_1197_40(labels, acc),
            [110, 101] => lookup_1197_41(labels, acc),
            [110, 103, 111] => lookup_1197_42(acc),
            [110, 104] => lookup_1197_43(labels, acc),
            [110, 106] => lookup_1197_44(labels, acc),
            [110, 109] => lookup_1197_45(labels, acc),
            [110, 111, 105, 112] => lookup_1197_46(acc),
            [110, 115, 110] => lookup_1197_47(acc),
            [110, 118] => lookup_1197_48(labels, acc),
            [110, 121] => lookup_1197_49(labels, acc),
            [111, 104] => lookup_1197_50(labels, acc),
            [111, 107] => lookup_1197_51(labels, acc),
            [111, 114] => lookup_1197_52(labels, acc),
            [112, 97] => lookup_1197_53(labels, acc),
            [112, 108, 97, 116, 116, 101, 114, 112] => lookup_1197_54(acc),
            [112, 111, 105, 110, 116, 116, 111] => lookup_1197_55(acc),
            [112, 114] => lookup_1197_56(labels, acc),
            [114, 105] => lookup_1197_57(labels, acc),
            [115, 99] => lookup_1197_58(labels, acc),
            [115, 100] => lookup_1197_59(labels, acc),
            [115, 101, 114, 118, 101, 114, 110, 97, 109, 101] => lookup_1197_60(acc),
            [115, 114, 118] => lookup_1197_61(labels, acc),
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_1197_62(acc),
            [116, 110] => lookup_1197_63(labels, acc),
            [116, 120] => lookup_1197_64(labels, acc),
            [117, 116] => lookup_1197_65(labels, acc),
            [118, 97] => lookup_1197_66(labels, acc),
            [118, 105] => lookup_1197_67(labels, acc),
            [118, 116] => lookup_1197_68(labels, acc),
            [119, 97] => lookup_1197_69(labels, acc),
            [119, 105] => lookup_1197_70(labels, acc),
            [119, 118] => lookup_1197_71(labels, acc),
            [119, 121] => lookup_1197_72(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1198_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1198_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1198_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1198_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1198_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1198_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1198<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1198_0(acc),
            [101, 100, 117] => lookup_1198_1(acc),
            [103, 117, 98] => lookup_1198_2(acc),
            [109, 105, 108] => lookup_1198_3(acc),
            [110, 101, 116] => lookup_1198_4(acc),
            [111, 114, 103] => lookup_1198_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1199_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1199_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1199_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1199_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1199<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1199_0(acc),
            [99, 111, 109] => lookup_1199_1(acc),
            [110, 101, 116] => lookup_1199_2(acc),
            [111, 114, 103] => lookup_1199_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1200() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1201() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1203() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1204_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1204_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1204_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1204_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100] => lookup_1204_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1204_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1204_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48, 101] => lookup_1204_0(info, labels, acc),
            [99, 111, 109] => lookup_1204_1(acc),
            [101, 100, 117] => lookup_1204_2(acc),
            [103, 111, 118] => lookup_1204_3(acc),
            [103, 118] => lookup_1204_4(labels, acc),
            [109, 105, 108] => lookup_1204_5(acc),
            [109, 121, 100, 110, 115] => lookup_1204_6(acc),
            [110, 101, 116] => lookup_1204_7(acc),
            [111, 114, 103] => lookup_1204_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1205_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_1205_0(acc),
            [98, 105, 98] => lookup_1205_1(acc),
            [99, 111] => lookup_1205_2(acc),
            [99, 111, 109] => lookup_1205_3(acc),
            [101, 49, 50] => lookup_1205_4(acc),
            [101, 100, 117] => lookup_1205_5(acc),
            [102, 105, 114, 109] => lookup_1205_6(acc),
            [103, 111, 98] => lookup_1205_7(acc),
            [103, 111, 118] => lookup_1205_8(acc),
            [105, 110, 102, 111] => lookup_1205_9(acc),
            [105, 110, 116] => lookup_1205_10(acc),
            [109, 105, 108] => lookup_1205_11(acc),
            [110, 101, 116] => lookup_1205_12(acc),
            [110, 111, 109] => lookup_1205_13(acc),
            [111, 114, 103] => lookup_1205_14(acc),
            [114, 97, 114] => lookup_1205_15(acc),
            [114, 101, 99] => lookup_1205_16(acc),
            [115, 116, 111, 114, 101] => lookup_1205_17(acc),
            [116, 101, 99] => lookup_1205_18(acc),
            [119, 101, 98] => lookup_1205_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1206() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1208() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1209() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1211() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1212() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1213() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1214_0(acc),
            [99, 111, 109] => lookup_1214_1(acc),
            [107, 49, 50] => lookup_1214_2(acc),
            [110, 101, 116] => lookup_1214_3(acc),
            [111, 114, 103] => lookup_1214_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1215() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1217() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1218() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1220() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1221() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1222() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1227() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1228_0(acc),
            [97, 105] => lookup_1228_1(acc),
            [97, 110, 103, 105, 97, 110, 103] => lookup_1228_2(acc),
            [98, 97, 99, 103, 105, 97, 110, 103] => lookup_1228_3(acc),
            [98, 97, 99, 107, 97, 110] => lookup_1228_4(acc),
            [98, 97, 99, 108, 105, 101, 117] => lookup_1228_5(acc),
            [98, 97, 99, 110, 105, 110, 104] => lookup_1228_6(acc),
            [98, 97, 114, 105, 97, 45, 118, 117, 110, 103, 116, 97, 117] => lookup_1228_7(acc),
            [98, 101, 110, 116, 114, 101] => lookup_1228_8(acc),
            [98, 105, 110, 104, 100, 105, 110, 104] => lookup_1228_9(acc),
            [98, 105, 110, 104, 100, 117, 111, 110, 103] => lookup_1228_10(acc),
            [98, 105, 110, 104, 112, 104, 117, 111, 99] => lookup_1228_11(acc),
            [98, 105, 110, 104, 116, 104, 117, 97, 110] => lookup_1228_12(acc),
            [98, 105, 122] => lookup_1228_13(acc),
            [99, 97, 109, 97, 117] => lookup_1228_14(acc),
            [99, 97, 110, 116, 104, 111] => lookup_1228_15(acc),
            [99, 97, 111, 98, 97, 110, 103] => lookup_1228_16(acc),
            [99, 111, 109] => lookup_1228_17(acc),
            [100, 97, 107, 108, 97, 107] => lookup_1228_18(acc),
            [100, 97, 107, 110, 111, 110, 103] => lookup_1228_19(acc),
            [100, 97, 110, 97, 110, 103] => lookup_1228_20(acc),
            [100, 105, 101, 110, 98, 105, 101, 110] => lookup_1228_21(acc),
            [100, 111, 110, 103, 110, 97, 105] => lookup_1228_22(acc),
            [100, 111, 110, 103, 116, 104, 97, 112] => lookup_1228_23(acc),
            [101, 100, 117] => lookup_1228_24(acc),
            [103, 105, 97, 108, 97, 105] => lookup_1228_25(acc),
            [103, 111, 118] => lookup_1228_26(acc),
            [104, 97, 103, 105, 97, 110, 103] => lookup_1228_27(acc),
            [104, 97, 105, 100, 117, 111, 110, 103] => lookup_1228_28(acc),
            [104, 97, 105, 112, 104, 111, 110, 103] => lookup_1228_29(acc),
            [104, 97, 110, 97, 109] => lookup_1228_30(acc),
            [104, 97, 110, 111, 105] => lookup_1228_31(acc),
            [104, 97, 116, 105, 110, 104] => lookup_1228_32(acc),
            [104, 97, 117, 103, 105, 97, 110, 103] => lookup_1228_33(acc),
            [104, 101, 97, 108, 116, 104] => lookup_1228_34(acc),
            [104, 111, 97, 98, 105, 110, 104] => lookup_1228_35(acc),
            [104, 117, 110, 103, 121, 101, 110] => lookup_1228_36(acc),
            [105, 100] => lookup_1228_37(acc),
            [105, 110, 102, 111] => lookup_1228_38(acc),
            [105, 110, 116] => lookup_1228_39(acc),
            [105, 111] => lookup_1228_40(acc),
            [107, 104, 97, 110, 104, 104, 111, 97] => lookup_1228_41(acc),
            [107, 105, 101, 110, 103, 105, 97, 110, 103] => lookup_1228_42(acc),
            [107, 111, 110, 116, 117, 109] => lookup_1228_43(acc),
            [108, 97, 105, 99, 104, 97, 117] => lookup_1228_44(acc),
            [108, 97, 109, 100, 111, 110, 103] => lookup_1228_45(acc),
            [108, 97, 110, 103, 115, 111, 110] => lookup_1228_46(acc),
            [108, 97, 111, 99, 97, 105] => lookup_1228_47(acc),
            [108, 111, 110, 103, 97, 110] => lookup_1228_48(acc),
            [110, 97, 109, 100, 105, 110, 104] => lookup_1228_49(acc),
            [110, 97, 109, 101] => lookup_1228_50(acc),
            [110, 101, 116] => lookup_1228_51(acc),
            [110, 103, 104, 101, 97, 110] => lookup_1228_52(acc),
            [110, 105, 110, 104, 98, 105, 110, 104] => lookup_1228_53(acc),
            [110, 105, 110, 104, 116, 104, 117, 97, 110] => lookup_1228_54(acc),
            [111, 114, 103] => lookup_1228_55(acc),
            [112, 104, 117, 116, 104, 111] => lookup_1228_56(acc),
            [112, 104, 117, 121, 101, 110] => lookup_1228_57(acc),
            [112, 114, 111] => lookup_1228_58(acc),
            [113, 117, 97, 110, 103, 98, 105, 110, 104] => lookup_1228_59(acc),
            [113, 117, 97, 110, 103, 110, 97, 109] => lookup_1228_60(acc),
            [113, 117, 97, 110, 103, 110, 103, 97, 105] => lookup_1228_61(acc),
            [113, 117, 97, 110, 103, 110, 105, 110, 104] => lookup_1228_62(acc),
            [113, 117, 97, 110, 103, 116, 114, 105] => lookup_1228_63(acc),
            [115, 111, 99, 116, 114, 97, 110, 103] => lookup_1228_64(acc),
            [115, 111, 110, 108, 97] => lookup_1228_65(acc),
            [116, 97, 121, 110, 105, 110, 104] => lookup_1228_66(acc),
            [116, 104, 97, 105, 98, 105, 110, 104] => lookup_1228_67(acc),
            [116, 104, 97, 105, 110, 103, 117, 121, 101, 110] => lookup_1228_68(acc),
            [116, 104, 97, 110, 104, 104, 111, 97] => lookup_1228_69(acc),
            [116, 104, 97, 110, 104, 112, 104, 111, 104, 111, 99, 104, 105, 109, 105, 110, 104] => {
                lookup_1228_70(acc)
            }
            [116, 104, 117, 97, 116, 104, 105, 101, 110, 104, 117, 101] => lookup_1228_71(acc),
            [116, 105, 101, 110, 103, 105, 97, 110, 103] => lookup_1228_72(acc),
            [116, 114, 97, 118, 105, 110, 104] => lookup_1228_73(acc),
            [116, 117, 121, 101, 110, 113, 117, 97, 110, 103] => lookup_1228_74(acc),
            [118, 105, 110, 104, 108, 111, 110, 103] => lookup_1228_75(acc),
            [118, 105, 110, 104, 112, 104, 117, 99] => lookup_1228_76(acc),
            [121, 101, 110, 98, 97, 105] => lookup_1228_77(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1229() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1230() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1231() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1232() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1235_0(acc),
            [101, 100, 117] => lookup_1235_1(acc),
            [110, 101, 116] => lookup_1235_2(acc),
            [111, 114, 103] => lookup_1235_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1236() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1238() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1239() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1244() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1245() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1246() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1247_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1247<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 109, 101, 114] => lookup_1247_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1248() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1251() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1252_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1252_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1252<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1252_0(acc),
            [115, 99, 104] => lookup_1252_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1253() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1254() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1255_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1255<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 109, 101, 114] => lookup_1255_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1256() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1258() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1259() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1260() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1261() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1262() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1263() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1267() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1268_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1268_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1268_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1268_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1268_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1268_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1268_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1268_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1268_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1268_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1268_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1268<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 118, 105, 115, 111, 114] => lookup_1268_0(info, labels, acc),
            [99, 108, 111, 117, 100, 54, 54] => lookup_1268_1(acc),
            [99, 111, 109] => lookup_1268_2(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1268_3(acc),
            [101, 100, 117] => lookup_1268_4(acc),
            [103, 111, 118] => lookup_1268_5(acc),
            [109, 121, 112, 101, 116, 115] => lookup_1268_6(acc),
            [110, 101, 116] => lookup_1268_7(acc),
            [111, 114, 103] => lookup_1268_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1269() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1272() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1273() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1274() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1275() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1276() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1277() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1278() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1279() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1280() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1282() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1283() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1284() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1287() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1288() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1289_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1289_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1289_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1289_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1289<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 12usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 52, 100, 98, 103, 100, 116, 121, 54, 99] => lookup_1289_0(acc),
            [120, 110, 45, 45, 53, 100, 98, 104, 108, 56, 100] => lookup_1289_1(acc),
            [120, 110, 45, 45, 56, 100, 98, 113, 50, 97] => lookup_1289_2(acc),
            [120, 110, 45, 45, 104, 101, 98, 100, 97, 56, 98] => lookup_1289_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1290() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1291() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1294() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1295() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1297() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1298() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1299() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1300() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1302() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1303() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 56, 48, 97, 117] => lookup_1304_0(acc),
            [120, 110, 45, 45, 57, 48, 97, 122, 104] => lookup_1304_1(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1304_2(acc),
            [120, 110, 45, 45, 100, 49, 97, 116] => lookup_1304_3(acc),
            [120, 110, 45, 45, 111, 49, 97, 99] => lookup_1304_4(acc),
            [120, 110, 45, 45, 111, 49, 97, 99, 104] => lookup_1304_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1305() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1307() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1308() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1312() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1313() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1315() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1317() -> Info {
    Info {
        len: 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1318() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1320() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1321() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1322() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1324() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1325() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1326() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1327() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1328() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1329() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1330() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1331() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1332() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1333() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1334() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1336() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1337() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1338() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1339() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1340() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1341() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1342() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1343() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1344() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1346() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1347() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1350_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1350_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1350_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1350_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1350_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1350_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1350<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1350_0(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_1350_1(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_1350_2(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_1350_3(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_1350_4(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_1350_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1351() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1353() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1354() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1355() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1356() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1357() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1358() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1359() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1360() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1362() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1363() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1365() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1368() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1369() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1370() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1371() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1372() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1373() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1374() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1375() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1377() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1379() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1380() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1382() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1384() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1385() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1386() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1387() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1389() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1390() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1391() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1392() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1393() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1394() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1395() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1396() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1398() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1399_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1399_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1399_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1399_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1399_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1399_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1399<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 49, 50, 99, 49, 102, 101, 48, 98, 114] => lookup_1399_0(acc),
            [120, 110, 45, 45, 49, 50, 99, 102, 105, 56, 105, 120, 98, 56, 108] => {
                lookup_1399_1(acc)
            }
            [120, 110, 45, 45, 49, 50, 99, 111, 48, 99, 51, 98, 52, 101, 118, 97] => {
                lookup_1399_2(acc)
            }
            [120, 110, 45, 45, 104, 51, 99, 117, 122, 107, 49, 100, 105] => lookup_1399_3(acc),
            [120, 110, 45, 45, 109, 51, 99, 104, 48, 106, 51, 97] => lookup_1399_4(acc),
            [120, 110, 45, 45, 111, 51, 99, 121, 120, 50, 97] => lookup_1399_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1400() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1401() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1402_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1402_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1402_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1402_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1402_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1402_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1402_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1402_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1402_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1402_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1402<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 52, 49, 97] => lookup_1402_0(acc),
            [120, 110, 45, 45, 56, 48, 97, 97, 97, 48, 99, 118, 97, 99] => lookup_1402_1(acc),
            [120, 110, 45, 45, 57, 48, 97, 49, 97, 102] => lookup_1402_2(acc),
            [120, 110, 45, 45, 57, 48, 97, 109, 99] => lookup_1402_3(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1402_4(acc),
            [120, 110, 45, 45, 104, 49, 97, 104, 110] => lookup_1402_5(acc),
            [120, 110, 45, 45, 104, 49, 97, 108, 105, 122] => lookup_1402_6(acc),
            [120, 110, 45, 45, 106, 49, 97, 100, 112] => lookup_1402_7(acc),
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_1402_8(acc),
            [120, 110, 45, 45, 106, 49, 97, 101, 108, 56, 98] => lookup_1402_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1403() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1404() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1409() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1410() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1411() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1412() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1413() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1414() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1415() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1416() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1417() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1418() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1419() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1420() -> Info {
    Info {
        len: 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1421() -> Info {
    Info {
        len: 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1422() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1423() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1424() -> Info {
    Info {
        len: 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1425() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1426() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1427() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1428() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1429() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1430() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1431() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1432() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1434() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1435() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1436_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1436_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1436_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1436_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1436<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 111, 116, 100, 97, 115, 104] => lookup_1436_0(acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_1436_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1437() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1438() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1439() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1440() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1441_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1441_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1441_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1441_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1441_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1441_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1441<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1441_0(acc),
            [101, 100, 117] => lookup_1441_1(acc),
            [103, 111, 118] => lookup_1441_2(acc),
            [109, 105, 108] => lookup_1441_3(acc),
            [110, 101, 116] => lookup_1441_4(acc),
            [111, 114, 103] => lookup_1441_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1442() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1443() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1444() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1445() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1447_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1447<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1447_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1448() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1449_0(acc),
            [97, 103, 114, 105, 99] => lookup_1449_1(acc),
            [97, 108, 116] => lookup_1449_2(acc),
            [99, 111] => lookup_1449_3(acc),
            [101, 100, 117] => lookup_1449_4(acc),
            [103, 111, 118] => lookup_1449_5(acc),
            [103, 114, 111, 110, 100, 97, 114] => lookup_1449_6(acc),
            [108, 97, 119] => lookup_1449_7(acc),
            [109, 105, 108] => lookup_1449_8(acc),
            [110, 101, 116] => lookup_1449_9(acc),
            [110, 103, 111] => lookup_1449_10(acc),
            [110, 105, 99] => lookup_1449_11(acc),
            [110, 105, 115] => lookup_1449_12(acc),
            [110, 111, 109] => lookup_1449_13(acc),
            [111, 114, 103] => lookup_1449_14(acc),
            [115, 99, 104, 111, 111, 108] => lookup_1449_15(acc),
            [116, 109] => lookup_1449_16(acc),
            [119, 101, 98] => lookup_1449_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1450() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1452() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1453() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1454_0(acc),
            [98, 105, 122] => lookup_1454_1(acc),
            [99, 111] => lookup_1454_2(acc),
            [99, 111, 109] => lookup_1454_3(acc),
            [101, 100, 117] => lookup_1454_4(acc),
            [103, 111, 118] => lookup_1454_5(acc),
            [105, 110, 102, 111] => lookup_1454_6(acc),
            [109, 105, 108] => lookup_1454_7(acc),
            [110, 101, 116] => lookup_1454_8(acc),
            [111, 114, 103] => lookup_1454_9(acc),
            [115, 99, 104] => lookup_1454_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1455_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1455_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1455_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1455_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1455_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1455_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1455<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 54, 54] => lookup_1455_0(acc),
            [108, 105, 109, 97] => lookup_1455_1(acc),
            [115, 116, 97, 99, 107, 105, 116] => lookup_1455_2(acc),
            [116, 114, 105, 116, 111, 110] => lookup_1455_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1456() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1457_0(acc),
            [99, 111] => lookup_1457_1(acc),
            [103, 111, 118] => lookup_1457_2(acc),
            [109, 105, 108] => lookup_1457_3(acc),
            [111, 114, 103] => lookup_1457_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1458() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1459() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1464() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1465() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1466() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1467() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1468() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1469() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1470() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1471_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1471_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1471_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1471_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1471_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1471_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1471_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1471_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1471_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1471<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [208, 177, 208, 184, 208, 183] => lookup_1471_0(acc),
            [208, 186, 208, 190, 208, 188] => lookup_1471_1(acc),
            [208, 186, 209, 128, 209, 139, 208, 188] => lookup_1471_2(acc),
            [208, 188, 208, 184, 209, 128] => lookup_1471_3(acc),
            [208, 188, 209, 129, 208, 186] => lookup_1471_4(acc),
            [208, 190, 209, 128, 208, 179] => lookup_1471_5(acc),
            [209, 129, 208, 176, 208, 188, 208, 176, 209, 128, 208, 176] => lookup_1471_6(acc),
            [209, 129, 208, 190, 209, 135, 208, 184] => lookup_1471_7(acc),
            [209, 129, 208, 191, 208, 177] => lookup_1471_8(acc),
            [209, 143] => lookup_1471_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1472() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1473() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1474_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1474_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1474_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1474_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1474_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1474_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1474<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [208, 176, 208, 186] => lookup_1474_0(acc),
            [208, 190, 208, 177, 209, 128] => lookup_1474_1(acc),
            [208, 190, 208, 180] => lookup_1474_2(acc),
            [208, 190, 209, 128, 208, 179] => lookup_1474_3(acc),
            [208, 191, 209, 128] => lookup_1474_4(acc),
            [209, 131, 208, 191, 209, 128] => lookup_1474_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1475() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1476() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1477() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1478_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1478_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1478_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1478_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1478<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [215, 144, 215, 167, 215, 147, 215, 158, 215, 153, 215, 148] => lookup_1478_0(acc),
            [215, 153, 215, 169, 215, 149, 215, 145] => lookup_1478_1(acc),
            [215, 158, 215, 158, 215, 169, 215, 156] => lookup_1478_2(acc),
            [215, 166, 215, 148, 215, 156] => lookup_1478_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1479() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1482() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1483() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1484() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1485() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1487() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1488() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1491() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1492() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1493() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1494() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1496() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1497() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1498() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1499() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1500() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1503() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1506() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1508() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1509() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1510() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1511() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1512() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1513() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1514() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1517() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1518() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1519() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1520() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1521() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1522() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1523() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1524() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1525() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1526() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1527() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1529() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1530() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531() -> Info {
    Info {
        len: 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1532() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533() -> Info {
    Info {
        len: 33usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1534() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1535() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1536() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1537() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1538() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1539_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1539_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1539_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1539_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1539_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1539_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1539<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [224, 184, 151, 224, 184, 171, 224, 184, 178, 224, 184, 163] => lookup_1539_0(acc),
            [224, 184, 152, 224, 184, 184, 224, 184, 163, 224, 184, 129, 224, 184, 180, 224, 184, 136] => {
                lookup_1539_1(acc)
            }
            [224, 184, 163, 224, 184, 177, 224, 184, 144, 224, 184, 154, 224, 184, 178, 224, 184, 165] => {
                lookup_1539_2(acc)
            }
            [224, 184, 168, 224, 184, 182, 224, 184, 129, 224, 184, 169, 224, 184, 178] => {
                lookup_1539_3(acc)
            }
            [224, 184, 173, 224, 184, 135, 224, 184, 132, 224, 185, 140, 224, 184, 129, 224, 184, 163] => {
                lookup_1539_4(acc)
            }
            [224, 185, 128, 224, 184, 153, 224, 185, 135, 224, 184, 149] => lookup_1539_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1540() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1541() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1543() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1544() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1545() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1546() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1548() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1549() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1551() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1552() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1553() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1554() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1556() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1557() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1558() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1560() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1561() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1562() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1563() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1564() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1565() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1567() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1569() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1570() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1573() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1574() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1575() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1576() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1577() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1578() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1581() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1583() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1584() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1585() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1586() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1587() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1588() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1589() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1590() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1591() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1592() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1593() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1594() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1595() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1596() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1597() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1598() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1599() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1600() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1603() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1604() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1605() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1606() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1607() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1608() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1610() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1611_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1611_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1611_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1611_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1611_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1611_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1611<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [229, 128, 139, 228, 186, 186] => lookup_1611_0(acc),
            [229, 133, 172, 229, 143, 184] => lookup_1611_1(acc),
            [230, 148, 191, 229, 186, 156] => lookup_1611_2(acc),
            [230, 149, 153, 232, 130, 178] => lookup_1611_3(acc),
            [231, 181, 132, 231, 185, 148] => lookup_1611_4(acc),
            [231, 182, 178, 231, 181, 161] => lookup_1611_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1612() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1613() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1614() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1615() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
