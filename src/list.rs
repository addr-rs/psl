//! This file is automatically @generated by cargo-make.
//! It is not intended for manual editing.

#![allow(clippy::all)] // TODO lint this code?

use crate::{Info, Type};
#[inline]
pub(super) fn lookup<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let mut info = Info { len: 0, typ: None };
    match labels.next() {
        Some(label) => match label {
            [97, 97, 97] => lookup_0(),
            [97, 97, 114, 112] => lookup_1(),
            [97, 98, 97, 114, 116, 104] => lookup_2(),
            [97, 98, 98] => lookup_3(),
            [97, 98, 98, 111, 116, 116] => lookup_4(),
            [97, 98, 98, 118, 105, 101] => lookup_5(),
            [97, 98, 99] => lookup_6(),
            [97, 98, 108, 101] => lookup_7(),
            [97, 98, 111, 103, 97, 100, 111] => lookup_8(),
            [97, 98, 117, 100, 104, 97, 98, 105] => lookup_9(),
            [97, 99] => lookup_10(labels),
            [97, 99, 97, 100, 101, 109, 121] => lookup_11(labels),
            [97, 99, 99, 101, 110, 116, 117, 114, 101] => lookup_12(),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => lookup_13(),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116, 115] => lookup_14(),
            [97, 99, 111] => lookup_15(),
            [97, 99, 116, 111, 114] => lookup_16(),
            [97, 100] => lookup_17(labels),
            [97, 100, 97, 99] => lookup_18(),
            [97, 100, 115] => lookup_19(),
            [97, 100, 117, 108, 116] => lookup_20(),
            [97, 101] => lookup_21(labels),
            [97, 101, 103] => lookup_22(),
            [97, 101, 114, 111] => lookup_23(labels),
            [97, 101, 116, 110, 97] => lookup_24(),
            [97, 102] => lookup_25(labels),
            [97, 102, 108] => lookup_26(),
            [97, 102, 114, 105, 99, 97] => lookup_27(),
            [97, 103] => lookup_28(labels),
            [97, 103, 97, 107, 104, 97, 110] => lookup_29(),
            [97, 103, 101, 110, 99, 121] => lookup_30(),
            [97, 105] => lookup_31(labels),
            [97, 105, 103] => lookup_32(),
            [97, 105, 114, 98, 117, 115] => lookup_33(),
            [97, 105, 114, 102, 111, 114, 99, 101] => lookup_34(),
            [97, 105, 114, 116, 101, 108] => lookup_35(),
            [97, 107, 100, 110] => lookup_36(),
            [97, 108] => lookup_37(labels),
            [97, 108, 102, 97, 114, 111, 109, 101, 111] => lookup_38(),
            [97, 108, 105, 98, 97, 98, 97] => lookup_39(),
            [97, 108, 105, 112, 97, 121] => lookup_40(),
            [97, 108, 108, 102, 105, 110, 97, 110, 122] => lookup_41(),
            [97, 108, 108, 115, 116, 97, 116, 101] => lookup_42(),
            [97, 108, 108, 121] => lookup_43(),
            [97, 108, 115, 97, 99, 101] => lookup_44(),
            [97, 108, 115, 116, 111, 109] => lookup_45(),
            [97, 109] => lookup_46(labels),
            [97, 109, 97, 122, 111, 110] => lookup_47(),
            [97, 109, 101, 114, 105, 99, 97, 110, 101, 120, 112, 114, 101, 115, 115] => lookup_48(),
            [97, 109, 101, 114, 105, 99, 97, 110, 102, 97, 109, 105, 108, 121] => lookup_49(),
            [97, 109, 101, 120] => lookup_50(),
            [97, 109, 102, 97, 109] => lookup_51(),
            [97, 109, 105, 99, 97] => lookup_52(),
            [97, 109, 115, 116, 101, 114, 100, 97, 109] => lookup_53(),
            [97, 110, 97, 108, 121, 116, 105, 99, 115] => lookup_54(),
            [97, 110, 100, 114, 111, 105, 100] => lookup_55(),
            [97, 110, 113, 117, 97, 110] => lookup_56(),
            [97, 110, 122] => lookup_57(),
            [97, 111] => lookup_58(labels),
            [97, 111, 108] => lookup_59(),
            [97, 112, 97, 114, 116, 109, 101, 110, 116, 115] => lookup_60(),
            [97, 112, 112] => lookup_61(labels),
            [97, 112, 112, 108, 101] => lookup_62(),
            [97, 113] => lookup_63(),
            [97, 113, 117, 97, 114, 101, 108, 108, 101] => lookup_64(),
            [97, 114] => lookup_65(labels),
            [97, 114, 97, 98] => lookup_66(),
            [97, 114, 97, 109, 99, 111] => lookup_67(),
            [97, 114, 99, 104, 105] => lookup_68(),
            [97, 114, 109, 121] => lookup_69(),
            [97, 114, 112, 97] => lookup_70(labels),
            [97, 114, 116] => lookup_71(),
            [97, 114, 116, 101] => lookup_72(),
            [97, 115] => lookup_73(labels),
            [97, 115, 100, 97] => lookup_74(),
            [97, 115, 105, 97] => lookup_75(labels),
            [97, 115, 115, 111, 99, 105, 97, 116, 101, 115] => lookup_76(),
            [97, 116] => lookup_77(labels),
            [97, 116, 104, 108, 101, 116, 97] => lookup_78(),
            [97, 116, 116, 111, 114, 110, 101, 121] => lookup_79(),
            [97, 117] => lookup_80(labels),
            [97, 117, 99, 116, 105, 111, 110] => lookup_81(),
            [97, 117, 100, 105] => lookup_82(),
            [97, 117, 100, 105, 98, 108, 101] => lookup_83(),
            [97, 117, 100, 105, 111] => lookup_84(),
            [97, 117, 115, 112, 111, 115, 116] => lookup_85(),
            [97, 117, 116, 104, 111, 114] => lookup_86(),
            [97, 117, 116, 111] => lookup_87(),
            [97, 117, 116, 111, 115] => lookup_88(),
            [97, 118, 105, 97, 110, 99, 97] => lookup_89(),
            [97, 119] => lookup_90(labels),
            [97, 119, 115] => lookup_91(),
            [97, 120] => lookup_92(labels),
            [97, 120, 97] => lookup_93(),
            [97, 122] => lookup_94(labels),
            [97, 122, 117, 114, 101] => lookup_95(),
            [98, 97] => lookup_96(labels),
            [98, 97, 98, 121] => lookup_97(),
            [98, 97, 105, 100, 117] => lookup_98(),
            [98, 97, 110, 97, 109, 101, 120] => lookup_99(),
            [98, 97, 110, 97, 110, 97, 114, 101, 112, 117, 98, 108, 105, 99] => lookup_100(),
            [98, 97, 110, 100] => lookup_101(),
            [98, 97, 110, 107] => lookup_102(),
            [98, 97, 114] => lookup_103(),
            [98, 97, 114, 99, 101, 108, 111, 110, 97] => lookup_104(),
            [98, 97, 114, 99, 108, 97, 121, 99, 97, 114, 100] => lookup_105(),
            [98, 97, 114, 99, 108, 97, 121, 115] => lookup_106(),
            [98, 97, 114, 101, 102, 111, 111, 116] => lookup_107(),
            [98, 97, 114, 103, 97, 105, 110, 115] => lookup_108(),
            [98, 97, 115, 101, 98, 97, 108, 108] => lookup_109(),
            [98, 97, 115, 107, 101, 116, 98, 97, 108, 108] => lookup_110(labels),
            [98, 97, 117, 104, 97, 117, 115] => lookup_111(),
            [98, 97, 121, 101, 114, 110] => lookup_112(),
            [98, 98] => lookup_113(labels),
            [98, 98, 99] => lookup_114(),
            [98, 98, 116] => lookup_115(),
            [98, 98, 118, 97] => lookup_116(),
            [98, 99, 103] => lookup_117(),
            [98, 99, 110] => lookup_118(),
            [98, 100] => lookup_119(info, labels),
            [98, 101] => lookup_120(labels),
            [98, 101, 97, 116, 115] => lookup_121(),
            [98, 101, 97, 117, 116, 121] => lookup_122(),
            [98, 101, 101, 114] => lookup_123(),
            [98, 101, 110, 116, 108, 101, 121] => lookup_124(),
            [98, 101, 114, 108, 105, 110] => lookup_125(),
            [98, 101, 115, 116] => lookup_126(),
            [98, 101, 115, 116, 98, 117, 121] => lookup_127(),
            [98, 101, 116] => lookup_128(),
            [98, 102] => lookup_129(labels),
            [98, 103] => lookup_130(labels),
            [98, 104] => lookup_131(labels),
            [98, 104, 97, 114, 116, 105] => lookup_132(),
            [98, 105] => lookup_133(labels),
            [98, 105, 98, 108, 101] => lookup_134(),
            [98, 105, 100] => lookup_135(),
            [98, 105, 107, 101] => lookup_136(),
            [98, 105, 110, 103] => lookup_137(),
            [98, 105, 110, 103, 111] => lookup_138(),
            [98, 105, 111] => lookup_139(),
            [98, 105, 122] => lookup_140(labels),
            [98, 106] => lookup_141(labels),
            [98, 108, 97, 99, 107] => lookup_142(),
            [98, 108, 97, 99, 107, 102, 114, 105, 100, 97, 121] => lookup_143(),
            [98, 108, 111, 99, 107, 98, 117, 115, 116, 101, 114] => lookup_144(),
            [98, 108, 111, 103] => lookup_145(),
            [98, 108, 111, 111, 109, 98, 101, 114, 103] => lookup_146(),
            [98, 108, 117, 101] => lookup_147(),
            [98, 109] => lookup_148(labels),
            [98, 109, 115] => lookup_149(),
            [98, 109, 119] => lookup_150(),
            [98, 110] => lookup_151(labels),
            [98, 110, 112, 112, 97, 114, 105, 98, 97, 115] => lookup_152(),
            [98, 111] => lookup_153(labels),
            [98, 111, 97, 116, 115] => lookup_154(),
            [98, 111, 101, 104, 114, 105, 110, 103, 101, 114] => lookup_155(),
            [98, 111, 102, 97] => lookup_156(),
            [98, 111, 109] => lookup_157(),
            [98, 111, 110, 100] => lookup_158(),
            [98, 111, 111] => lookup_159(),
            [98, 111, 111, 107] => lookup_160(),
            [98, 111, 111, 107, 105, 110, 103] => lookup_161(),
            [98, 111, 115, 99, 104] => lookup_162(),
            [98, 111, 115, 116, 105, 107] => lookup_163(),
            [98, 111, 115, 116, 111, 110] => lookup_164(),
            [98, 111, 116] => lookup_165(),
            [98, 111, 117, 116, 105, 113, 117, 101] => lookup_166(),
            [98, 111, 120] => lookup_167(),
            [98, 114] => lookup_168(labels),
            [98, 114, 97, 100, 101, 115, 99, 111] => lookup_169(),
            [98, 114, 105, 100, 103, 101, 115, 116, 111, 110, 101] => lookup_170(),
            [98, 114, 111, 97, 100, 119, 97, 121] => lookup_171(),
            [98, 114, 111, 107, 101, 114] => lookup_172(),
            [98, 114, 111, 116, 104, 101, 114] => lookup_173(),
            [98, 114, 117, 115, 115, 101, 108, 115] => lookup_174(),
            [98, 115] => lookup_175(labels),
            [98, 116] => lookup_176(labels),
            [98, 117, 100, 97, 112, 101, 115, 116] => lookup_177(),
            [98, 117, 103, 97, 116, 116, 105] => lookup_178(),
            [98, 117, 105, 108, 100] => lookup_179(),
            [98, 117, 105, 108, 100, 101, 114, 115] => lookup_180(labels),
            [98, 117, 115, 105, 110, 101, 115, 115] => lookup_181(labels),
            [98, 117, 121] => lookup_182(),
            [98, 117, 122, 122] => lookup_183(),
            [98, 118] => lookup_184(),
            [98, 119] => lookup_185(labels),
            [98, 121] => lookup_186(labels),
            [98, 122] => lookup_187(labels),
            [98, 122, 104] => lookup_188(),
            [99, 97] => lookup_189(labels),
            [99, 97, 98] => lookup_190(),
            [99, 97, 102, 101] => lookup_191(),
            [99, 97, 108] => lookup_192(),
            [99, 97, 108, 108] => lookup_193(),
            [99, 97, 108, 118, 105, 110, 107, 108, 101, 105, 110] => lookup_194(),
            [99, 97, 109] => lookup_195(),
            [99, 97, 109, 101, 114, 97] => lookup_196(),
            [99, 97, 109, 112] => lookup_197(),
            [99, 97, 110, 99, 101, 114, 114, 101, 115, 101, 97, 114, 99, 104] => lookup_198(),
            [99, 97, 110, 111, 110] => lookup_199(),
            [99, 97, 112, 101, 116, 111, 119, 110] => lookup_200(),
            [99, 97, 112, 105, 116, 97, 108] => lookup_201(),
            [99, 97, 112, 105, 116, 97, 108, 111, 110, 101] => lookup_202(),
            [99, 97, 114] => lookup_203(),
            [99, 97, 114, 97, 118, 97, 110] => lookup_204(),
            [99, 97, 114, 100, 115] => lookup_205(),
            [99, 97, 114, 101] => lookup_206(),
            [99, 97, 114, 101, 101, 114] => lookup_207(),
            [99, 97, 114, 101, 101, 114, 115] => lookup_208(),
            [99, 97, 114, 115] => lookup_209(),
            [99, 97, 115, 97] => lookup_210(labels),
            [99, 97, 115, 101] => lookup_211(),
            [99, 97, 115, 104] => lookup_212(),
            [99, 97, 115, 105, 110, 111] => lookup_213(),
            [99, 97, 116] => lookup_214(),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_215(),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_216(),
            [99, 98, 97] => lookup_217(),
            [99, 98, 110] => lookup_218(),
            [99, 98, 114, 101] => lookup_219(),
            [99, 98, 115] => lookup_220(),
            [99, 99] => lookup_221(labels),
            [99, 100] => lookup_222(labels),
            [99, 101, 110, 116, 101, 114] => lookup_223(),
            [99, 101, 111] => lookup_224(),
            [99, 101, 114, 110] => lookup_225(),
            [99, 102] => lookup_226(labels),
            [99, 102, 97] => lookup_227(),
            [99, 102, 100] => lookup_228(),
            [99, 103] => lookup_229(),
            [99, 104] => lookup_230(labels),
            [99, 104, 97, 110, 101, 108] => lookup_231(),
            [99, 104, 97, 110, 110, 101, 108] => lookup_232(),
            [99, 104, 97, 114, 105, 116, 121] => lookup_233(),
            [99, 104, 97, 115, 101] => lookup_234(),
            [99, 104, 97, 116] => lookup_235(),
            [99, 104, 101, 97, 112] => lookup_236(),
            [99, 104, 105, 110, 116, 97, 105] => lookup_237(),
            [99, 104, 114, 105, 115, 116, 109, 97, 115] => lookup_238(),
            [99, 104, 114, 111, 109, 101] => lookup_239(),
            [99, 104, 117, 114, 99, 104] => lookup_240(),
            [99, 105] => lookup_241(labels),
            [99, 105, 112, 114, 105, 97, 110, 105] => lookup_242(),
            [99, 105, 114, 99, 108, 101] => lookup_243(),
            [99, 105, 115, 99, 111] => lookup_244(),
            [99, 105, 116, 97, 100, 101, 108] => lookup_245(),
            [99, 105, 116, 105] => lookup_246(),
            [99, 105, 116, 105, 99] => lookup_247(),
            [99, 105, 116, 121] => lookup_248(),
            [99, 105, 116, 121, 101, 97, 116, 115] => lookup_249(),
            [99, 107] => lookup_250(info, labels),
            [99, 108] => lookup_251(labels),
            [99, 108, 97, 105, 109, 115] => lookup_252(),
            [99, 108, 101, 97, 110, 105, 110, 103] => lookup_253(),
            [99, 108, 105, 99, 107] => lookup_254(),
            [99, 108, 105, 110, 105, 99] => lookup_255(),
            [99, 108, 105, 110, 105, 113, 117, 101] => lookup_256(),
            [99, 108, 111, 116, 104, 105, 110, 103] => lookup_257(),
            [99, 108, 111, 117, 100] => lookup_258(labels),
            [99, 108, 117, 98] => lookup_259(labels),
            [99, 108, 117, 98, 109, 101, 100] => lookup_260(),
            [99, 109] => lookup_261(labels),
            [99, 110] => lookup_262(labels),
            [99, 111] => lookup_263(labels),
            [99, 111, 97, 99, 104] => lookup_264(),
            [99, 111, 100, 101, 115] => lookup_265(labels),
            [99, 111, 102, 102, 101, 101] => lookup_266(),
            [99, 111, 108, 108, 101, 103, 101] => lookup_267(),
            [99, 111, 108, 111, 103, 110, 101] => lookup_268(),
            [99, 111, 109] => lookup_269(labels),
            [99, 111, 109, 99, 97, 115, 116] => lookup_270(),
            [99, 111, 109, 109, 98, 97, 110, 107] => lookup_271(),
            [99, 111, 109, 109, 117, 110, 105, 116, 121] => lookup_272(labels),
            [99, 111, 109, 112, 97, 110, 121] => lookup_273(),
            [99, 111, 109, 112, 97, 114, 101] => lookup_274(),
            [99, 111, 109, 112, 117, 116, 101, 114] => lookup_275(),
            [99, 111, 109, 115, 101, 99] => lookup_276(),
            [99, 111, 110, 100, 111, 115] => lookup_277(),
            [99, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110] => lookup_278(),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_279(),
            [99, 111, 110, 116, 97, 99, 116] => lookup_280(),
            [99, 111, 110, 116, 114, 97, 99, 116, 111, 114, 115] => lookup_281(),
            [99, 111, 111, 107, 105, 110, 103] => lookup_282(),
            [99, 111, 111, 107, 105, 110, 103, 99, 104, 97, 110, 110, 101, 108] => lookup_283(),
            [99, 111, 111, 108] => lookup_284(labels),
            [99, 111, 111, 112] => lookup_285(),
            [99, 111, 114, 115, 105, 99, 97] => lookup_286(),
            [99, 111, 117, 110, 116, 114, 121] => lookup_287(),
            [99, 111, 117, 112, 111, 110] => lookup_288(),
            [99, 111, 117, 112, 111, 110, 115] => lookup_289(),
            [99, 111, 117, 114, 115, 101, 115] => lookup_290(),
            [99, 112, 97] => lookup_291(),
            [99, 114] => lookup_292(labels),
            [99, 114, 101, 100, 105, 116] => lookup_293(),
            [99, 114, 101, 100, 105, 116, 99, 97, 114, 100] => lookup_294(),
            [99, 114, 101, 100, 105, 116, 117, 110, 105, 111, 110] => lookup_295(),
            [99, 114, 105, 99, 107, 101, 116] => lookup_296(),
            [99, 114, 111, 119, 110] => lookup_297(),
            [99, 114, 115] => lookup_298(),
            [99, 114, 117, 105, 115, 101] => lookup_299(),
            [99, 114, 117, 105, 115, 101, 115] => lookup_300(),
            [99, 115, 99] => lookup_301(),
            [99, 117] => lookup_302(labels),
            [99, 117, 105, 115, 105, 110, 101, 108, 108, 97] => lookup_303(),
            [99, 118] => lookup_304(labels),
            [99, 119] => lookup_305(labels),
            [99, 120] => lookup_306(labels),
            [99, 121] => lookup_307(labels),
            [99, 121, 109, 114, 117] => lookup_308(),
            [99, 121, 111, 117] => lookup_309(),
            [99, 122] => lookup_310(labels),
            [100, 97, 98, 117, 114] => lookup_311(),
            [100, 97, 100] => lookup_312(),
            [100, 97, 110, 99, 101] => lookup_313(),
            [100, 97, 116, 97] => lookup_314(),
            [100, 97, 116, 101] => lookup_315(),
            [100, 97, 116, 105, 110, 103] => lookup_316(),
            [100, 97, 116, 115, 117, 110] => lookup_317(),
            [100, 97, 121] => lookup_318(),
            [100, 99, 108, 107] => lookup_319(),
            [100, 100, 115] => lookup_320(),
            [100, 101] => lookup_321(labels),
            [100, 101, 97, 108] => lookup_322(),
            [100, 101, 97, 108, 101, 114] => lookup_323(),
            [100, 101, 97, 108, 115] => lookup_324(),
            [100, 101, 103, 114, 101, 101] => lookup_325(),
            [100, 101, 108, 105, 118, 101, 114, 121] => lookup_326(),
            [100, 101, 108, 108] => lookup_327(),
            [100, 101, 108, 111, 105, 116, 116, 101] => lookup_328(),
            [100, 101, 108, 116, 97] => lookup_329(),
            [100, 101, 109, 111, 99, 114, 97, 116] => lookup_330(),
            [100, 101, 110, 116, 97, 108] => lookup_331(),
            [100, 101, 110, 116, 105, 115, 116] => lookup_332(),
            [100, 101, 115, 105] => lookup_333(),
            [100, 101, 115, 105, 103, 110] => lookup_334(labels),
            [100, 101, 118] => lookup_335(labels),
            [100, 104, 108] => lookup_336(),
            [100, 105, 97, 109, 111, 110, 100, 115] => lookup_337(),
            [100, 105, 101, 116] => lookup_338(),
            [100, 105, 103, 105, 116, 97, 108] => lookup_339(labels),
            [100, 105, 114, 101, 99, 116] => lookup_340(),
            [100, 105, 114, 101, 99, 116, 111, 114, 121] => lookup_341(),
            [100, 105, 115, 99, 111, 117, 110, 116] => lookup_342(),
            [100, 105, 115, 99, 111, 118, 101, 114] => lookup_343(),
            [100, 105, 115, 104] => lookup_344(),
            [100, 105, 121] => lookup_345(),
            [100, 106] => lookup_346(),
            [100, 107] => lookup_347(labels),
            [100, 109] => lookup_348(labels),
            [100, 110, 112] => lookup_349(),
            [100, 111] => lookup_350(labels),
            [100, 111, 99, 115] => lookup_351(),
            [100, 111, 99, 116, 111, 114] => lookup_352(),
            [100, 111, 103] => lookup_353(),
            [100, 111, 109, 97, 105, 110, 115] => lookup_354(),
            [100, 111, 116] => lookup_355(),
            [100, 111, 119, 110, 108, 111, 97, 100] => lookup_356(),
            [100, 114, 105, 118, 101] => lookup_357(),
            [100, 116, 118] => lookup_358(),
            [100, 117, 98, 97, 105] => lookup_359(),
            [100, 117, 110, 108, 111, 112] => lookup_360(),
            [100, 117, 112, 111, 110, 116] => lookup_361(),
            [100, 117, 114, 98, 97, 110] => lookup_362(),
            [100, 118, 97, 103] => lookup_363(),
            [100, 118, 114] => lookup_364(),
            [100, 122] => lookup_365(labels),
            [101, 97, 114, 116, 104] => lookup_366(labels),
            [101, 97, 116] => lookup_367(),
            [101, 99] => lookup_368(labels),
            [101, 99, 111] => lookup_369(),
            [101, 100, 101, 107, 97] => lookup_370(),
            [101, 100, 117] => lookup_371(labels),
            [101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_372(labels),
            [101, 101] => lookup_373(labels),
            [101, 103] => lookup_374(labels),
            [101, 109, 97, 105, 108] => lookup_375(),
            [101, 109, 101, 114, 99, 107] => lookup_376(),
            [101, 110, 101, 114, 103, 121] => lookup_377(),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_378(),
            [101, 110, 103, 105, 110, 101, 101, 114, 105, 110, 103] => lookup_379(),
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 115] => lookup_380(),
            [101, 112, 115, 111, 110] => lookup_381(),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_382(),
            [101, 114] => lookup_383(info, labels),
            [101, 114, 105, 99, 115, 115, 111, 110] => lookup_384(),
            [101, 114, 110, 105] => lookup_385(),
            [101, 115] => lookup_386(labels),
            [101, 115, 113] => lookup_387(),
            [101, 115, 116, 97, 116, 101] => lookup_388(labels),
            [101, 116] => lookup_389(labels),
            [101, 116, 105, 115, 97, 108, 97, 116] => lookup_390(),
            [101, 117] => lookup_391(labels),
            [101, 117, 114, 111, 118, 105, 115, 105, 111, 110] => lookup_392(),
            [101, 117, 115] => lookup_393(labels),
            [101, 118, 101, 110, 116, 115] => lookup_394(labels),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_395(),
            [101, 120, 112, 101, 114, 116] => lookup_396(),
            [101, 120, 112, 111, 115, 101, 100] => lookup_397(),
            [101, 120, 112, 114, 101, 115, 115] => lookup_398(),
            [101, 120, 116, 114, 97, 115, 112, 97, 99, 101] => lookup_399(),
            [102, 97, 103, 101] => lookup_400(),
            [102, 97, 105, 108] => lookup_401(),
            [102, 97, 105, 114, 119, 105, 110, 100, 115] => lookup_402(),
            [102, 97, 105, 116, 104] => lookup_403(labels),
            [102, 97, 109, 105, 108, 121] => lookup_404(),
            [102, 97, 110] => lookup_405(),
            [102, 97, 110, 115] => lookup_406(),
            [102, 97, 114, 109] => lookup_407(labels),
            [102, 97, 114, 109, 101, 114, 115] => lookup_408(),
            [102, 97, 115, 104, 105, 111, 110] => lookup_409(labels),
            [102, 97, 115, 116] => lookup_410(),
            [102, 101, 100, 101, 120] => lookup_411(),
            [102, 101, 101, 100, 98, 97, 99, 107] => lookup_412(),
            [102, 101, 114, 114, 97, 114, 105] => lookup_413(),
            [102, 101, 114, 114, 101, 114, 111] => lookup_414(),
            [102, 105] => lookup_415(labels),
            [102, 105, 97, 116] => lookup_416(),
            [102, 105, 100, 101, 108, 105, 116, 121] => lookup_417(),
            [102, 105, 100, 111] => lookup_418(),
            [102, 105, 108, 109] => lookup_419(),
            [102, 105, 110, 97, 108] => lookup_420(),
            [102, 105, 110, 97, 110, 99, 101] => lookup_421(),
            [102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_422(labels),
            [102, 105, 114, 101] => lookup_423(),
            [102, 105, 114, 101, 115, 116, 111, 110, 101] => lookup_424(),
            [102, 105, 114, 109, 100, 97, 108, 101] => lookup_425(),
            [102, 105, 115, 104] => lookup_426(),
            [102, 105, 115, 104, 105, 110, 103] => lookup_427(),
            [102, 105, 116] => lookup_428(),
            [102, 105, 116, 110, 101, 115, 115] => lookup_429(),
            [102, 106] => lookup_430(labels),
            [102, 107] => lookup_431(info, labels),
            [102, 108, 105, 99, 107, 114] => lookup_432(),
            [102, 108, 105, 103, 104, 116, 115] => lookup_433(),
            [102, 108, 105, 114] => lookup_434(),
            [102, 108, 111, 114, 105, 115, 116] => lookup_435(),
            [102, 108, 111, 119, 101, 114, 115] => lookup_436(),
            [102, 108, 121] => lookup_437(),
            [102, 109] => lookup_438(labels),
            [102, 111] => lookup_439(),
            [102, 111, 111] => lookup_440(),
            [102, 111, 111, 100] => lookup_441(),
            [102, 111, 111, 100, 110, 101, 116, 119, 111, 114, 107] => lookup_442(),
            [102, 111, 111, 116, 98, 97, 108, 108] => lookup_443(),
            [102, 111, 114, 100] => lookup_444(),
            [102, 111, 114, 101, 120] => lookup_445(),
            [102, 111, 114, 115, 97, 108, 101] => lookup_446(),
            [102, 111, 114, 117, 109] => lookup_447(),
            [102, 111, 117, 110, 100, 97, 116, 105, 111, 110] => lookup_448(),
            [102, 111, 120] => lookup_449(),
            [102, 114] => lookup_450(labels),
            [102, 114, 101, 101] => lookup_451(),
            [102, 114, 101, 115, 101, 110, 105, 117, 115] => lookup_452(),
            [102, 114, 108] => lookup_453(),
            [102, 114, 111, 103, 97, 110, 115] => lookup_454(),
            [102, 114, 111, 110, 116, 100, 111, 111, 114] => lookup_455(),
            [102, 114, 111, 110, 116, 105, 101, 114] => lookup_456(),
            [102, 116, 114] => lookup_457(),
            [102, 117, 106, 105, 116, 115, 117] => lookup_458(),
            [102, 117, 110] => lookup_459(),
            [102, 117, 110, 100] => lookup_460(),
            [102, 117, 114, 110, 105, 116, 117, 114, 101] => lookup_461(),
            [102, 117, 116, 98, 111, 108] => lookup_462(),
            [102, 121, 105] => lookup_463(),
            [103, 97] => lookup_464(),
            [103, 97, 108] => lookup_465(),
            [103, 97, 108, 108, 101, 114, 121] => lookup_466(),
            [103, 97, 108, 108, 111] => lookup_467(),
            [103, 97, 108, 108, 117, 112] => lookup_468(),
            [103, 97, 109, 101] => lookup_469(),
            [103, 97, 109, 101, 115] => lookup_470(),
            [103, 97, 112] => lookup_471(),
            [103, 97, 114, 100, 101, 110] => lookup_472(),
            [103, 97, 121] => lookup_473(),
            [103, 98] => lookup_474(),
            [103, 98, 105, 122] => lookup_475(),
            [103, 100] => lookup_476(labels),
            [103, 100, 110] => lookup_477(labels),
            [103, 101] => lookup_478(labels),
            [103, 101, 97] => lookup_479(),
            [103, 101, 110, 116] => lookup_480(),
            [103, 101, 110, 116, 105, 110, 103] => lookup_481(),
            [103, 101, 111, 114, 103, 101] => lookup_482(),
            [103, 102] => lookup_483(),
            [103, 103] => lookup_484(labels),
            [103, 103, 101, 101] => lookup_485(),
            [103, 104] => lookup_486(labels),
            [103, 105] => lookup_487(labels),
            [103, 105, 102, 116] => lookup_488(),
            [103, 105, 102, 116, 115] => lookup_489(),
            [103, 105, 118, 101, 115] => lookup_490(),
            [103, 105, 118, 105, 110, 103] => lookup_491(),
            [103, 108] => lookup_492(labels),
            [103, 108, 97, 115, 115] => lookup_493(),
            [103, 108, 101] => lookup_494(),
            [103, 108, 111, 98, 97, 108] => lookup_495(),
            [103, 108, 111, 98, 111] => lookup_496(),
            [103, 109] => lookup_497(),
            [103, 109, 97, 105, 108] => lookup_498(),
            [103, 109, 98, 104] => lookup_499(),
            [103, 109, 111] => lookup_500(),
            [103, 109, 120] => lookup_501(),
            [103, 110] => lookup_502(labels),
            [103, 111, 100, 97, 100, 100, 121] => lookup_503(),
            [103, 111, 108, 100] => lookup_504(),
            [103, 111, 108, 100, 112, 111, 105, 110, 116] => lookup_505(),
            [103, 111, 108, 102] => lookup_506(),
            [103, 111, 111] => lookup_507(),
            [103, 111, 111, 100, 121, 101, 97, 114] => lookup_508(),
            [103, 111, 111, 103] => lookup_509(labels),
            [103, 111, 111, 103, 108, 101] => lookup_510(),
            [103, 111, 112] => lookup_511(),
            [103, 111, 116] => lookup_512(),
            [103, 111, 118] => lookup_513(),
            [103, 112] => lookup_514(labels),
            [103, 113] => lookup_515(),
            [103, 114] => lookup_516(labels),
            [103, 114, 97, 105, 110, 103, 101, 114] => lookup_517(),
            [103, 114, 97, 112, 104, 105, 99, 115] => lookup_518(),
            [103, 114, 97, 116, 105, 115] => lookup_519(),
            [103, 114, 101, 101, 110] => lookup_520(),
            [103, 114, 105, 112, 101] => lookup_521(),
            [103, 114, 111, 99, 101, 114, 121] => lookup_522(),
            [103, 114, 111, 117, 112] => lookup_523(labels),
            [103, 115] => lookup_524(),
            [103, 116] => lookup_525(labels),
            [103, 117] => lookup_526(labels),
            [103, 117, 97, 114, 100, 105, 97, 110] => lookup_527(),
            [103, 117, 99, 99, 105] => lookup_528(),
            [103, 117, 103, 101] => lookup_529(),
            [103, 117, 105, 100, 101] => lookup_530(),
            [103, 117, 105, 116, 97, 114, 115] => lookup_531(),
            [103, 117, 114, 117] => lookup_532(),
            [103, 119] => lookup_533(),
            [103, 121] => lookup_534(labels),
            [104, 97, 105, 114] => lookup_535(),
            [104, 97, 109, 98, 117, 114, 103] => lookup_536(),
            [104, 97, 110, 103, 111, 117, 116] => lookup_537(),
            [104, 97, 117, 115] => lookup_538(),
            [104, 98, 111] => lookup_539(),
            [104, 100, 102, 99] => lookup_540(),
            [104, 100, 102, 99, 98, 97, 110, 107] => lookup_541(),
            [104, 101, 97, 108, 116, 104] => lookup_542(labels),
            [104, 101, 97, 108, 116, 104, 99, 97, 114, 101] => lookup_543(),
            [104, 101, 108, 112] => lookup_544(),
            [104, 101, 108, 115, 105, 110, 107, 105] => lookup_545(),
            [104, 101, 114, 101] => lookup_546(),
            [104, 101, 114, 109, 101, 115] => lookup_547(),
            [104, 103, 116, 118] => lookup_548(),
            [104, 105, 112, 104, 111, 112] => lookup_549(),
            [104, 105, 115, 97, 109, 105, 116, 115, 117] => lookup_550(),
            [104, 105, 116, 97, 99, 104, 105] => lookup_551(),
            [104, 105, 118] => lookup_552(),
            [104, 107] => lookup_553(labels),
            [104, 107, 116] => lookup_554(),
            [104, 109] => lookup_555(),
            [104, 110] => lookup_556(labels),
            [104, 111, 99, 107, 101, 121] => lookup_557(),
            [104, 111, 108, 100, 105, 110, 103, 115] => lookup_558(),
            [104, 111, 108, 105, 100, 97, 121] => lookup_559(),
            [104, 111, 109, 101, 100, 101, 112, 111, 116] => lookup_560(),
            [104, 111, 109, 101, 103, 111, 111, 100, 115] => lookup_561(),
            [104, 111, 109, 101, 115] => lookup_562(),
            [104, 111, 109, 101, 115, 101, 110, 115, 101] => lookup_563(),
            [104, 111, 110, 100, 97] => lookup_564(),
            [104, 111, 114, 115, 101] => lookup_565(),
            [104, 111, 115, 112, 105, 116, 97, 108] => lookup_566(),
            [104, 111, 115, 116] => lookup_567(labels),
            [104, 111, 115, 116, 105, 110, 103] => lookup_568(labels),
            [104, 111, 116] => lookup_569(),
            [104, 111, 116, 101, 108, 101, 115] => lookup_570(),
            [104, 111, 116, 101, 108, 115] => lookup_571(),
            [104, 111, 116, 109, 97, 105, 108] => lookup_572(),
            [104, 111, 117, 115, 101] => lookup_573(),
            [104, 111, 119] => lookup_574(),
            [104, 114] => lookup_575(labels),
            [104, 115, 98, 99] => lookup_576(),
            [104, 116] => lookup_577(labels),
            [104, 117] => lookup_578(labels),
            [104, 117, 103, 104, 101, 115] => lookup_579(),
            [104, 121, 97, 116, 116] => lookup_580(),
            [104, 121, 117, 110, 100, 97, 105] => lookup_581(),
            [105, 98, 109] => lookup_582(),
            [105, 99, 98, 99] => lookup_583(),
            [105, 99, 101] => lookup_584(),
            [105, 99, 117] => lookup_585(),
            [105, 100] => lookup_586(labels),
            [105, 101] => lookup_587(labels),
            [105, 101, 101, 101] => lookup_588(),
            [105, 102, 109] => lookup_589(),
            [105, 107, 97, 110, 111] => lookup_590(),
            [105, 108] => lookup_591(labels),
            [105, 109] => lookup_592(labels),
            [105, 109, 97, 109, 97, 116] => lookup_593(),
            [105, 109, 100, 98] => lookup_594(),
            [105, 109, 109, 111] => lookup_595(),
            [105, 109, 109, 111, 98, 105, 108, 105, 101, 110] => lookup_596(),
            [105, 110] => lookup_597(labels),
            [105, 110, 99] => lookup_598(),
            [105, 110, 100, 117, 115, 116, 114, 105, 101, 115] => lookup_599(),
            [105, 110, 102, 105, 110, 105, 116, 105] => lookup_600(),
            [105, 110, 102, 111] => lookup_601(labels),
            [105, 110, 103] => lookup_602(),
            [105, 110, 107] => lookup_603(),
            [105, 110, 115, 116, 105, 116, 117, 116, 101] => lookup_604(),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_605(),
            [105, 110, 115, 117, 114, 101] => lookup_606(),
            [105, 110, 116] => lookup_607(labels),
            [105, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97, 108] => lookup_608(),
            [105, 110, 116, 117, 105, 116] => lookup_609(),
            [105, 110, 118, 101, 115, 116, 109, 101, 110, 116, 115] => lookup_610(),
            [105, 111] => lookup_611(labels),
            [105, 112, 105, 114, 97, 110, 103, 97] => lookup_612(),
            [105, 113] => lookup_613(labels),
            [105, 114] => lookup_614(labels),
            [105, 114, 105, 115, 104] => lookup_615(),
            [105, 115] => lookup_616(labels),
            [105, 115, 109, 97, 105, 108, 105] => lookup_617(),
            [105, 115, 116] => lookup_618(),
            [105, 115, 116, 97, 110, 98, 117, 108] => lookup_619(),
            [105, 116] => lookup_620(labels),
            [105, 116, 97, 117] => lookup_621(),
            [105, 116, 118] => lookup_622(),
            [106, 97, 103, 117, 97, 114] => lookup_623(),
            [106, 97, 118, 97] => lookup_624(),
            [106, 99, 98] => lookup_625(),
            [106, 101] => lookup_626(labels),
            [106, 101, 101, 112] => lookup_627(),
            [106, 101, 116, 122, 116] => lookup_628(),
            [106, 101, 119, 101, 108, 114, 121] => lookup_629(),
            [106, 105, 111] => lookup_630(),
            [106, 108, 108] => lookup_631(),
            [106, 109] => lookup_632(info, labels),
            [106, 109, 112] => lookup_633(),
            [106, 110, 106] => lookup_634(),
            [106, 111] => lookup_635(labels),
            [106, 111, 98, 115] => lookup_636(),
            [106, 111, 98, 117, 114, 103] => lookup_637(),
            [106, 111, 116] => lookup_638(),
            [106, 111, 121] => lookup_639(),
            [106, 112] => lookup_640(labels),
            [106, 112, 109, 111, 114, 103, 97, 110] => lookup_641(),
            [106, 112, 114, 115] => lookup_642(),
            [106, 117, 101, 103, 111, 115] => lookup_643(),
            [106, 117, 110, 105, 112, 101, 114] => lookup_644(),
            [107, 97, 117, 102, 101, 110] => lookup_645(),
            [107, 100, 100, 105] => lookup_646(),
            [107, 101] => lookup_647(labels),
            [107, 101, 114, 114, 121, 104, 111, 116, 101, 108, 115] => lookup_648(),
            [107, 101, 114, 114, 121, 108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_649(),
            [107, 101, 114, 114, 121, 112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => {
                lookup_650()
            }
            [107, 102, 104] => lookup_651(),
            [107, 103] => lookup_652(labels),
            [107, 104] => lookup_653(info, labels),
            [107, 105] => lookup_654(labels),
            [107, 105, 97] => lookup_655(),
            [107, 105, 100, 115] => lookup_656(),
            [107, 105, 109] => lookup_657(),
            [107, 105, 110, 100, 101, 114] => lookup_658(),
            [107, 105, 110, 100, 108, 101] => lookup_659(),
            [107, 105, 116, 99, 104, 101, 110] => lookup_660(),
            [107, 105, 119, 105] => lookup_661(),
            [107, 109] => lookup_662(labels),
            [107, 110] => lookup_663(labels),
            [107, 111, 101, 108, 110] => lookup_664(),
            [107, 111, 109, 97, 116, 115, 117] => lookup_665(),
            [107, 111, 115, 104, 101, 114] => lookup_666(),
            [107, 112] => lookup_667(labels),
            [107, 112, 109, 103] => lookup_668(),
            [107, 112, 110] => lookup_669(),
            [107, 114] => lookup_670(labels),
            [107, 114, 100] => lookup_671(labels),
            [107, 114, 101, 100] => lookup_672(),
            [107, 117, 111, 107, 103, 114, 111, 117, 112] => lookup_673(),
            [107, 119] => lookup_674(labels),
            [107, 121] => lookup_675(labels),
            [107, 121, 111, 116, 111] => lookup_676(),
            [107, 122] => lookup_677(labels),
            [108, 97] => lookup_678(labels),
            [108, 97, 99, 97, 105, 120, 97] => lookup_679(),
            [108, 97, 109, 98, 111, 114, 103, 104, 105, 110, 105] => lookup_680(),
            [108, 97, 109, 101, 114] => lookup_681(),
            [108, 97, 110, 99, 97, 115, 116, 101, 114] => lookup_682(),
            [108, 97, 110, 99, 105, 97] => lookup_683(),
            [108, 97, 110, 100] => lookup_684(labels),
            [108, 97, 110, 100, 114, 111, 118, 101, 114] => lookup_685(),
            [108, 97, 110, 120, 101, 115, 115] => lookup_686(),
            [108, 97, 115, 97, 108, 108, 101] => lookup_687(),
            [108, 97, 116] => lookup_688(),
            [108, 97, 116, 105, 110, 111] => lookup_689(),
            [108, 97, 116, 114, 111, 98, 101] => lookup_690(),
            [108, 97, 119] => lookup_691(),
            [108, 97, 119, 121, 101, 114] => lookup_692(),
            [108, 98] => lookup_693(labels),
            [108, 99] => lookup_694(labels),
            [108, 100, 115] => lookup_695(),
            [108, 101, 97, 115, 101] => lookup_696(),
            [108, 101, 99, 108, 101, 114, 99] => lookup_697(),
            [108, 101, 102, 114, 97, 107] => lookup_698(),
            [108, 101, 103, 97, 108] => lookup_699(),
            [108, 101, 103, 111] => lookup_700(),
            [108, 101, 120, 117, 115] => lookup_701(),
            [108, 103, 98, 116] => lookup_702(),
            [108, 105] => lookup_703(labels),
            [108, 105, 100, 108] => lookup_704(),
            [108, 105, 102, 101] => lookup_705(),
            [108, 105, 102, 101, 105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_706(),
            [108, 105, 102, 101, 115, 116, 121, 108, 101] => lookup_707(),
            [108, 105, 103, 104, 116, 105, 110, 103] => lookup_708(),
            [108, 105, 107, 101] => lookup_709(),
            [108, 105, 108, 108, 121] => lookup_710(),
            [108, 105, 109, 105, 116, 101, 100] => lookup_711(),
            [108, 105, 109, 111] => lookup_712(),
            [108, 105, 110, 99, 111, 108, 110] => lookup_713(),
            [108, 105, 110, 100, 101] => lookup_714(),
            [108, 105, 110, 107] => lookup_715(labels),
            [108, 105, 112, 115, 121] => lookup_716(),
            [108, 105, 118, 101] => lookup_717(labels),
            [108, 105, 118, 105, 110, 103] => lookup_718(),
            [108, 107] => lookup_719(labels),
            [108, 108, 99] => lookup_720(),
            [108, 108, 112] => lookup_721(),
            [108, 111, 97, 110] => lookup_722(),
            [108, 111, 97, 110, 115] => lookup_723(),
            [108, 111, 99, 107, 101, 114] => lookup_724(),
            [108, 111, 99, 117, 115] => lookup_725(),
            [108, 111, 102, 116] => lookup_726(),
            [108, 111, 108] => lookup_727(labels),
            [108, 111, 110, 100, 111, 110] => lookup_728(labels),
            [108, 111, 116, 116, 101] => lookup_729(),
            [108, 111, 116, 116, 111] => lookup_730(),
            [108, 111, 118, 101] => lookup_731(),
            [108, 112, 108] => lookup_732(),
            [108, 112, 108, 102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_733(),
            [108, 114] => lookup_734(labels),
            [108, 115] => lookup_735(labels),
            [108, 116] => lookup_736(labels),
            [108, 116, 100] => lookup_737(),
            [108, 116, 100, 97] => lookup_738(),
            [108, 117] => lookup_739(labels),
            [108, 117, 110, 100, 98, 101, 99, 107] => lookup_740(),
            [108, 117, 120, 101] => lookup_741(),
            [108, 117, 120, 117, 114, 121] => lookup_742(),
            [108, 118] => lookup_743(labels),
            [108, 121] => lookup_744(labels),
            [109, 97] => lookup_745(labels),
            [109, 97, 99, 121, 115] => lookup_746(),
            [109, 97, 100, 114, 105, 100] => lookup_747(),
            [109, 97, 105, 102] => lookup_748(),
            [109, 97, 105, 115, 111, 110] => lookup_749(),
            [109, 97, 107, 101, 117, 112] => lookup_750(),
            [109, 97, 110] => lookup_751(),
            [109, 97, 110, 97, 103, 101, 109, 101, 110, 116] => lookup_752(labels),
            [109, 97, 110, 103, 111] => lookup_753(),
            [109, 97, 112] => lookup_754(),
            [109, 97, 114, 107, 101, 116] => lookup_755(),
            [109, 97, 114, 107, 101, 116, 105, 110, 103] => lookup_756(labels),
            [109, 97, 114, 107, 101, 116, 115] => lookup_757(),
            [109, 97, 114, 114, 105, 111, 116, 116] => lookup_758(),
            [109, 97, 114, 115, 104, 97, 108, 108, 115] => lookup_759(),
            [109, 97, 115, 101, 114, 97, 116, 105] => lookup_760(),
            [109, 97, 116, 116, 101, 108] => lookup_761(),
            [109, 98, 97] => lookup_762(),
            [109, 99] => lookup_763(labels),
            [109, 99, 107, 105, 110, 115, 101, 121] => lookup_764(),
            [109, 100] => lookup_765(labels),
            [109, 101] => lookup_766(labels),
            [109, 101, 100] => lookup_767(),
            [109, 101, 100, 105, 97] => lookup_768(),
            [109, 101, 101, 116] => lookup_769(),
            [109, 101, 108, 98, 111, 117, 114, 110, 101] => lookup_770(),
            [109, 101, 109, 101] => lookup_771(),
            [109, 101, 109, 111, 114, 105, 97, 108] => lookup_772(),
            [109, 101, 110] => lookup_773(labels),
            [109, 101, 110, 117] => lookup_774(labels),
            [109, 101, 114, 99, 107, 109, 115, 100] => lookup_775(),
            [109, 103] => lookup_776(labels),
            [109, 104] => lookup_777(),
            [109, 105, 97, 109, 105] => lookup_778(),
            [109, 105, 99, 114, 111, 115, 111, 102, 116] => lookup_779(),
            [109, 105, 108] => lookup_780(),
            [109, 105, 110, 105] => lookup_781(),
            [109, 105, 110, 116] => lookup_782(),
            [109, 105, 116] => lookup_783(),
            [109, 105, 116, 115, 117, 98, 105, 115, 104, 105] => lookup_784(),
            [109, 107] => lookup_785(labels),
            [109, 108] => lookup_786(labels),
            [109, 108, 98] => lookup_787(),
            [109, 108, 115] => lookup_788(),
            [109, 109] => lookup_789(info, labels),
            [109, 109, 97] => lookup_790(),
            [109, 110] => lookup_791(labels),
            [109, 111] => lookup_792(labels),
            [109, 111, 98, 105] => lookup_793(labels),
            [109, 111, 98, 105, 108, 101] => lookup_794(),
            [109, 111, 100, 97] => lookup_795(),
            [109, 111, 101] => lookup_796(),
            [109, 111, 105] => lookup_797(),
            [109, 111, 109] => lookup_798(labels),
            [109, 111, 110, 97, 115, 104] => lookup_799(),
            [109, 111, 110, 101, 121] => lookup_800(),
            [109, 111, 110, 115, 116, 101, 114] => lookup_801(),
            [109, 111, 114, 109, 111, 110] => lookup_802(),
            [109, 111, 114, 116, 103, 97, 103, 101] => lookup_803(),
            [109, 111, 115, 99, 111, 119] => lookup_804(),
            [109, 111, 116, 111] => lookup_805(),
            [109, 111, 116, 111, 114, 99, 121, 99, 108, 101, 115] => lookup_806(),
            [109, 111, 118] => lookup_807(),
            [109, 111, 118, 105, 101] => lookup_808(),
            [109, 112] => lookup_809(labels),
            [109, 113] => lookup_810(),
            [109, 114] => lookup_811(labels),
            [109, 115] => lookup_812(labels),
            [109, 115, 100] => lookup_813(),
            [109, 116] => lookup_814(labels),
            [109, 116, 110] => lookup_815(),
            [109, 116, 114] => lookup_816(),
            [109, 117] => lookup_817(labels),
            [109, 117, 115, 101, 117, 109] => lookup_818(labels),
            [109, 117, 115, 105, 99] => lookup_819(),
            [109, 117, 116, 117, 97, 108] => lookup_820(),
            [109, 118] => lookup_821(labels),
            [109, 119] => lookup_822(labels),
            [109, 120] => lookup_823(labels),
            [109, 121] => lookup_824(labels),
            [109, 122] => lookup_825(labels),
            [110, 97] => lookup_826(labels),
            [110, 97, 98] => lookup_827(),
            [110, 97, 103, 111, 121, 97] => lookup_828(),
            [110, 97, 109, 101] => lookup_829(labels),
            [110, 97, 116, 117, 114, 97] => lookup_830(),
            [110, 97, 118, 121] => lookup_831(),
            [110, 98, 97] => lookup_832(),
            [110, 99] => lookup_833(labels),
            [110, 101] => lookup_834(),
            [110, 101, 99] => lookup_835(),
            [110, 101, 116] => lookup_836(labels),
            [110, 101, 116, 98, 97, 110, 107] => lookup_837(),
            [110, 101, 116, 102, 108, 105, 120] => lookup_838(),
            [110, 101, 116, 119, 111, 114, 107] => lookup_839(labels),
            [110, 101, 117, 115, 116, 97, 114] => lookup_840(),
            [110, 101, 119] => lookup_841(),
            [110, 101, 119, 115] => lookup_842(labels),
            [110, 101, 120, 116] => lookup_843(),
            [110, 101, 120, 116, 100, 105, 114, 101, 99, 116] => lookup_844(),
            [110, 101, 120, 117, 115] => lookup_845(),
            [110, 102] => lookup_846(labels),
            [110, 102, 108] => lookup_847(),
            [110, 103] => lookup_848(labels),
            [110, 103, 111] => lookup_849(),
            [110, 104, 107] => lookup_850(),
            [110, 105] => lookup_851(labels),
            [110, 105, 99, 111] => lookup_852(),
            [110, 105, 107, 101] => lookup_853(),
            [110, 105, 107, 111, 110] => lookup_854(),
            [110, 105, 110, 106, 97] => lookup_855(),
            [110, 105, 115, 115, 97, 110] => lookup_856(),
            [110, 105, 115, 115, 97, 121] => lookup_857(),
            [110, 108] => lookup_858(labels),
            [110, 111] => lookup_859(labels),
            [110, 111, 107, 105, 97] => lookup_860(),
            [110, 111, 114, 116, 104, 119, 101, 115, 116, 101, 114, 110, 109, 117, 116, 117, 97, 108] => {
                lookup_861()
            }
            [110, 111, 114, 116, 111, 110] => lookup_862(),
            [110, 111, 119] => lookup_863(),
            [110, 111, 119, 114, 117, 122] => lookup_864(),
            [110, 111, 119, 116, 118] => lookup_865(),
            [110, 112] => lookup_866(info, labels),
            [110, 114] => lookup_867(labels),
            [110, 114, 97] => lookup_868(),
            [110, 114, 119] => lookup_869(),
            [110, 116, 116] => lookup_870(),
            [110, 117] => lookup_871(labels),
            [110, 121, 99] => lookup_872(),
            [110, 122] => lookup_873(labels),
            [111, 98, 105] => lookup_874(),
            [111, 98, 115, 101, 114, 118, 101, 114] => lookup_875(),
            [111, 102, 102, 105, 99, 101] => lookup_876(),
            [111, 107, 105, 110, 97, 119, 97] => lookup_877(),
            [111, 108, 97, 121, 97, 110] => lookup_878(),
            [111, 108, 97, 121, 97, 110, 103, 114, 111, 117, 112] => lookup_879(),
            [111, 108, 100, 110, 97, 118, 121] => lookup_880(),
            [111, 108, 108, 111] => lookup_881(),
            [111, 109] => lookup_882(labels),
            [111, 109, 101, 103, 97] => lookup_883(),
            [111, 110, 101] => lookup_884(labels),
            [111, 110, 103] => lookup_885(),
            [111, 110, 105, 111, 110] => lookup_886(),
            [111, 110, 108] => lookup_887(),
            [111, 110, 108, 105, 110, 101] => lookup_888(labels),
            [111, 111, 111] => lookup_889(),
            [111, 112, 101, 110] => lookup_890(),
            [111, 114, 97, 99, 108, 101] => lookup_891(),
            [111, 114, 97, 110, 103, 101] => lookup_892(),
            [111, 114, 103] => lookup_893(labels),
            [111, 114, 103, 97, 110, 105, 99] => lookup_894(),
            [111, 114, 105, 103, 105, 110, 115] => lookup_895(),
            [111, 115, 97, 107, 97] => lookup_896(),
            [111, 116, 115, 117, 107, 97] => lookup_897(),
            [111, 116, 116] => lookup_898(),
            [111, 118, 104] => lookup_899(labels),
            [112, 97] => lookup_900(labels),
            [112, 97, 103, 101] => lookup_901(labels),
            [112, 97, 110, 97, 115, 111, 110, 105, 99] => lookup_902(),
            [112, 97, 114, 105, 115] => lookup_903(),
            [112, 97, 114, 115] => lookup_904(),
            [112, 97, 114, 116, 110, 101, 114, 115] => lookup_905(),
            [112, 97, 114, 116, 115] => lookup_906(),
            [112, 97, 114, 116, 121] => lookup_907(labels),
            [112, 97, 115, 115, 97, 103, 101, 110, 115] => lookup_908(),
            [112, 97, 121] => lookup_909(),
            [112, 99, 99, 119] => lookup_910(),
            [112, 101] => lookup_911(labels),
            [112, 101, 116] => lookup_912(),
            [112, 102] => lookup_913(labels),
            [112, 102, 105, 122, 101, 114] => lookup_914(),
            [112, 103] => lookup_915(info, labels),
            [112, 104] => lookup_916(labels),
            [112, 104, 97, 114, 109, 97, 99, 121] => lookup_917(),
            [112, 104, 100] => lookup_918(),
            [112, 104, 105, 108, 105, 112, 115] => lookup_919(),
            [112, 104, 111, 110, 101] => lookup_920(),
            [112, 104, 111, 116, 111] => lookup_921(),
            [112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 121] => lookup_922(),
            [112, 104, 111, 116, 111, 115] => lookup_923(),
            [112, 104, 121, 115, 105, 111] => lookup_924(),
            [112, 105, 99, 115] => lookup_925(),
            [112, 105, 99, 116, 101, 116] => lookup_926(),
            [112, 105, 99, 116, 117, 114, 101, 115] => lookup_927(labels),
            [112, 105, 100] => lookup_928(),
            [112, 105, 110] => lookup_929(),
            [112, 105, 110, 103] => lookup_930(),
            [112, 105, 110, 107] => lookup_931(),
            [112, 105, 111, 110, 101, 101, 114] => lookup_932(),
            [112, 105, 122, 122, 97] => lookup_933(),
            [112, 107] => lookup_934(labels),
            [112, 108] => lookup_935(labels),
            [112, 108, 97, 99, 101] => lookup_936(labels),
            [112, 108, 97, 121] => lookup_937(),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110] => lookup_938(),
            [112, 108, 117, 109, 98, 105, 110, 103] => lookup_939(),
            [112, 108, 117, 115] => lookup_940(),
            [112, 109] => lookup_941(labels),
            [112, 110] => lookup_942(labels),
            [112, 110, 99] => lookup_943(),
            [112, 111, 104, 108] => lookup_944(),
            [112, 111, 107, 101, 114] => lookup_945(),
            [112, 111, 108, 105, 116, 105, 101] => lookup_946(),
            [112, 111, 114, 110] => lookup_947(labels),
            [112, 111, 115, 116] => lookup_948(),
            [112, 114] => lookup_949(labels),
            [112, 114, 97, 109, 101, 114, 105, 99, 97] => lookup_950(),
            [112, 114, 97, 120, 105] => lookup_951(),
            [112, 114, 101, 115, 115] => lookup_952(),
            [112, 114, 105, 109, 101] => lookup_953(),
            [112, 114, 111] => lookup_954(labels),
            [112, 114, 111, 100] => lookup_955(),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110, 115] => lookup_956(),
            [112, 114, 111, 102] => lookup_957(),
            [112, 114, 111, 103, 114, 101, 115, 115, 105, 118, 101] => lookup_958(),
            [112, 114, 111, 109, 111] => lookup_959(),
            [112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => lookup_960(),
            [112, 114, 111, 112, 101, 114, 116, 121] => lookup_961(),
            [112, 114, 111, 116, 101, 99, 116, 105, 111, 110] => lookup_962(),
            [112, 114, 117] => lookup_963(),
            [112, 114, 117, 100, 101, 110, 116, 105, 97, 108] => lookup_964(),
            [112, 115] => lookup_965(labels),
            [112, 116] => lookup_966(labels),
            [112, 117, 98] => lookup_967(labels),
            [112, 119] => lookup_968(labels),
            [112, 119, 99] => lookup_969(),
            [112, 121] => lookup_970(labels),
            [113, 97] => lookup_971(labels),
            [113, 112, 111, 110] => lookup_972(),
            [113, 117, 101, 98, 101, 99] => lookup_973(),
            [113, 117, 101, 115, 116] => lookup_974(),
            [114, 97, 99, 105, 110, 103] => lookup_975(),
            [114, 97, 100, 105, 111] => lookup_976(),
            [114, 101] => lookup_977(labels),
            [114, 101, 97, 100] => lookup_978(),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_979(),
            [114, 101, 97, 108, 116, 111, 114] => lookup_980(),
            [114, 101, 97, 108, 116, 121] => lookup_981(),
            [114, 101, 99, 105, 112, 101, 115] => lookup_982(),
            [114, 101, 100] => lookup_983(),
            [114, 101, 100, 115, 116, 111, 110, 101] => lookup_984(),
            [114, 101, 100, 117, 109, 98, 114, 101, 108, 108, 97] => lookup_985(),
            [114, 101, 104, 97, 98] => lookup_986(),
            [114, 101, 105, 115, 101] => lookup_987(),
            [114, 101, 105, 115, 101, 110] => lookup_988(),
            [114, 101, 105, 116] => lookup_989(),
            [114, 101, 108, 105, 97, 110, 99, 101] => lookup_990(),
            [114, 101, 110] => lookup_991(),
            [114, 101, 110, 116] => lookup_992(),
            [114, 101, 110, 116, 97, 108, 115] => lookup_993(),
            [114, 101, 112, 97, 105, 114] => lookup_994(),
            [114, 101, 112, 111, 114, 116] => lookup_995(),
            [114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => lookup_996(),
            [114, 101, 115, 116] => lookup_997(),
            [114, 101, 115, 116, 97, 117, 114, 97, 110, 116] => lookup_998(),
            [114, 101, 118, 105, 101, 119] => lookup_999(labels),
            [114, 101, 118, 105, 101, 119, 115] => lookup_1000(),
            [114, 101, 120, 114, 111, 116, 104] => lookup_1001(),
            [114, 105, 99, 104] => lookup_1002(),
            [114, 105, 99, 104, 97, 114, 100, 108, 105] => lookup_1003(),
            [114, 105, 99, 111, 104] => lookup_1004(),
            [114, 105, 108] => lookup_1005(),
            [114, 105, 111] => lookup_1006(),
            [114, 105, 112] => lookup_1007(labels),
            [114, 111] => lookup_1008(labels),
            [114, 111, 99, 104, 101, 114] => lookup_1009(),
            [114, 111, 99, 107, 115] => lookup_1010(labels),
            [114, 111, 100, 101, 111] => lookup_1011(),
            [114, 111, 103, 101, 114, 115] => lookup_1012(),
            [114, 111, 111, 109] => lookup_1013(),
            [114, 115] => lookup_1014(labels),
            [114, 115, 118, 112] => lookup_1015(),
            [114, 117] => lookup_1016(labels),
            [114, 117, 103, 98, 121] => lookup_1017(),
            [114, 117, 104, 114] => lookup_1018(),
            [114, 117, 110] => lookup_1019(labels),
            [114, 119] => lookup_1020(labels),
            [114, 119, 101] => lookup_1021(),
            [114, 121, 117, 107, 121, 117] => lookup_1022(),
            [115, 97] => lookup_1023(labels),
            [115, 97, 97, 114, 108, 97, 110, 100] => lookup_1024(),
            [115, 97, 102, 101] => lookup_1025(),
            [115, 97, 102, 101, 116, 121] => lookup_1026(),
            [115, 97, 107, 117, 114, 97] => lookup_1027(),
            [115, 97, 108, 101] => lookup_1028(labels),
            [115, 97, 108, 111, 110] => lookup_1029(),
            [115, 97, 109, 115, 99, 108, 117, 98] => lookup_1030(),
            [115, 97, 109, 115, 117, 110, 103] => lookup_1031(),
            [115, 97, 110, 100, 118, 105, 107] => lookup_1032(),
            [115, 97, 110, 100, 118, 105, 107, 99, 111, 114, 111, 109, 97, 110, 116] => {
                lookup_1033()
            }
            [115, 97, 110, 111, 102, 105] => lookup_1034(),
            [115, 97, 112] => lookup_1035(),
            [115, 97, 114, 108] => lookup_1036(),
            [115, 97, 115] => lookup_1037(),
            [115, 97, 118, 101] => lookup_1038(),
            [115, 97, 120, 111] => lookup_1039(),
            [115, 98] => lookup_1040(labels),
            [115, 98, 105] => lookup_1041(),
            [115, 98, 115] => lookup_1042(),
            [115, 99] => lookup_1043(labels),
            [115, 99, 97] => lookup_1044(),
            [115, 99, 98] => lookup_1045(),
            [115, 99, 104, 97, 101, 102, 102, 108, 101, 114] => lookup_1046(),
            [115, 99, 104, 109, 105, 100, 116] => lookup_1047(),
            [115, 99, 104, 111, 108, 97, 114, 115, 104, 105, 112, 115] => lookup_1048(),
            [115, 99, 104, 111, 111, 108] => lookup_1049(),
            [115, 99, 104, 117, 108, 101] => lookup_1050(),
            [115, 99, 104, 119, 97, 114, 122] => lookup_1051(),
            [115, 99, 105, 101, 110, 99, 101] => lookup_1052(labels),
            [115, 99, 111, 116] => lookup_1053(labels),
            [115, 100] => lookup_1054(labels),
            [115, 101] => lookup_1055(labels),
            [115, 101, 97, 114, 99, 104] => lookup_1056(),
            [115, 101, 97, 116] => lookup_1057(),
            [115, 101, 99, 117, 114, 101] => lookup_1058(),
            [115, 101, 99, 117, 114, 105, 116, 121] => lookup_1059(),
            [115, 101, 101, 107] => lookup_1060(),
            [115, 101, 108, 101, 99, 116] => lookup_1061(),
            [115, 101, 110, 101, 114] => lookup_1062(),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_1063(labels),
            [115, 101, 115] => lookup_1064(),
            [115, 101, 118, 101, 110] => lookup_1065(),
            [115, 101, 119] => lookup_1066(),
            [115, 101, 120] => lookup_1067(),
            [115, 101, 120, 121] => lookup_1068(),
            [115, 102, 114] => lookup_1069(),
            [115, 103] => lookup_1070(labels),
            [115, 104] => lookup_1071(labels),
            [115, 104, 97, 110, 103, 114, 105, 108, 97] => lookup_1072(),
            [115, 104, 97, 114, 112] => lookup_1073(),
            [115, 104, 97, 119] => lookup_1074(),
            [115, 104, 101, 108, 108] => lookup_1075(),
            [115, 104, 105, 97] => lookup_1076(),
            [115, 104, 105, 107, 115, 104, 97] => lookup_1077(),
            [115, 104, 111, 101, 115] => lookup_1078(),
            [115, 104, 111, 112] => lookup_1079(labels),
            [115, 104, 111, 112, 112, 105, 110, 103] => lookup_1080(),
            [115, 104, 111, 117, 106, 105] => lookup_1081(),
            [115, 104, 111, 119] => lookup_1082(),
            [115, 104, 111, 119, 116, 105, 109, 101] => lookup_1083(),
            [115, 105] => lookup_1084(labels),
            [115, 105, 108, 107] => lookup_1085(),
            [115, 105, 110, 97] => lookup_1086(),
            [115, 105, 110, 103, 108, 101, 115] => lookup_1087(),
            [115, 105, 116, 101] => lookup_1088(labels),
            [115, 106] => lookup_1089(),
            [115, 107] => lookup_1090(labels),
            [115, 107, 105] => lookup_1091(),
            [115, 107, 105, 110] => lookup_1092(),
            [115, 107, 121] => lookup_1093(),
            [115, 107, 121, 112, 101] => lookup_1094(),
            [115, 108] => lookup_1095(labels),
            [115, 108, 105, 110, 103] => lookup_1096(),
            [115, 109] => lookup_1097(),
            [115, 109, 97, 114, 116] => lookup_1098(),
            [115, 109, 105, 108, 101] => lookup_1099(),
            [115, 110] => lookup_1100(labels),
            [115, 110, 99, 102] => lookup_1101(),
            [115, 111] => lookup_1102(labels),
            [115, 111, 99, 99, 101, 114] => lookup_1103(),
            [115, 111, 99, 105, 97, 108] => lookup_1104(),
            [115, 111, 102, 116, 98, 97, 110, 107] => lookup_1105(),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_1106(),
            [115, 111, 104, 117] => lookup_1107(),
            [115, 111, 108, 97, 114] => lookup_1108(),
            [115, 111, 108, 117, 116, 105, 111, 110, 115] => lookup_1109(labels),
            [115, 111, 110, 103] => lookup_1110(),
            [115, 111, 110, 121] => lookup_1111(),
            [115, 111, 121] => lookup_1112(),
            [115, 112, 97] => lookup_1113(),
            [115, 112, 97, 99, 101] => lookup_1114(labels),
            [115, 112, 111, 114, 116] => lookup_1115(),
            [115, 112, 111, 116] => lookup_1116(),
            [115, 114] => lookup_1117(),
            [115, 114, 108] => lookup_1118(),
            [115, 115] => lookup_1119(labels),
            [115, 116] => lookup_1120(labels),
            [115, 116, 97, 100, 97] => lookup_1121(),
            [115, 116, 97, 112, 108, 101, 115] => lookup_1122(),
            [115, 116, 97, 114] => lookup_1123(),
            [115, 116, 97, 116, 101, 98, 97, 110, 107] => lookup_1124(),
            [115, 116, 97, 116, 101, 102, 97, 114, 109] => lookup_1125(),
            [115, 116, 99] => lookup_1126(),
            [115, 116, 99, 103, 114, 111, 117, 112] => lookup_1127(),
            [115, 116, 111, 99, 107, 104, 111, 108, 109] => lookup_1128(),
            [115, 116, 111, 114, 97, 103, 101] => lookup_1129(),
            [115, 116, 111, 114, 101] => lookup_1130(labels),
            [115, 116, 114, 101, 97, 109] => lookup_1131(),
            [115, 116, 117, 100, 105, 111] => lookup_1132(),
            [115, 116, 117, 100, 121] => lookup_1133(),
            [115, 116, 121, 108, 101] => lookup_1134(),
            [115, 117] => lookup_1135(labels),
            [115, 117, 99, 107, 115] => lookup_1136(),
            [115, 117, 112, 112, 108, 105, 101, 115] => lookup_1137(),
            [115, 117, 112, 112, 108, 121] => lookup_1138(),
            [115, 117, 112, 112, 111, 114, 116] => lookup_1139(labels),
            [115, 117, 114, 102] => lookup_1140(),
            [115, 117, 114, 103, 101, 114, 121] => lookup_1141(),
            [115, 117, 122, 117, 107, 105] => lookup_1142(),
            [115, 118] => lookup_1143(labels),
            [115, 119, 97, 116, 99, 104] => lookup_1144(),
            [115, 119, 105, 115, 115] => lookup_1145(),
            [115, 120] => lookup_1146(labels),
            [115, 121] => lookup_1147(labels),
            [115, 121, 100, 110, 101, 121] => lookup_1148(),
            [115, 121, 115, 116, 101, 109, 115] => lookup_1149(labels),
            [115, 122] => lookup_1150(labels),
            [116, 97, 98] => lookup_1151(),
            [116, 97, 105, 112, 101, 105] => lookup_1152(),
            [116, 97, 108, 107] => lookup_1153(),
            [116, 97, 111, 98, 97, 111] => lookup_1154(),
            [116, 97, 114, 103, 101, 116] => lookup_1155(),
            [116, 97, 116, 97, 109, 111, 116, 111, 114, 115] => lookup_1156(),
            [116, 97, 116, 97, 114] => lookup_1157(),
            [116, 97, 116, 116, 111, 111] => lookup_1158(),
            [116, 97, 120] => lookup_1159(),
            [116, 97, 120, 105] => lookup_1160(),
            [116, 99] => lookup_1161(labels),
            [116, 99, 105] => lookup_1162(),
            [116, 100] => lookup_1163(labels),
            [116, 100, 107] => lookup_1164(),
            [116, 101, 97, 109] => lookup_1165(labels),
            [116, 101, 99, 104] => lookup_1166(),
            [116, 101, 99, 104, 110, 111, 108, 111, 103, 121] => lookup_1167(labels),
            [116, 101, 108] => lookup_1168(),
            [116, 101, 109, 97, 115, 101, 107] => lookup_1169(),
            [116, 101, 110, 110, 105, 115] => lookup_1170(),
            [116, 101, 118, 97] => lookup_1171(),
            [116, 102] => lookup_1172(),
            [116, 103] => lookup_1173(),
            [116, 104] => lookup_1174(labels),
            [116, 104, 100] => lookup_1175(),
            [116, 104, 101, 97, 116, 101, 114] => lookup_1176(),
            [116, 104, 101, 97, 116, 114, 101] => lookup_1177(),
            [116, 105, 97, 97] => lookup_1178(),
            [116, 105, 99, 107, 101, 116, 115] => lookup_1179(),
            [116, 105, 101, 110, 100, 97] => lookup_1180(),
            [116, 105, 102, 102, 97, 110, 121] => lookup_1181(),
            [116, 105, 112, 115] => lookup_1182(),
            [116, 105, 114, 101, 115] => lookup_1183(),
            [116, 105, 114, 111, 108] => lookup_1184(),
            [116, 106] => lookup_1185(labels),
            [116, 106, 109, 97, 120, 120] => lookup_1186(),
            [116, 106, 120] => lookup_1187(),
            [116, 107] => lookup_1188(),
            [116, 107, 109, 97, 120, 120] => lookup_1189(),
            [116, 108] => lookup_1190(labels),
            [116, 109] => lookup_1191(labels),
            [116, 109, 97, 108, 108] => lookup_1192(),
            [116, 110] => lookup_1193(labels),
            [116, 111] => lookup_1194(labels),
            [116, 111, 100, 97, 121] => lookup_1195(labels),
            [116, 111, 107, 121, 111] => lookup_1196(),
            [116, 111, 111, 108, 115] => lookup_1197(),
            [116, 111, 112] => lookup_1198(labels),
            [116, 111, 114, 97, 121] => lookup_1199(),
            [116, 111, 115, 104, 105, 98, 97] => lookup_1200(),
            [116, 111, 116, 97, 108] => lookup_1201(),
            [116, 111, 117, 114, 115] => lookup_1202(),
            [116, 111, 119, 110] => lookup_1203(),
            [116, 111, 121, 111, 116, 97] => lookup_1204(),
            [116, 111, 121, 115] => lookup_1205(),
            [116, 114] => lookup_1206(labels),
            [116, 114, 97, 100, 101] => lookup_1207(labels),
            [116, 114, 97, 100, 105, 110, 103] => lookup_1208(),
            [116, 114, 97, 105, 110, 105, 110, 103] => lookup_1209(),
            [116, 114, 97, 118, 101, 108] => lookup_1210(),
            [116, 114, 97, 118, 101, 108, 99, 104, 97, 110, 110, 101, 108] => lookup_1211(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115] => lookup_1212(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_1213()
            }
            [116, 114, 117, 115, 116] => lookup_1214(),
            [116, 114, 118] => lookup_1215(),
            [116, 116] => lookup_1216(labels),
            [116, 117, 98, 101] => lookup_1217(),
            [116, 117, 105] => lookup_1218(),
            [116, 117, 110, 101, 115] => lookup_1219(),
            [116, 117, 115, 104, 117] => lookup_1220(),
            [116, 118] => lookup_1221(labels),
            [116, 118, 115] => lookup_1222(),
            [116, 119] => lookup_1223(labels),
            [116, 122] => lookup_1224(labels),
            [117, 97] => lookup_1225(labels),
            [117, 98, 97, 110, 107] => lookup_1226(),
            [117, 98, 115] => lookup_1227(),
            [117, 103] => lookup_1228(labels),
            [117, 107] => lookup_1229(labels),
            [117, 110, 105, 99, 111, 109] => lookup_1230(),
            [117, 110, 105, 118, 101, 114, 115, 105, 116, 121] => lookup_1231(),
            [117, 110, 111] => lookup_1232(),
            [117, 111, 108] => lookup_1233(),
            [117, 112, 115] => lookup_1234(),
            [117, 115] => lookup_1235(labels),
            [117, 121] => lookup_1236(labels),
            [117, 122] => lookup_1237(labels),
            [118, 97] => lookup_1238(),
            [118, 97, 99, 97, 116, 105, 111, 110, 115] => lookup_1239(),
            [118, 97, 110, 97] => lookup_1240(),
            [118, 97, 110, 103, 117, 97, 114, 100] => lookup_1241(),
            [118, 99] => lookup_1242(labels),
            [118, 101] => lookup_1243(labels),
            [118, 101, 103, 97, 115] => lookup_1244(),
            [118, 101, 110, 116, 117, 114, 101, 115] => lookup_1245(),
            [118, 101, 114, 105, 115, 105, 103, 110] => lookup_1246(),
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114] => {
                lookup_1247()
            }
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103] => {
                lookup_1248()
            }
            [118, 101, 114, 115, 105, 99, 104, 101, 114, 117, 110, 103] => lookup_1249(),
            [118, 101, 116] => lookup_1250(),
            [118, 103] => lookup_1251(labels),
            [118, 105] => lookup_1252(labels),
            [118, 105, 97, 106, 101, 115] => lookup_1253(),
            [118, 105, 100, 101, 111] => lookup_1254(),
            [118, 105, 103] => lookup_1255(),
            [118, 105, 107, 105, 110, 103] => lookup_1256(),
            [118, 105, 108, 108, 97, 115] => lookup_1257(),
            [118, 105, 110] => lookup_1258(),
            [118, 105, 112] => lookup_1259(),
            [118, 105, 114, 103, 105, 110] => lookup_1260(),
            [118, 105, 115, 97] => lookup_1261(),
            [118, 105, 115, 105, 111, 110] => lookup_1262(),
            [118, 105, 118, 97] => lookup_1263(),
            [118, 105, 118, 111] => lookup_1264(),
            [118, 108, 97, 97, 110, 100, 101, 114, 101, 110] => lookup_1265(),
            [118, 110] => lookup_1266(labels),
            [118, 111, 100, 107, 97] => lookup_1267(),
            [118, 111, 108, 107, 115, 119, 97, 103, 101, 110] => lookup_1268(),
            [118, 111, 108, 118, 111] => lookup_1269(),
            [118, 111, 116, 101] => lookup_1270(),
            [118, 111, 116, 105, 110, 103] => lookup_1271(),
            [118, 111, 116, 111] => lookup_1272(),
            [118, 111, 121, 97, 103, 101] => lookup_1273(),
            [118, 117] => lookup_1274(labels),
            [118, 117, 101, 108, 111, 115] => lookup_1275(),
            [119, 97, 108, 101, 115] => lookup_1276(),
            [119, 97, 108, 109, 97, 114, 116] => lookup_1277(),
            [119, 97, 108, 116, 101, 114] => lookup_1278(),
            [119, 97, 110, 103] => lookup_1279(),
            [119, 97, 110, 103, 103, 111, 117] => lookup_1280(),
            [119, 97, 116, 99, 104] => lookup_1281(),
            [119, 97, 116, 99, 104, 101, 115] => lookup_1282(),
            [119, 101, 97, 116, 104, 101, 114] => lookup_1283(),
            [119, 101, 97, 116, 104, 101, 114, 99, 104, 97, 110, 110, 101, 108] => lookup_1284(),
            [119, 101, 98, 99, 97, 109] => lookup_1285(),
            [119, 101, 98, 101, 114] => lookup_1286(),
            [119, 101, 98, 115, 105, 116, 101] => lookup_1287(),
            [119, 101, 100, 100, 105, 110, 103] => lookup_1288(),
            [119, 101, 105, 98, 111] => lookup_1289(),
            [119, 101, 105, 114] => lookup_1290(),
            [119, 102] => lookup_1291(),
            [119, 104, 111, 115, 119, 104, 111] => lookup_1292(),
            [119, 105, 101, 110] => lookup_1293(),
            [119, 105, 107, 105] => lookup_1294(),
            [119, 105, 108, 108, 105, 97, 109, 104, 105, 108, 108] => lookup_1295(),
            [119, 105, 110] => lookup_1296(labels),
            [119, 105, 110, 100, 111, 119, 115] => lookup_1297(),
            [119, 105, 110, 101] => lookup_1298(),
            [119, 105, 110, 110, 101, 114, 115] => lookup_1299(),
            [119, 109, 101] => lookup_1300(),
            [119, 111, 108, 116, 101, 114, 115, 107, 108, 117, 119, 101, 114] => lookup_1301(),
            [119, 111, 111, 100, 115, 105, 100, 101] => lookup_1302(),
            [119, 111, 114, 107] => lookup_1303(labels),
            [119, 111, 114, 107, 115] => lookup_1304(),
            [119, 111, 114, 108, 100] => lookup_1305(),
            [119, 111, 119] => lookup_1306(),
            [119, 115] => lookup_1307(labels),
            [119, 116, 99] => lookup_1308(),
            [119, 116, 102] => lookup_1309(),
            [120, 98, 111, 120] => lookup_1310(),
            [120, 101, 114, 111, 120] => lookup_1311(),
            [120, 102, 105, 110, 105, 116, 121] => lookup_1312(),
            [120, 105, 104, 117, 97, 110] => lookup_1313(),
            [120, 105, 110] => lookup_1314(),
            [120, 110, 45, 45, 49, 49, 98, 52, 99, 51, 100] => lookup_1315(),
            [120, 110, 45, 45, 49, 99, 107, 50, 101, 49, 98] => lookup_1316(),
            [120, 110, 45, 45, 49, 113, 113, 119, 50, 51, 97] => lookup_1317(),
            [120, 110, 45, 45, 50, 115, 99, 114, 106, 57, 99] => lookup_1318(),
            [120, 110, 45, 45, 51, 48, 114, 114, 55, 121] => lookup_1319(),
            [120, 110, 45, 45, 51, 98, 115, 116, 48, 48, 109] => lookup_1320(),
            [120, 110, 45, 45, 51, 100, 115, 52, 52, 51, 103] => lookup_1321(),
            [120, 110, 45, 45, 51, 101, 48, 98, 55, 48, 55, 101] => lookup_1322(),
            [120, 110, 45, 45, 51, 104, 99, 114, 106, 57, 99] => lookup_1323(),
            [120, 110, 45, 45, 51, 112, 120, 117, 56, 107] => lookup_1324(),
            [120, 110, 45, 45, 52, 50, 99, 50, 100, 57, 97] => lookup_1325(),
            [120, 110, 45, 45, 52, 53, 98, 114, 53, 99, 121, 108] => lookup_1326(),
            [120, 110, 45, 45, 52, 53, 98, 114, 106, 57, 99] => lookup_1327(),
            [120, 110, 45, 45, 52, 53, 113, 49, 49, 99] => lookup_1328(),
            [120, 110, 45, 45, 52, 103, 98, 114, 105, 109] => lookup_1329(),
            [120, 110, 45, 45, 53, 52, 98, 55, 102, 116, 97, 48, 99, 99] => lookup_1330(),
            [120, 110, 45, 45, 53, 53, 113, 119, 52, 50, 103] => lookup_1331(),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1332(),
            [120, 110, 45, 45, 53, 115, 117, 51, 52, 106, 57, 51, 54, 98, 103, 115, 103] => {
                lookup_1333()
            }
            [120, 110, 45, 45, 53, 116, 122, 109, 53, 103] => lookup_1334(),
            [120, 110, 45, 45, 54, 102, 114, 122, 56, 50, 103] => lookup_1335(),
            [120, 110, 45, 45, 54, 113, 113, 57, 56, 54, 98, 51, 120, 108] => lookup_1336(),
            [120, 110, 45, 45, 56, 48, 97, 100, 120, 104, 107, 115] => lookup_1337(),
            [120, 110, 45, 45, 56, 48, 97, 111, 50, 49, 97] => lookup_1338(),
            [120, 110, 45, 45, 56, 48, 97, 113, 101, 99, 100, 114, 49, 97] => lookup_1339(),
            [120, 110, 45, 45, 56, 48, 97, 115, 101, 104, 100, 98] => lookup_1340(),
            [120, 110, 45, 45, 56, 48, 97, 115, 119, 103] => lookup_1341(),
            [120, 110, 45, 45, 56, 121, 48, 97, 48, 54, 51, 97] => lookup_1342(),
            [120, 110, 45, 45, 57, 48, 97, 51, 97, 99] => lookup_1343(labels),
            [120, 110, 45, 45, 57, 48, 97, 101] => lookup_1344(),
            [120, 110, 45, 45, 57, 48, 97, 105, 115] => lookup_1345(),
            [120, 110, 45, 45, 57, 100, 98, 113, 50, 97] => lookup_1346(),
            [120, 110, 45, 45, 57, 101, 116, 53, 50, 117] => lookup_1347(),
            [120, 110, 45, 45, 57, 107, 114, 116, 48, 48, 97] => lookup_1348(),
            [120, 110, 45, 45, 98, 52, 119, 54, 48, 53, 102, 101, 114, 100] => lookup_1349(),
            [120, 110, 45, 45, 98, 99, 107, 49, 98, 57, 97, 53, 100, 114, 101, 52, 99] => {
                lookup_1350()
            }
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1351(),
            [120, 110, 45, 45, 99, 50, 98, 114, 55, 103] => lookup_1352(),
            [120, 110, 45, 45, 99, 99, 107, 50, 98, 51, 98] => lookup_1353(),
            [120, 110, 45, 45, 99, 99, 107, 119, 99, 120, 101, 116, 100] => lookup_1354(),
            [120, 110, 45, 45, 99, 103, 52, 98, 107, 105] => lookup_1355(),
            [120, 110, 45, 45, 99, 108, 99, 104, 99, 48, 101, 97, 48, 98, 50, 103, 50, 97, 57, 103, 99, 100] => {
                lookup_1356()
            }
            [120, 110, 45, 45, 99, 122, 114, 54, 57, 52, 98] => lookup_1357(),
            [120, 110, 45, 45, 99, 122, 114, 115, 48, 116] => lookup_1358(),
            [120, 110, 45, 45, 99, 122, 114, 117, 50, 100] => lookup_1359(),
            [120, 110, 45, 45, 100, 49, 97, 99, 106, 51, 98] => lookup_1360(),
            [120, 110, 45, 45, 100, 49, 97, 108, 102] => lookup_1361(),
            [120, 110, 45, 45, 101, 49, 97, 52, 99] => lookup_1362(),
            [120, 110, 45, 45, 101, 99, 107, 118, 100, 116, 99, 57, 100] => lookup_1363(),
            [120, 110, 45, 45, 101, 102, 118, 121, 56, 56, 104] => lookup_1364(),
            [120, 110, 45, 45, 102, 99, 116, 52, 50, 57, 107] => lookup_1365(),
            [120, 110, 45, 45, 102, 104, 98, 101, 105] => lookup_1366(),
            [120, 110, 45, 45, 102, 105, 113, 50, 50, 56, 99, 53, 104, 115] => lookup_1367(),
            [120, 110, 45, 45, 102, 105, 113, 54, 52, 98] => lookup_1368(),
            [120, 110, 45, 45, 102, 105, 113, 115, 56, 115] => lookup_1369(),
            [120, 110, 45, 45, 102, 105, 113, 122, 57, 115] => lookup_1370(),
            [120, 110, 45, 45, 102, 106, 113, 55, 50, 48, 97] => lookup_1371(),
            [120, 110, 45, 45, 102, 108, 119, 51, 53, 49, 101] => lookup_1372(),
            [120, 110, 45, 45, 102, 112, 99, 114, 106, 57, 99, 51, 100] => lookup_1373(),
            [120, 110, 45, 45, 102, 122, 99, 50, 99, 57, 101, 50, 99] => lookup_1374(),
            [120, 110, 45, 45, 102, 122, 121, 115, 56, 100, 54, 57, 117, 118, 103, 109] => {
                lookup_1375()
            }
            [120, 110, 45, 45, 103, 50, 120, 120, 52, 56, 99] => lookup_1376(),
            [120, 110, 45, 45, 103, 99, 107, 114, 51, 102, 48, 102] => lookup_1377(),
            [120, 110, 45, 45, 103, 101, 99, 114, 106, 57, 99] => lookup_1378(),
            [120, 110, 45, 45, 103, 107, 51, 97, 116, 49, 101] => lookup_1379(),
            [120, 110, 45, 45, 104, 50, 98, 114, 101, 103, 51, 101, 118, 101] => lookup_1380(),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99] => lookup_1381(),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99, 56, 99] => lookup_1382(),
            [120, 110, 45, 45, 104, 120, 116, 56, 49, 52, 101] => lookup_1383(),
            [120, 110, 45, 45, 105, 49, 98, 54, 98, 49, 97, 54, 97, 50, 101] => lookup_1384(),
            [120, 110, 45, 45, 105, 109, 114, 53, 49, 51, 110] => lookup_1385(),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_1386(),
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_1387(),
            [120, 110, 45, 45, 106, 49, 97, 109, 104] => lookup_1388(),
            [120, 110, 45, 45, 106, 54, 119, 49, 57, 51, 103] => lookup_1389(labels),
            [120, 110, 45, 45, 106, 108, 113, 52, 56, 48, 110, 50, 114, 103] => lookup_1390(),
            [120, 110, 45, 45, 106, 108, 113, 54, 49, 117, 57, 119, 55, 98] => lookup_1391(),
            [120, 110, 45, 45, 106, 118, 114, 49, 56, 57, 109] => lookup_1392(),
            [120, 110, 45, 45, 107, 99, 114, 120, 55, 55, 100, 49, 120, 52, 97] => lookup_1393(),
            [120, 110, 45, 45, 107, 112, 114, 119, 49, 51, 100] => lookup_1394(),
            [120, 110, 45, 45, 107, 112, 114, 121, 53, 55, 100] => lookup_1395(),
            [120, 110, 45, 45, 107, 112, 117, 116, 51, 105] => lookup_1396(),
            [120, 110, 45, 45, 108, 49, 97, 99, 99] => lookup_1397(),
            [120, 110, 45, 45, 108, 103, 98, 98, 97, 116, 49, 97, 100, 56, 106] => lookup_1398(),
            [120, 110, 45, 45, 109, 103, 98, 50, 100, 100, 101, 115] => lookup_1399(),
            [120, 110, 45, 45, 109, 103, 98, 57, 97, 119, 98, 102] => lookup_1400(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 51, 101, 106, 116] => lookup_1401(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_1402(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_1403(),
            [120, 110, 45, 45, 109, 103, 98, 97, 55, 99, 48, 98, 98, 110, 48, 97] => lookup_1404(),
            [120, 110, 45, 45, 109, 103, 98, 97, 97, 107, 99, 55, 100, 118, 102] => lookup_1405(),
            [120, 110, 45, 45, 109, 103, 98, 97, 97, 109, 55, 97, 56, 104] => lookup_1406(),
            [120, 110, 45, 45, 109, 103, 98, 97, 98, 50, 98, 100] => lookup_1407(),
            [120, 110, 45, 45, 109, 103, 98, 97, 104, 49, 97, 51, 104, 106, 107, 114, 100] => {
                lookup_1408()
            }
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 53, 101, 118, 97, 48, 48, 98] => {
                lookup_1409()
            }
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 122, 103, 113, 112, 54, 106] => {
                lookup_1410()
            }
            [120, 110, 45, 45, 109, 103, 98, 97, 121, 104, 55, 103, 112, 97] => lookup_1411(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97] => lookup_1412(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97, 55, 49, 101] => lookup_1413(),
            [120, 110, 45, 45, 109, 103, 98, 99, 48, 97, 57, 97, 122, 99, 103] => lookup_1414(),
            [120, 110, 45, 45, 109, 103, 98, 99, 97, 55, 100, 122, 100, 111] => lookup_1415(),
            [120, 110, 45, 45, 109, 103, 98, 99, 112, 113, 54, 103, 112, 97, 49, 97] => {
                lookup_1416()
            }
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 56, 55, 103] => {
                lookup_1417()
            }
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 114] => {
                lookup_1418()
            }
            [120, 110, 45, 45, 109, 103, 98, 103, 117, 56, 50, 97] => lookup_1419(),
            [120, 110, 45, 45, 109, 103, 98, 105, 52, 101, 99, 101, 120, 112] => lookup_1420(),
            [120, 110, 45, 45, 109, 103, 98, 112, 108, 50, 102, 104] => lookup_1421(),
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 48, 97, 54, 55, 102, 98, 99] => {
                lookup_1422()
            }
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 118, 97, 102, 114] => {
                lookup_1423()
            }
            [120, 110, 45, 45, 109, 103, 98, 116, 51, 100, 104, 100] => lookup_1424(),
            [120, 110, 45, 45, 109, 103, 98, 116, 102, 56, 102, 108] => lookup_1425(),
            [120, 110, 45, 45, 109, 103, 98, 116, 120, 50, 98] => lookup_1426(),
            [120, 110, 45, 45, 109, 103, 98, 120, 52, 99, 100, 48, 97, 98] => lookup_1427(),
            [120, 110, 45, 45, 109, 105, 120, 48, 56, 50, 102] => lookup_1428(),
            [120, 110, 45, 45, 109, 105, 120, 56, 57, 49, 102] => lookup_1429(),
            [120, 110, 45, 45, 109, 107, 49, 98, 117, 52, 52, 99] => lookup_1430(),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_1431(),
            [120, 110, 45, 45, 110, 103, 98, 99, 53, 97, 122, 100] => lookup_1432(),
            [120, 110, 45, 45, 110, 103, 98, 101, 57, 101, 48, 97] => lookup_1433(),
            [120, 110, 45, 45, 110, 103, 98, 114, 120] => lookup_1434(),
            [120, 110, 45, 45, 110, 110, 120, 51, 56, 56, 97] => lookup_1435(),
            [120, 110, 45, 45, 110, 111, 100, 101] => lookup_1436(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102] => lookup_1437(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102, 115, 48, 48, 101, 109, 97] => lookup_1438(),
            [120, 110, 45, 45, 110, 121, 113, 121, 50, 54, 97] => lookup_1439(),
            [120, 110, 45, 45, 111, 51, 99, 119, 52, 104] => lookup_1440(labels),
            [120, 110, 45, 45, 111, 103, 98, 112, 102, 56, 102, 108] => lookup_1441(),
            [120, 110, 45, 45, 111, 116, 117, 55, 57, 54, 100] => lookup_1442(),
            [120, 110, 45, 45, 112, 49, 97, 99, 102] => lookup_1443(labels),
            [120, 110, 45, 45, 112, 49, 97, 105] => lookup_1444(),
            [120, 110, 45, 45, 112, 103, 98, 115, 48, 100, 104] => lookup_1445(),
            [120, 110, 45, 45, 112, 115, 115, 121, 50, 117] => lookup_1446(),
            [120, 110, 45, 45, 113, 55, 99, 101, 54, 97] => lookup_1447(),
            [120, 110, 45, 45, 113, 57, 106, 121, 98, 52, 99] => lookup_1448(),
            [120, 110, 45, 45, 113, 99, 107, 97, 49, 112, 109, 99] => lookup_1449(),
            [120, 110, 45, 45, 113, 120, 97, 54, 97] => lookup_1450(),
            [120, 110, 45, 45, 113, 120, 97, 109] => lookup_1451(),
            [120, 110, 45, 45, 114, 104, 113, 118, 57, 54, 103] => lookup_1452(),
            [120, 110, 45, 45, 114, 111, 118, 117, 56, 56, 98] => lookup_1453(),
            [120, 110, 45, 45, 114, 118, 99, 49, 101, 48, 97, 109, 51, 101] => lookup_1454(),
            [120, 110, 45, 45, 115, 57, 98, 114, 106, 57, 99] => lookup_1455(),
            [120, 110, 45, 45, 115, 101, 115, 53, 53, 52, 103] => lookup_1456(),
            [120, 110, 45, 45, 116, 54, 48, 98, 53, 54, 97] => lookup_1457(),
            [120, 110, 45, 45, 116, 99, 107, 119, 101] => lookup_1458(),
            [120, 110, 45, 45, 116, 105, 113, 52, 57, 120, 113, 121, 106] => lookup_1459(),
            [120, 110, 45, 45, 117, 110, 117, 112, 52, 121] => lookup_1460(),
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114, 45, 99, 116, 98] => {
                lookup_1461()
            }
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103, 45, 112, 119, 98] => {
                lookup_1462()
            }
            [120, 110, 45, 45, 118, 104, 113, 117, 118] => lookup_1463(),
            [120, 110, 45, 45, 118, 117, 113, 56, 54, 49, 98] => lookup_1464(),
            [120, 110, 45, 45, 119, 52, 114, 56, 53, 101, 108, 56, 102, 104, 117, 53, 100, 110, 114, 97] => {
                lookup_1465()
            }
            [120, 110, 45, 45, 119, 52, 114, 115, 52, 48, 108] => lookup_1466(),
            [120, 110, 45, 45, 119, 103, 98, 104, 49, 99] => lookup_1467(),
            [120, 110, 45, 45, 119, 103, 98, 108, 54, 97] => lookup_1468(),
            [120, 110, 45, 45, 120, 104, 113, 53, 50, 49, 98] => lookup_1469(),
            [120, 110, 45, 45, 120, 107, 99, 50, 97, 108, 51, 104, 121, 101, 50, 97] => {
                lookup_1470()
            }
            [120, 110, 45, 45, 120, 107, 99, 50, 100, 108, 51, 97, 53, 101, 101, 48, 104] => {
                lookup_1471()
            }
            [120, 110, 45, 45, 121, 57, 97, 51, 97, 113] => lookup_1472(),
            [120, 110, 45, 45, 121, 102, 114, 111, 52, 105, 54, 55, 111] => lookup_1473(),
            [120, 110, 45, 45, 121, 103, 98, 105, 50, 97, 109, 109, 120] => lookup_1474(),
            [120, 110, 45, 45, 122, 102, 114, 49, 54, 52, 98] => lookup_1475(),
            [120, 120, 120] => lookup_1476(),
            [120, 121, 122] => lookup_1477(labels),
            [121, 97, 99, 104, 116, 115] => lookup_1478(),
            [121, 97, 104, 111, 111] => lookup_1479(),
            [121, 97, 109, 97, 120, 117, 110] => lookup_1480(),
            [121, 97, 110, 100, 101, 120] => lookup_1481(),
            [121, 101] => lookup_1482(labels),
            [121, 111, 100, 111, 98, 97, 115, 104, 105] => lookup_1483(),
            [121, 111, 103, 97] => lookup_1484(),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_1485(),
            [121, 111, 117] => lookup_1486(),
            [121, 111, 117, 116, 117, 98, 101] => lookup_1487(),
            [121, 116] => lookup_1488(labels),
            [121, 117, 110] => lookup_1489(),
            [122, 97] => lookup_1490(info, labels),
            [122, 97, 112, 112, 111, 115] => lookup_1491(),
            [122, 97, 114, 97] => lookup_1492(),
            [122, 101, 114, 111] => lookup_1493(),
            [122, 105, 112] => lookup_1494(),
            [122, 109] => lookup_1495(labels),
            [122, 111, 110, 101] => lookup_1496(labels),
            [122, 117, 101, 114, 105, 99, 104] => lookup_1497(),
            [122, 119] => lookup_1498(labels),
            [206, 181, 206, 187] => lookup_1499(),
            [206, 181, 207, 133] => lookup_1500(),
            [208, 177, 208, 179] => lookup_1501(),
            [208, 177, 208, 181, 208, 187] => lookup_1502(),
            [208, 180, 208, 181, 209, 130, 208, 184] => lookup_1503(),
            [208, 181, 209, 142] => lookup_1504(),
            [208, 186, 208, 176, 209, 130, 208, 190, 208, 187, 208, 184, 208, 186] => lookup_1505(),
            [208, 186, 208, 190, 208, 188] => lookup_1506(),
            [208, 188, 208, 186, 208, 180] => lookup_1507(),
            [208, 188, 208, 190, 208, 189] => lookup_1508(),
            [208, 188, 208, 190, 209, 129, 208, 186, 208, 178, 208, 176] => lookup_1509(),
            [208, 190, 208, 189, 208, 187, 208, 176, 208, 185, 208, 189] => lookup_1510(),
            [208, 190, 209, 128, 208, 179] => lookup_1511(),
            [209, 128, 209, 131, 209, 129] => lookup_1512(labels),
            [209, 128, 209, 132] => lookup_1513(),
            [209, 129, 208, 176, 208, 185, 209, 130] => lookup_1514(),
            [209, 129, 209, 128, 208, 177] => lookup_1515(labels),
            [209, 131, 208, 186, 209, 128] => lookup_1516(),
            [210, 155, 208, 176, 208, 183] => lookup_1517(),
            [213, 176, 213, 161, 213, 181] => lookup_1518(),
            [215, 167, 215, 149, 215, 157] => lookup_1519(),
            [216, 167, 216, 168, 217, 136, 216, 184, 216, 168, 217, 138] => lookup_1520(),
            [216, 167, 216, 170, 216, 181, 216, 167, 217, 132, 216, 167, 216, 170] => lookup_1521(),
            [216, 167, 216, 177, 216, 167, 217, 133, 217, 131, 217, 136] => lookup_1522(),
            [216, 167, 217, 132, 216, 167, 216, 177, 216, 175, 217, 134] => lookup_1523(),
            [216, 167, 217, 132, 216, 168, 216, 173, 216, 177, 217, 138, 217, 134] => lookup_1524(),
            [216, 167, 217, 132, 216, 172, 216, 178, 216, 167, 216, 166, 216, 177] => lookup_1525(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 216, 169] => {
                lookup_1526()
            }
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 217, 135] => {
                lookup_1527()
            }
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 216, 169] => {
                lookup_1528()
            }
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 219, 131] => {
                lookup_1529()
            }
            [216, 167, 217, 132, 216, 185, 217, 132, 217, 138, 216, 167, 217, 134] => lookup_1530(),
            [216, 167, 217, 132, 217, 133, 216, 186, 216, 177, 216, 168] => lookup_1531(),
            [216, 167, 217, 132, 217, 138, 217, 133, 217, 134] => lookup_1532(),
            [216, 167, 217, 133, 216, 167, 216, 177, 216, 167, 216, 170] => lookup_1533(),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_1534(),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_1535(),
            [216, 168, 216, 167, 216, 177, 216, 170] => lookup_1536(),
            [216, 168, 216, 167, 216, 178, 216, 167, 216, 177] => lookup_1537(),
            [216, 168, 217, 138, 216, 170, 217, 131] => lookup_1538(),
            [216, 168, 218, 190, 216, 167, 216, 177, 216, 170] => lookup_1539(),
            [216, 170, 217, 136, 217, 134, 216, 179] => lookup_1540(),
            [216, 179, 217, 136, 216, 175, 216, 167, 217, 134] => lookup_1541(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 167] => lookup_1542(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 169] => lookup_1543(),
            [216, 180, 216, 168, 217, 131, 216, 169] => lookup_1544(),
            [216, 185, 216, 177, 216, 167, 217, 130] => lookup_1545(),
            [216, 185, 216, 177, 216, 168] => lookup_1546(),
            [216, 185, 217, 133, 216, 167, 217, 134] => lookup_1547(),
            [217, 129, 217, 132, 216, 179, 216, 183, 217, 138, 217, 134] => lookup_1548(),
            [217, 130, 216, 183, 216, 177] => lookup_1549(),
            [217, 131, 216, 167, 216, 171, 217, 136, 217, 132, 217, 138, 217, 131] => lookup_1550(),
            [217, 131, 217, 136, 217, 133] => lookup_1551(),
            [217, 133, 216, 181, 216, 177] => lookup_1552(),
            [217, 133, 217, 132, 217, 138, 216, 179, 217, 138, 216, 167] => lookup_1553(),
            [217, 133, 217, 136, 216, 177, 217, 138, 216, 170, 216, 167, 217, 134, 217, 138, 216, 167] => {
                lookup_1554()
            }
            [217, 133, 217, 136, 217, 130, 216, 185] => lookup_1555(),
            [217, 135, 217, 133, 216, 177, 216, 167, 217, 135] => lookup_1556(),
            [217, 190, 216, 167, 217, 131, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_1557(),
            [217, 190, 216, 167, 218, 169, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_1558(),
            [218, 128, 216, 167, 216, 177, 216, 170] => lookup_1559(),
            [224, 164, 149, 224, 165, 137, 224, 164, 174] => lookup_1560(),
            [224, 164, 168, 224, 165, 135, 224, 164, 159] => lookup_1561(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164] => lookup_1562(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164, 224, 164, 174, 224, 165, 141] => {
                lookup_1563()
            }
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 165, 139, 224, 164, 164] => {
                lookup_1564()
            }
            [224, 164, 184, 224, 164, 130, 224, 164, 151, 224, 164, 160, 224, 164, 168] => {
                lookup_1565()
            }
            [224, 166, 172, 224, 166, 190, 224, 166, 130, 224, 166, 178, 224, 166, 190] => {
                lookup_1566()
            }
            [224, 166, 173, 224, 166, 190, 224, 166, 176, 224, 166, 164] => lookup_1567(),
            [224, 166, 173, 224, 166, 190, 224, 167, 176, 224, 166, 164] => lookup_1568(),
            [224, 168, 173, 224, 168, 190, 224, 168, 176, 224, 168, 164] => lookup_1569(),
            [224, 170, 173, 224, 170, 190, 224, 170, 176, 224, 170, 164] => lookup_1570(),
            [224, 172, 173, 224, 172, 190, 224, 172, 176, 224, 172, 164] => lookup_1571(),
            [224, 174, 135, 224, 174, 168, 224, 175, 141, 224, 174, 164, 224, 174, 191, 224, 174, 175, 224, 174, 190] => {
                lookup_1572()
            }
            [224, 174, 135, 224, 174, 178, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 175, 136] => {
                lookup_1573()
            }
            [224, 174, 154, 224, 174, 191, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 174, 170, 224, 175, 141, 224, 174, 170, 224, 175, 130, 224, 174, 176, 224, 175, 141] => {
                lookup_1574()
            }
            [224, 176, 173, 224, 176, 190, 224, 176, 176, 224, 176, 164, 224, 177, 141] => {
                lookup_1575()
            }
            [224, 178, 173, 224, 178, 190, 224, 178, 176, 224, 178, 164] => lookup_1576(),
            [224, 180, 173, 224, 180, 190, 224, 180, 176, 224, 180, 164, 224, 180, 130] => {
                lookup_1577()
            }
            [224, 182, 189, 224, 182, 130, 224, 182, 154, 224, 183, 143] => lookup_1578(),
            [224, 184, 132, 224, 184, 173, 224, 184, 161] => lookup_1579(),
            [224, 185, 132, 224, 184, 151, 224, 184, 162] => lookup_1580(labels),
            [224, 186, 165, 224, 186, 178, 224, 186, 167] => lookup_1581(),
            [225, 131, 146, 225, 131, 148] => lookup_1582(),
            [227, 129, 191, 227, 130, 147, 227, 129, 170] => lookup_1583(),
            [227, 130, 162, 227, 131, 158, 227, 130, 190, 227, 131, 179] => lookup_1584(),
            [227, 130, 175, 227, 131, 169, 227, 130, 166, 227, 131, 137] => lookup_1585(),
            [227, 130, 176, 227, 131, 188, 227, 130, 176, 227, 131, 171] => lookup_1586(),
            [227, 130, 179, 227, 131, 160] => lookup_1587(),
            [227, 130, 185, 227, 131, 136, 227, 130, 162] => lookup_1588(),
            [227, 130, 187, 227, 131, 188, 227, 131, 171] => lookup_1589(),
            [227, 131, 149, 227, 130, 161, 227, 131, 131, 227, 130, 183, 227, 131, 167, 227, 131, 179] => {
                lookup_1590()
            }
            [227, 131, 157, 227, 130, 164, 227, 131, 179, 227, 131, 136] => lookup_1591(),
            [228, 184, 150, 231, 149, 140] => lookup_1592(),
            [228, 184, 173, 228, 191, 161] => lookup_1593(),
            [228, 184, 173, 229, 155, 189] => lookup_1594(),
            [228, 184, 173, 229, 156, 139] => lookup_1595(),
            [228, 184, 173, 230, 150, 135, 231, 189, 145] => lookup_1596(),
            [228, 186, 154, 233, 169, 172, 233, 128, 138] => lookup_1597(),
            [228, 188, 129, 228, 184, 154] => lookup_1598(),
            [228, 189, 155, 229, 177, 177] => lookup_1599(),
            [228, 191, 161, 230, 129, 175] => lookup_1600(),
            [229, 129, 165, 229, 186, 183] => lookup_1601(),
            [229, 133, 171, 229, 141, 166] => lookup_1602(),
            [229, 133, 172, 229, 143, 184] => lookup_1603(),
            [229, 133, 172, 231, 155, 138] => lookup_1604(),
            [229, 143, 176, 230, 185, 190] => lookup_1605(),
            [229, 143, 176, 231, 129, 163] => lookup_1606(),
            [229, 149, 134, 229, 159, 142] => lookup_1607(),
            [229, 149, 134, 229, 186, 151] => lookup_1608(),
            [229, 149, 134, 230, 160, 135] => lookup_1609(),
            [229, 152, 137, 233, 135, 140] => lookup_1610(),
            [229, 152, 137, 233, 135, 140, 229, 164, 167, 233, 133, 146, 229, 186, 151] => {
                lookup_1611()
            }
            [229, 156, 168, 231, 186, 191] => lookup_1612(),
            [229, 164, 167, 230, 139, 191] => lookup_1613(),
            [229, 164, 169, 228, 184, 187, 230, 149, 153] => lookup_1614(),
            [229, 168, 177, 228, 185, 144] => lookup_1615(),
            [229, 174, 182, 233, 155, 187] => lookup_1616(),
            [229, 185, 191, 228, 184, 156] => lookup_1617(),
            [229, 190, 174, 229, 141, 154] => lookup_1618(),
            [230, 133, 136, 229, 150, 132] => lookup_1619(),
            [230, 136, 145, 231, 136, 177, 228, 189, 160] => lookup_1620(),
            [230, 137, 139, 230, 156, 186] => lookup_1621(),
            [230, 139, 155, 232, 129, 152] => lookup_1622(),
            [230, 148, 191, 229, 138, 161] => lookup_1623(),
            [230, 148, 191, 229, 186, 156] => lookup_1624(),
            [230, 150, 176, 229, 138, 160, 229, 157, 161] => lookup_1625(),
            [230, 150, 176, 233, 151, 187] => lookup_1626(),
            [230, 151, 182, 229, 176, 154] => lookup_1627(),
            [230, 155, 184, 231, 177, 141] => lookup_1628(),
            [230, 156, 186, 230, 158, 132] => lookup_1629(),
            [230, 183, 161, 233, 169, 172, 233, 148, 161] => lookup_1630(),
            [230, 184, 184, 230, 136, 143] => lookup_1631(),
            [230, 190, 179, 233, 150, 128] => lookup_1632(),
            [230, 190, 179, 233, 151, 168] => lookup_1633(),
            [231, 130, 185, 231, 156, 139] => lookup_1634(),
            [231, 167, 187, 229, 138, 168] => lookup_1635(),
            [231, 187, 132, 231, 187, 135, 230, 156, 186, 230, 158, 132] => lookup_1636(),
            [231, 189, 145, 229, 157, 128] => lookup_1637(),
            [231, 189, 145, 229, 186, 151] => lookup_1638(),
            [231, 189, 145, 231, 171, 153] => lookup_1639(),
            [231, 189, 145, 231, 187, 156] => lookup_1640(),
            [232, 129, 148, 233, 128, 154] => lookup_1641(),
            [232, 135, 186, 231, 129, 163] => lookup_1642(),
            [232, 175, 186, 229, 159, 186, 228, 186, 154] => lookup_1643(),
            [232, 176, 183, 230, 173, 140] => lookup_1644(),
            [232, 180, 173, 231, 137, 169] => lookup_1645(),
            [233, 128, 154, 232, 178, 169] => lookup_1646(),
            [233, 155, 134, 229, 155, 162] => lookup_1647(),
            [233, 155, 187, 232, 168, 138, 231, 155, 136, 231, 167, 145] => lookup_1648(),
            [233, 163, 158, 229, 136, 169, 230, 181, 166] => lookup_1649(),
            [233, 163, 159, 229, 147, 129] => lookup_1650(),
            [233, 164, 144, 229, 142, 133] => lookup_1651(),
            [233, 166, 153, 230, 160, 188, 233, 135, 140, 230, 139, 137] => lookup_1652(),
            [233, 166, 153, 230, 184, 175] => lookup_1653(labels),
            [235, 139, 183, 235, 132, 183] => lookup_1654(),
            [235, 139, 183, 236, 187, 180] => lookup_1655(),
            [236, 130, 188, 236, 132, 177] => lookup_1656(),
            [237, 149, 156, 234, 181, 173] => lookup_1657(),
            wild => {
                info.len = wild.len();
                info
            }
        },
        None => info,
    }
}
#[inline]
fn lookup_0() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_2() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_3() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_6() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_7() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_8() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_10_0(acc),
            [100, 114, 114] => lookup_10_1(acc),
            [101, 100, 117] => lookup_10_2(acc),
            [103, 111, 118] => lookup_10_3(acc),
            [109, 105, 108] => lookup_10_4(acc),
            [110, 101, 116] => lookup_10_5(acc),
            [111, 114, 103] => lookup_10_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_11<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102, 102, 105, 99, 105, 97, 108] => lookup_11_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_12() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_13() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_14() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_16() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_17_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_18() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_21_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_21_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_21_1(acc),
            [99, 111] => lookup_21_2(acc),
            [103, 111, 118] => lookup_21_3(acc),
            [109, 105, 108] => lookup_21_4(acc),
            [110, 101, 116] => lookup_21_5(acc),
            [111, 114, 103] => lookup_21_6(acc),
            [115, 99, 104] => lookup_21_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_22() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 105, 110, 118, 101, 115, 116, 105, 103, 97, 116, 105, 111, 110] => {
                lookup_23_0(acc)
            }
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 112, 114, 101, 118, 101, 110, 116, 105, 111, 110] => {
                lookup_23_1(acc)
            }
            [97, 101, 114, 111, 98, 97, 116, 105, 99] => lookup_23_2(acc),
            [97, 101, 114, 111, 99, 108, 117, 98] => lookup_23_3(acc),
            [97, 101, 114, 111, 100, 114, 111, 109, 101] => lookup_23_4(acc),
            [97, 103, 101, 110, 116, 115] => lookup_23_5(acc),
            [97, 105, 114, 45, 115, 117, 114, 118, 101, 105, 108, 108, 97, 110, 99, 101] => {
                lookup_23_6(acc)
            }
            [97, 105, 114, 45, 116, 114, 97, 102, 102, 105, 99, 45, 99, 111, 110, 116, 114, 111, 108] => {
                lookup_23_7(acc)
            }
            [97, 105, 114, 99, 114, 97, 102, 116] => lookup_23_8(acc),
            [97, 105, 114, 108, 105, 110, 101] => lookup_23_9(acc),
            [97, 105, 114, 112, 111, 114, 116] => lookup_23_10(acc),
            [97, 105, 114, 116, 114, 97, 102, 102, 105, 99] => lookup_23_11(acc),
            [97, 109, 98, 117, 108, 97, 110, 99, 101] => lookup_23_12(acc),
            [97, 109, 117, 115, 101, 109, 101, 110, 116] => lookup_23_13(acc),
            [97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => lookup_23_14(acc),
            [97, 117, 116, 104, 111, 114] => lookup_23_15(acc),
            [98, 97, 108, 108, 111, 111, 110, 105, 110, 103] => lookup_23_16(acc),
            [98, 114, 111, 107, 101, 114] => lookup_23_17(acc),
            [99, 97, 97] => lookup_23_18(acc),
            [99, 97, 114, 103, 111] => lookup_23_19(acc),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_23_20(acc),
            [99, 101, 114, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110] => lookup_23_21(acc),
            [99, 104, 97, 109, 112, 105, 111, 110, 115, 104, 105, 112] => lookup_23_22(acc),
            [99, 104, 97, 114, 116, 101, 114] => lookup_23_23(acc),
            [99, 105, 118, 105, 108, 97, 118, 105, 97, 116, 105, 111, 110] => lookup_23_24(acc),
            [99, 108, 117, 98] => lookup_23_25(acc),
            [99, 111, 110, 102, 101, 114, 101, 110, 99, 101] => lookup_23_26(acc),
            [99, 111, 110, 115, 117, 108, 116, 97, 110, 116] => lookup_23_27(acc),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_23_28(acc),
            [99, 111, 110, 116, 114, 111, 108] => lookup_23_29(acc),
            [99, 111, 117, 110, 99, 105, 108] => lookup_23_30(acc),
            [99, 114, 101, 119] => lookup_23_31(acc),
            [100, 101, 115, 105, 103, 110] => lookup_23_32(acc),
            [100, 103, 99, 97] => lookup_23_33(acc),
            [101, 100, 117, 99, 97, 116, 111, 114] => lookup_23_34(acc),
            [101, 109, 101, 114, 103, 101, 110, 99, 121] => lookup_23_35(acc),
            [101, 110, 103, 105, 110, 101] => lookup_23_36(acc),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_23_37(acc),
            [101, 110, 116, 101, 114, 116, 97, 105, 110, 109, 101, 110, 116] => lookup_23_38(acc),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_23_39(acc),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_23_40(acc),
            [101, 120, 112, 114, 101, 115, 115] => lookup_23_41(acc),
            [102, 101, 100, 101, 114, 97, 116, 105, 111, 110] => lookup_23_42(acc),
            [102, 108, 105, 103, 104, 116] => lookup_23_43(acc),
            [102, 117, 101, 108] => lookup_23_44(acc),
            [103, 108, 105, 100, 105, 110, 103] => lookup_23_45(acc),
            [103, 111, 118, 101, 114, 110, 109, 101, 110, 116] => lookup_23_46(acc),
            [103, 114, 111, 117, 110, 100, 104, 97, 110, 100, 108, 105, 110, 103] => {
                lookup_23_47(acc)
            }
            [103, 114, 111, 117, 112] => lookup_23_48(acc),
            [104, 97, 110, 103, 103, 108, 105, 100, 105, 110, 103] => lookup_23_49(acc),
            [104, 111, 109, 101, 98, 117, 105, 108, 116] => lookup_23_50(acc),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_23_51(acc),
            [106, 111, 117, 114, 110, 97, 108] => lookup_23_52(acc),
            [106, 111, 117, 114, 110, 97, 108, 105, 115, 116] => lookup_23_53(acc),
            [108, 101, 97, 115, 105, 110, 103] => lookup_23_54(acc),
            [108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_23_55(acc),
            [109, 97, 103, 97, 122, 105, 110, 101] => lookup_23_56(acc),
            [109, 97, 105, 110, 116, 101, 110, 97, 110, 99, 101] => lookup_23_57(acc),
            [109, 101, 100, 105, 97] => lookup_23_58(acc),
            [109, 105, 99, 114, 111, 108, 105, 103, 104, 116] => lookup_23_59(acc),
            [109, 111, 100, 101, 108, 108, 105, 110, 103] => lookup_23_60(acc),
            [110, 97, 118, 105, 103, 97, 116, 105, 111, 110] => lookup_23_61(acc),
            [112, 97, 114, 97, 99, 104, 117, 116, 105, 110, 103] => lookup_23_62(acc),
            [112, 97, 114, 97, 103, 108, 105, 100, 105, 110, 103] => lookup_23_63(acc),
            [112, 97, 115, 115, 101, 110, 103, 101, 114, 45, 97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => {
                lookup_23_64(acc)
            }
            [112, 105, 108, 111, 116] => lookup_23_65(acc),
            [112, 114, 101, 115, 115] => lookup_23_66(acc),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110] => lookup_23_67(acc),
            [114, 101, 99, 114, 101, 97, 116, 105, 111, 110] => lookup_23_68(acc),
            [114, 101, 112, 98, 111, 100, 121] => lookup_23_69(acc),
            [114, 101, 115] => lookup_23_70(acc),
            [114, 101, 115, 101, 97, 114, 99, 104] => lookup_23_71(acc),
            [114, 111, 116, 111, 114, 99, 114, 97, 102, 116] => lookup_23_72(acc),
            [115, 97, 102, 101, 116, 121] => lookup_23_73(acc),
            [115, 99, 105, 101, 110, 116, 105, 115, 116] => lookup_23_74(acc),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_23_75(acc),
            [115, 104, 111, 119] => lookup_23_76(acc),
            [115, 107, 121, 100, 105, 118, 105, 110, 103] => lookup_23_77(acc),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_23_78(acc),
            [115, 116, 117, 100, 101, 110, 116] => lookup_23_79(acc),
            [116, 114, 97, 100, 101, 114] => lookup_23_80(acc),
            [116, 114, 97, 100, 105, 110, 103] => lookup_23_81(acc),
            [116, 114, 97, 105, 110, 101, 114] => lookup_23_82(acc),
            [117, 110, 105, 111, 110] => lookup_23_83(acc),
            [119, 111, 114, 107, 105, 110, 103, 103, 114, 111, 117, 112] => lookup_23_84(acc),
            [119, 111, 114, 107, 115] => lookup_23_85(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_24() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_25_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_25_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_25_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_25<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_25_0(acc),
            [101, 100, 117] => lookup_25_1(acc),
            [103, 111, 118] => lookup_25_2(acc),
            [110, 101, 116] => lookup_25_3(acc),
            [111, 114, 103] => lookup_25_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_26() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_28_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_28_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_28_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_28_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_28<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_28_0(acc),
            [99, 111, 109] => lookup_28_1(acc),
            [110, 101, 116] => lookup_28_2(acc),
            [110, 111, 109] => lookup_28_3(acc),
            [111, 114, 103] => lookup_28_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_29() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_30() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_31_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_31_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_31_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_31_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_31_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_31<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_31_0(acc),
            [110, 101, 116] => lookup_31_1(acc),
            [111, 102, 102] => lookup_31_2(acc),
            [111, 114, 103] => lookup_31_3(acc),
            [117, 119, 117] => lookup_31_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_32() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_33() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_34() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_36() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_37_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_37_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_37_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_37_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_37_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_37_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_37_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_37<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_37_0(acc),
            [99, 111, 109] => lookup_37_1(acc),
            [101, 100, 117] => lookup_37_2(acc),
            [103, 111, 118] => lookup_37_3(acc),
            [109, 105, 108] => lookup_37_4(acc),
            [110, 101, 116] => lookup_37_5(acc),
            [111, 114, 103] => lookup_37_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_38() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_39() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_40() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_41() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_42() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_45() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_46_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_46_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_46_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_46_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_46_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_46_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_46<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_46_0(acc),
            [99, 111] => lookup_46_1(acc),
            [99, 111, 109] => lookup_46_2(acc),
            [99, 111, 109, 109, 117, 110, 101] => lookup_46_3(acc),
            [110, 101, 107, 111] => lookup_46_4(acc),
            [110, 101, 116] => lookup_46_5(acc),
            [110, 121, 97, 97] => lookup_46_6(acc),
            [111, 114, 103] => lookup_46_7(acc),
            [114, 97, 100, 105, 111] => lookup_46_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_47() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_48() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_49() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_50() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_52() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_54() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_56() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_58_0(acc),
            [101, 100] => lookup_58_1(acc),
            [103, 118] => lookup_58_2(acc),
            [105, 116] => lookup_58_3(acc),
            [111, 103] => lookup_58_4(acc),
            [112, 98] => lookup_58_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_59() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_60() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_61_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_61_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_61_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_11_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_61_11_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_61_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_15<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_61_15_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_61_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_61<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 111, 111, 107, 111, 110, 108, 105, 110, 101] => lookup_61_0(acc),
            [99, 108, 101, 114, 107] => lookup_61_1(acc),
            [99, 108, 101, 114, 107, 115, 116, 97, 103, 101] => lookup_61_2(acc),
            [100, 101, 118, 101, 108, 111, 112, 101, 114] => lookup_61_3(info, labels, acc),
            [101, 100, 103, 101, 99, 111, 109, 112, 117, 116, 101] => lookup_61_4(acc),
            [102, 105, 114, 101, 119, 101, 98] => lookup_61_5(acc),
            [102, 114, 97, 109, 101, 114] => lookup_61_6(acc),
            [104, 97, 115, 117, 114, 97] => lookup_61_7(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_61_8(acc),
            [110, 101, 116, 108, 105, 102, 121] => lookup_61_9(acc),
            [110, 111, 111, 112] => lookup_61_10(acc),
            [110, 111, 114, 116, 104, 102, 108, 97, 110, 107] => lookup_61_11(info, labels, acc),
            [111, 110, 100, 105, 103, 105, 116, 97, 108, 111, 99, 101, 97, 110] => {
                lookup_61_12(acc)
            }
            [111, 110, 102, 108, 97, 115, 104, 100, 114, 105, 118, 101] => lookup_61_13(acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 48] => lookup_61_14(acc),
            [114, 117, 110] => lookup_61_15(labels, acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_61_16(acc),
            [118, 101, 114, 99, 101, 108] => lookup_61_17(acc),
            [119, 101, 98] => lookup_61_18(acc),
            [119, 110, 101, 120, 116] => lookup_61_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_62() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_63() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_65_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_65_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_65_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116] => lookup_65_0(acc),
            [99, 111, 109] => lookup_65_1(labels, acc),
            [99, 111, 111, 112] => lookup_65_2(acc),
            [101, 100, 117] => lookup_65_3(acc),
            [103, 111, 98] => lookup_65_4(acc),
            [103, 111, 118] => lookup_65_5(acc),
            [105, 110, 116] => lookup_65_6(acc),
            [109, 105, 108] => lookup_65_7(acc),
            [109, 117, 115, 105, 99, 97] => lookup_65_8(acc),
            [109, 117, 116, 117, 97, 108] => lookup_65_9(acc),
            [110, 101, 116] => lookup_65_10(acc),
            [111, 114, 103] => lookup_65_11(acc),
            [115, 101, 110, 97, 115, 97] => lookup_65_12(acc),
            [116, 117, 114] => lookup_65_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_66() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_68() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_69() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 49, 54, 52] => lookup_70_0(acc),
            [105, 110, 45, 97, 100, 100, 114] => lookup_70_1(acc),
            [105, 112, 54] => lookup_70_2(acc),
            [105, 114, 105, 115] => lookup_70_3(acc),
            [117, 114, 105] => lookup_70_4(acc),
            [117, 114, 110] => lookup_70_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_71() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_72() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_73_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_73<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_73_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_74() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_75_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_75<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_75_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_76() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 104] => lookup_77_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_77_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [119, 105, 101, 110] => lookup_77_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_7_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_7_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_77_7_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_77_7_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_7_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_77_7_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_77_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [101, 120] => lookup_77_7_1(info, labels, acc),
            [105, 110] => lookup_77_7_2(info, labels, acc),
            wild => lookup_77_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_77_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_15_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_15_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_77_15_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_77_15_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_15_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_77_15_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_77_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 120] => lookup_77_15_0(info, labels, acc),
            [107, 117, 110, 100, 101, 110] => lookup_77_15_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 104, 112] => lookup_77_0(acc),
            [50, 105, 120] => lookup_77_1(acc),
            [52, 108, 105, 109, 97] => lookup_77_2(acc),
            [97, 99] => lookup_77_3(labels, acc),
            [98, 105, 122] => lookup_77_4(acc),
            [99, 111] => lookup_77_5(labels, acc),
            [102, 117, 110, 107, 102, 101, 117, 101, 114] => lookup_77_6(info, labels, acc),
            [102, 117, 116, 117, 114, 101, 99, 109, 115] => lookup_77_7(info, labels, acc),
            [102, 117, 116, 117, 114, 101, 104, 111, 115, 116, 105, 110, 103] => lookup_77_8(acc),
            [102, 117, 116, 117, 114, 101, 109, 97, 105, 108, 105, 110, 103] => lookup_77_9(acc),
            [103, 118] => lookup_77_10(acc),
            [105, 110, 102, 111] => lookup_77_11(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_77_12(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_77_13(acc),
            [111, 114] => lookup_77_14(acc),
            [111, 114, 116, 115, 105, 110, 102, 111] => lookup_77_15(info, labels, acc),
            [112, 114, 105, 118] => lookup_77_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_78() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_80_2_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_80_2_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 108] => lookup_80_2_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_80_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_80_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_80_2_0(acc),
            [99, 108, 111, 117, 100, 108, 101, 116, 115] => lookup_80_2_1(info, labels, acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_80_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_80_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_4_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_4_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104, 111, 111, 108, 115] => lookup_80_4_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_80_4_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_4_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_4_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_4_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_4_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_4_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 116] => lookup_80_4_0(acc),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_80_4_1(acc),
            [110, 115, 119] => lookup_80_4_2(labels, acc),
            [110, 116] => lookup_80_4_3(acc),
            [113, 108, 100] => lookup_80_4_4(acc),
            [115, 97] => lookup_80_4_5(acc),
            [116, 97, 115] => lookup_80_4_6(acc),
            [118, 105, 99] => lookup_80_4_7(acc),
            [119, 97] => lookup_80_4_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_80_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_5_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_5_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [113, 108, 100] => lookup_80_5_0(acc),
            [115, 97] => lookup_80_5_1(acc),
            [116, 97, 115] => lookup_80_5_2(acc),
            [118, 105, 99] => lookup_80_5_3(acc),
            [119, 97] => lookup_80_5_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_80_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 116] => lookup_80_0(acc),
            [97, 115, 110] => lookup_80_1(acc),
            [99, 111, 109] => lookup_80_2(labels, acc),
            [99, 111, 110, 102] => lookup_80_3(acc),
            [101, 100, 117] => lookup_80_4(labels, acc),
            [103, 111, 118] => lookup_80_5(labels, acc),
            [105, 100] => lookup_80_6(acc),
            [105, 110, 102, 111] => lookup_80_7(acc),
            [110, 101, 116] => lookup_80_8(acc),
            [110, 115, 119] => lookup_80_9(acc),
            [110, 116] => lookup_80_10(acc),
            [111, 114, 103] => lookup_80_11(acc),
            [111, 122] => lookup_80_12(acc),
            [113, 108, 100] => lookup_80_13(acc),
            [115, 97] => lookup_80_14(acc),
            [116, 97, 115] => lookup_80_15(acc),
            [118, 105, 99] => lookup_80_16(acc),
            [119, 97] => lookup_80_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_81() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_83() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_84() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_85() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_86() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_87() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_88() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_89() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_90<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_90_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_91() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_92_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_92_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_92_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_92_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_92_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_92_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_92_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_92_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_92<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101] => lookup_92_0(acc),
            [99, 97, 116] => lookup_92_1(acc),
            [101, 115] => lookup_92_2(acc),
            [101, 117] => lookup_92_3(acc),
            [103, 103] => lookup_92_4(acc),
            [109, 99] => lookup_92_5(acc),
            [117, 115] => lookup_92_6(acc),
            [120, 121] => lookup_92_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_93() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_94<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_94_0(acc),
            [99, 111, 109] => lookup_94_1(acc),
            [101, 100, 117] => lookup_94_2(acc),
            [103, 111, 118] => lookup_94_3(acc),
            [105, 110, 102, 111] => lookup_94_4(acc),
            [105, 110, 116] => lookup_94_5(acc),
            [109, 105, 108] => lookup_94_6(acc),
            [110, 97, 109, 101] => lookup_94_7(acc),
            [110, 101, 116] => lookup_94_8(acc),
            [111, 114, 103] => lookup_94_9(acc),
            [112, 112] => lookup_94_10(acc),
            [112, 114, 111] => lookup_94_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_95() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_96_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_96_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_96_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_96_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_96_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_96_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_96_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_96_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_96<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_96_0(acc),
            [99, 111, 109] => lookup_96_1(acc),
            [101, 100, 117] => lookup_96_2(acc),
            [103, 111, 118] => lookup_96_3(acc),
            [109, 105, 108] => lookup_96_4(acc),
            [110, 101, 116] => lookup_96_5(acc),
            [111, 114, 103] => lookup_96_6(acc),
            [114, 115] => lookup_96_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_97() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_99() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_100() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_101() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_102() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_103() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_104() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_107() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_110_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_110_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_110<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 117, 115] => lookup_110_0(acc),
            [110, 122] => lookup_110_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_111() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_113_0(acc),
            [99, 111] => lookup_113_1(acc),
            [99, 111, 109] => lookup_113_2(acc),
            [101, 100, 117] => lookup_113_3(acc),
            [103, 111, 118] => lookup_113_4(acc),
            [105, 110, 102, 111] => lookup_113_5(acc),
            [110, 101, 116] => lookup_113_6(acc),
            [111, 114, 103] => lookup_113_7(acc),
            [115, 116, 111, 114, 101] => lookup_113_8(acc),
            [116, 118] => lookup_113_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_114() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_115() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_116() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_117() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_118() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_119_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_119<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_119_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_120_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_120_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_120_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_120_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_120_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_120_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_120_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 122, 112, 114, 111, 120, 121] => lookup_120_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_120_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_120_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_120_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_120_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_120_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_120<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_120_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_120_1(acc),
            [105, 110, 116, 101, 114, 104, 111, 115, 116, 115, 111, 108, 117, 116, 105, 111, 110, 115] => {
                lookup_120_2(info, labels, acc)
            }
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_120_3(info, labels, acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_120_4(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_120_5(info, labels, acc),
            [119, 101, 98, 104, 111, 115, 116, 105, 110, 103] => lookup_120_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_121() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_123() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_127() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_128() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_129_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_130_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_130_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48] => lookup_130_0(acc),
            [49] => lookup_130_1(acc),
            [50] => lookup_130_2(acc),
            [51] => lookup_130_3(acc),
            [52] => lookup_130_4(acc),
            [53] => lookup_130_5(acc),
            [54] => lookup_130_6(acc),
            [55] => lookup_130_7(acc),
            [56] => lookup_130_8(acc),
            [57] => lookup_130_9(acc),
            [97] => lookup_130_10(acc),
            [98] => lookup_130_11(acc),
            [98, 97, 114, 115, 121] => lookup_130_12(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_130_13(acc),
            [99] => lookup_130_14(acc),
            [100] => lookup_130_15(acc),
            [101] => lookup_130_16(acc),
            [102] => lookup_130_17(acc),
            [103] => lookup_130_18(acc),
            [104] => lookup_130_19(acc),
            [105] => lookup_130_20(acc),
            [106] => lookup_130_21(acc),
            [107] => lookup_130_22(acc),
            [108] => lookup_130_23(acc),
            [109] => lookup_130_24(acc),
            [110] => lookup_130_25(acc),
            [111] => lookup_130_26(acc),
            [112] => lookup_130_27(acc),
            [113] => lookup_130_28(acc),
            [114] => lookup_130_29(acc),
            [115] => lookup_130_30(acc),
            [116] => lookup_130_31(acc),
            [117] => lookup_130_32(acc),
            [118] => lookup_130_33(acc),
            [119] => lookup_130_34(acc),
            [120] => lookup_130_35(acc),
            [121] => lookup_130_36(acc),
            [122] => lookup_130_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_131_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_131_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_131_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_131_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_131_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_131<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_131_0(acc),
            [101, 100, 117] => lookup_131_1(acc),
            [103, 111, 118] => lookup_131_2(acc),
            [110, 101, 116] => lookup_131_3(acc),
            [111, 114, 103] => lookup_131_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_132() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_133_0(acc),
            [99, 111, 109] => lookup_133_1(acc),
            [101, 100, 117] => lookup_133_2(acc),
            [111, 114] => lookup_133_3(acc),
            [111, 114, 103] => lookup_133_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_134() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_135() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_138() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_139() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_140_0(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_140_1(acc),
            [100, 121, 110, 100, 110, 115] => lookup_140_2(acc),
            [102, 111, 114, 45, 98, 101, 116, 116, 101, 114] => lookup_140_3(acc),
            [102, 111, 114, 45, 109, 111, 114, 101] => lookup_140_4(acc),
            [102, 111, 114, 45, 115, 111, 109, 101] => lookup_140_5(acc),
            [102, 111, 114, 45, 116, 104, 101] => lookup_140_6(acc),
            [106, 111, 122, 105] => lookup_140_7(acc),
            [109, 109, 97, 102, 97, 110] => lookup_140_8(acc),
            [109, 121, 102, 116, 112] => lookup_140_9(acc),
            [110, 111, 45, 105, 112] => lookup_140_10(acc),
            [111, 114, 120] => lookup_140_11(acc),
            [115, 101, 108, 102, 105, 112] => lookup_140_12(acc),
            [119, 101, 98, 104, 111, 112] => lookup_140_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_141_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_141_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_141_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_141_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_141<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_141_0(acc),
            [98, 97, 114, 114, 101, 97, 117] => lookup_141_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_141_2(acc),
            [103, 111, 117, 118] => lookup_141_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_142() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_143() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_144() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_145() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_146() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_148<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_148_0(acc),
            [101, 100, 117] => lookup_148_1(acc),
            [103, 111, 118] => lookup_148_2(acc),
            [110, 101, 116] => lookup_148_3(acc),
            [111, 114, 103] => lookup_148_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_149() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_151_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_151_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_151_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_151_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_151_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_151_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_151<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_151_0(acc),
            [99, 111, 109] => lookup_151_1(acc),
            [101, 100, 117] => lookup_151_2(acc),
            [103, 111, 118] => lookup_151_3(acc),
            [110, 101, 116] => lookup_151_4(acc),
            [111, 114, 103] => lookup_151_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_152() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 97, 100, 101, 109, 105, 97] => lookup_153_0(acc),
            [97, 103, 114, 111] => lookup_153_1(acc),
            [97, 114, 116, 101] => lookup_153_2(acc),
            [98, 108, 111, 103] => lookup_153_3(acc),
            [98, 111, 108, 105, 118, 105, 97] => lookup_153_4(acc),
            [99, 105, 101, 110, 99, 105, 97] => lookup_153_5(acc),
            [99, 111, 109] => lookup_153_6(acc),
            [99, 111, 111, 112, 101, 114, 97, 116, 105, 118, 97] => lookup_153_7(acc),
            [100, 101, 109, 111, 99, 114, 97, 99, 105, 97] => lookup_153_8(acc),
            [100, 101, 112, 111, 114, 116, 101] => lookup_153_9(acc),
            [101, 99, 111, 108, 111, 103, 105, 97] => lookup_153_10(acc),
            [101, 99, 111, 110, 111, 109, 105, 97] => lookup_153_11(acc),
            [101, 100, 117] => lookup_153_12(acc),
            [101, 109, 112, 114, 101, 115, 97] => lookup_153_13(acc),
            [103, 111, 98] => lookup_153_14(acc),
            [105, 110, 100, 105, 103, 101, 110, 97] => lookup_153_15(acc),
            [105, 110, 100, 117, 115, 116, 114, 105, 97] => lookup_153_16(acc),
            [105, 110, 102, 111] => lookup_153_17(acc),
            [105, 110, 116] => lookup_153_18(acc),
            [109, 101, 100, 105, 99, 105, 110, 97] => lookup_153_19(acc),
            [109, 105, 108] => lookup_153_20(acc),
            [109, 111, 118, 105, 109, 105, 101, 110, 116, 111] => lookup_153_21(acc),
            [109, 117, 115, 105, 99, 97] => lookup_153_22(acc),
            [110, 97, 116, 117, 114, 97, 108] => lookup_153_23(acc),
            [110, 101, 116] => lookup_153_24(acc),
            [110, 111, 109, 98, 114, 101] => lookup_153_25(acc),
            [110, 111, 116, 105, 99, 105, 97, 115] => lookup_153_26(acc),
            [111, 114, 103] => lookup_153_27(acc),
            [112, 97, 116, 114, 105, 97] => lookup_153_28(acc),
            [112, 108, 117, 114, 105, 110, 97, 99, 105, 111, 110, 97, 108] => lookup_153_29(acc),
            [112, 111, 108, 105, 116, 105, 99, 97] => lookup_153_30(acc),
            [112, 114, 111, 102, 101, 115, 105, 111, 110, 97, 108] => lookup_153_31(acc),
            [112, 117, 101, 98, 108, 111] => lookup_153_32(acc),
            [114, 101, 118, 105, 115, 116, 97] => lookup_153_33(acc),
            [115, 97, 108, 117, 100] => lookup_153_34(acc),
            [116, 101, 99, 110, 111, 108, 111, 103, 105, 97] => lookup_153_35(acc),
            [116, 107, 115, 97, 116] => lookup_153_36(acc),
            [116, 114, 97, 110, 115, 112, 111, 114, 116, 101] => lookup_153_37(acc),
            [116, 118] => lookup_153_38(acc),
            [119, 101, 98] => lookup_153_39(acc),
            [119, 105, 107, 105] => lookup_153_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_154() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_155() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_156() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_157() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_160() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_161() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_162() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_165() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_166() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_29_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_29_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114, 115] => lookup_168_29_1_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_168_29_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [115, 99, 97, 108, 101] => lookup_168_29_1_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_168_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_168_29_0(acc),
            [118, 105, 114, 116, 117, 97, 108, 99, 108, 111, 117, 100] => {
                lookup_168_29_1(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_168_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_63<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_168_63_0(acc),
            [97, 108] => lookup_168_63_1(acc),
            [97, 109] => lookup_168_63_2(acc),
            [97, 112] => lookup_168_63_3(acc),
            [98, 97] => lookup_168_63_4(acc),
            [99, 101] => lookup_168_63_5(acc),
            [100, 102] => lookup_168_63_6(acc),
            [101, 115] => lookup_168_63_7(acc),
            [103, 111] => lookup_168_63_8(acc),
            [109, 97] => lookup_168_63_9(acc),
            [109, 103] => lookup_168_63_10(acc),
            [109, 115] => lookup_168_63_11(acc),
            [109, 116] => lookup_168_63_12(acc),
            [112, 97] => lookup_168_63_13(acc),
            [112, 98] => lookup_168_63_14(acc),
            [112, 101] => lookup_168_63_15(acc),
            [112, 105] => lookup_168_63_16(acc),
            [112, 114] => lookup_168_63_17(acc),
            [114, 106] => lookup_168_63_18(acc),
            [114, 110] => lookup_168_63_19(acc),
            [114, 111] => lookup_168_63_20(acc),
            [114, 114] => lookup_168_63_21(acc),
            [114, 115] => lookup_168_63_22(acc),
            [115, 99] => lookup_168_63_23(acc),
            [115, 101] => lookup_168_63_24(acc),
            [115, 112] => lookup_168_63_25(acc),
            [116, 111] => lookup_168_63_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_168_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_74_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_168_74<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_168_74_0(acc),
            [97, 108] => lookup_168_74_1(acc),
            [97, 109] => lookup_168_74_2(acc),
            [97, 112] => lookup_168_74_3(acc),
            [98, 97] => lookup_168_74_4(acc),
            [99, 101] => lookup_168_74_5(acc),
            [100, 102] => lookup_168_74_6(acc),
            [101, 115] => lookup_168_74_7(acc),
            [103, 111] => lookup_168_74_8(acc),
            [109, 97] => lookup_168_74_9(acc),
            [109, 103] => lookup_168_74_10(acc),
            [109, 115] => lookup_168_74_11(acc),
            [109, 116] => lookup_168_74_12(acc),
            [112, 97] => lookup_168_74_13(acc),
            [112, 98] => lookup_168_74_14(acc),
            [112, 101] => lookup_168_74_15(acc),
            [112, 105] => lookup_168_74_16(acc),
            [112, 114] => lookup_168_74_17(acc),
            [114, 106] => lookup_168_74_18(acc),
            [114, 110] => lookup_168_74_19(acc),
            [114, 111] => lookup_168_74_20(acc),
            [114, 114] => lookup_168_74_21(acc),
            [114, 115] => lookup_168_74_22(acc),
            [115, 99] => lookup_168_74_23(acc),
            [115, 101] => lookup_168_74_24(acc),
            [115, 112] => lookup_168_74_25(acc),
            [116, 111] => lookup_168_74_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_168_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_91_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_91<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_168_91_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_168_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [57, 103, 117, 97, 99, 117] => lookup_168_0(acc),
            [97, 98, 99] => lookup_168_1(acc),
            [97, 100, 109] => lookup_168_2(acc),
            [97, 100, 118] => lookup_168_3(acc),
            [97, 103, 114] => lookup_168_4(acc),
            [97, 106, 117] => lookup_168_5(acc),
            [97, 109] => lookup_168_6(acc),
            [97, 110, 97, 110, 105] => lookup_168_7(acc),
            [97, 112, 97, 114, 101, 99, 105, 100, 97] => lookup_168_8(acc),
            [97, 112, 112] => lookup_168_9(acc),
            [97, 114, 113] => lookup_168_10(acc),
            [97, 114, 116] => lookup_168_11(acc),
            [97, 116, 111] => lookup_168_12(acc),
            [98] => lookup_168_13(acc),
            [98, 97, 114, 117, 101, 114, 105] => lookup_168_14(acc),
            [98, 101, 108, 101, 109] => lookup_168_15(acc),
            [98, 104, 122] => lookup_168_16(acc),
            [98, 105, 98] => lookup_168_17(acc),
            [98, 105, 111] => lookup_168_18(acc),
            [98, 108, 111, 103] => lookup_168_19(acc),
            [98, 109, 100] => lookup_168_20(acc),
            [98, 111, 97, 118, 105, 115, 116, 97] => lookup_168_21(acc),
            [98, 115, 98] => lookup_168_22(acc),
            [99, 97, 109, 112, 105, 110, 97, 103, 114, 97, 110, 100, 101] => lookup_168_23(acc),
            [99, 97, 109, 112, 105, 110, 97, 115] => lookup_168_24(acc),
            [99, 97, 120, 105, 97, 115] => lookup_168_25(acc),
            [99, 105, 109] => lookup_168_26(acc),
            [99, 110, 103] => lookup_168_27(acc),
            [99, 110, 116] => lookup_168_28(acc),
            [99, 111, 109] => lookup_168_29(labels, acc),
            [99, 111, 110, 116, 97, 103, 101, 109] => lookup_168_30(acc),
            [99, 111, 111, 112] => lookup_168_31(acc),
            [99, 111, 122] => lookup_168_32(acc),
            [99, 114, 105] => lookup_168_33(acc),
            [99, 117, 105, 97, 98, 97] => lookup_168_34(acc),
            [99, 117, 114, 105, 116, 105, 98, 97] => lookup_168_35(acc),
            [100, 101, 102] => lookup_168_36(acc),
            [100, 101, 115] => lookup_168_37(acc),
            [100, 101, 116] => lookup_168_38(acc),
            [100, 101, 118] => lookup_168_39(acc),
            [101, 99, 110] => lookup_168_40(acc),
            [101, 99, 111] => lookup_168_41(acc),
            [101, 100, 117] => lookup_168_42(acc),
            [101, 109, 112] => lookup_168_43(acc),
            [101, 110, 102] => lookup_168_44(acc),
            [101, 110, 103] => lookup_168_45(acc),
            [101, 115, 112] => lookup_168_46(acc),
            [101, 116, 99] => lookup_168_47(acc),
            [101, 116, 105] => lookup_168_48(acc),
            [102, 97, 114] => lookup_168_49(acc),
            [102, 101, 105, 114, 97] => lookup_168_50(acc),
            [102, 108, 111, 103] => lookup_168_51(acc),
            [102, 108, 111, 114, 105, 112, 97] => lookup_168_52(acc),
            [102, 109] => lookup_168_53(acc),
            [102, 110, 100] => lookup_168_54(acc),
            [102, 111, 114, 116, 97, 108] => lookup_168_55(acc),
            [102, 111, 116] => lookup_168_56(acc),
            [102, 111, 122] => lookup_168_57(acc),
            [102, 115, 116] => lookup_168_58(acc),
            [103, 49, 50] => lookup_168_59(acc),
            [103, 101, 111] => lookup_168_60(acc),
            [103, 103, 102] => lookup_168_61(acc),
            [103, 111, 105, 97, 110, 105, 97] => lookup_168_62(acc),
            [103, 111, 118] => lookup_168_63(labels, acc),
            [103, 114, 117] => lookup_168_64(acc),
            [105, 109, 98] => lookup_168_65(acc),
            [105, 110, 100] => lookup_168_66(acc),
            [105, 110, 102] => lookup_168_67(acc),
            [106, 97, 98] => lookup_168_68(acc),
            [106, 97, 109, 112, 97] => lookup_168_69(acc),
            [106, 100, 102] => lookup_168_70(acc),
            [106, 111, 105, 110, 118, 105, 108, 108, 101] => lookup_168_71(acc),
            [106, 111, 114] => lookup_168_72(acc),
            [106, 117, 115] => lookup_168_73(acc),
            [108, 101, 103] => lookup_168_74(labels, acc),
            [108, 101, 108] => lookup_168_75(acc),
            [108, 111, 103] => lookup_168_76(acc),
            [108, 111, 110, 100, 114, 105, 110, 97] => lookup_168_77(acc),
            [109, 97, 99, 97, 112, 97] => lookup_168_78(acc),
            [109, 97, 99, 101, 105, 111] => lookup_168_79(acc),
            [109, 97, 110, 97, 117, 115] => lookup_168_80(acc),
            [109, 97, 114, 105, 110, 103, 97] => lookup_168_81(acc),
            [109, 97, 116] => lookup_168_82(acc),
            [109, 101, 100] => lookup_168_83(acc),
            [109, 105, 108] => lookup_168_84(acc),
            [109, 111, 114, 101, 110, 97] => lookup_168_85(acc),
            [109, 112] => lookup_168_86(acc),
            [109, 117, 115] => lookup_168_87(acc),
            [110, 97, 116, 97, 108] => lookup_168_88(acc),
            [110, 101, 116] => lookup_168_89(acc),
            [110, 105, 116, 101, 114, 111, 105] => lookup_168_90(acc),
            [110, 111, 109] => lookup_168_91(info, labels, acc),
            [110, 111, 116] => lookup_168_92(acc),
            [110, 116, 114] => lookup_168_93(acc),
            [111, 100, 111] => lookup_168_94(acc),
            [111, 110, 103] => lookup_168_95(acc),
            [111, 114, 103] => lookup_168_96(acc),
            [111, 115, 97, 115, 99, 111] => lookup_168_97(acc),
            [112, 97, 108, 109, 97, 115] => lookup_168_98(acc),
            [112, 111, 97] => lookup_168_99(acc),
            [112, 112, 103] => lookup_168_100(acc),
            [112, 114, 111] => lookup_168_101(acc),
            [112, 115, 99] => lookup_168_102(acc),
            [112, 115, 105] => lookup_168_103(acc),
            [112, 118, 104] => lookup_168_104(acc),
            [113, 115, 108] => lookup_168_105(acc),
            [114, 97, 100, 105, 111] => lookup_168_106(acc),
            [114, 101, 99] => lookup_168_107(acc),
            [114, 101, 99, 105, 102, 101] => lookup_168_108(acc),
            [114, 101, 112] => lookup_168_109(acc),
            [114, 105, 98, 101, 105, 114, 97, 111] => lookup_168_110(acc),
            [114, 105, 111] => lookup_168_111(acc),
            [114, 105, 111, 98, 114, 97, 110, 99, 111] => lookup_168_112(acc),
            [114, 105, 111, 112, 114, 101, 116, 111] => lookup_168_113(acc),
            [115, 97, 108, 118, 97, 100, 111, 114] => lookup_168_114(acc),
            [115, 97, 109, 112, 97] => lookup_168_115(acc),
            [115, 97, 110, 116, 97, 109, 97, 114, 105, 97] => lookup_168_116(acc),
            [115, 97, 110, 116, 111, 97, 110, 100, 114, 101] => lookup_168_117(acc),
            [115, 97, 111, 98, 101, 114, 110, 97, 114, 100, 111] => lookup_168_118(acc),
            [115, 97, 111, 103, 111, 110, 99, 97] => lookup_168_119(acc),
            [115, 101, 103] => lookup_168_120(acc),
            [115, 106, 99] => lookup_168_121(acc),
            [115, 108, 103] => lookup_168_122(acc),
            [115, 108, 122] => lookup_168_123(acc),
            [115, 111, 114, 111, 99, 97, 98, 97] => lookup_168_124(acc),
            [115, 114, 118] => lookup_168_125(acc),
            [116, 97, 120, 105] => lookup_168_126(acc),
            [116, 99] => lookup_168_127(acc),
            [116, 101, 99] => lookup_168_128(acc),
            [116, 101, 111] => lookup_168_129(acc),
            [116, 104, 101] => lookup_168_130(acc),
            [116, 109, 112] => lookup_168_131(acc),
            [116, 114, 100] => lookup_168_132(acc),
            [116, 117, 114] => lookup_168_133(acc),
            [116, 118] => lookup_168_134(acc),
            [117, 100, 105] => lookup_168_135(acc),
            [118, 101, 116] => lookup_168_136(acc),
            [118, 105, 120] => lookup_168_137(acc),
            [118, 108, 111, 103] => lookup_168_138(acc),
            [119, 105, 107, 105] => lookup_168_139(acc),
            [122, 108, 103] => lookup_168_140(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_169() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_170() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_172() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_173() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_174() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_175_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_175_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_175_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_175_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_175_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_175_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_175<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_175_0(acc),
            [101, 100, 117] => lookup_175_1(acc),
            [103, 111, 118] => lookup_175_2(acc),
            [110, 101, 116] => lookup_175_3(acc),
            [111, 114, 103] => lookup_175_4(acc),
            [119, 101] => lookup_175_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_176_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_176<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_176_0(acc),
            [101, 100, 117] => lookup_176_1(acc),
            [103, 111, 118] => lookup_176_2(acc),
            [110, 101, 116] => lookup_176_3(acc),
            [111, 114, 103] => lookup_176_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_177() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_178() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_179() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_180<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 115, 105, 116, 101] => lookup_180_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_181_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_181<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_181_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_182() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_185_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_185_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_185<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_185_0(acc),
            [111, 114, 103] => lookup_185_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_186_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_186_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_186_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_186_0(labels, acc),
            [103, 111, 118] => lookup_186_1(acc),
            [109, 101, 100, 105, 97, 116, 101, 99, 104] => lookup_186_2(acc),
            [109, 105, 108] => lookup_186_3(acc),
            [109, 121, 99, 108, 111, 117, 100] => lookup_186_4(acc),
            [111, 102] => lookup_186_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_187_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_187_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_187_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_187_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_187_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_187_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_187_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_187<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_187_0(acc),
            [101, 100, 117] => lookup_187_1(acc),
            [103, 111, 118] => lookup_187_2(acc),
            [103, 115, 106] => lookup_187_3(acc),
            [110, 101, 116] => lookup_187_4(acc),
            [111, 114, 103] => lookup_187_5(acc),
            [122, 97] => lookup_187_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_188() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_189_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_189_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_189_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_189_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_189_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_189_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_189_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_189_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98] => lookup_189_0(acc),
            [97, 119, 100, 101, 118] => lookup_189_1(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_189_2(acc),
            [98, 99] => lookup_189_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_189_4(acc),
            [99, 111] => lookup_189_5(acc),
            [103, 99] => lookup_189_6(acc),
            [109, 98] => lookup_189_7(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_189_8(acc),
            [110, 98] => lookup_189_9(acc),
            [110, 102] => lookup_189_10(acc),
            [110, 108] => lookup_189_11(acc),
            [110, 111, 45, 105, 112] => lookup_189_12(acc),
            [110, 115] => lookup_189_13(acc),
            [110, 116] => lookup_189_14(acc),
            [110, 117] => lookup_189_15(acc),
            [111, 110] => lookup_189_16(acc),
            [112, 101] => lookup_189_17(acc),
            [113, 99] => lookup_189_18(acc),
            [115, 107] => lookup_189_19(acc),
            [121, 107] => lookup_189_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_190() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_193() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_194() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_196() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_197() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_198() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_199() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_200() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_201() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_202() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_203() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_204() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_205() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_206() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_207() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_208() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_210_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_210_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 105] => lookup_210_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_210<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 98, 117] => lookup_210_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_211() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_212() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_213() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_214() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_215() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_216() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_217() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_219() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_221_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [105, 110, 115, 116, 97, 110, 99, 101, 115] => lookup_221_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_221_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_221<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_221_0(acc),
            [99, 115, 120] => lookup_221_1(acc),
            [102, 97, 110, 116, 97, 115, 121, 108, 101, 97, 103, 117, 101] => lookup_221_2(acc),
            [102, 116, 112, 97, 99, 99, 101, 115, 115] => lookup_221_3(acc),
            [103, 97, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_221_4(acc),
            [109, 121, 112, 104, 111, 116, 111, 115] => lookup_221_5(acc),
            [115, 99, 114, 97, 112, 112, 105, 110, 103] => lookup_221_6(acc),
            [115, 112, 97, 119, 110] => lookup_221_7(info, labels, acc),
            [116, 119, 109, 97, 105, 108] => lookup_221_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_222_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_222<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_222_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_223() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_225() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_226_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_226_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_227() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_229() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_230_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_5_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_5_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_230_5_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_230_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 118, 99] => lookup_230_5_1(info, labels, acc),
            wild => lookup_230_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_230_6_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_6_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 108, 112, 49] => lookup_230_6_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_230_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 101] => lookup_230_6_0(info, labels, acc),
            [97, 112, 112, 101, 110, 103, 105, 110, 101] => lookup_230_6_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_230_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_230<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 104, 112] => lookup_230_0(acc),
            [50, 105, 120] => lookup_230_1(acc),
            [52, 108, 105, 109, 97] => lookup_230_2(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_230_3(acc),
            [100, 110, 115, 107, 105, 110, 103] => lookup_230_4(acc),
            [102, 105, 114, 101, 110, 101, 116] => lookup_230_5(info, labels, acc),
            [102, 108, 111, 119] => lookup_230_6(info, labels, acc),
            [103, 111, 116, 100, 110, 115] => lookup_230_7(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_230_8(acc),
            [108, 105, 110, 107, 121, 97, 114, 100, 45, 99, 108, 111, 117, 100] => {
                lookup_230_9(acc)
            }
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_230_10(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_230_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_231() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_234() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_235() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_236() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_239() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_240() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_241_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_241_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_241_0(acc),
            [97, 115, 115, 111] => lookup_241_1(acc),
            [97, 195, 169, 114, 111, 112, 111, 114, 116] => lookup_241_2(acc),
            [99, 111] => lookup_241_3(acc),
            [99, 111, 109] => lookup_241_4(acc),
            [101, 100] => lookup_241_5(acc),
            [101, 100, 117] => lookup_241_6(acc),
            [102, 105, 110] => lookup_241_7(acc),
            [103, 111] => lookup_241_8(acc),
            [103, 111, 117, 118] => lookup_241_9(acc),
            [105, 110, 116] => lookup_241_10(acc),
            [109, 100] => lookup_241_11(acc),
            [110, 101, 116] => lookup_241_12(acc),
            [110, 108] => lookup_241_13(acc),
            [111, 114] => lookup_241_14(acc),
            [111, 114, 103] => lookup_241_15(acc),
            [112, 114, 101, 115, 115, 101] => lookup_241_16(acc),
            [120, 110, 45, 45, 97, 114, 111, 112, 111, 114, 116, 45, 98, 121, 97] => {
                lookup_241_17(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_242() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_243() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_245() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_246() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_248() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_249() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [119, 119, 119] => lookup_250_0(acc),
            wild => lookup_250_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_251_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_251_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_251_0(acc),
            [99, 111] => lookup_251_1(acc),
            [103, 111, 98] => lookup_251_2(acc),
            [103, 111, 118] => lookup_251_3(acc),
            [109, 105, 108] => lookup_251_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_252() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_255() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_256() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [101, 115, 45, 49] => lookup_258_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_258_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_258_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_258_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 105, 112] => lookup_258_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_7_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_7_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49] => lookup_258_7_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_7_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117, 114] => lookup_258_7_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 114, 117, 98, 97] => lookup_258_7_0(info, labels, acc),
            [105, 116, 49] => lookup_258_7_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 115] => lookup_258_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_12_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_258_12_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_258_13_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_258_13_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_258_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_14_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 110] => lookup_258_14_0(acc),
            [117, 107] => lookup_258_14_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_16<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 107] => lookup_258_16_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_18_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_18_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 97] => lookup_258_18_0(acc),
            [117, 107] => lookup_258_18_1(acc),
            [117, 115] => lookup_258_18_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_19_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_258_19_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_258_20_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_258_20_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_258_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 104] => lookup_258_22_0(acc),
            [100, 101] => lookup_258_22_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 120, 97, 114, 110, 101, 116] => lookup_258_0(info, labels, acc),
            [98, 97, 110, 122, 97, 105] => lookup_258_1(info, labels, acc),
            [100, 105, 97, 100, 101, 109] => lookup_258_2(acc),
            [101, 108, 101, 109, 101, 110, 116, 111, 114] => lookup_258_3(acc),
            [101, 110, 99, 111, 119, 97, 121] => lookup_258_4(info, labels, acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_258_5(info, labels, acc),
            [106, 101, 108, 101] => lookup_258_6(acc),
            [106, 101, 110, 118, 45, 97, 114, 117, 98, 97] => lookup_258_7(info, labels, acc),
            [106, 111, 116, 101, 108, 117, 108, 117] => lookup_258_8(acc),
            [107, 101, 108, 105, 119, 101, 98] => lookup_258_9(labels, acc),
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_258_10(acc),
            [108, 105, 110, 107, 121, 97, 114, 100] => lookup_258_11(acc),
            [109, 97, 103, 101, 110, 116, 111, 115, 105, 116, 101] => {
                lookup_258_12(info, labels, acc)
            }
            [111, 110, 45, 114, 97, 110, 99, 104, 101, 114] => lookup_258_13(info, labels, acc),
            [111, 120, 97] => lookup_258_14(labels, acc),
            [112, 101, 114, 115, 112, 101, 99, 116, 97] => lookup_258_15(acc),
            [112, 114, 105, 109, 101, 116, 101, 108] => lookup_258_16(labels, acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_258_17(acc),
            [114, 101, 99, 108, 97, 105, 109] => lookup_258_18(info, labels, acc),
            [115, 101, 110, 115, 105, 111, 115, 105, 116, 101] => lookup_258_19(info, labels, acc),
            [115, 116, 97, 116, 105, 99, 115] => lookup_258_20(info, labels, acc),
            [116, 114, 97, 102, 102, 105, 99, 112, 108, 101, 120] => lookup_258_21(acc),
            [116, 114, 101, 110, 100, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_258_22(info, labels, acc)
            }
            [117, 114, 111, 119, 110] => lookup_258_23(acc),
            [118, 97, 112, 111, 114] => lookup_258_24(acc),
            [118, 111, 111, 114, 108, 111, 112, 101, 114] => lookup_258_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_259_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_259_1(acc),
            [106, 101, 108, 101] => lookup_259_2(acc),
            [112, 111, 110, 121] => lookup_259_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_261_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_261_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_261_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_261_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_261<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_261_0(acc),
            [99, 111, 109] => lookup_261_1(acc),
            [103, 111, 118] => lookup_261_2(acc),
            [110, 101, 116] => lookup_261_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_262_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_3_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_262_3_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_262_3_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_262_3_0_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_262_3_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_262_3_0_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_262_3_0_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_262_3_0_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_262_3_0_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_262_3_0_2_0(acc),
            [99, 110, 45, 110, 111, 114, 116, 104, 119, 101, 115, 116, 45, 49] => {
                lookup_262_3_0_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_262_3_0_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_262_3_0_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_262_3_0_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_262_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_262_3_0_0(info, labels, acc),
            [99, 111, 109, 112, 117, 116, 101] => lookup_262_3_0_1(info, labels, acc),
            [101, 98] => lookup_262_3_0_2(info, labels, acc),
            [101, 108, 98] => lookup_262_3_0_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_262_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_262_3_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_262_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_262_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_262_0(acc),
            [97, 104] => lookup_262_1(acc),
            [98, 106] => lookup_262_2(acc),
            [99, 111, 109] => lookup_262_3(labels, acc),
            [99, 113] => lookup_262_4(acc),
            [101, 100, 117] => lookup_262_5(acc),
            [102, 106] => lookup_262_6(acc),
            [103, 100] => lookup_262_7(acc),
            [103, 111, 118] => lookup_262_8(acc),
            [103, 115] => lookup_262_9(acc),
            [103, 120] => lookup_262_10(acc),
            [103, 122] => lookup_262_11(acc),
            [104, 97] => lookup_262_12(acc),
            [104, 98] => lookup_262_13(acc),
            [104, 101] => lookup_262_14(acc),
            [104, 105] => lookup_262_15(acc),
            [104, 107] => lookup_262_16(acc),
            [104, 108] => lookup_262_17(acc),
            [104, 110] => lookup_262_18(acc),
            [105, 110, 115, 116, 97, 110, 116, 99, 108, 111, 117, 100] => lookup_262_19(acc),
            [106, 108] => lookup_262_20(acc),
            [106, 115] => lookup_262_21(acc),
            [106, 120] => lookup_262_22(acc),
            [108, 110] => lookup_262_23(acc),
            [109, 105, 108] => lookup_262_24(acc),
            [109, 111] => lookup_262_25(acc),
            [110, 101, 116] => lookup_262_26(acc),
            [110, 109] => lookup_262_27(acc),
            [110, 120] => lookup_262_28(acc),
            [111, 114, 103] => lookup_262_29(acc),
            [113, 104] => lookup_262_30(acc),
            [115, 99] => lookup_262_31(acc),
            [115, 100] => lookup_262_32(acc),
            [115, 104] => lookup_262_33(acc),
            [115, 110] => lookup_262_34(acc),
            [115, 120] => lookup_262_35(acc),
            [116, 106] => lookup_262_36(acc),
            [116, 119] => lookup_262_37(acc),
            [120, 106] => lookup_262_38(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_262_39(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_262_40(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_262_41(acc),
            [120, 122] => lookup_262_42(acc),
            [121, 110] => lookup_262_43(acc),
            [122, 106] => lookup_262_44(acc),
            [229, 133, 172, 229, 143, 184] => lookup_262_45(acc),
            [231, 182, 178, 231, 181, 161] => lookup_262_46(acc),
            [231, 189, 145, 231, 187, 156] => lookup_262_47(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_263_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_263_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_263_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_17_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_263_17_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_263_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263_19<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_263_19_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_263_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_263_0(acc),
            [99, 97, 114, 114, 100] => lookup_263_1(acc),
            [99, 111, 109] => lookup_263_2(labels, acc),
            [99, 114, 100] => lookup_263_3(acc),
            [101, 100, 117] => lookup_263_4(acc),
            [102, 105, 114, 109] => lookup_263_5(acc),
            [103, 111, 118] => lookup_263_6(acc),
            [105, 110, 102, 111] => lookup_263_7(acc),
            [105, 110, 116] => lookup_263_8(acc),
            [108, 101, 97, 100, 112, 97, 103, 101, 115] => lookup_263_9(acc),
            [108, 112, 97, 103, 101, 115] => lookup_263_10(acc),
            [109, 105, 108] => lookup_263_11(acc),
            [109, 121, 112, 105] => lookup_263_12(acc),
            [110, 52, 116] => lookup_263_13(acc),
            [110, 101, 116] => lookup_263_14(acc),
            [110, 111, 109] => lookup_263_15(acc),
            [111, 114, 103] => lookup_263_16(acc),
            [111, 116, 97, 112] => lookup_263_17(info, labels, acc),
            [114, 101, 99] => lookup_263_18(acc),
            [114, 101, 112, 108] => lookup_263_19(labels, acc),
            [115, 117, 112, 97, 98, 97, 115, 101] => lookup_263_20(acc),
            [119, 101, 98] => lookup_263_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_264() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_265_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 119, 111] => lookup_265_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_266() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_267() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_268() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_269_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_5_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_5_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_5_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_269_5_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_269_8_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_269_8_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_269_8_1_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_269_8_1_0(info, labels, acc),
            [115, 51] => lookup_269_8_1_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_269_8_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_269_8_2_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_269_8_2_0(info, labels, acc),
            [115, 51] => lookup_269_8_2_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_269_8_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_3_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_269_8_3_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_269_8_3_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_4_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_4_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_269_8_4_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_269_8_4_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_5_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_5_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_269_8_5_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_269_8_5_0(info, labels, acc),
            [115, 51] => lookup_269_8_5_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_269_8_5_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_8_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_8_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_8_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_8_8_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_9_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_9_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_269_8_9_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_9_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_269_8_9_0(info, labels, acc),
            [115, 51] => lookup_269_8_9_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_269_8_9_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_10_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_10_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_269_8_10_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_269_8_10_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_11_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_11_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_269_8_11_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_11_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_269_8_11_0(info, labels, acc),
            [115, 51] => lookup_269_8_11_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_269_8_11_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_12_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_12_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_269_8_12_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_12_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_12_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_269_8_12_0(info, labels, acc),
            [115, 51] => lookup_269_8_12_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_269_8_12_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_39_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_39_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_269_8_39_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_39<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_269_8_39_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_40_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_40_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_269_8_40_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_40<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_269_8_40_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_41_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_41_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_269_8_41_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8_41_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_41_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_8_41<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_269_8_41_0(info, labels, acc),
            [115, 51] => lookup_269_8_41_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_269_8_41_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_269_8_0(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_269_8_1(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_269_8_2(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_269_8_3(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_269_8_4(info, labels, acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_269_8_5(info, labels, acc)
            }
            [99, 111, 109, 112, 117, 116, 101] => lookup_269_8_6(info, labels, acc),
            [99, 111, 109, 112, 117, 116, 101, 45, 49] => lookup_269_8_7(info, labels, acc),
            [101, 108, 98] => lookup_269_8_8(info, labels, acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_269_8_9(info, labels, acc)
            }
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_269_8_10(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_269_8_11(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_269_8_12(info, labels, acc),
            [115, 51] => lookup_269_8_13(acc),
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_269_8_14(acc)
            }
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_269_8_15(acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_269_8_16(acc),
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_269_8_17(acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_269_8_18(acc)
            }
            [115, 51, 45, 99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_269_8_19(acc)
            }
            [115, 51, 45, 101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_269_8_20(acc)
            }
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_269_8_21(acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_269_8_22(acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_269_8_23(acc),
            [115, 51, 45, 101, 120, 116, 101, 114, 110, 97, 108, 45, 49] => lookup_269_8_24(acc),
            [115, 51, 45, 102, 105, 112, 115, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_269_8_25(acc)
            }
            [115, 51, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_269_8_26(acc),
            [115, 51, 45, 117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_269_8_27(acc),
            [115, 51, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_269_8_28(acc)
            }
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_269_8_29(acc),
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_269_8_30(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_269_8_31(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_269_8_32(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_269_8_33(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_269_8_34(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_269_8_35(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_269_8_36(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_269_8_37(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => {
                lookup_269_8_38(acc)
            }
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_269_8_39(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_269_8_40(labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_269_8_41(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_14_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_14_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 1usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_14_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_269_14_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_28_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_28<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108, 112, 104, 97] => lookup_269_28_0(acc),
            [98, 101, 116, 97] => lookup_269_28_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_42_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_42_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_42_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_42_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_42_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_42_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_42_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_42_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_42_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_42_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_42<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 99, 105] => lookup_269_42_1(info, labels, acc),
            [111, 99, 112] => lookup_269_42_2(info, labels, acc),
            [111, 99, 115] => lookup_269_42_3(info, labels, acc),
            wild => lookup_269_42_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_44<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_269_44_0(acc),
            [105, 110, 115, 116, 97, 110, 99, 101] => lookup_269_44_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_55_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_55<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_55_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_56_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_56<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_56_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_85<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_269_85_0(acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_269_85_1(acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_269_85_2(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_269_85_3(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_269_85_4(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_269_85_5(acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_269_85_6(acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_269_85_7(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_269_85_8(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_269_85_9(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_269_85_10(acc),
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_269_85_11(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_269_85_12(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_269_85_13(acc),
            [117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => lookup_269_85_14(acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_269_85_15(acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_269_85_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_91_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_91_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_91_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_91_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_91_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_91_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_91_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_91_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_91<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117, 45, 49] => lookup_269_91_0(acc),
            [101, 117, 45, 50] => lookup_269_91_1(acc),
            [101, 117, 45, 51] => lookup_269_91_2(acc),
            [101, 117, 45, 52] => lookup_269_91_3(acc),
            [117, 115, 45, 49] => lookup_269_91_4(acc),
            [117, 115, 45, 50] => lookup_269_91_5(acc),
            [117, 115, 45, 51] => lookup_269_91_6(acc),
            [117, 115, 45, 52] => lookup_269_91_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_95_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_95<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_269_95_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_173_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_173<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_269_173_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_175_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_175_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_175<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [114, 97, 103, 45, 99, 108, 111, 117, 100] => lookup_269_175_0(acc),
            [114, 97, 103, 45, 99, 108, 111, 117, 100, 45, 99, 104] => lookup_269_175_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_180_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_180_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_180<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99, 108, 111, 117, 100] => lookup_269_180_0(acc),
            [106, 99, 108, 111, 117, 100, 45, 118, 101, 114, 45, 106, 112, 99] => {
                lookup_269_180_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_243_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_243<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_269_243_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_244_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_244_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_244_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_244<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 115] => lookup_269_244_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_252_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_252_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_252_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_252_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_252<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 109, 98, 101, 114, 115] => lookup_269_252_0(acc),
            [110, 111, 100, 101, 98, 97, 108, 97, 110, 99, 101, 114] => {
                lookup_269_252_1(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_253_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_253<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_253_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_254_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_254<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 17usize;
    match labels.next() {
        Some(label) => match label {
            [105, 112] => lookup_269_254_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_255_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_255<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_269_255_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_259_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_259<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_269_259_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_261_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_261<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_269_261_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_276_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_276_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_276_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_276_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_276_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_276_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_276_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_276_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_276_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_276_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_276_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_276<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [99, 97, 114, 97, 99, 97, 108] => lookup_269_276_0(acc),
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_269_276_1(acc),
            [102, 101, 110, 116, 105, 103, 101, 114] => lookup_269_276_2(acc),
            [108, 121, 110, 120] => lookup_269_276_3(acc),
            [111, 99, 101, 108, 111, 116] => lookup_269_276_4(acc),
            [111, 110, 99, 105, 108, 108, 97] => lookup_269_276_5(acc),
            [111, 110, 122, 97] => lookup_269_276_6(acc),
            [115, 112, 104, 105, 110, 120] => lookup_269_276_7(acc),
            [118, 115] => lookup_269_276_8(acc),
            [120] => lookup_269_276_9(acc),
            [121, 97, 108, 105] => lookup_269_276_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_283_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_283<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_269_283_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_284_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_284<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 21usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_269_284_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_297_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_297<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_297_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_305_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_305<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [120, 101, 110] => lookup_269_305_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_307_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_307<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_269_307_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_313_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_313<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_269_313_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_269_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_316_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_316<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_269_316_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_351_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_351<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 105] => lookup_269_351_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_353_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_353<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 105, 116, 101] => lookup_269_353_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_362_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_362<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111] => lookup_269_362_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_368_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_368_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_368_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_368<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 100] => lookup_269_368_0(acc),
            [108, 111, 110] => lookup_269_368_1(acc),
            [114, 121, 100] => lookup_269_368_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_370_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_370<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_269_370_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_377_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_377<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 115] => lookup_269_377_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_381_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_381_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_381<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 50] => lookup_269_381_0(acc),
            [117, 50, 45, 108, 111, 99, 97, 108] => lookup_269_381_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_269<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48, 48, 49, 119, 119, 119] => lookup_269_0(acc),
            [48, 101, 109, 109] => lookup_269_1(info, labels, acc),
            [49, 107, 97, 112, 112] => lookup_269_2(acc),
            [51, 117, 116, 105, 108, 105, 116, 105, 101, 115] => lookup_269_3(acc),
            [52, 117] => lookup_269_4(acc),
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => {
                lookup_269_5(labels, acc)
            }
            [97, 102, 114, 105, 99, 97] => lookup_269_6(acc),
            [97, 108, 112, 104, 97, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_269_7(acc)
            }
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_269_8(info, labels, acc),
            [97, 109, 115, 99, 111, 109, 112, 117, 116, 101] => lookup_269_9(acc),
            [97, 112, 112, 99, 104, 105, 122, 105] => lookup_269_10(acc),
            [97, 112, 112, 108, 105, 110, 122, 105] => lookup_269_11(acc),
            [97, 112, 112, 115, 112, 97, 99, 101, 104, 111, 115, 116, 101, 100] => {
                lookup_269_12(acc)
            }
            [97, 112, 112, 115, 112, 97, 99, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_269_13(acc)
            }
            [97, 112, 112, 115, 112, 111, 116] => lookup_269_14(labels, acc),
            [97, 114] => lookup_269_15(acc),
            [97, 117, 116, 104, 103, 101, 97, 114, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_269_16(acc)
            }
            [97, 117, 116, 104, 103, 101, 97, 114, 97, 112, 112, 115] => lookup_269_17(acc),
            [97, 119, 115, 103, 108, 111, 98, 97, 108, 97, 99, 99, 101, 108, 101, 114, 97, 116, 111, 114] => {
                lookup_269_18(acc)
            }
            [97, 119, 115, 109, 112, 112, 108] => lookup_269_19(acc),
            [98, 97, 108, 101, 110, 97, 45, 100, 101, 118, 105, 99, 101, 115] => lookup_269_20(acc),
            [98, 97, 114, 115, 121, 99, 101, 110, 116, 101, 114] => lookup_269_21(acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_269_22(acc),
            [98, 101, 116, 97, 105, 110, 97, 98, 111, 120] => lookup_269_23(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_269_24(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_269_25(acc),
            [98, 108, 111, 103, 115, 121, 116, 101] => lookup_269_26(acc),
            [98, 108, 111, 120, 99, 109, 115] => lookup_269_27(acc),
            [98, 111, 117, 110, 116, 121, 45, 102, 117, 108, 108] => lookup_269_28(labels, acc),
            [98, 111, 117, 116, 105, 114] => lookup_269_29(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_269_30(acc),
            [98, 114] => lookup_269_31(acc),
            [98, 117, 105, 108, 116, 119, 105, 116, 104, 100, 97, 114, 107] => lookup_269_32(acc),
            [99, 97, 102, 106, 115] => lookup_269_33(acc),
            [99, 101, 99, 104, 105, 114, 101] => lookup_269_34(acc),
            [99, 105, 115, 99, 111, 102, 114, 101, 97, 107] => lookup_269_35(acc),
            [99, 108, 105, 99, 107, 101, 116, 99, 108, 111, 117, 100] => lookup_269_36(acc),
            [99, 108, 111, 117, 100, 99, 111, 110, 116, 114, 111, 108, 97, 112, 112] => {
                lookup_269_37(acc)
            }
            [99, 108, 111, 117, 100, 99, 111, 110, 116, 114, 111, 108, 108, 101, 100] => {
                lookup_269_38(acc)
            }
            [99, 110] => lookup_269_39(acc),
            [99, 111] => lookup_269_40(acc),
            [99, 111, 100, 101, 115, 112, 111, 116] => lookup_269_41(acc),
            [99, 117, 115, 116, 111, 109, 101, 114, 45, 111, 99, 105] => {
                lookup_269_42(info, labels, acc)
            }
            [100, 97, 109, 110, 115, 101, 114, 118, 101, 114] => lookup_269_43(acc),
            [100, 97, 116, 97, 100, 101, 116, 101, 99, 116] => lookup_269_44(info, labels, acc),
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_269_45(acc),
            [100, 97, 116, 116, 111, 114, 101, 108, 97, 121] => lookup_269_46(acc),
            [100, 97, 116, 116, 111, 119, 101, 98] => lookup_269_47(acc),
            [100, 100, 110, 115, 53] => lookup_269_48(acc),
            [100, 100, 110, 115, 102, 114, 101, 101] => lookup_269_49(acc),
            [100, 100, 110, 115, 103, 101, 101, 107] => lookup_269_50(acc),
            [100, 100, 110, 115, 107, 105, 110, 103] => lookup_269_51(acc),
            [100, 100, 110, 115, 108, 105, 118, 101] => lookup_269_52(acc),
            [100, 101] => lookup_269_53(acc),
            [100, 101, 118, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_269_54(acc)
            }
            [100, 101, 118, 99, 100, 110, 97, 99, 99, 101, 115, 115, 111] => {
                lookup_269_55(info, labels, acc)
            }
            [100, 105, 103, 105, 116, 97, 108, 111, 99, 101, 97, 110, 115, 112, 97, 99, 101, 115] => {
                lookup_269_56(info, labels, acc)
            }
            [100, 105, 116, 99, 104, 121, 111, 117, 114, 105, 112] => lookup_269_57(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_269_58(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_269_59(acc),
            [100, 110, 115, 105, 115, 107, 105, 110, 107, 121] => lookup_269_60(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_269_61(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_269_62(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_269_63(acc),
            [100, 111, 112, 97, 97, 115] => lookup_269_64(acc),
            [100, 114, 97, 121, 100, 100, 110, 115] => lookup_269_65(acc),
            [100, 114, 101, 97, 109, 104, 111, 115, 116, 101, 114, 115] => lookup_269_66(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_269_67(acc),
            [100, 121, 110, 45, 111, 45, 115, 97, 117, 114] => lookup_269_68(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_269_69(acc),
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 104, 111, 109, 101] => {
                lookup_269_70(acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 119, 111, 114, 107] => {
                lookup_269_71(acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 98, 108, 111, 103] => lookup_269_72(acc),
            [100, 121, 110, 100, 110, 115, 45, 102, 114, 101, 101] => lookup_269_73(acc),
            [100, 121, 110, 100, 110, 115, 45, 104, 111, 109, 101] => lookup_269_74(acc),
            [100, 121, 110, 100, 110, 115, 45, 105, 112] => lookup_269_75(acc),
            [100, 121, 110, 100, 110, 115, 45, 109, 97, 105, 108] => lookup_269_76(acc),
            [100, 121, 110, 100, 110, 115, 45, 111, 102, 102, 105, 99, 101] => lookup_269_77(acc),
            [100, 121, 110, 100, 110, 115, 45, 112, 105, 99, 115] => lookup_269_78(acc),
            [100, 121, 110, 100, 110, 115, 45, 114, 101, 109, 111, 116, 101] => lookup_269_79(acc),
            [100, 121, 110, 100, 110, 115, 45, 115, 101, 114, 118, 101, 114] => lookup_269_80(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 101, 98] => lookup_269_81(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 105, 107, 105] => lookup_269_82(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 111, 114, 107] => lookup_269_83(acc),
            [100, 121, 110, 110, 115] => lookup_269_84(acc),
            [101, 108, 97, 115, 116, 105, 99, 98, 101, 97, 110, 115, 116, 97, 108, 107] => {
                lookup_269_85(labels, acc)
            }
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 105, 115, 111, 110] => {
                lookup_269_86(acc)
            }
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 115, 105, 111, 110] => {
                lookup_269_87(acc)
            }
            [101, 115, 116, 45, 108, 101, 45, 112, 97, 116, 114, 111, 110] => lookup_269_88(acc),
            [101, 115, 116, 45, 109, 111, 110, 45, 98, 108, 111, 103, 117, 101, 117, 114] => {
                lookup_269_89(acc)
            }
            [101, 117] => lookup_269_90(acc),
            [101, 118, 101, 110, 110, 111, 100, 101] => lookup_269_91(info, labels, acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_269_92(acc),
            [102, 97, 115, 116, 108, 121, 45, 116, 101, 114, 114, 97, 114, 105, 117, 109] => {
                lookup_269_93(acc)
            }
            [102, 97, 115, 116, 118, 112, 115, 45, 115, 101, 114, 118, 101, 114] => {
                lookup_269_94(acc)
            }
            [102, 98, 115, 98, 120] => lookup_269_95(info, labels, acc),
            [102, 105, 114, 101, 98, 97, 115, 101, 97, 112, 112] => lookup_269_96(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_269_97(acc)
            }
            [102, 108, 100, 114, 118] => lookup_269_98(acc),
            [102, 111, 114, 103, 101, 98, 108, 111, 99, 107, 115] => lookup_269_99(acc),
            [102, 114, 97, 109, 101, 114, 99, 97, 110, 118, 97, 115] => lookup_269_100(acc),
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_269_101(acc),
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_269_102(acc),
            [102, 114, 101, 101, 109, 121, 105, 112] => lookup_269_103(acc),
            [102, 114, 111, 109, 45, 97, 107] => lookup_269_104(acc),
            [102, 114, 111, 109, 45, 97, 108] => lookup_269_105(acc),
            [102, 114, 111, 109, 45, 97, 114] => lookup_269_106(acc),
            [102, 114, 111, 109, 45, 99, 97] => lookup_269_107(acc),
            [102, 114, 111, 109, 45, 99, 116] => lookup_269_108(acc),
            [102, 114, 111, 109, 45, 100, 99] => lookup_269_109(acc),
            [102, 114, 111, 109, 45, 100, 101] => lookup_269_110(acc),
            [102, 114, 111, 109, 45, 102, 108] => lookup_269_111(acc),
            [102, 114, 111, 109, 45, 103, 97] => lookup_269_112(acc),
            [102, 114, 111, 109, 45, 104, 105] => lookup_269_113(acc),
            [102, 114, 111, 109, 45, 105, 97] => lookup_269_114(acc),
            [102, 114, 111, 109, 45, 105, 100] => lookup_269_115(acc),
            [102, 114, 111, 109, 45, 105, 108] => lookup_269_116(acc),
            [102, 114, 111, 109, 45, 105, 110] => lookup_269_117(acc),
            [102, 114, 111, 109, 45, 107, 115] => lookup_269_118(acc),
            [102, 114, 111, 109, 45, 107, 121] => lookup_269_119(acc),
            [102, 114, 111, 109, 45, 109, 97] => lookup_269_120(acc),
            [102, 114, 111, 109, 45, 109, 100] => lookup_269_121(acc),
            [102, 114, 111, 109, 45, 109, 105] => lookup_269_122(acc),
            [102, 114, 111, 109, 45, 109, 110] => lookup_269_123(acc),
            [102, 114, 111, 109, 45, 109, 111] => lookup_269_124(acc),
            [102, 114, 111, 109, 45, 109, 115] => lookup_269_125(acc),
            [102, 114, 111, 109, 45, 109, 116] => lookup_269_126(acc),
            [102, 114, 111, 109, 45, 110, 99] => lookup_269_127(acc),
            [102, 114, 111, 109, 45, 110, 100] => lookup_269_128(acc),
            [102, 114, 111, 109, 45, 110, 101] => lookup_269_129(acc),
            [102, 114, 111, 109, 45, 110, 104] => lookup_269_130(acc),
            [102, 114, 111, 109, 45, 110, 106] => lookup_269_131(acc),
            [102, 114, 111, 109, 45, 110, 109] => lookup_269_132(acc),
            [102, 114, 111, 109, 45, 110, 118] => lookup_269_133(acc),
            [102, 114, 111, 109, 45, 111, 104] => lookup_269_134(acc),
            [102, 114, 111, 109, 45, 111, 107] => lookup_269_135(acc),
            [102, 114, 111, 109, 45, 111, 114] => lookup_269_136(acc),
            [102, 114, 111, 109, 45, 112, 97] => lookup_269_137(acc),
            [102, 114, 111, 109, 45, 112, 114] => lookup_269_138(acc),
            [102, 114, 111, 109, 45, 114, 105] => lookup_269_139(acc),
            [102, 114, 111, 109, 45, 115, 99] => lookup_269_140(acc),
            [102, 114, 111, 109, 45, 115, 100] => lookup_269_141(acc),
            [102, 114, 111, 109, 45, 116, 110] => lookup_269_142(acc),
            [102, 114, 111, 109, 45, 116, 120] => lookup_269_143(acc),
            [102, 114, 111, 109, 45, 117, 116] => lookup_269_144(acc),
            [102, 114, 111, 109, 45, 118, 97] => lookup_269_145(acc),
            [102, 114, 111, 109, 45, 118, 116] => lookup_269_146(acc),
            [102, 114, 111, 109, 45, 119, 97] => lookup_269_147(acc),
            [102, 114, 111, 109, 45, 119, 105] => lookup_269_148(acc),
            [102, 114, 111, 109, 45, 119, 118] => lookup_269_149(acc),
            [102, 114, 111, 109, 45, 119, 121] => lookup_269_150(acc),
            [103, 101, 101, 107, 103, 97, 108, 97, 120, 121] => lookup_269_151(acc),
            [103, 101, 110, 116, 97, 112, 112, 115] => lookup_269_152(acc),
            [103, 101, 110, 116, 108, 101, 110, 116, 97, 112, 105, 115] => lookup_269_153(acc),
            [103, 101, 116, 109, 121, 105, 112] => lookup_269_154(acc),
            [103, 105, 105, 122, 101] => lookup_269_155(acc),
            [103, 105, 116, 104, 117, 98, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_269_156(acc)
            }
            [103, 108, 101, 101, 122, 101] => lookup_269_157(acc),
            [103, 111, 111, 103, 108, 101, 97, 112, 105, 115] => lookup_269_158(acc),
            [103, 111, 111, 103, 108, 101, 99, 111, 100, 101] => lookup_269_159(acc),
            [103, 111, 116, 100, 110, 115] => lookup_269_160(acc),
            [103, 111, 116, 112, 97, 110, 116, 104, 101, 111, 110] => lookup_269_161(acc),
            [103, 114] => lookup_269_162(acc),
            [104, 101, 97, 108, 116, 104, 45, 99, 97, 114, 101, 114, 101, 102, 111, 114, 109] => {
                lookup_269_163(acc)
            }
            [104, 101, 114, 111, 107, 117, 97, 112, 112] => lookup_269_164(acc),
            [104, 101, 114, 111, 107, 117, 115, 115, 108] => lookup_269_165(acc),
            [104, 105, 100, 111, 114, 97] => lookup_269_166(acc),
            [104, 107] => lookup_269_167(acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_269_168(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_269_169(acc),
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 109, 97, 99] => {
                lookup_269_170(acc)
            }
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 112, 99] => {
                lookup_269_171(acc)
            }
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_269_172(acc),
            [104, 111, 115, 116, 101, 100, 45, 98, 121, 45, 112, 114, 101, 118, 105, 100, 101, 114] => {
                lookup_269_173(info, labels, acc)
            }
            [104, 111, 115, 116, 101, 100, 112, 105] => lookup_269_174(acc),
            [104, 111, 115, 116, 101, 117, 114] => lookup_269_175(info, labels, acc),
            [104, 111, 116, 101, 108, 119, 105, 116, 104, 102, 108, 105, 103, 104, 116] => {
                lookup_269_176(acc)
            }
            [104, 117] => lookup_269_177(acc),
            [105, 97, 109, 97, 108, 108, 97, 109, 97] => lookup_269_178(acc),
            [105, 100, 110, 98, 108, 111, 103, 103, 101, 114] => lookup_269_179(acc),
            [105, 107, 45, 115, 101, 114, 118, 101, 114] => lookup_269_180(info, labels, acc),
            [105, 109, 112, 101, 114, 116, 114, 105, 120] => lookup_269_181(acc),
            [105, 109, 112, 101, 114, 116, 114, 105, 120, 99, 100, 110] => lookup_269_182(acc),
            [105, 110, 100, 111, 119, 97, 112, 98, 108, 111, 103] => lookup_269_183(acc),
            [105, 115, 45, 97, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => lookup_269_184(acc),
            [105, 115, 45, 97, 45, 98, 108, 111, 103, 103, 101, 114] => lookup_269_185(acc),
            [105, 115, 45, 97, 45, 98, 111, 111, 107, 107, 101, 101, 112, 101, 114] => {
                lookup_269_186(acc)
            }
            [105, 115, 45, 97, 45, 98, 117, 108, 108, 115, 45, 102, 97, 110] => lookup_269_187(acc),
            [105, 115, 45, 97, 45, 99, 97, 116, 101, 114, 101, 114] => lookup_269_188(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_269_189(acc),
            [105, 115, 45, 97, 45, 99, 111, 110, 115, 101, 114, 118, 97, 116, 105, 118, 101] => {
                lookup_269_190(acc)
            }
            [105, 115, 45, 97, 45, 99, 112, 97] => lookup_269_191(acc),
            [105, 115, 45, 97, 45, 99, 117, 98, 105, 99, 108, 101, 45, 115, 108, 97, 118, 101] => {
                lookup_269_192(acc)
            }
            [105, 115, 45, 97, 45, 100, 101, 109, 111, 99, 114, 97, 116] => lookup_269_193(acc),
            [105, 115, 45, 97, 45, 100, 101, 115, 105, 103, 110, 101, 114] => lookup_269_194(acc),
            [105, 115, 45, 97, 45, 100, 111, 99, 116, 111, 114] => lookup_269_195(acc),
            [105, 115, 45, 97, 45, 102, 105, 110, 97, 110, 99, 105, 97, 108, 97, 100, 118, 105, 115, 111, 114] => {
                lookup_269_196(acc)
            }
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_269_197(acc),
            [105, 115, 45, 97, 45, 103, 114, 101, 101, 110] => lookup_269_198(acc),
            [105, 115, 45, 97, 45, 103, 117, 114, 117] => lookup_269_199(acc),
            [105, 115, 45, 97, 45, 104, 97, 114, 100, 45, 119, 111, 114, 107, 101, 114] => {
                lookup_269_200(acc)
            }
            [105, 115, 45, 97, 45, 104, 117, 110, 116, 101, 114] => lookup_269_201(acc),
            [105, 115, 45, 97, 45, 108, 97, 110, 100, 115, 99, 97, 112, 101, 114] => {
                lookup_269_202(acc)
            }
            [105, 115, 45, 97, 45, 108, 97, 119, 121, 101, 114] => lookup_269_203(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 97, 108] => lookup_269_204(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 116, 97, 114, 105, 97, 110] => {
                lookup_269_205(acc)
            }
            [105, 115, 45, 97, 45, 108, 108, 97, 109, 97] => lookup_269_206(acc),
            [105, 115, 45, 97, 45, 109, 117, 115, 105, 99, 105, 97, 110] => lookup_269_207(acc),
            [105, 115, 45, 97, 45, 110, 97, 115, 99, 97, 114, 102, 97, 110] => lookup_269_208(acc),
            [105, 115, 45, 97, 45, 110, 117, 114, 115, 101] => lookup_269_209(acc),
            [105, 115, 45, 97, 45, 112, 97, 105, 110, 116, 101, 114] => lookup_269_210(acc),
            [105, 115, 45, 97, 45, 112, 101, 114, 115, 111, 110, 97, 108, 116, 114, 97, 105, 110, 101, 114] => {
                lookup_269_211(acc)
            }
            [105, 115, 45, 97, 45, 112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 101, 114] => {
                lookup_269_212(acc)
            }
            [105, 115, 45, 97, 45, 112, 108, 97, 121, 101, 114] => lookup_269_213(acc),
            [105, 115, 45, 97, 45, 114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => {
                lookup_269_214(acc)
            }
            [105, 115, 45, 97, 45, 114, 111, 99, 107, 115, 116, 97, 114] => lookup_269_215(acc),
            [105, 115, 45, 97, 45, 115, 111, 99, 105, 97, 108, 105, 115, 116] => {
                lookup_269_216(acc)
            }
            [105, 115, 45, 97, 45, 115, 116, 117, 100, 101, 110, 116] => lookup_269_217(acc),
            [105, 115, 45, 97, 45, 116, 101, 97, 99, 104, 101, 114] => lookup_269_218(acc),
            [105, 115, 45, 97, 45, 116, 101, 99, 104, 105, 101] => lookup_269_219(acc),
            [105, 115, 45, 97, 45, 116, 104, 101, 114, 97, 112, 105, 115, 116] => {
                lookup_269_220(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => {
                lookup_269_221(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 111, 114] => lookup_269_222(acc),
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 114, 101, 115, 115] => lookup_269_223(acc),
            [105, 115, 45, 97, 110, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => {
                lookup_269_224(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 114, 116, 105, 115, 116] => lookup_269_225(acc),
            [105, 115, 45, 97, 110, 45, 101, 110, 103, 105, 110, 101, 101, 114] => {
                lookup_269_226(acc)
            }
            [105, 115, 45, 97, 110, 45, 101, 110, 116, 101, 114, 116, 97, 105, 110, 101, 114] => {
                lookup_269_227(acc)
            }
            [105, 115, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => lookup_269_228(acc),
            [105, 115, 45, 103, 111, 110, 101] => lookup_269_229(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 97, 110, 105, 109, 101] => lookup_269_230(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 115] => lookup_269_231(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 116, 111, 111, 110, 115] => {
                lookup_269_232(acc)
            }
            [105, 115, 45, 105, 110, 116, 111, 45, 103, 97, 109, 101, 115] => lookup_269_233(acc),
            [105, 115, 45, 108, 101, 101, 116] => lookup_269_234(acc),
            [105, 115, 45, 110, 111, 116, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => {
                lookup_269_235(acc)
            }
            [105, 115, 45, 115, 108, 105, 99, 107] => lookup_269_236(acc),
            [105, 115, 45, 117, 98, 101, 114, 108, 101, 101, 116] => lookup_269_237(acc),
            [105, 115, 45, 119, 105, 116, 104, 45, 116, 104, 101, 98, 97, 110, 100] => {
                lookup_269_238(acc)
            }
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_269_239(acc),
            [105, 115, 97, 45, 104, 111, 99, 107, 101, 121, 110, 117, 116] => lookup_269_240(acc),
            [105, 115, 115, 109, 97, 114, 116, 101, 114, 116, 104, 97, 110, 121, 111, 117] => {
                lookup_269_241(acc)
            }
            [106, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_269_242(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_269_243(info, labels, acc),
            [106, 111, 121, 101, 110, 116] => lookup_269_244(info, labels, acc),
            [106, 112, 110] => lookup_269_245(acc),
            [107, 97, 115, 115, 101, 114, 118, 101, 114] => lookup_269_246(acc),
            [107, 105, 108, 97, 116, 105, 114, 111, 110] => lookup_269_247(acc),
            [107, 111, 122, 111, 119] => lookup_269_248(acc),
            [107, 114] => lookup_269_249(acc),
            [108, 105, 107, 101, 115, 45, 112, 105, 101] => lookup_269_250(acc),
            [108, 105, 107, 101, 115, 99, 97, 110, 100, 121] => lookup_269_251(acc),
            [108, 105, 110, 111, 100, 101] => lookup_269_252(info, labels, acc),
            [108, 105, 110, 111, 100, 101, 111, 98, 106, 101, 99, 116, 115] => {
                lookup_269_253(info, labels, acc)
            }
            [108, 105, 110, 111, 100, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_269_254(info, labels, acc)
            }
            [108, 109, 112, 109] => lookup_269_255(info, labels, acc),
            [108, 111, 103, 111, 105, 112] => lookup_269_256(acc),
            [108, 111, 115, 101, 121, 111, 117, 114, 105, 112] => lookup_269_257(acc),
            [108, 112, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_269_258(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_269_259(info, labels, acc)
            }
            [109, 97, 122, 101, 112, 108, 97, 121] => lookup_269_260(acc),
            [109, 101, 116, 101, 111, 114, 97, 112, 112] => lookup_269_261(labels, acc),
            [109, 101, 120] => lookup_269_262(acc),
            [109, 105, 110, 105, 115, 101, 114, 118, 101, 114] => lookup_269_263(acc),
            [109, 121, 97, 99, 116, 105, 118, 101, 100, 105, 114, 101, 99, 116, 111, 114, 121] => {
                lookup_269_264(acc)
            }
            [109, 121, 97, 115, 117, 115, 116, 111, 114] => lookup_269_265(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_269_266(acc),
            [109, 121, 100, 111, 98, 105, 115, 115] => lookup_269_267(acc),
            [109, 121, 100, 114, 111, 98, 111] => lookup_269_268(acc),
            [109, 121, 105, 112, 104, 111, 115, 116] => lookup_269_269(acc),
            [109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => lookup_269_270(acc),
            [109, 121, 114, 97, 118, 101, 110, 100, 98] => lookup_269_271(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_269_272(acc)
            }
            [109, 121, 115, 104, 111, 112, 98, 108, 111, 99, 107, 115] => lookup_269_273(acc),
            [109, 121, 115, 104, 111, 112, 105, 102, 121] => lookup_269_274(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_269_275(acc),
            [109, 121, 116, 104, 105, 99, 45, 98, 101, 97, 115, 116, 115] => {
                lookup_269_276(info, labels, acc)
            }
            [109, 121, 116, 117, 108, 101, 97, 112] => lookup_269_277(acc),
            [109, 121, 118, 110, 99] => lookup_269_278(acc),
            [110, 101, 97, 116, 45, 117, 114, 108] => lookup_269_279(acc),
            [110, 101, 116, 45, 102, 114, 101, 97, 107, 115] => lookup_269_280(acc),
            [110, 102, 115, 104, 111, 115, 116] => lookup_269_281(acc),
            [110, 111] => lookup_269_282(acc),
            [110, 111, 115, 112, 97, 109, 112, 114, 111, 120, 121] => {
                lookup_269_283(info, labels, acc)
            }
            [111, 98, 115, 101, 114, 118, 97, 98, 108, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_269_284(info, labels, acc)
            }
            [111, 110, 45, 97, 112, 116, 105, 98, 108, 101] => lookup_269_285(acc),
            [111, 110, 102, 97, 98, 114, 105, 99, 97] => lookup_269_286(acc),
            [111, 110, 114, 101, 110, 100, 101, 114] => lookup_269_287(acc),
            [111, 110, 116, 104, 101, 119, 105, 102, 105] => lookup_269_288(acc),
            [111, 111, 103, 117, 121] => lookup_269_289(acc),
            [111, 112, 101, 114, 97, 117, 110, 105, 116, 101] => lookup_269_290(acc),
            [111, 114, 115, 105, 116, 101, 115] => lookup_269_291(acc),
            [111, 117, 116, 115, 121, 115, 116, 101, 109, 115, 99, 108, 111, 117, 100] => {
                lookup_269_292(acc)
            }
            [111, 119, 110, 112, 114, 111, 118, 105, 100, 101, 114] => lookup_269_293(acc),
            [112, 97, 103, 101, 102, 114, 111, 110, 116, 97, 112, 112] => lookup_269_294(acc),
            [112, 97, 103, 101, 115, 112, 101, 101, 100, 109, 111, 98, 105, 108, 105, 122, 101, 114] => {
                lookup_269_295(acc)
            }
            [112, 97, 103, 101, 120, 108] => lookup_269_296(acc),
            [112, 97, 121, 119, 104, 105, 114, 108] => lookup_269_297(info, labels, acc),
            [112, 103, 102, 111, 103] => lookup_269_298(acc),
            [112, 105, 120, 111, 108, 105, 110, 111] => lookup_269_299(acc),
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_269_300(acc),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110, 45, 99, 108, 111, 117, 100] => {
                lookup_269_301(acc)
            }
            [112, 108, 101, 115, 107, 110, 115] => lookup_269_302(acc),
            [112, 111, 105, 110, 116, 50, 116, 104, 105, 115] => lookup_269_303(acc),
            [112, 111, 115, 116, 109, 97, 110, 45, 101, 99, 104, 111] => lookup_269_304(acc),
            [112, 114, 103, 109, 114] => lookup_269_305(info, labels, acc),
            [112, 117, 98, 108, 105, 115, 104, 112, 114, 111, 120, 121] => lookup_269_306(acc),
            [112, 121, 116, 104, 111, 110, 97, 110, 121, 119, 104, 101, 114, 101] => {
                lookup_269_307(labels, acc)
            }
            [113, 97, 50] => lookup_269_308(acc),
            [113, 98, 117, 115, 101, 114] => lookup_269_309(acc),
            [113, 99] => lookup_269_310(acc),
            [113, 117, 97, 108, 105, 102, 105, 111, 97, 112, 112] => lookup_269_311(acc),
            [113, 117, 105, 99, 107, 115, 121, 116, 101, 115] => lookup_269_312(acc),
            [113, 117, 105, 112, 101, 108, 101, 109, 101, 110, 116, 115] => {
                lookup_269_313(info, labels, acc)
            }
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_269_314(acc),
            [114, 101, 109, 111, 116, 101, 119, 100] => lookup_269_315(acc),
            [114, 101, 110, 100, 101, 114] => lookup_269_316(info, labels, acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_269_317(acc),
            [114, 101, 115, 101, 114, 118, 101, 45, 111, 110, 108, 105, 110, 101] => {
                lookup_269_318(acc)
            }
            [114, 104, 99, 108, 111, 117, 100] => lookup_269_319(acc),
            [114, 117] => lookup_269_320(acc),
            [115, 97] => lookup_269_321(acc),
            [115, 97, 118, 101, 115, 45, 116, 104, 101, 45, 119, 104, 97, 108, 101, 115] => {
                lookup_269_322(acc)
            }
            [115, 99, 114, 121, 115, 101, 99] => lookup_269_323(acc),
            [115, 101, 99, 117, 114, 105, 116, 121, 116, 97, 99, 116, 105, 99, 115] => {
                lookup_269_324(acc)
            }
            [115, 101, 108, 102, 105, 112] => lookup_269_325(acc),
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 108, 101, 115, 115] => {
                lookup_269_326(acc)
            }
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 117] => lookup_269_327(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_269_328(acc),
            [115, 101, 114, 118, 101, 98, 101, 101, 114] => lookup_269_329(acc),
            [115, 101, 114, 118, 101, 99, 111, 117, 110, 116, 101, 114, 115, 116, 114, 105, 107, 101] => {
                lookup_269_330(acc)
            }
            [115, 101, 114, 118, 101, 101, 120, 99, 104, 97, 110, 103, 101] => lookup_269_331(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_269_332(acc),
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_269_333(acc),
            [115, 101, 114, 118, 101, 104, 97, 108, 102, 108, 105, 102, 101] => lookup_269_334(acc),
            [115, 101, 114, 118, 101, 104, 116, 116, 112] => lookup_269_335(acc),
            [115, 101, 114, 118, 101, 104, 117, 109, 111, 117, 114] => lookup_269_336(acc),
            [115, 101, 114, 118, 101, 105, 114, 99] => lookup_269_337(acc),
            [115, 101, 114, 118, 101, 109, 112, 51] => lookup_269_338(acc),
            [115, 101, 114, 118, 101, 112, 50, 112] => lookup_269_339(acc),
            [115, 101, 114, 118, 101, 112, 105, 99, 115] => lookup_269_340(acc),
            [115, 101, 114, 118, 101, 113, 117, 97, 107, 101] => lookup_269_341(acc),
            [115, 101, 114, 118, 101, 115, 97, 114, 99, 97, 115, 109] => lookup_269_342(acc),
            [115, 104, 111, 112, 105, 116, 115, 105, 116, 101] => lookup_269_343(acc),
            [115, 105, 105, 105, 116, 101, 115] => lookup_269_344(acc),
            [115, 105, 109, 112, 108, 101, 45, 117, 114, 108] => lookup_269_345(acc),
            [115, 105, 110, 97, 97, 112, 112] => lookup_269_346(acc),
            [115, 107, 121, 103, 101, 97, 114, 97, 112, 112] => lookup_269_347(acc),
            [115, 109, 117, 115, 104, 99, 100, 110] => lookup_269_348(acc),
            [115, 112, 97, 99, 101, 45, 116, 111, 45, 114, 101, 110, 116] => lookup_269_349(acc),
            [115, 116, 97, 99, 107, 104, 101, 114, 111, 45, 110, 101, 116, 119, 111, 114, 107] => {
                lookup_269_350(acc)
            }
            [115, 116, 100, 108, 105, 98] => lookup_269_351(info, labels, acc),
            [115, 116, 117, 102, 102, 116, 111, 114, 101, 97, 100] => lookup_269_352(acc),
            [116, 98, 45, 104, 111, 115, 116, 105, 110, 103] => lookup_269_353(info, labels, acc),
            [116, 101, 97, 99, 104, 101, 115, 45, 121, 111, 103, 97] => lookup_269_354(acc),
            [116, 101, 109, 112, 45, 100, 110, 115] => lookup_269_355(acc),
            [116, 104, 101, 119, 111, 114, 107, 112, 99] => lookup_269_356(acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116, 100, 97, 116, 97] => lookup_269_357(acc),
            [116, 111, 119, 110, 110, 101, 119, 115, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_269_358(acc)
            }
            [116, 114, 121, 45, 115, 110, 111, 119, 112, 108, 111, 119] => lookup_269_359(acc),
            [116, 114, 121, 99, 108, 111, 117, 100, 102, 108, 97, 114, 101] => lookup_269_360(acc),
            [116, 117, 108, 101, 97, 112, 45, 112, 97, 114, 116, 110, 101, 114, 115] => {
                lookup_269_361(acc)
            }
            [116, 121, 112, 101, 102, 111, 114, 109] => lookup_269_362(info, labels, acc),
            [117, 107] => lookup_269_363(acc),
            [117, 110, 117, 115, 117, 97, 108, 112, 101, 114, 115, 111, 110] => lookup_269_364(acc),
            [117, 115] => lookup_269_365(acc),
            [117, 121] => lookup_269_366(acc),
            [118, 105, 112, 115, 105, 110, 97, 97, 112, 112] => lookup_269_367(acc),
            [119, 97, 102, 97, 105, 99, 108, 111, 117, 100] => lookup_269_368(info, labels, acc),
            [119, 97, 102, 102, 108, 101, 99, 101, 108, 108] => lookup_269_369(acc),
            [119, 105, 97, 114, 100, 119, 101, 98] => lookup_269_370(info, labels, acc),
            [119, 105, 116, 104, 103, 111, 111, 103, 108, 101] => lookup_269_371(acc),
            [119, 105, 116, 104, 121, 111, 117, 116, 117, 98, 101] => lookup_269_372(acc),
            [119, 105, 120, 115, 105, 116, 101] => lookup_269_373(acc),
            [119, 111, 108, 116, 108, 97, 98, 45, 100, 101, 109, 111] => lookup_269_374(acc),
            [119, 111, 114, 107, 105, 115, 98, 111, 114, 105, 110, 103] => lookup_269_375(acc),
            [119, 112, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_269_376(acc),
            [119, 112, 101, 110, 103, 105, 110, 101, 112, 111, 119, 101, 114, 101, 100] => {
                lookup_269_377(labels, acc)
            }
            [119, 112, 104, 111, 115, 116, 101, 100, 109, 97, 105, 108] => lookup_269_378(acc),
            [119, 112, 109, 117, 99, 100, 110] => lookup_269_379(acc),
            [119, 114, 105, 116, 101, 115, 116, 104, 105, 115, 98, 108, 111, 103] => {
                lookup_269_380(acc)
            }
            [120, 110, 98, 97, 121] => lookup_269_381(labels, acc),
            [121, 111, 108, 97, 115, 105, 116, 101] => lookup_269_382(acc),
            [122, 97] => lookup_269_383(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_270() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_271() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_272_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_272_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_272<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 102, 111, 114, 117, 109] => lookup_272_0(acc),
            [110, 111, 103] => lookup_272_1(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_272_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_273() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_274() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_275() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_276() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_277() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_278() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_281() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_282() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_283() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_284_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_284_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_284<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101] => lookup_284_0(acc),
            [101, 108, 101, 109, 101, 110, 116, 111, 114] => lookup_284_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_285() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_286() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_287() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_288() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_290() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_292_0(acc),
            [99, 111] => lookup_292_1(acc),
            [101, 100] => lookup_292_2(acc),
            [102, 105] => lookup_292_3(acc),
            [103, 111] => lookup_292_4(acc),
            [111, 114] => lookup_292_5(acc),
            [115, 97] => lookup_292_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_293() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_298() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_299() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_300() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_301() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_302_0(acc),
            [101, 100, 117] => lookup_302_1(acc),
            [103, 111, 118] => lookup_302_2(acc),
            [105, 110, 102] => lookup_302_3(acc),
            [110, 101, 116] => lookup_302_4(acc),
            [111, 114, 103] => lookup_302_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_303() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_304_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_304_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_304_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_304_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_304_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_304_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_304<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_304_0(acc),
            [99, 111, 109] => lookup_304_1(acc),
            [101, 100, 117] => lookup_304_2(acc),
            [105, 110, 116] => lookup_304_3(acc),
            [110, 111, 109, 101] => lookup_304_4(acc),
            [111, 114, 103] => lookup_304_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_305_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_305_0(acc),
            [101, 100, 117] => lookup_305_1(acc),
            [110, 101, 116] => lookup_305_2(acc),
            [111, 114, 103] => lookup_305_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_306_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_306_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_306<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116, 104] => lookup_306_0(acc),
            [103, 111, 118] => lookup_306_1(acc),
            [105, 110, 102, 111] => lookup_306_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_307_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_2_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_307_2_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_307_2_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_307_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_307_2_0(acc),
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_307_2_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_307_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_307_0(acc),
            [98, 105, 122] => lookup_307_1(acc),
            [99, 111, 109] => lookup_307_2(labels, acc),
            [101, 107, 108, 111, 103, 101, 115] => lookup_307_3(acc),
            [103, 111, 118] => lookup_307_4(acc),
            [108, 116, 100] => lookup_307_5(acc),
            [110, 97, 109, 101] => lookup_307_6(acc),
            [110, 101, 116] => lookup_307_7(acc),
            [111, 114, 103] => lookup_307_8(acc),
            [112, 97, 114, 108, 105, 97, 109, 101, 110, 116] => lookup_307_9(acc),
            [112, 114, 101, 115, 115] => lookup_307_10(acc),
            [112, 114, 111] => lookup_307_11(acc),
            [116, 109] => lookup_307_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_308() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_309() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_310_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_3_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_310_3_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_310_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_310_3_0(info, labels, acc),
            [99, 117, 115, 116, 111, 109] => lookup_310_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_310_4_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_4_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_4_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [102, 108, 116] => lookup_310_4_0_0(acc),
            [117, 115, 114] => lookup_310_4_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_310_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_310_4_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_310_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_310_0(acc),
            [99, 111] => lookup_310_1(acc),
            [101, 52] => lookup_310_2(acc),
            [109, 101, 116, 97, 99, 101, 110, 116, 114, 117, 109] => {
                lookup_310_3(info, labels, acc)
            }
            [109, 117, 110, 105] => lookup_310_4(info, labels, acc),
            [114, 101, 97, 108, 109] => lookup_310_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_311() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_312() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_313() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_314() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_315() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_316() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_317() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_318() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_320() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_321_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_321_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_321_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_321_10_0(acc),
            [100, 121, 110, 100, 110, 115] => lookup_321_10_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_321_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_23_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_23_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_321_29_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_321_30_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_30_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_321_30_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_321_30<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116] => lookup_321_30_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_321_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_56_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_56<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_321_56_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_321_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_65_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_65<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_321_65_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_321_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_321<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 104, 112] => lookup_321_0(acc),
            [50, 105, 120] => lookup_321_1(acc),
            [52, 108, 105, 109, 97] => lookup_321_2(acc),
            [98, 97, 114, 115, 121] => lookup_321_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_321_4(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_321_5(acc),
            [99, 111, 109] => lookup_321_6(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_321_7(acc),
            [99, 111, 115, 105, 100, 110, 115] => lookup_321_8(info, labels, acc),
            [100, 100, 45, 100, 110, 115] => lookup_321_9(acc),
            [100, 100, 110, 115, 115] => lookup_321_10(labels, acc),
            [100, 105, 115, 107, 117, 115, 115, 105, 111, 110, 115, 98, 101, 114, 101, 105, 99, 104] => {
                lookup_321_11(acc)
            }
            [100, 110, 115, 104, 111, 109, 101] => lookup_321_12(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101, 114] => lookup_321_13(acc),
            [100, 114, 97, 121, 45, 100, 110, 115] => lookup_321_14(acc),
            [100, 114, 97, 121, 100, 110, 115] => lookup_321_15(acc),
            [100, 121, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_321_16(acc),
            [100, 121, 110, 45, 105, 112, 50, 52] => lookup_321_17(acc),
            [100, 121, 110, 45, 118, 112, 110] => lookup_321_18(acc),
            [100, 121, 110, 97, 109, 105, 115, 99, 104, 101, 115, 45, 100, 110, 115] => {
                lookup_321_19(acc)
            }
            [100, 121, 110, 100, 110, 115, 49] => lookup_321_20(acc),
            [100, 121, 110, 118, 112, 110] => lookup_321_21(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_321_22(acc)
            }
            [102, 114, 117, 115, 107, 121] => lookup_321_23(info, labels, acc),
            [102, 117, 101, 116, 116, 101, 114, 116, 100, 97, 115, 110, 101, 116, 122] => {
                lookup_321_24(acc)
            }
            [103, 105, 116, 45, 114, 101, 112, 111, 115] => lookup_321_25(acc),
            [103, 111, 105, 112] => lookup_321_26(acc),
            [103, 195, 188, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110] => {
                lookup_321_27(acc)
            }
            [103, 195, 188, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110] => {
                lookup_321_28(acc)
            }
            [104, 111, 109, 101, 45, 119, 101, 98, 115, 101, 114, 118, 101, 114] => {
                lookup_321_29(labels, acc)
            }
            [104, 115, 45, 104, 101, 105, 108, 98, 114, 111, 110, 110] => {
                lookup_321_30(info, labels, acc)
            }
            [105, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_321_31(acc),
            [105, 110, 45, 98, 114, 98] => lookup_321_32(acc),
            [105, 110, 45, 98, 117, 116, 116, 101, 114] => lookup_321_33(acc),
            [105, 110, 45, 100, 115, 108] => lookup_321_34(acc),
            [105, 110, 45, 118, 112, 110] => lookup_321_35(acc),
            [105, 110, 116, 101, 114, 110, 101, 116, 45, 100, 110, 115] => lookup_321_36(acc),
            [105, 115, 116, 101, 105, 110, 103, 101, 101, 107] => lookup_321_37(acc),
            [105, 115, 116, 109, 101, 105, 110] => lookup_321_38(acc),
            [107, 101, 121, 109, 97, 99, 104, 105, 110, 101] => lookup_321_39(acc),
            [108, 45, 111, 45, 103, 45, 105, 45, 110] => lookup_321_40(acc),
            [108, 99, 117, 98, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_321_41(acc),
            [108, 101, 98, 116, 105, 109, 110, 101, 116, 122] => lookup_321_42(acc),
            [108, 101, 105, 116, 117, 110, 103, 115, 101, 110] => lookup_321_43(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_321_44(acc),
            [108, 111, 103, 111, 105, 112] => lookup_321_45(acc),
            [109, 101, 105, 110, 45, 105, 115, 101, 114, 118] => lookup_321_46(acc),
            [109, 101, 105, 110, 45, 118, 105, 103, 111, 114] => lookup_321_47(acc),
            [109, 121, 45, 103, 97, 116, 101, 119, 97, 121] => lookup_321_48(acc),
            [109, 121, 45, 114, 111, 117, 116, 101, 114] => lookup_321_49(acc),
            [109, 121, 45, 118, 105, 103, 111, 114] => lookup_321_50(acc),
            [109, 121, 45, 119, 97, 110] => lookup_321_51(acc),
            [109, 121, 104, 111, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_321_52(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_321_53(acc),
            [115, 99, 104, 117, 108, 115, 101, 114, 118, 101, 114] => lookup_321_54(acc),
            [115, 112, 100, 110, 115] => lookup_321_55(acc),
            [115, 112, 101, 101, 100, 112, 97, 114, 116, 110, 101, 114] => {
                lookup_321_56(info, labels, acc)
            }
            [115, 113, 117, 97, 114, 101, 55] => lookup_321_57(acc),
            [115, 118, 110, 45, 114, 101, 112, 111, 115] => lookup_321_58(acc),
            [115, 121, 110, 111, 45, 100, 115] => lookup_321_59(acc),
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => {
                lookup_321_60(acc)
            }
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 115] => lookup_321_61(acc),
            [116, 97, 105, 102, 117, 110, 45, 100, 110, 115] => lookup_321_62(acc),
            [116, 101, 115, 116, 45, 105, 115, 101, 114, 118] => lookup_321_63(acc),
            [116, 114, 97, 101, 117, 109, 116, 103, 101, 114, 97, 100, 101] => lookup_321_64(acc),
            [117, 98, 101, 114, 115, 112, 97, 99, 101] => lookup_321_65(info, labels, acc),
            [118, 105, 114, 116, 117, 97, 108, 45, 117, 115, 101, 114] => lookup_321_66(acc),
            [118, 105, 114, 116, 117, 97, 108, 117, 115, 101, 114] => lookup_321_67(acc),
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110, 45, 122, 118, 98] => {
                lookup_321_68(acc)
            }
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110, 45, 119, 111, 98] => {
                lookup_321_69(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_322() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_323() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_324() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_325() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_327() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_328() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_329() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_330() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_331() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_332() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_333() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_334_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_334<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 115, 115] => lookup_334_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_335_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_4_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_335_4_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_335_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_335_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_335_8_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_335_8_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_335_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_14_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_335_14_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_335_15_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_335_15_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_335_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_17_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_335_17_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_335_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_335<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 117, 114, 118] => lookup_335_0(acc),
            [100, 101, 110, 111] => lookup_335_1(acc),
            [100, 101, 110, 111, 45, 115, 116, 97, 103, 105, 110, 103] => lookup_335_2(acc),
            [102, 108, 121] => lookup_335_3(acc),
            [103, 97, 116, 101, 119, 97, 121] => lookup_335_4(info, labels, acc),
            [103, 105, 116, 104, 117, 98, 112, 114, 101, 118, 105, 101, 119] => lookup_335_5(acc),
            [105, 115, 101, 114, 118] => lookup_335_6(acc),
            [108, 99, 108] => lookup_335_7(info, labels, acc),
            [108, 99, 108, 115, 116, 97, 103, 101] => lookup_335_8(info, labels, acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_335_9(acc),
            [109, 101, 100, 105, 97, 116, 101, 99, 104] => lookup_335_10(acc),
            [112, 97, 103, 101, 115] => lookup_335_11(acc),
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_335_12(acc),
            [115, 104, 105, 102, 116, 99, 114, 121, 112, 116, 111] => lookup_335_13(acc),
            [115, 116, 103] => lookup_335_14(info, labels, acc),
            [115, 116, 103, 115, 116, 97, 103, 101] => lookup_335_15(info, labels, acc),
            [118, 101, 114, 99, 101, 108] => lookup_335_16(acc),
            [119, 101, 98, 104, 97, 114, 101] => lookup_335_17(info, labels, acc),
            [119, 111, 114, 107, 101, 114, 115] => lookup_335_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_336() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_337() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_338() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_339_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 110, 100, 111, 110] => lookup_339_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_339<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 97, 112, 112, 115] => lookup_339_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_340() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_341() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_342() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_344() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_346() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_347_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_347_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_347_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_347_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_347_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_347_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_347_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_347<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_347_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_347_1(acc),
            [99, 111] => lookup_347_2(acc),
            [102, 105, 114, 109] => lookup_347_3(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_347_4(acc),
            [114, 101, 103] => lookup_347_5(acc),
            [115, 116, 111, 114, 101] => lookup_347_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_348_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_348_0(acc),
            [101, 100, 117] => lookup_348_1(acc),
            [103, 111, 118] => lookup_348_2(acc),
            [110, 101, 116] => lookup_348_3(acc),
            [111, 114, 103] => lookup_348_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_349() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_350_0(acc),
            [99, 111, 109] => lookup_350_1(acc),
            [101, 100, 117] => lookup_350_2(acc),
            [103, 111, 98] => lookup_350_3(acc),
            [103, 111, 118] => lookup_350_4(acc),
            [109, 105, 108] => lookup_350_5(acc),
            [110, 101, 116] => lookup_350_6(acc),
            [111, 114, 103] => lookup_350_7(acc),
            [115, 108, 100] => lookup_350_8(acc),
            [119, 101, 98] => lookup_350_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_351() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_352() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_353() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_355() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_358() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_361() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_362() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_364() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_365_0(acc),
            [97, 115, 115, 111] => lookup_365_1(acc),
            [99, 111, 109] => lookup_365_2(acc),
            [101, 100, 117] => lookup_365_3(acc),
            [103, 111, 118] => lookup_365_4(acc),
            [110, 101, 116] => lookup_365_5(acc),
            [111, 114, 103] => lookup_365_6(acc),
            [112, 111, 108] => lookup_365_7(acc),
            [115, 111, 99] => lookup_365_8(acc),
            [116, 109] => lookup_365_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_366_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_366_0_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_366_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_366_0_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_366_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [98, 122, 122] => lookup_366_0_1(info, labels, acc),
            wild => lookup_366_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_366<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 112, 112, 115] => lookup_366_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_367() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_368_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_368_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 115, 101] => lookup_368_0(acc),
            [99, 111, 109] => lookup_368_1(acc),
            [101, 100, 117] => lookup_368_2(acc),
            [102, 105, 110] => lookup_368_3(acc),
            [103, 111, 98] => lookup_368_4(acc),
            [103, 111, 118] => lookup_368_5(acc),
            [105, 110, 102, 111] => lookup_368_6(acc),
            [107, 49, 50] => lookup_368_7(acc),
            [109, 101, 100] => lookup_368_8(acc),
            [109, 105, 108] => lookup_368_9(acc),
            [110, 101, 116] => lookup_368_10(acc),
            [111, 102, 102, 105, 99, 105, 97, 108] => lookup_368_11(acc),
            [111, 114, 103] => lookup_368_12(acc),
            [112, 114, 111] => lookup_368_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_369() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_370() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_371_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_371_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [103, 105, 116, 45, 112, 97, 103, 101, 115] => lookup_371_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_371<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 105, 116] => lookup_371_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_372_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_372<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_372_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_373_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_373_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_373_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_373_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 112] => lookup_373_0(acc),
            [99, 111, 109] => lookup_373_1(labels, acc),
            [101, 100, 117] => lookup_373_2(acc),
            [102, 105, 101] => lookup_373_3(acc),
            [103, 111, 118] => lookup_373_4(acc),
            [108, 105, 98] => lookup_373_5(acc),
            [109, 101, 100] => lookup_373_6(acc),
            [111, 114, 103] => lookup_373_7(acc),
            [112, 114, 105] => lookup_373_8(acc),
            [114, 105, 105, 107] => lookup_373_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_374_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_374_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_374_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_374_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_374_0(labels, acc),
            [101, 100, 117] => lookup_374_1(acc),
            [101, 117, 110] => lookup_374_2(acc),
            [103, 111, 118] => lookup_374_3(acc),
            [109, 105, 108] => lookup_374_4(acc),
            [110, 97, 109, 101] => lookup_374_5(acc),
            [110, 101, 116] => lookup_374_6(acc),
            [111, 114, 103] => lookup_374_7(acc),
            [115, 99, 105] => lookup_374_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_375() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_376() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_377() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_379() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_381() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_382() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_383_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_383<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_383_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_384() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_385() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_386_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_386_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_386_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_386_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_386_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_386_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_386_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_386_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_386<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_386_0(labels, acc),
            [101, 100, 117] => lookup_386_1(acc),
            [103, 111, 98] => lookup_386_2(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_386_3(acc),
            [110, 111, 109] => lookup_386_4(acc),
            [111, 114, 103] => lookup_386_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_387() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_388_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_388_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_388_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_388<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109, 112, 117, 116, 101] => lookup_388_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_389_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_389_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_389_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_389_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_389_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_389_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_389_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_389_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_389<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_389_0(acc),
            [99, 111, 109] => lookup_389_1(acc),
            [101, 100, 117] => lookup_389_2(acc),
            [103, 111, 118] => lookup_389_3(acc),
            [105, 110, 102, 111] => lookup_389_4(acc),
            [110, 97, 109, 101] => lookup_389_5(acc),
            [110, 101, 116] => lookup_389_6(acc),
            [111, 114, 103] => lookup_389_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_390() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_391_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_391_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_391_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_391_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_391_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_391_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_391_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_391_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_391_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_391_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_391_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_391_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_391<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_391_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_391_1(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_391_2(acc),
            [100, 111, 103, 97, 100, 111] => lookup_391_3(info, labels, acc),
            [109, 121, 99, 100] => lookup_391_4(acc),
            [115, 112, 100, 110, 115] => lookup_391_5(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_391_6(info, labels, acc),
            [119, 101, 108, 108, 98, 101, 105, 110, 103, 122, 111, 110, 101] => lookup_391_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_392() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_393_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_393_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_393_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_393<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 114, 116, 121] => lookup_393_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_394_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_394_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_394<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_394_0(acc),
            [107, 111, 111, 98, 105, 110] => lookup_394_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_395() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_396() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_397() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_398() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_399() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_400() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_403_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_403<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_403_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_404() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_405() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_407_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_407<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 106] => lookup_407_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_408() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_409_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_409<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102] => lookup_409_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_410() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_411() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_412() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_413() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_415_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_415_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_415_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_415_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [102, 105] => lookup_415_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_415_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_415_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_415_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_415_3_0(acc),
            [112, 97, 97, 115] => lookup_415_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_415_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_415_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_415_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_415_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_415_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_415<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108, 97, 110, 100] => lookup_415_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_415_1(acc),
            [99, 108, 111, 117, 100, 112, 108, 97, 116, 102, 111, 114, 109] => {
                lookup_415_2(info, labels, acc)
            }
            [100, 97, 116, 97, 99, 101, 110, 116, 101, 114] => lookup_415_3(info, labels, acc),
            [100, 121] => lookup_415_4(acc),
            [104, 195, 164, 107, 107, 105, 110, 101, 110] => lookup_415_5(acc),
            [105, 107, 105] => lookup_415_6(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_415_7(acc),
            [120, 110, 45, 45, 104, 107, 107, 105, 110, 101, 110, 45, 53, 119, 97] => {
                lookup_415_8(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_416() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_418() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_419() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_420() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_422<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_422_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_423() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_424() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_426() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_427() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_428() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_429() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_430_0(acc),
            [98, 105, 122] => lookup_430_1(acc),
            [99, 111, 109] => lookup_430_2(acc),
            [103, 111, 118] => lookup_430_3(acc),
            [105, 110, 102, 111] => lookup_430_4(acc),
            [109, 105, 108] => lookup_430_5(acc),
            [110, 97, 109, 101] => lookup_430_6(acc),
            [110, 101, 116] => lookup_430_7(acc),
            [111, 114, 103] => lookup_430_8(acc),
            [112, 114, 111] => lookup_430_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_431_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_431<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_431_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_432() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_434() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_435() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_437() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_438_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_438_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_438_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_438_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_438_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_438<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_438_0(acc),
            [101, 100, 117] => lookup_438_1(acc),
            [110, 101, 116] => lookup_438_2(acc),
            [111, 114, 103] => lookup_438_3(acc),
            [114, 97, 100, 105, 111] => lookup_438_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_439() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_440() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_441() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_442() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_443() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_444() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_447() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_448() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_449() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_450_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 31usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_450_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_450_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_450_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_450_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_450_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_450_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_450_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_450_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_450_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_450<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 101, 114, 111, 112, 111, 114, 116] => lookup_450_0(acc),
            [97, 115, 115, 111] => lookup_450_1(acc),
            [97, 118, 111, 99, 97, 116] => lookup_450_2(acc),
            [97, 118, 111, 117, 101, 115] => lookup_450_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_450_4(acc),
            [99, 99, 105] => lookup_450_5(acc),
            [99, 104, 97, 109, 98, 97, 103, 114, 105] => lookup_450_6(acc),
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115] => {
                lookup_450_7(acc)
            }
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115, 45, 101, 110, 45, 102, 114, 97, 110, 99, 101] => {
                lookup_450_8(acc)
            }
            [99, 111, 109] => lookup_450_9(acc),
            [101, 110, 45, 114, 111, 111, 116] => lookup_450_10(acc),
            [101, 120, 112, 101, 114, 116, 115, 45, 99, 111, 109, 112, 116, 97, 98, 108, 101, 115] => {
                lookup_450_11(acc)
            }
            [102, 98, 120, 45, 111, 115] => lookup_450_12(acc),
            [102, 98, 120, 111, 115] => lookup_450_13(acc),
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_450_14(acc),
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_450_15(acc),
            [103, 101, 111, 109, 101, 116, 114, 101, 45, 101, 120, 112, 101, 114, 116] => {
                lookup_450_16(acc)
            }
            [103, 111, 117, 112, 105, 108, 101] => lookup_450_17(acc),
            [103, 111, 117, 118] => lookup_450_18(acc),
            [103, 114, 101, 116, 97] => lookup_450_19(acc),
            [104, 117, 105, 115, 115, 105, 101, 114, 45, 106, 117, 115, 116, 105, 99, 101] => {
                lookup_450_20(acc)
            }
            [109, 101, 100, 101, 99, 105, 110] => lookup_450_21(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_450_22(acc),
            [110, 111, 109] => lookup_450_23(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_450_24(acc),
            [111, 110, 45, 119, 101, 98] => lookup_450_25(acc),
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110] => lookup_450_26(acc),
            [112, 111, 114, 116] => lookup_450_27(acc),
            [112, 114, 100] => lookup_450_28(acc),
            [116, 109] => lookup_450_29(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_450_30(acc),
            [121, 110, 104] => lookup_450_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_451() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_452() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_453() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_454() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_456() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_457() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_458() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_459() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_460() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_461() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_463() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_464() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_466() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_467() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_469() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_470() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_472() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_474() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_475() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_476_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_476_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_476<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_476_0(acc),
            [103, 111, 118] => lookup_476_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_477_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_477<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 110, 112, 121] => lookup_477_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_478_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_478_0(acc),
            [101, 100, 117] => lookup_478_1(acc),
            [103, 111, 118] => lookup_478_2(acc),
            [109, 105, 108] => lookup_478_3(acc),
            [110, 101, 116] => lookup_478_4(acc),
            [111, 114, 103] => lookup_478_5(acc),
            [112, 118, 116] => lookup_478_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_479() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_481() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_483() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_484_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_484_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_484_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 101, 109, 111, 110] => lookup_484_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_484<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_484_0(acc),
            [99, 121, 97] => lookup_484_1(acc),
            [107, 97, 97, 115] => lookup_484_2(acc),
            [110, 101, 116] => lookup_484_3(acc),
            [111, 114, 103] => lookup_484_4(acc),
            [112, 97, 110, 101, 108] => lookup_484_5(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_485() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_486_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_486_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_486_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_486_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_486_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_486<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_486_0(acc),
            [101, 100, 117] => lookup_486_1(acc),
            [103, 111, 118] => lookup_486_2(acc),
            [109, 105, 108] => lookup_486_3(acc),
            [111, 114, 103] => lookup_486_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_487_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_487_0(acc),
            [101, 100, 117] => lookup_487_1(acc),
            [103, 111, 118] => lookup_487_2(acc),
            [108, 116, 100] => lookup_487_3(acc),
            [109, 111, 100] => lookup_487_4(acc),
            [111, 114, 103] => lookup_487_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_488() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_489() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_490() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_491() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_492_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_492_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_492_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_492_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_492_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_492_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_492_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_492<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_492_0(acc),
            [99, 111] => lookup_492_1(acc),
            [99, 111, 109] => lookup_492_2(acc),
            [101, 100, 117] => lookup_492_3(acc),
            [110, 101, 116] => lookup_492_4(acc),
            [111, 114, 103] => lookup_492_5(acc),
            [120, 120] => lookup_492_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_493() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_495() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_496() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_498() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_500() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_502_0(acc),
            [99, 111, 109] => lookup_502_1(acc),
            [101, 100, 117] => lookup_502_2(acc),
            [103, 111, 118] => lookup_502_3(acc),
            [110, 101, 116] => lookup_502_4(acc),
            [111, 114, 103] => lookup_502_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_503() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_504() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_505() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_506() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_508() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_509_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_509_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_509_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_509_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_509<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_509_0(acc),
            [116, 114, 97, 110, 115, 108, 97, 116, 101] => lookup_509_1(acc),
            [117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_509_2(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_510() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_512() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_513() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_514_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_514_0(acc),
            [97, 115, 115, 111] => lookup_514_1(acc),
            [99, 111, 109] => lookup_514_2(acc),
            [101, 100, 117] => lookup_514_3(acc),
            [109, 111, 98, 105] => lookup_514_4(acc),
            [110, 101, 116] => lookup_514_5(acc),
            [111, 114, 103] => lookup_514_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_515() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_516_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_516_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_516_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_516_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_516_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_516_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_516<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_516_0(acc),
            [99, 111, 109] => lookup_516_1(acc),
            [101, 100, 117] => lookup_516_2(acc),
            [103, 111, 118] => lookup_516_3(acc),
            [110, 101, 116] => lookup_516_4(acc),
            [111, 114, 103] => lookup_516_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_517() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_518() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_519() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_520() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_521() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_523_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_523<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_523_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_524() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_525_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_525_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_525_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_525_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_525_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_525_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_525_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_525_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_525_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_525_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_525<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103] => lookup_525_0(acc),
            [99, 111, 109] => lookup_525_1(acc),
            [100, 101] => lookup_525_2(acc),
            [101, 100, 117] => lookup_525_3(acc),
            [103, 111, 98] => lookup_525_4(acc),
            [105, 110, 100] => lookup_525_5(acc),
            [109, 105, 108] => lookup_525_6(acc),
            [110, 101, 116] => lookup_525_7(acc),
            [111, 114, 103] => lookup_525_8(acc),
            [116, 111] => lookup_525_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_526_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_526_0(acc),
            [101, 100, 117] => lookup_526_1(acc),
            [103, 111, 118] => lookup_526_2(acc),
            [103, 117, 97, 109] => lookup_526_3(acc),
            [105, 110, 102, 111] => lookup_526_4(acc),
            [110, 101, 116] => lookup_526_5(acc),
            [111, 114, 103] => lookup_526_6(acc),
            [119, 101, 98] => lookup_526_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_527() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_528() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_529() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_530() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_531() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_532() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_534_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_534_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_534_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_534_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_534_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_534_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_534_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_534<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101] => lookup_534_0(acc),
            [99, 111] => lookup_534_1(acc),
            [99, 111, 109] => lookup_534_2(acc),
            [101, 100, 117] => lookup_534_3(acc),
            [103, 111, 118] => lookup_534_4(acc),
            [110, 101, 116] => lookup_534_5(acc),
            [111, 114, 103] => lookup_534_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_535() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_536() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_538() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_541() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_542_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_542<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 114, 97] => lookup_542_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_543() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_545() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_547() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_549() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_551() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_552() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_553_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_553_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_553_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_553_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_553_0(acc),
            [99, 111, 109] => lookup_553_1(acc),
            [101, 100, 117] => lookup_553_2(acc),
            [103, 111, 118] => lookup_553_3(acc),
            [105, 100, 118] => lookup_553_4(acc),
            [105, 110, 99] => lookup_553_5(acc),
            [108, 116, 100] => lookup_553_6(acc),
            [110, 101, 116] => lookup_553_7(acc),
            [111, 114, 103] => lookup_553_8(acc),
            [115, 101, 99, 97, 97, 115] => lookup_553_9(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_553_10(acc),
            [120, 110, 45, 45, 99, 105, 113, 112, 110] => lookup_553_11(acc),
            [120, 110, 45, 45, 103, 109, 113, 48, 53, 48, 105] => lookup_553_12(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_553_13(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_553_14(acc),
            [120, 110, 45, 45, 108, 99, 118, 114, 51, 50, 100] => lookup_553_15(acc),
            [120, 110, 45, 45, 109, 107, 48, 97, 120, 105] => lookup_553_16(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_553_17(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_553_18(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 113, 51, 98] => lookup_553_19(acc),
            [120, 110, 45, 45, 116, 110, 48, 97, 103] => lookup_553_20(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_553_21(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 121, 52, 97] => lookup_553_22(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_553_23(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 118, 120] => lookup_553_24(acc),
            [228, 184, 170, 228, 186, 186] => lookup_553_25(acc),
            [229, 128, 139, 228, 186, 186] => lookup_553_26(acc),
            [229, 133, 172, 229, 143, 184] => lookup_553_27(acc),
            [230, 148, 191, 229, 186, 156] => lookup_553_28(acc),
            [230, 149, 142, 232, 130, 178] => lookup_553_29(acc),
            [230, 149, 153, 232, 130, 178] => lookup_553_30(acc),
            [231, 174, 135, 228, 186, 186] => lookup_553_31(acc),
            [231, 181, 132, 231, 185, 148] => lookup_553_32(acc),
            [231, 181, 132, 231, 187, 135] => lookup_553_33(acc),
            [231, 182, 178, 231, 181, 161] => lookup_553_34(acc),
            [231, 182, 178, 231, 187, 156] => lookup_553_35(acc),
            [231, 187, 132, 231, 185, 148] => lookup_553_36(acc),
            [231, 187, 132, 231, 187, 135] => lookup_553_37(acc),
            [231, 189, 145, 231, 181, 161] => lookup_553_38(acc),
            [231, 189, 145, 231, 187, 156] => lookup_553_39(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_554() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_555() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_556_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_556_0(acc),
            [99, 111, 109] => lookup_556_1(acc),
            [101, 100, 117] => lookup_556_2(acc),
            [103, 111, 98] => lookup_556_3(acc),
            [109, 105, 108] => lookup_556_4(acc),
            [110, 101, 116] => lookup_556_5(acc),
            [111, 114, 103] => lookup_556_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_557() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_558() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_559() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_562() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_563() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_564() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_566() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_567_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_567_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_567_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_567_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_567_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_567_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_567_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_567_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_567_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_567_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_567<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_567_0(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_567_1(acc),
            [102, 114, 101, 101, 115, 105, 116, 101] => lookup_567_2(acc),
            [104, 97, 108, 102] => lookup_567_3(acc),
            [106, 101, 108, 101] => lookup_567_4(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_567_5(acc),
            [109, 121, 102, 97, 115, 116] => lookup_567_6(acc),
            [112, 99, 108, 111, 117, 100] => lookup_567_7(acc),
            [116, 101, 109, 112, 117, 114, 108] => lookup_567_8(acc),
            [119, 112, 109, 117, 100, 101, 118] => lookup_567_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_568_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_568<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110, 99, 114, 97, 102, 116] => lookup_568_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_569() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_571() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_574() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_575_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_575_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_575_0(acc),
            [99, 111, 109] => lookup_575_1(acc),
            [102, 114, 101, 101] => lookup_575_2(acc),
            [102, 114, 111, 109] => lookup_575_3(acc),
            [105, 122] => lookup_575_4(acc),
            [110, 97, 109, 101] => lookup_575_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_576() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 117, 108, 116] => lookup_577_0(acc),
            [97, 114, 116] => lookup_577_1(acc),
            [97, 115, 115, 111] => lookup_577_2(acc),
            [99, 111, 109] => lookup_577_3(acc),
            [99, 111, 111, 112] => lookup_577_4(acc),
            [101, 100, 117] => lookup_577_5(acc),
            [102, 105, 114, 109] => lookup_577_6(acc),
            [103, 111, 117, 118] => lookup_577_7(acc),
            [105, 110, 102, 111] => lookup_577_8(acc),
            [109, 101, 100] => lookup_577_9(acc),
            [110, 101, 116] => lookup_577_10(acc),
            [111, 114, 103] => lookup_577_11(acc),
            [112, 101, 114, 115, 111] => lookup_577_12(acc),
            [112, 111, 108] => lookup_577_13(acc),
            [112, 114, 111] => lookup_577_14(acc),
            [114, 101, 108] => lookup_577_15(acc),
            [115, 104, 111, 112] => lookup_577_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_578_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_578_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [50, 48, 48, 48] => lookup_578_0(acc),
            [97, 103, 114, 97, 114] => lookup_578_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_578_2(acc),
            [98, 111, 108, 116] => lookup_578_3(acc),
            [99, 97, 115, 105, 110, 111] => lookup_578_4(acc),
            [99, 105, 116, 121] => lookup_578_5(acc),
            [99, 111] => lookup_578_6(acc),
            [101, 114, 111, 116, 105, 99, 97] => lookup_578_7(acc),
            [101, 114, 111, 116, 105, 107, 97] => lookup_578_8(acc),
            [102, 105, 108, 109] => lookup_578_9(acc),
            [102, 111, 114, 117, 109] => lookup_578_10(acc),
            [103, 97, 109, 101, 115] => lookup_578_11(acc),
            [104, 111, 116, 101, 108] => lookup_578_12(acc),
            [105, 110, 102, 111] => lookup_578_13(acc),
            [105, 110, 103, 97, 116, 108, 97, 110] => lookup_578_14(acc),
            [106, 111, 103, 97, 115, 122] => lookup_578_15(acc),
            [107, 111, 110, 121, 118, 101, 108, 111] => lookup_578_16(acc),
            [108, 97, 107, 97, 115] => lookup_578_17(acc),
            [109, 101, 100, 105, 97] => lookup_578_18(acc),
            [110, 101, 119, 115] => lookup_578_19(acc),
            [111, 114, 103] => lookup_578_20(acc),
            [112, 114, 105, 118] => lookup_578_21(acc),
            [114, 101, 107, 108, 97, 109] => lookup_578_22(acc),
            [115, 101, 120] => lookup_578_23(acc),
            [115, 104, 111, 112] => lookup_578_24(acc),
            [115, 112, 111, 114, 116] => lookup_578_25(acc),
            [115, 117, 108, 105] => lookup_578_26(acc),
            [115, 122, 101, 120] => lookup_578_27(acc),
            [116, 109] => lookup_578_28(acc),
            [116, 111, 122, 115, 100, 101] => lookup_578_29(acc),
            [117, 116, 97, 122, 97, 115] => lookup_578_30(acc),
            [118, 105, 100, 101, 111] => lookup_578_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_579() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_582() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_583() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_584() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_585() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_586_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_586_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_586_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_586_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_586_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_586_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_9_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_586_9_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_586_9_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_586_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 115, 115] => lookup_586_9_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_586_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_586_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_586_0(acc),
            [98, 105, 122] => lookup_586_1(acc),
            [98, 108, 111, 103, 101, 114] => lookup_586_2(acc),
            [99, 111] => lookup_586_3(labels, acc),
            [100, 101, 115, 97] => lookup_586_4(acc),
            [102, 108, 97, 112] => lookup_586_5(acc),
            [102, 111, 114, 116, 101] => lookup_586_6(acc),
            [103, 111] => lookup_586_7(acc),
            [109, 105, 108] => lookup_586_8(acc),
            [109, 121] => lookup_586_9(labels, acc),
            [110, 101, 116] => lookup_586_10(acc),
            [111, 114] => lookup_586_11(acc),
            [112, 111, 110, 112, 101, 115] => lookup_586_12(acc),
            [115, 99, 104] => lookup_586_13(acc),
            [119, 98, 108, 111, 103] => lookup_586_14(acc),
            [119, 101, 98] => lookup_586_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_587_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_587_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_587_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_587<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_587_0(acc),
            [103, 111, 118] => lookup_587_1(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_587_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_588() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_589() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_591_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_591_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_591_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_591_1_0(acc),
            [114, 97, 118, 112, 97, 103, 101] => lookup_591_1_1(acc),
            [116, 97, 98, 105, 116, 111, 114, 100, 101, 114] => lookup_591_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_591_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_591_0(acc),
            [99, 111] => lookup_591_1(labels, acc),
            [103, 111, 118] => lookup_591_2(acc),
            [105, 100, 102] => lookup_591_3(acc),
            [107, 49, 50] => lookup_591_4(acc),
            [109, 117, 110, 105] => lookup_591_5(acc),
            [110, 101, 116] => lookup_591_6(acc),
            [111, 114, 103] => lookup_591_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_592_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 116, 100] => lookup_592_1_0(acc),
            [112, 108, 99] => lookup_592_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_592_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_592_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_592_0(acc),
            [99, 111] => lookup_592_1(labels, acc),
            [99, 111, 109] => lookup_592_2(acc),
            [110, 101, 116] => lookup_592_3(acc),
            [111, 114, 103] => lookup_592_4(acc),
            [114, 111] => lookup_592_5(acc),
            [116, 116] => lookup_592_6(acc),
            [116, 118] => lookup_592_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_593() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_594() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_595() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_596() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_597<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_597_0(acc),
            [98, 97, 114, 115, 121] => lookup_597_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_597_2(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_597_3(acc),
            [99, 111] => lookup_597_4(acc),
            [101, 100, 117] => lookup_597_5(acc),
            [102, 105, 114, 109] => lookup_597_6(acc),
            [103, 101, 110] => lookup_597_7(acc),
            [103, 111, 118] => lookup_597_8(acc),
            [105, 110, 100] => lookup_597_9(acc),
            [109, 105, 108] => lookup_597_10(acc),
            [110, 101, 116] => lookup_597_11(acc),
            [110, 105, 99] => lookup_597_12(acc),
            [111, 114, 103] => lookup_597_13(acc),
            [114, 101, 115] => lookup_597_14(acc),
            [115, 117, 112, 97, 98, 97, 115, 101] => lookup_597_15(acc),
            [119, 101, 98] => lookup_597_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_598() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_600() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_601_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_601<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 114, 101, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_601_0(acc)
            }
            [98, 97, 114, 114, 101, 108, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_601_1(acc)
            }
            [98, 97, 114, 115, 121] => lookup_601_2(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_601_3(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101] => lookup_601_4(acc),
            [100, 118, 114, 99, 97, 109] => lookup_601_5(acc),
            [100, 121, 110, 97, 109, 105, 99, 45, 100, 110, 115] => lookup_601_6(acc),
            [100, 121, 110, 100, 110, 115] => lookup_601_7(acc),
            [102, 111, 114, 45, 111, 117, 114] => lookup_601_8(acc),
            [102, 111, 114, 117, 109, 122] => lookup_601_9(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 101] => lookup_601_10(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 105, 115] => lookup_601_11(acc),
            [104, 101, 114, 101, 45, 102, 111, 114, 45, 109, 111, 114, 101] => lookup_601_12(acc),
            [105, 108, 111, 118, 101, 99, 111, 108, 108, 101, 103, 101] => lookup_601_13(acc),
            [107, 110, 111, 119, 115, 105, 116, 97, 108, 108] => lookup_601_14(acc),
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_601_15(acc),
            [110, 111, 45, 105, 112] => lookup_601_16(acc),
            [110, 115, 117, 112, 100, 97, 116, 101] => lookup_601_17(acc),
            [115, 101, 108, 102, 105, 112] => lookup_601_18(acc),
            [118, 45, 105, 110, 102, 111] => lookup_601_19(acc),
            [119, 101, 98, 104, 111, 112] => lookup_601_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_602() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_604() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_607_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_607<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_607_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_608() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_610() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_611_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_611_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_5_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_5_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_611_5_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_611_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_611_5_0(acc),
            [98, 97, 99, 107, 121, 97, 114, 100, 115] => lookup_611_5_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_611_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 101, 107, 100, 49] => lookup_611_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 107, 48] => lookup_611_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110, 100, 110, 115] => lookup_611_17_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_25<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_611_25_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_33_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_33<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_611_33_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_37_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_37<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_611_37_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_611_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_40_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_40<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 101] => lookup_611_40_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_41_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_41<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_611_41_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_611_42_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_42<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_611_42_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_611_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_45<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 111, 99, 107] => lookup_611_45_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_46_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_46_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_611_46_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_611_46<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 121, 115] => lookup_611_46_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_50<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118, 105, 99, 101, 115] => lookup_611_50_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_51_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_51<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_611_51_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_611_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_57_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_57<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_611_57_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_611_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_59_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_59_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_59_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_611_59_0_0(acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_611_59_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_59_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_59_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_59_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_611_59_1_0(acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_611_59_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_59_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_59_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_611_59_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_59_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_59_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_59_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_611_59_3_0(acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_611_59_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_59<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_611_59_0(info, labels, acc),
            [100, 105, 115, 114, 101, 99] => lookup_611_59_1(info, labels, acc),
            [112, 114, 111, 100] => lookup_611_59_2(info, labels, acc),
            [116, 101, 115, 116, 105, 110, 103] => lookup_611_59_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_61_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_61<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 45, 102, 114, 49] => lookup_611_61_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_65<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [103] => lookup_611_65_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_611_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [50, 48, 51, 56] => lookup_611_0(acc),
            [97, 112, 105, 103, 101, 101] => lookup_611_1(acc),
            [97, 122, 117, 114, 101, 99, 111, 110, 116, 97, 105, 110, 101, 114] => {
                lookup_611_2(info, labels, acc)
            }
            [98, 45, 100, 97, 116, 97] => lookup_611_3(acc),
            [98, 97, 99, 107, 112, 108, 97, 110, 101, 97, 112, 112] => lookup_611_4(acc),
            [98, 97, 110, 122, 97, 105, 99, 108, 111, 117, 100] => lookup_611_5(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_611_6(acc),
            [98, 97, 115, 105, 99, 115, 101, 114, 118, 101, 114] => lookup_611_7(acc),
            [98, 101, 101, 98, 121, 116, 101] => lookup_611_8(info, labels, acc),
            [98, 101, 101, 98, 121, 116, 101, 97, 112, 112] => lookup_611_9(info, labels, acc),
            [98, 105, 103, 118] => lookup_611_10(info, labels, acc),
            [98, 105, 116, 98, 117, 99, 107, 101, 116] => lookup_611_11(acc),
            [98, 108, 117, 101, 98, 105, 116, 101] => lookup_611_12(acc),
            [98, 111, 120, 102, 117, 115, 101] => lookup_611_13(acc),
            [98, 114, 111, 119, 115, 101, 114, 115, 97, 102, 101, 116, 121, 109, 97, 114, 107] => {
                lookup_611_14(acc)
            }
            [99, 108, 101, 118, 101, 114, 97, 112, 112, 115] => lookup_611_15(acc),
            [99, 111, 109] => lookup_611_16(acc),
            [100, 97, 112, 112, 110, 111, 100, 101] => lookup_611_17(info, labels, acc),
            [100, 101, 100, 121, 110] => lookup_611_18(acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_611_19(acc),
            [100, 114, 117, 100] => lookup_611_20(acc),
            [100, 121, 110, 53, 51] => lookup_611_21(acc),
            [101, 100, 105, 116, 111, 114, 120] => lookup_611_22(acc),
            [101, 100, 117, 103, 105, 116] => lookup_611_23(acc),
            [102, 104, 45, 109, 117, 101, 110, 115, 116, 101, 114] => lookup_611_24(acc),
            [102, 111, 114, 103, 101, 114, 111, 99, 107] => lookup_611_25(info, labels, acc),
            [103, 104, 111, 115, 116] => lookup_611_26(acc),
            [103, 105, 116, 104, 117, 98] => lookup_611_27(acc),
            [103, 105, 116, 108, 97, 98] => lookup_611_28(acc),
            [104, 97, 115, 117, 114, 97, 45, 97, 112, 112] => lookup_611_29(acc),
            [104, 111, 115, 116, 121, 104, 111, 115, 116, 105, 110, 103] => lookup_611_30(acc),
            [104, 122, 99] => lookup_611_31(acc),
            [106, 101, 108, 101] => lookup_611_32(acc),
            [108, 97, 105, 114] => lookup_611_33(info, labels, acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_611_34(acc),
            [108, 111, 108, 105, 112, 111, 112] => lookup_611_35(acc),
            [109, 111, 45, 115, 105, 101, 109, 101, 110, 115] => lookup_611_36(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_611_37(info, labels, acc),
            [110, 103, 114, 111, 107] => lookup_611_38(acc),
            [110, 105, 100] => lookup_611_39(acc),
            [110, 111, 100, 101, 97, 114, 116] => lookup_611_40(info, labels, acc),
            [111, 110, 45, 107, 51, 115] => lookup_611_41(info, labels, acc),
            [111, 110, 45, 114, 105, 111] => lookup_611_42(info, labels, acc),
            [112, 97, 110, 116, 104, 101, 111, 110, 115, 105, 116, 101] => lookup_611_43(acc),
            [112, 114, 111, 116, 111, 110, 101, 116] => lookup_611_44(acc),
            [112, 115, 116, 109, 110] => lookup_611_45(labels, acc),
            [113, 99, 120] => lookup_611_46(labels, acc),
            [113, 111, 116, 111] => lookup_611_47(acc),
            [114, 101, 97, 100, 116, 104, 101, 100, 111, 99, 115] => lookup_611_48(acc),
            [114, 101, 115, 105, 110, 100, 101, 118, 105, 99, 101] => lookup_611_49(acc),
            [114, 101, 115, 105, 110, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_611_50(info, labels, acc)
            }
            [115, 53, 121] => lookup_611_51(info, labels, acc),
            [115, 97, 110, 100, 99, 97, 116, 115] => lookup_611_52(acc),
            [115, 104, 105, 102, 116, 99, 114, 121, 112, 116, 111] => lookup_611_53(acc),
            [115, 104, 105, 102, 116, 101, 100, 105, 116] => lookup_611_54(acc),
            [115, 104, 119] => lookup_611_55(acc),
            [115, 112, 97, 99, 101, 107, 105, 116] => lookup_611_56(acc),
            [115, 116, 111, 108, 111, 115] => lookup_611_57(info, labels, acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_611_58(acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116] => lookup_611_59(info, labels, acc),
            [116, 105, 99, 107, 101, 116, 115] => lookup_611_60(acc),
            [117, 110, 105, 115, 112, 97, 99, 101] => lookup_611_61(info, labels, acc),
            [117, 112, 108, 105] => lookup_611_62(acc),
            [117, 116, 119, 101, 110, 116, 101] => lookup_611_63(acc),
            [118, 97, 112, 111, 114, 99, 108, 111, 117, 100] => lookup_611_64(acc),
            [118, 98, 114, 112, 108, 115, 98, 120] => lookup_611_65(info, labels, acc),
            [118, 105, 114, 116, 117, 97, 108, 115, 101, 114, 118, 101, 114] => lookup_611_66(acc),
            [119, 101, 98, 116, 104, 105, 110, 103, 115] => lookup_611_67(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_611_68(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_612() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_613_0(acc),
            [101, 100, 117] => lookup_613_1(acc),
            [103, 111, 118] => lookup_613_2(acc),
            [109, 105, 108] => lookup_613_3(acc),
            [110, 101, 116] => lookup_613_4(acc),
            [111, 114, 103] => lookup_613_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_614_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_614_0(acc),
            [99, 111] => lookup_614_1(acc),
            [103, 111, 118] => lookup_614_2(acc),
            [105, 100] => lookup_614_3(acc),
            [110, 101, 116] => lookup_614_4(acc),
            [111, 114, 103] => lookup_614_5(acc),
            [115, 99, 104] => lookup_614_6(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_614_7(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_614_8(acc),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_614_9(acc),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_614_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_615() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_616_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_616_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_616_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_616_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_616_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_616_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_616_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_616_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_616<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_616_0(acc),
            [99, 111, 109] => lookup_616_1(acc),
            [99, 117, 112, 99, 97, 107, 101] => lookup_616_2(acc),
            [101, 100, 117] => lookup_616_3(acc),
            [103, 111, 118] => lookup_616_4(acc),
            [105, 110, 116] => lookup_616_5(acc),
            [110, 101, 116] => lookup_616_6(acc),
            [111, 114, 103] => lookup_616_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_617() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_620_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_620_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_620_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_620_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_620_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_216_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_620_216<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99] => lookup_620_216_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_620_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_620_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_310_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_620_310_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_620_310_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_620_310_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_620_310_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_620_310<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110] => lookup_620_310_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_620_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 54, 45, 98] => lookup_620_0(acc),
            [51, 50, 45, 98] => lookup_620_1(acc),
            [54, 52, 45, 98] => lookup_620_2(acc),
            [97, 98, 114] => lookup_620_3(acc),
            [97, 98, 114, 117, 122, 122, 111] => lookup_620_4(acc),
            [97, 103] => lookup_620_5(acc),
            [97, 103, 114, 105, 103, 101, 110, 116, 111] => lookup_620_6(acc),
            [97, 108] => lookup_620_7(acc),
            [97, 108, 101, 115, 115, 97, 110, 100, 114, 105, 97] => lookup_620_8(acc),
            [97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => lookup_620_9(acc),
            [97, 108, 116, 111, 97, 100, 105, 103, 101] => lookup_620_10(acc),
            [97, 110] => lookup_620_11(acc),
            [97, 110, 99, 111, 110, 97] => lookup_620_12(acc),
            [97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105] => {
                lookup_620_13(acc)
            }
            [97, 110, 100, 114, 105, 97, 45, 116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_620_14(acc)
            }
            [97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105] => {
                lookup_620_15(acc)
            }
            [97, 110, 100, 114, 105, 97, 116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_620_16(acc)
            }
            [97, 111] => lookup_620_17(acc),
            [97, 111, 115, 116, 97] => lookup_620_18(acc),
            [97, 111, 115, 116, 97, 45, 118, 97, 108, 108, 101, 121] => lookup_620_19(acc),
            [97, 111, 115, 116, 97, 118, 97, 108, 108, 101, 121] => lookup_620_20(acc),
            [97, 111, 115, 116, 101] => lookup_620_21(acc),
            [97, 112] => lookup_620_22(acc),
            [97, 113] => lookup_620_23(acc),
            [97, 113, 117, 105, 108, 97] => lookup_620_24(acc),
            [97, 114] => lookup_620_25(acc),
            [97, 114, 101, 122, 122, 111] => lookup_620_26(acc),
            [97, 115, 99, 111, 108, 105, 45, 112, 105, 99, 101, 110, 111] => lookup_620_27(acc),
            [97, 115, 99, 111, 108, 105, 112, 105, 99, 101, 110, 111] => lookup_620_28(acc),
            [97, 115, 116, 105] => lookup_620_29(acc),
            [97, 116] => lookup_620_30(acc),
            [97, 118] => lookup_620_31(acc),
            [97, 118, 101, 108, 108, 105, 110, 111] => lookup_620_32(acc),
            [98, 97] => lookup_620_33(acc),
            [98, 97, 108, 115, 97, 110] => lookup_620_34(acc),
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_620_35(acc)
            }
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_620_36(acc)
            }
            [98, 97, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_620_37(acc)
            }
            [98, 97, 114, 105] => lookup_620_38(acc),
            [98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_620_39(acc)
            }
            [98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97] => {
                lookup_620_40(acc)
            }
            [98, 97, 115] => lookup_620_41(acc),
            [98, 97, 115, 105, 108, 105, 99, 97, 116, 97] => lookup_620_42(acc),
            [98, 101, 108, 108, 117, 110, 111] => lookup_620_43(acc),
            [98, 101, 110, 101, 118, 101, 110, 116, 111] => lookup_620_44(acc),
            [98, 101, 114, 103, 97, 109, 111] => lookup_620_45(acc),
            [98, 103] => lookup_620_46(acc),
            [98, 105] => lookup_620_47(acc),
            [98, 105, 101, 108, 108, 97] => lookup_620_48(acc),
            [98, 108] => lookup_620_49(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_620_50(acc),
            [98, 110] => lookup_620_51(acc),
            [98, 111] => lookup_620_52(acc),
            [98, 111, 108, 111, 103, 110, 97] => lookup_620_53(acc),
            [98, 111, 108, 122, 97, 110, 111] => lookup_620_54(acc),
            [98, 111, 108, 122, 97, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_620_55(acc)
            }
            [98, 111, 122, 101, 110] => lookup_620_56(acc),
            [98, 111, 122, 101, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_620_57(acc)
            }
            [98, 111, 122, 101, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_620_58(acc)
            }
            [98, 111, 122, 101, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_620_59(acc)
            }
            [98, 114] => lookup_620_60(acc),
            [98, 114, 101, 115, 99, 105, 97] => lookup_620_61(acc),
            [98, 114, 105, 110, 100, 105, 115, 105] => lookup_620_62(acc),
            [98, 115] => lookup_620_63(acc),
            [98, 116] => lookup_620_64(acc),
            [98, 117, 108, 115, 97, 110] => lookup_620_65(acc),
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_620_66(acc)
            }
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_620_67(acc)
            }
            [98, 117, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_620_68(acc)
            }
            [98, 122] => lookup_620_69(acc),
            [99, 97] => lookup_620_70(acc),
            [99, 97, 103, 108, 105, 97, 114, 105] => lookup_620_71(acc),
            [99, 97, 108] => lookup_620_72(acc),
            [99, 97, 108, 97, 98, 114, 105, 97] => lookup_620_73(acc),
            [99, 97, 108, 116, 97, 110, 105, 115, 115, 101, 116, 116, 97] => lookup_620_74(acc),
            [99, 97, 109] => lookup_620_75(acc),
            [99, 97, 109, 112, 97, 110, 105, 97] => lookup_620_76(acc),
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 45, 109, 101, 100, 105, 111] => {
                lookup_620_77(acc)
            }
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 109, 101, 100, 105, 111] => {
                lookup_620_78(acc)
            }
            [99, 97, 109, 112, 111, 98, 97, 115, 115, 111] => lookup_620_79(acc),
            [99, 97, 114, 98, 111, 110, 105, 97, 45, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_620_80(acc)
            }
            [99, 97, 114, 98, 111, 110, 105, 97, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_620_81(acc)
            }
            [99, 97, 114, 114, 97, 114, 97, 45, 109, 97, 115, 115, 97] => lookup_620_82(acc),
            [99, 97, 114, 114, 97, 114, 97, 109, 97, 115, 115, 97] => lookup_620_83(acc),
            [99, 97, 115, 101, 114, 116, 97] => lookup_620_84(acc),
            [99, 97, 116, 97, 110, 105, 97] => lookup_620_85(acc),
            [99, 97, 116, 97, 110, 122, 97, 114, 111] => lookup_620_86(acc),
            [99, 98] => lookup_620_87(acc),
            [99, 101] => lookup_620_88(acc),
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 105] => lookup_620_89(acc),
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 195, 172] => lookup_620_90(acc),
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 105] => lookup_620_91(acc),
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 195, 172] => lookup_620_92(acc),
            [99, 104] => lookup_620_93(acc),
            [99, 104, 105, 101, 116, 105] => lookup_620_94(acc),
            [99, 105] => lookup_620_95(acc),
            [99, 108] => lookup_620_96(acc),
            [99, 110] => lookup_620_97(acc),
            [99, 111] => lookup_620_98(acc),
            [99, 111, 109, 111] => lookup_620_99(acc),
            [99, 111, 115, 101, 110, 122, 97] => lookup_620_100(acc),
            [99, 114] => lookup_620_101(acc),
            [99, 114, 101, 109, 111, 110, 97] => lookup_620_102(acc),
            [99, 114, 111, 116, 111, 110, 101] => lookup_620_103(acc),
            [99, 115] => lookup_620_104(acc),
            [99, 116] => lookup_620_105(acc),
            [99, 117, 110, 101, 111] => lookup_620_106(acc),
            [99, 122] => lookup_620_107(acc),
            [100, 101, 108, 108, 45, 111, 103, 108, 105, 97, 115, 116, 114, 97] => {
                lookup_620_108(acc)
            }
            [100, 101, 108, 108, 111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_620_109(acc),
            [101, 100, 117] => lookup_620_110(acc),
            [101, 109, 105, 108, 105, 97, 45, 114, 111, 109, 97, 103, 110, 97] => {
                lookup_620_111(acc)
            }
            [101, 109, 105, 108, 105, 97, 114, 111, 109, 97, 103, 110, 97] => lookup_620_112(acc),
            [101, 109, 114] => lookup_620_113(acc),
            [101, 110] => lookup_620_114(acc),
            [101, 110, 110, 97] => lookup_620_115(acc),
            [102, 99] => lookup_620_116(acc),
            [102, 101] => lookup_620_117(acc),
            [102, 101, 114, 109, 111] => lookup_620_118(acc),
            [102, 101, 114, 114, 97, 114, 97] => lookup_620_119(acc),
            [102, 103] => lookup_620_120(acc),
            [102, 105] => lookup_620_121(acc),
            [102, 105, 114, 101, 110, 122, 101] => lookup_620_122(acc),
            [102, 108, 111, 114, 101, 110, 99, 101] => lookup_620_123(acc),
            [102, 109] => lookup_620_124(acc),
            [102, 111, 103, 103, 105, 97] => lookup_620_125(acc),
            [102, 111, 114, 108, 105, 45, 99, 101, 115, 101, 110, 97] => lookup_620_126(acc),
            [102, 111, 114, 108, 105, 99, 101, 115, 101, 110, 97] => lookup_620_127(acc),
            [102, 111, 114, 108, 195, 172, 45, 99, 101, 115, 101, 110, 97] => lookup_620_128(acc),
            [102, 111, 114, 108, 195, 172, 99, 101, 115, 101, 110, 97] => lookup_620_129(acc),
            [102, 114] => lookup_620_130(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_620_131(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_620_132(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_620_133(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_620_134(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_620_135(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 103, 105, 117, 108, 105, 97] => {
                lookup_620_136(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_620_137(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_620_138(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_620_139(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_620_140(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_620_141(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 103, 105, 117, 108, 105, 97] => lookup_620_142(acc),
            [102, 114, 111, 115, 105, 110, 111, 110, 101] => lookup_620_143(acc),
            [102, 118, 103] => lookup_620_144(acc),
            [103, 101] => lookup_620_145(acc),
            [103, 101, 110, 111, 97] => lookup_620_146(acc),
            [103, 101, 110, 111, 118, 97] => lookup_620_147(acc),
            [103, 111] => lookup_620_148(acc),
            [103, 111, 114, 105, 122, 105, 97] => lookup_620_149(acc),
            [103, 111, 118] => lookup_620_150(acc),
            [103, 114] => lookup_620_151(acc),
            [103, 114, 111, 115, 115, 101, 116, 111] => lookup_620_152(acc),
            [105, 103, 108, 101, 115, 105, 97, 115, 45, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_620_153(acc)
            }
            [105, 103, 108, 101, 115, 105, 97, 115, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_620_154(acc)
            }
            [105, 109] => lookup_620_155(acc),
            [105, 109, 112, 101, 114, 105, 97] => lookup_620_156(acc),
            [105, 115] => lookup_620_157(acc),
            [105, 115, 101, 114, 110, 105, 97] => lookup_620_158(acc),
            [107, 114] => lookup_620_159(acc),
            [108, 97, 45, 115, 112, 101, 122, 105, 97] => lookup_620_160(acc),
            [108, 97, 113, 117, 105, 108, 97] => lookup_620_161(acc),
            [108, 97, 115, 112, 101, 122, 105, 97] => lookup_620_162(acc),
            [108, 97, 116, 105, 110, 97] => lookup_620_163(acc),
            [108, 97, 122] => lookup_620_164(acc),
            [108, 97, 122, 105, 111] => lookup_620_165(acc),
            [108, 99] => lookup_620_166(acc),
            [108, 101] => lookup_620_167(acc),
            [108, 101, 99, 99, 101] => lookup_620_168(acc),
            [108, 101, 99, 99, 111] => lookup_620_169(acc),
            [108, 105] => lookup_620_170(acc),
            [108, 105, 103] => lookup_620_171(acc),
            [108, 105, 103, 117, 114, 105, 97] => lookup_620_172(acc),
            [108, 105, 118, 111, 114, 110, 111] => lookup_620_173(acc),
            [108, 111] => lookup_620_174(acc),
            [108, 111, 100, 105] => lookup_620_175(acc),
            [108, 111, 109] => lookup_620_176(acc),
            [108, 111, 109, 98, 97, 114, 100, 105, 97] => lookup_620_177(acc),
            [108, 111, 109, 98, 97, 114, 100, 121] => lookup_620_178(acc),
            [108, 116] => lookup_620_179(acc),
            [108, 117] => lookup_620_180(acc),
            [108, 117, 99, 97, 110, 105, 97] => lookup_620_181(acc),
            [108, 117, 99, 99, 97] => lookup_620_182(acc),
            [109, 97, 99, 101, 114, 97, 116, 97] => lookup_620_183(acc),
            [109, 97, 110, 116, 111, 118, 97] => lookup_620_184(acc),
            [109, 97, 114] => lookup_620_185(acc),
            [109, 97, 114, 99, 104, 101] => lookup_620_186(acc),
            [109, 97, 115, 115, 97, 45, 99, 97, 114, 114, 97, 114, 97] => lookup_620_187(acc),
            [109, 97, 115, 115, 97, 99, 97, 114, 114, 97, 114, 97] => lookup_620_188(acc),
            [109, 97, 116, 101, 114, 97] => lookup_620_189(acc),
            [109, 98] => lookup_620_190(acc),
            [109, 99] => lookup_620_191(acc),
            [109, 101] => lookup_620_192(acc),
            [109, 101, 100, 105, 111, 45, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_620_193(acc)
            }
            [109, 101, 100, 105, 111, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_620_194(acc)
            }
            [109, 101, 115, 115, 105, 110, 97] => lookup_620_195(acc),
            [109, 105] => lookup_620_196(acc),
            [109, 105, 108, 97, 110] => lookup_620_197(acc),
            [109, 105, 108, 97, 110, 111] => lookup_620_198(acc),
            [109, 110] => lookup_620_199(acc),
            [109, 111] => lookup_620_200(acc),
            [109, 111, 100, 101, 110, 97] => lookup_620_201(acc),
            [109, 111, 108] => lookup_620_202(acc),
            [109, 111, 108, 105, 115, 101] => lookup_620_203(acc),
            [109, 111, 110, 122, 97] => lookup_620_204(acc),
            [109, 111, 110, 122, 97, 45, 98, 114, 105, 97, 110, 122, 97] => lookup_620_205(acc),
            [109, 111, 110, 122, 97, 45, 101, 45, 100, 101, 108, 108, 97, 45, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_620_206(acc)
            }
            [109, 111, 110, 122, 97, 98, 114, 105, 97, 110, 122, 97] => lookup_620_207(acc),
            [109, 111, 110, 122, 97, 101, 98, 114, 105, 97, 110, 122, 97] => lookup_620_208(acc),
            [109, 111, 110, 122, 97, 101, 100, 101, 108, 108, 97, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_620_209(acc)
            }
            [109, 115] => lookup_620_210(acc),
            [109, 116] => lookup_620_211(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_620_212(acc),
            [110, 97] => lookup_620_213(acc),
            [110, 97, 112, 108, 101, 115] => lookup_620_214(acc),
            [110, 97, 112, 111, 108, 105] => lookup_620_215(acc),
            [110, 101, 101, 110] => lookup_620_216(info, labels, acc),
            [110, 111] => lookup_620_217(acc),
            [110, 111, 118, 97, 114, 97] => lookup_620_218(acc),
            [110, 117] => lookup_620_219(acc),
            [110, 117, 111, 114, 111] => lookup_620_220(acc),
            [111, 103] => lookup_620_221(acc),
            [111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_620_222(acc),
            [111, 108, 98, 105, 97, 45, 116, 101, 109, 112, 105, 111] => lookup_620_223(acc),
            [111, 108, 98, 105, 97, 116, 101, 109, 112, 105, 111] => lookup_620_224(acc),
            [111, 114] => lookup_620_225(acc),
            [111, 114, 105, 115, 116, 97, 110, 111] => lookup_620_226(acc),
            [111, 116] => lookup_620_227(acc),
            [112, 97] => lookup_620_228(acc),
            [112, 97, 100, 111, 118, 97] => lookup_620_229(acc),
            [112, 97, 100, 117, 97] => lookup_620_230(acc),
            [112, 97, 108, 101, 114, 109, 111] => lookup_620_231(acc),
            [112, 97, 114, 109, 97] => lookup_620_232(acc),
            [112, 97, 118, 105, 97] => lookup_620_233(acc),
            [112, 99] => lookup_620_234(acc),
            [112, 100] => lookup_620_235(acc),
            [112, 101] => lookup_620_236(acc),
            [112, 101, 114, 117, 103, 105, 97] => lookup_620_237(acc),
            [112, 101, 115, 97, 114, 111, 45, 117, 114, 98, 105, 110, 111] => lookup_620_238(acc),
            [112, 101, 115, 97, 114, 111, 117, 114, 98, 105, 110, 111] => lookup_620_239(acc),
            [112, 101, 115, 99, 97, 114, 97] => lookup_620_240(acc),
            [112, 103] => lookup_620_241(acc),
            [112, 105] => lookup_620_242(acc),
            [112, 105, 97, 99, 101, 110, 122, 97] => lookup_620_243(acc),
            [112, 105, 101, 100, 109, 111, 110, 116] => lookup_620_244(acc),
            [112, 105, 101, 109, 111, 110, 116, 101] => lookup_620_245(acc),
            [112, 105, 115, 97] => lookup_620_246(acc),
            [112, 105, 115, 116, 111, 105, 97] => lookup_620_247(acc),
            [112, 109, 110] => lookup_620_248(acc),
            [112, 110] => lookup_620_249(acc),
            [112, 111] => lookup_620_250(acc),
            [112, 111, 114, 100, 101, 110, 111, 110, 101] => lookup_620_251(acc),
            [112, 111, 116, 101, 110, 122, 97] => lookup_620_252(acc),
            [112, 114] => lookup_620_253(acc),
            [112, 114, 97, 116, 111] => lookup_620_254(acc),
            [112, 116] => lookup_620_255(acc),
            [112, 117] => lookup_620_256(acc),
            [112, 117, 103] => lookup_620_257(acc),
            [112, 117, 103, 108, 105, 97] => lookup_620_258(acc),
            [112, 118] => lookup_620_259(acc),
            [112, 122] => lookup_620_260(acc),
            [114, 97] => lookup_620_261(acc),
            [114, 97, 103, 117, 115, 97] => lookup_620_262(acc),
            [114, 97, 118, 101, 110, 110, 97] => lookup_620_263(acc),
            [114, 99] => lookup_620_264(acc),
            [114, 101] => lookup_620_265(acc),
            [114, 101, 103, 103, 105, 111, 45, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_620_266(acc)
            }
            [114, 101, 103, 103, 105, 111, 45, 101, 109, 105, 108, 105, 97] => lookup_620_267(acc),
            [114, 101, 103, 103, 105, 111, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_620_268(acc)
            }
            [114, 101, 103, 103, 105, 111, 101, 109, 105, 108, 105, 97] => lookup_620_269(acc),
            [114, 103] => lookup_620_270(acc),
            [114, 105] => lookup_620_271(acc),
            [114, 105, 101, 116, 105] => lookup_620_272(acc),
            [114, 105, 109, 105, 110, 105] => lookup_620_273(acc),
            [114, 109] => lookup_620_274(acc),
            [114, 110] => lookup_620_275(acc),
            [114, 111] => lookup_620_276(acc),
            [114, 111, 109, 97] => lookup_620_277(acc),
            [114, 111, 109, 101] => lookup_620_278(acc),
            [114, 111, 118, 105, 103, 111] => lookup_620_279(acc),
            [115, 97] => lookup_620_280(acc),
            [115, 97, 108, 101, 114, 110, 111] => lookup_620_281(acc),
            [115, 97, 114] => lookup_620_282(acc),
            [115, 97, 114, 100, 101, 103, 110, 97] => lookup_620_283(acc),
            [115, 97, 114, 100, 105, 110, 105, 97] => lookup_620_284(acc),
            [115, 97, 115, 115, 97, 114, 105] => lookup_620_285(acc),
            [115, 97, 118, 111, 110, 97] => lookup_620_286(acc),
            [115, 105] => lookup_620_287(acc),
            [115, 105, 99] => lookup_620_288(acc),
            [115, 105, 99, 105, 108, 105, 97] => lookup_620_289(acc),
            [115, 105, 99, 105, 108, 121] => lookup_620_290(acc),
            [115, 105, 101, 110, 97] => lookup_620_291(acc),
            [115, 105, 114, 97, 99, 117, 115, 97] => lookup_620_292(acc),
            [115, 111] => lookup_620_293(acc),
            [115, 111, 110, 100, 114, 105, 111] => lookup_620_294(acc),
            [115, 112] => lookup_620_295(acc),
            [115, 114] => lookup_620_296(acc),
            [115, 115] => lookup_620_297(acc),
            [115, 117, 101, 100, 116, 105, 114, 111, 108] => lookup_620_298(acc),
            [115, 118] => lookup_620_299(acc),
            [115, 121, 110, 99, 108, 111, 117, 100] => lookup_620_300(acc),
            [115, 195, 188, 100, 116, 105, 114, 111, 108] => lookup_620_301(acc),
            [116, 97] => lookup_620_302(acc),
            [116, 97, 97] => lookup_620_303(acc),
            [116, 97, 114, 97, 110, 116, 111] => lookup_620_304(acc),
            [116, 101] => lookup_620_305(acc),
            [116, 101, 109, 112, 105, 111, 45, 111, 108, 98, 105, 97] => lookup_620_306(acc),
            [116, 101, 109, 112, 105, 111, 111, 108, 98, 105, 97] => lookup_620_307(acc),
            [116, 101, 114, 97, 109, 111] => lookup_620_308(acc),
            [116, 101, 114, 110, 105] => lookup_620_309(acc),
            [116, 105, 109] => lookup_620_310(info, labels, acc),
            [116, 110] => lookup_620_311(acc),
            [116, 111] => lookup_620_312(acc),
            [116, 111, 114, 105, 110, 111] => lookup_620_313(acc),
            [116, 111, 115] => lookup_620_314(acc),
            [116, 111, 115, 99, 97, 110, 97] => lookup_620_315(acc),
            [116, 112] => lookup_620_316(acc),
            [116, 114] => lookup_620_317(acc),
            [116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_620_318(acc)
            }
            [116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_620_319(acc)
            }
            [116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_620_320(acc)
            }
            [116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97, 97, 110, 100, 114, 105, 97] => {
                lookup_620_321(acc)
            }
            [116, 114, 97, 112, 97, 110, 105] => lookup_620_322(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_620_323(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_620_324(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_620_325(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_620_326(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_620_327(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_620_328(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111] => lookup_620_329(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_620_330(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 97, 100, 105, 103, 101] => {
                lookup_620_331(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_620_332(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_620_333(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_620_334(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 116, 105, 114, 111, 108] => {
                lookup_620_335(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_620_336(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_620_337(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_620_338(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_620_339(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_620_340(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_620_341(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_620_342(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 97, 100, 105, 103, 101] => {
                lookup_620_343(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_620_344(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_620_345(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_620_346(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 116, 105, 114, 111, 108] => {
                lookup_620_347(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_620_348(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_620_349(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_620_350(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_620_351(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_620_352(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_620_353(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_620_354(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_620_355(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_620_356(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_620_357(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_620_358(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_620_359(acc)
            }
            [116, 114, 101, 110, 116, 111] => lookup_620_360(acc),
            [116, 114, 101, 118, 105, 115, 111] => lookup_620_361(acc),
            [116, 114, 105, 101, 115, 116, 101] => lookup_620_362(acc),
            [116, 115] => lookup_620_363(acc),
            [116, 117, 114, 105, 110] => lookup_620_364(acc),
            [116, 117, 115, 99, 97, 110, 121] => lookup_620_365(acc),
            [116, 118] => lookup_620_366(acc),
            [117, 100] => lookup_620_367(acc),
            [117, 100, 105, 110, 101] => lookup_620_368(acc),
            [117, 109, 98] => lookup_620_369(acc),
            [117, 109, 98, 114, 105, 97] => lookup_620_370(acc),
            [117, 114, 98, 105, 110, 111, 45, 112, 101, 115, 97, 114, 111] => lookup_620_371(acc),
            [117, 114, 98, 105, 110, 111, 112, 101, 115, 97, 114, 111] => lookup_620_372(acc),
            [118, 97] => lookup_620_373(acc),
            [118, 97, 108, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_620_374(acc),
            [118, 97, 108, 45, 100, 97, 111, 115, 116, 97] => lookup_620_375(acc),
            [118, 97, 108, 100, 45, 97, 111, 115, 116, 97] => lookup_620_376(acc),
            [118, 97, 108, 100, 97, 111, 115, 116, 97] => lookup_620_377(acc),
            [118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 97] => lookup_620_378(acc),
            [118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_620_379(acc),
            [118, 97, 108, 108, 101, 45, 100, 97, 111, 115, 116, 97] => lookup_620_380(acc),
            [118, 97, 108, 108, 101, 97, 111, 115, 116, 97] => lookup_620_381(acc),
            [118, 97, 108, 108, 101, 100, 45, 97, 111, 115, 116, 97] => lookup_620_382(acc),
            [118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 97] => lookup_620_383(acc),
            [118, 97, 108, 108, 101, 101, 45, 97, 111, 115, 116, 101] => lookup_620_384(acc),
            [118, 97, 108, 108, 101, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_620_385(acc)
            }
            [118, 97, 108, 108, 101, 101, 97, 111, 115, 116, 101] => lookup_620_386(acc),
            [118, 97, 108, 108, 101, 101, 100, 97, 111, 115, 116, 101] => lookup_620_387(acc),
            [118, 97, 108, 108, 195, 169, 101, 45, 97, 111, 115, 116, 101] => lookup_620_388(acc),
            [118, 97, 108, 108, 195, 169, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_620_389(acc)
            }
            [118, 97, 108, 108, 195, 169, 101, 97, 111, 115, 116, 101] => lookup_620_390(acc),
            [118, 97, 108, 108, 195, 169, 101, 100, 97, 111, 115, 116, 101] => lookup_620_391(acc),
            [118, 97, 111] => lookup_620_392(acc),
            [118, 97, 114, 101, 115, 101] => lookup_620_393(acc),
            [118, 98] => lookup_620_394(acc),
            [118, 99] => lookup_620_395(acc),
            [118, 100, 97] => lookup_620_396(acc),
            [118, 101] => lookup_620_397(acc),
            [118, 101, 110] => lookup_620_398(acc),
            [118, 101, 110, 101, 116, 111] => lookup_620_399(acc),
            [118, 101, 110, 101, 122, 105, 97] => lookup_620_400(acc),
            [118, 101, 110, 105, 99, 101] => lookup_620_401(acc),
            [118, 101, 114, 98, 97, 110, 105, 97] => lookup_620_402(acc),
            [118, 101, 114, 99, 101, 108, 108, 105] => lookup_620_403(acc),
            [118, 101, 114, 111, 110, 97] => lookup_620_404(acc),
            [118, 105] => lookup_620_405(acc),
            [118, 105, 98, 111, 45, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_620_406(acc),
            [118, 105, 98, 111, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_620_407(acc),
            [118, 105, 99, 101, 110, 122, 97] => lookup_620_408(acc),
            [118, 105, 116, 101, 114, 98, 111] => lookup_620_409(acc),
            [118, 114] => lookup_620_410(acc),
            [118, 115] => lookup_620_411(acc),
            [118, 116] => lookup_620_412(acc),
            [118, 118] => lookup_620_413(acc),
            [120, 110, 45, 45, 98, 97, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_620_414(acc)
            }
            [120, 110, 45, 45, 98, 111, 122, 101, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 50, 111, 98] => {
                lookup_620_415(acc)
            }
            [120, 110, 45, 45, 98, 117, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_620_416(acc)
            }
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 45, 109, 99, 98] => {
                lookup_620_417(acc)
            }
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 45, 105, 56, 97] => {
                lookup_620_418(acc)
            }
            [120, 110, 45, 45, 102, 111, 114, 108, 45, 99, 101, 115, 101, 110, 97, 45, 102, 99, 98] => {
                lookup_620_419(acc)
            }
            [120, 110, 45, 45, 102, 111, 114, 108, 99, 101, 115, 101, 110, 97, 45, 99, 56, 97] => {
                lookup_620_420(acc)
            }
            [120, 110, 45, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 50, 97] => {
                lookup_620_421(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_620_422(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_620_423(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 99, 51, 98] => {
                lookup_620_424(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 116, 105, 114, 111, 108, 45, 115, 122, 98] => {
                lookup_620_425(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_620_426(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_620_427(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 45, 116, 105, 114, 111, 108, 45, 54, 118, 98] => {
                lookup_620_428(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_620_429(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_620_430(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 101, 45, 101, 104, 98] => {
                lookup_620_431(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 97, 111, 115, 116, 101, 45, 101, 55, 97] => {
                lookup_620_432(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_620_433(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_621() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_622() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_624() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_625() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_626_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_626_0(acc),
            [110, 101, 116] => lookup_626_1(acc),
            [111, 102] => lookup_626_2(acc),
            [111, 114, 103] => lookup_626_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_627() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_628() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_629() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_631() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_632_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_632<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_632_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_633() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_635_0(acc),
            [101, 100, 117] => lookup_635_1(acc),
            [103, 111, 118] => lookup_635_2(acc),
            [109, 105, 108] => lookup_635_3(acc),
            [110, 97, 109, 101] => lookup_635_4(acc),
            [110, 101, 116] => lookup_635_5(acc),
            [111, 114, 103] => lookup_635_6(acc),
            [115, 99, 104] => lookup_635_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_636() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_637() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_639() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 115, 97, 105] => lookup_640_2_0(acc),
            [97, 109, 97] => lookup_640_2_1(acc),
            [97, 110, 106, 111] => lookup_640_2_2(acc),
            [97, 115, 117, 107, 101] => lookup_640_2_3(acc),
            [99, 104, 105, 114, 121, 117] => lookup_640_2_4(acc),
            [99, 104, 105, 116, 97] => lookup_640_2_5(acc),
            [102, 117, 115, 111] => lookup_640_2_6(acc),
            [103, 97, 109, 97, 103, 111, 114, 105] => lookup_640_2_7(acc),
            [104, 97, 110, 100, 97] => lookup_640_2_8(acc),
            [104, 97, 122, 117] => lookup_640_2_9(acc),
            [104, 101, 107, 105, 110, 97, 110] => lookup_640_2_10(acc),
            [104, 105, 103, 97, 115, 104, 105, 117, 114, 97] => lookup_640_2_11(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_640_2_12(acc),
            [105, 110, 97, 122, 97, 119, 97] => lookup_640_2_13(acc),
            [105, 110, 117, 121, 97, 109, 97] => lookup_640_2_14(acc),
            [105, 115, 115, 104, 105, 107, 105] => lookup_640_2_15(acc),
            [105, 119, 97, 107, 117, 114, 97] => lookup_640_2_16(acc),
            [107, 97, 110, 105, 101] => lookup_640_2_17(acc),
            [107, 97, 114, 105, 121, 97] => lookup_640_2_18(acc),
            [107, 97, 115, 117, 103, 97, 105] => lookup_640_2_19(acc),
            [107, 105, 114, 97] => lookup_640_2_20(acc),
            [107, 105, 121, 111, 115, 117] => lookup_640_2_21(acc),
            [107, 111, 109, 97, 107, 105] => lookup_640_2_22(acc),
            [107, 111, 110, 97, 110] => lookup_640_2_23(acc),
            [107, 111, 116, 97] => lookup_640_2_24(acc),
            [109, 105, 104, 97, 109, 97] => lookup_640_2_25(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_640_2_26(acc),
            [110, 105, 115, 104, 105, 111] => lookup_640_2_27(acc),
            [110, 105, 115, 115, 104, 105, 110] => lookup_640_2_28(acc),
            [111, 98, 117] => lookup_640_2_29(acc),
            [111, 103, 117, 99, 104, 105] => lookup_640_2_30(acc),
            [111, 104, 97, 114, 117] => lookup_640_2_31(acc),
            [111, 107, 97, 122, 97, 107, 105] => lookup_640_2_32(acc),
            [111, 119, 97, 114, 105, 97, 115, 97, 104, 105] => lookup_640_2_33(acc),
            [115, 101, 116, 111] => lookup_640_2_34(acc),
            [115, 104, 105, 107, 97, 116, 115, 117] => lookup_640_2_35(acc),
            [115, 104, 105, 110, 115, 104, 105, 114, 111] => lookup_640_2_36(acc),
            [115, 104, 105, 116, 97, 114, 97] => lookup_640_2_37(acc),
            [116, 97, 104, 97, 114, 97] => lookup_640_2_38(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_640_2_39(acc),
            [116, 111, 98, 105, 115, 104, 105, 109, 97] => lookup_640_2_40(acc),
            [116, 111, 101, 105] => lookup_640_2_41(acc),
            [116, 111, 103, 111] => lookup_640_2_42(acc),
            [116, 111, 107, 97, 105] => lookup_640_2_43(acc),
            [116, 111, 107, 111, 110, 97, 109, 101] => lookup_640_2_44(acc),
            [116, 111, 121, 111, 97, 107, 101] => lookup_640_2_45(acc),
            [116, 111, 121, 111, 104, 97, 115, 104, 105] => lookup_640_2_46(acc),
            [116, 111, 121, 111, 107, 97, 119, 97] => lookup_640_2_47(acc),
            [116, 111, 121, 111, 110, 101] => lookup_640_2_48(acc),
            [116, 111, 121, 111, 116, 97] => lookup_640_2_49(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_640_2_50(acc),
            [121, 97, 116, 111, 109, 105] => lookup_640_2_51(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 105, 116, 97] => lookup_640_3_0(acc),
            [100, 97, 105, 115, 101, 110] => lookup_640_3_1(acc),
            [102, 117, 106, 105, 115, 97, 116, 111] => lookup_640_3_2(acc),
            [103, 111, 106, 111, 109, 101] => lookup_640_3_3(acc),
            [104, 97, 99, 104, 105, 114, 111, 103, 97, 116, 97] => lookup_640_3_4(acc),
            [104, 97, 112, 112, 111, 117] => lookup_640_3_5(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 97, 114, 117, 115, 101] => lookup_640_3_6(acc),
            [104, 111, 110, 106, 111] => lookup_640_3_7(acc),
            [104, 111, 110, 106, 121, 111] => lookup_640_3_8(acc),
            [105, 107, 97, 119, 97] => lookup_640_3_9(acc),
            [107, 97, 109, 105, 107, 111, 97, 110, 105] => lookup_640_3_10(acc),
            [107, 97, 109, 105, 111, 107, 97] => lookup_640_3_11(acc),
            [107, 97, 116, 97, 103, 97, 109, 105] => lookup_640_3_12(acc),
            [107, 97, 122, 117, 110, 111] => lookup_640_3_13(acc),
            [107, 105, 116, 97, 97, 107, 105, 116, 97] => lookup_640_3_14(acc),
            [107, 111, 115, 97, 107, 97] => lookup_640_3_15(acc),
            [107, 121, 111, 119, 97] => lookup_640_3_16(acc),
            [109, 105, 115, 97, 116, 111] => lookup_640_3_17(acc),
            [109, 105, 116, 97, 110, 101] => lookup_640_3_18(acc),
            [109, 111, 114, 105, 121, 111, 115, 104, 105] => lookup_640_3_19(acc),
            [110, 105, 107, 97, 104, 111] => lookup_640_3_20(acc),
            [110, 111, 115, 104, 105, 114, 111] => lookup_640_3_21(acc),
            [111, 100, 97, 116, 101] => lookup_640_3_22(acc),
            [111, 103, 97] => lookup_640_3_23(acc),
            [111, 103, 97, 116, 97] => lookup_640_3_24(acc),
            [115, 101, 109, 98, 111, 107, 117] => lookup_640_3_25(acc),
            [121, 111, 107, 111, 116, 101] => lookup_640_3_26(acc),
            [121, 117, 114, 105, 104, 111, 110, 106, 111] => lookup_640_3_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 111, 109, 111, 114, 105] => lookup_640_4_0(acc),
            [103, 111, 110, 111, 104, 101] => lookup_640_4_1(acc),
            [104, 97, 99, 104, 105, 110, 111, 104, 101] => lookup_640_4_2(acc),
            [104, 97, 115, 104, 105, 107, 97, 109, 105] => lookup_640_4_3(acc),
            [104, 105, 114, 97, 110, 97, 105] => lookup_640_4_4(acc),
            [104, 105, 114, 111, 115, 97, 107, 105] => lookup_640_4_5(acc),
            [105, 116, 97, 121, 97, 110, 97, 103, 105] => lookup_640_4_6(acc),
            [107, 117, 114, 111, 105, 115, 104, 105] => lookup_640_4_7(acc),
            [109, 105, 115, 97, 119, 97] => lookup_640_4_8(acc),
            [109, 117, 116, 115, 117] => lookup_640_4_9(acc),
            [110, 97, 107, 97, 100, 111, 109, 97, 114, 105] => lookup_640_4_10(acc),
            [110, 111, 104, 101, 106, 105] => lookup_640_4_11(acc),
            [111, 105, 114, 97, 115, 101] => lookup_640_4_12(acc),
            [111, 119, 97, 110, 105] => lookup_640_4_13(acc),
            [114, 111, 107, 117, 110, 111, 104, 101] => lookup_640_4_14(acc),
            [115, 97, 110, 110, 111, 104, 101] => lookup_640_4_15(acc),
            [115, 104, 105, 99, 104, 105, 110, 111, 104, 101] => lookup_640_4_16(acc),
            [115, 104, 105, 110, 103, 111] => lookup_640_4_17(acc),
            [116, 97, 107, 107, 111] => lookup_640_4_18(acc),
            [116, 111, 119, 97, 100, 97] => lookup_640_4_19(acc),
            [116, 115, 117, 103, 97, 114, 117] => lookup_640_4_20(acc),
            [116, 115, 117, 114, 117, 116, 97] => lookup_640_4_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_640_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_640_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 105, 107, 111] => lookup_640_7_0(acc),
            [97, 115, 97, 104, 105] => lookup_640_7_1(acc),
            [99, 104, 111, 110, 97, 110] => lookup_640_7_2(acc),
            [99, 104, 111, 115, 101, 105] => lookup_640_7_3(acc),
            [99, 104, 111, 115, 104, 105] => lookup_640_7_4(acc),
            [99, 104, 117, 111] => lookup_640_7_5(acc),
            [102, 117, 110, 97, 98, 97, 115, 104, 105] => lookup_640_7_6(acc),
            [102, 117, 116, 116, 115, 117] => lookup_640_7_7(acc),
            [104, 97, 110, 97, 109, 105, 103, 97, 119, 97] => lookup_640_7_8(acc),
            [105, 99, 104, 105, 104, 97, 114, 97] => lookup_640_7_9(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_640_7_10(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_640_7_11(acc),
            [105, 110, 122, 97, 105] => lookup_640_7_12(acc),
            [105, 115, 117, 109, 105] => lookup_640_7_13(acc),
            [107, 97, 109, 97, 103, 97, 121, 97] => lookup_640_7_14(acc),
            [107, 97, 109, 111, 103, 97, 119, 97] => lookup_640_7_15(acc),
            [107, 97, 115, 104, 105, 119, 97] => lookup_640_7_16(acc),
            [107, 97, 116, 111, 114, 105] => lookup_640_7_17(acc),
            [107, 97, 116, 115, 117, 117, 114, 97] => lookup_640_7_18(acc),
            [107, 105, 109, 105, 116, 115, 117] => lookup_640_7_19(acc),
            [107, 105, 115, 97, 114, 97, 122, 117] => lookup_640_7_20(acc),
            [107, 111, 122, 97, 107, 105] => lookup_640_7_21(acc),
            [107, 117, 106, 117, 107, 117, 114, 105] => lookup_640_7_22(acc),
            [107, 121, 111, 110, 97, 110] => lookup_640_7_23(acc),
            [109, 97, 116, 115, 117, 100, 111] => lookup_640_7_24(acc),
            [109, 105, 100, 111, 114, 105] => lookup_640_7_25(acc),
            [109, 105, 104, 97, 109, 97] => lookup_640_7_26(acc),
            [109, 105, 110, 97, 109, 105, 98, 111, 115, 111] => lookup_640_7_27(acc),
            [109, 111, 98, 97, 114, 97] => lookup_640_7_28(acc),
            [109, 117, 116, 115, 117, 122, 97, 119, 97] => lookup_640_7_29(acc),
            [110, 97, 103, 97, 114, 97] => lookup_640_7_30(acc),
            [110, 97, 103, 97, 114, 101, 121, 97, 109, 97] => lookup_640_7_31(acc),
            [110, 97, 114, 97, 115, 104, 105, 110, 111] => lookup_640_7_32(acc),
            [110, 97, 114, 105, 116, 97] => lookup_640_7_33(acc),
            [110, 111, 100, 97] => lookup_640_7_34(acc),
            [111, 97, 109, 105, 115, 104, 105, 114, 97, 115, 97, 116, 111] => lookup_640_7_35(acc),
            [111, 109, 105, 103, 97, 119, 97] => lookup_640_7_36(acc),
            [111, 110, 106, 117, 107, 117] => lookup_640_7_37(acc),
            [111, 116, 97, 107, 105] => lookup_640_7_38(acc),
            [115, 97, 107, 97, 101] => lookup_640_7_39(acc),
            [115, 97, 107, 117, 114, 97] => lookup_640_7_40(acc),
            [115, 104, 105, 109, 111, 102, 117, 115, 97] => lookup_640_7_41(acc),
            [115, 104, 105, 114, 97, 107, 111] => lookup_640_7_42(acc),
            [115, 104, 105, 114, 111, 105] => lookup_640_7_43(acc),
            [115, 104, 105, 115, 117, 105] => lookup_640_7_44(acc),
            [115, 111, 100, 101, 103, 97, 117, 114, 97] => lookup_640_7_45(acc),
            [115, 111, 115, 97] => lookup_640_7_46(acc),
            [116, 97, 107, 111] => lookup_640_7_47(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_640_7_48(acc),
            [116, 111, 103, 97, 110, 101] => lookup_640_7_49(acc),
            [116, 111, 104, 110, 111, 115, 104, 111] => lookup_640_7_50(acc),
            [116, 111, 109, 105, 115, 97, 116, 111] => lookup_640_7_51(acc),
            [117, 114, 97, 121, 97, 115, 117] => lookup_640_7_52(acc),
            [121, 97, 99, 104, 105, 109, 97, 116, 97] => lookup_640_7_53(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_640_7_54(acc),
            [121, 111, 107, 97, 105, 99, 104, 105, 98, 97] => lookup_640_7_55(acc),
            [121, 111, 107, 111, 115, 104, 105, 98, 97, 104, 105, 107, 97, 114, 105] => {
                lookup_640_7_56(acc)
            }
            [121, 111, 116, 115, 117, 107, 97, 105, 100, 111] => lookup_640_7_57(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 110, 97, 110] => lookup_640_10_0(acc),
            [104, 111, 110, 97, 105] => lookup_640_10_1(acc),
            [105, 107, 97, 116, 97] => lookup_640_10_2(acc),
            [105, 109, 97, 98, 97, 114, 105] => lookup_640_10_3(acc),
            [105, 121, 111] => lookup_640_10_4(acc),
            [107, 97, 109, 105, 106, 105, 109, 97] => lookup_640_10_5(acc),
            [107, 105, 104, 111, 107, 117] => lookup_640_10_6(acc),
            [107, 117, 109, 97, 107, 111, 103, 101, 110] => lookup_640_10_7(acc),
            [109, 97, 115, 97, 107, 105] => lookup_640_10_8(acc),
            [109, 97, 116, 115, 117, 110, 111] => lookup_640_10_9(acc),
            [109, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_640_10_10(acc),
            [110, 97, 109, 105, 107, 97, 116, 97] => lookup_640_10_11(acc),
            [110, 105, 105, 104, 97, 109, 97] => lookup_640_10_12(acc),
            [111, 122, 117] => lookup_640_10_13(acc),
            [115, 97, 105, 106, 111] => lookup_640_10_14(acc),
            [115, 101, 105, 121, 111] => lookup_640_10_15(acc),
            [115, 104, 105, 107, 111, 107, 117, 99, 104, 117, 111] => lookup_640_10_16(acc),
            [116, 111, 98, 101] => lookup_640_10_17(acc),
            [116, 111, 111, 110] => lookup_640_10_18(acc),
            [117, 99, 104, 105, 107, 111] => lookup_640_10_19(acc),
            [117, 119, 97, 106, 105, 109, 97] => lookup_640_10_20(acc),
            [121, 97, 119, 97, 116, 97, 104, 97, 109, 97] => lookup_640_10_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_640_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_12<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 99, 104, 105, 122, 101, 110] => lookup_640_12_0(acc),
            [101, 105, 104, 101, 105, 106, 105] => lookup_640_12_1(acc),
            [102, 117, 107, 117, 105] => lookup_640_12_2(acc),
            [105, 107, 101, 100, 97] => lookup_640_12_3(acc),
            [107, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_640_12_4(acc),
            [109, 105, 104, 97, 109, 97] => lookup_640_12_5(acc),
            [109, 105, 110, 97, 109, 105, 101, 99, 104, 105, 122, 101, 110] => lookup_640_12_6(acc),
            [111, 98, 97, 109, 97] => lookup_640_12_7(acc),
            [111, 104, 105] => lookup_640_12_8(acc),
            [111, 110, 111] => lookup_640_12_9(acc),
            [115, 97, 98, 97, 101] => lookup_640_12_10(acc),
            [115, 97, 107, 97, 105] => lookup_640_12_11(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_640_12_12(acc),
            [116, 115, 117, 114, 117, 103, 97] => lookup_640_12_13(acc),
            [119, 97, 107, 97, 115, 97] => lookup_640_12_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_13<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 104, 105, 121, 97] => lookup_640_13_0(acc),
            [98, 117, 122, 101, 110] => lookup_640_13_1(acc),
            [99, 104, 105, 107, 117, 103, 111] => lookup_640_13_2(acc),
            [99, 104, 105, 107, 117, 104, 111] => lookup_640_13_3(acc),
            [99, 104, 105, 107, 117, 106, 111] => lookup_640_13_4(acc),
            [99, 104, 105, 107, 117, 115, 104, 105, 110, 111] => lookup_640_13_5(acc),
            [99, 104, 105, 107, 117, 122, 101, 110] => lookup_640_13_6(acc),
            [99, 104, 117, 111] => lookup_640_13_7(acc),
            [100, 97, 122, 97, 105, 102, 117] => lookup_640_13_8(acc),
            [102, 117, 107, 117, 99, 104, 105] => lookup_640_13_9(acc),
            [104, 97, 107, 97, 116, 97] => lookup_640_13_10(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_640_13_11(acc),
            [104, 105, 114, 111, 107, 97, 119, 97] => lookup_640_13_12(acc),
            [104, 105, 115, 97, 121, 97, 109, 97] => lookup_640_13_13(acc),
            [105, 105, 122, 117, 107, 97] => lookup_640_13_14(acc),
            [105, 110, 97, 116, 115, 117, 107, 105] => lookup_640_13_15(acc),
            [107, 97, 104, 111] => lookup_640_13_16(acc),
            [107, 97, 115, 117, 103, 97] => lookup_640_13_17(acc),
            [107, 97, 115, 117, 121, 97] => lookup_640_13_18(acc),
            [107, 97, 119, 97, 114, 97] => lookup_640_13_19(acc),
            [107, 101, 105, 115, 101, 110] => lookup_640_13_20(acc),
            [107, 111, 103, 97] => lookup_640_13_21(acc),
            [107, 117, 114, 97, 116, 101] => lookup_640_13_22(acc),
            [107, 117, 114, 111, 103, 105] => lookup_640_13_23(acc),
            [107, 117, 114, 117, 109, 101] => lookup_640_13_24(acc),
            [109, 105, 110, 97, 109, 105] => lookup_640_13_25(acc),
            [109, 105, 121, 97, 107, 111] => lookup_640_13_26(acc),
            [109, 105, 121, 97, 109, 97] => lookup_640_13_27(acc),
            [109, 105, 121, 97, 119, 97, 107, 97] => lookup_640_13_28(acc),
            [109, 105, 122, 117, 109, 97, 107, 105] => lookup_640_13_29(acc),
            [109, 117, 110, 97, 107, 97, 116, 97] => lookup_640_13_30(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_640_13_31(acc),
            [110, 97, 107, 97, 109, 97] => lookup_640_13_32(acc),
            [110, 105, 115, 104, 105] => lookup_640_13_33(acc),
            [110, 111, 103, 97, 116, 97] => lookup_640_13_34(acc),
            [111, 103, 111, 114, 105] => lookup_640_13_35(acc),
            [111, 107, 97, 103, 97, 107, 105] => lookup_640_13_36(acc),
            [111, 107, 97, 119, 97] => lookup_640_13_37(acc),
            [111, 107, 105] => lookup_640_13_38(acc),
            [111, 109, 117, 116, 97] => lookup_640_13_39(acc),
            [111, 110, 103, 97] => lookup_640_13_40(acc),
            [111, 110, 111, 106, 111] => lookup_640_13_41(acc),
            [111, 116, 111] => lookup_640_13_42(acc),
            [115, 97, 105, 103, 97, 119, 97] => lookup_640_13_43(acc),
            [115, 97, 115, 97, 103, 117, 114, 105] => lookup_640_13_44(acc),
            [115, 104, 105, 110, 103, 117] => lookup_640_13_45(acc),
            [115, 104, 105, 110, 121, 111, 115, 104, 105, 116, 111, 109, 105] => {
                lookup_640_13_46(acc)
            }
            [115, 104, 111, 110, 97, 105] => lookup_640_13_47(acc),
            [115, 111, 101, 100, 97] => lookup_640_13_48(acc),
            [115, 117, 101] => lookup_640_13_49(acc),
            [116, 97, 99, 104, 105, 97, 114, 97, 105] => lookup_640_13_50(acc),
            [116, 97, 103, 97, 119, 97] => lookup_640_13_51(acc),
            [116, 97, 107, 97, 116, 97] => lookup_640_13_52(acc),
            [116, 111, 104, 111] => lookup_640_13_53(acc),
            [116, 111, 121, 111, 116, 115, 117] => lookup_640_13_54(acc),
            [116, 115, 117, 105, 107, 105] => lookup_640_13_55(acc),
            [117, 107, 105, 104, 97] => lookup_640_13_56(acc),
            [117, 109, 105] => lookup_640_13_57(acc),
            [117, 115, 117, 105] => lookup_640_13_58(acc),
            [121, 97, 109, 97, 100, 97] => lookup_640_13_59(acc),
            [121, 97, 109, 101] => lookup_640_13_60(acc),
            [121, 97, 110, 97, 103, 97, 119, 97] => lookup_640_13_61(acc),
            [121, 117, 107, 117, 104, 97, 115, 104, 105] => lookup_640_13_62(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 122, 117, 98, 97, 110, 103, 101] => lookup_640_14_0(acc),
            [97, 105, 122, 117, 109, 105, 115, 97, 116, 111] => lookup_640_14_1(acc),
            [97, 105, 122, 117, 119, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_640_14_2(acc),
            [97, 115, 97, 107, 97, 119, 97] => lookup_640_14_3(acc),
            [98, 97, 110, 100, 97, 105] => lookup_640_14_4(acc),
            [100, 97, 116, 101] => lookup_640_14_5(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_640_14_6(acc),
            [102, 117, 114, 117, 100, 111, 110, 111] => lookup_640_14_7(acc),
            [102, 117, 116, 97, 98, 97] => lookup_640_14_8(acc),
            [104, 97, 110, 97, 119, 97] => lookup_640_14_9(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_640_14_10(acc),
            [104, 105, 114, 97, 116, 97] => lookup_640_14_11(acc),
            [104, 105, 114, 111, 110, 111] => lookup_640_14_12(acc),
            [105, 105, 116, 97, 116, 101] => lookup_640_14_13(acc),
            [105, 110, 97, 119, 97, 115, 104, 105, 114, 111] => lookup_640_14_14(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_640_14_15(acc),
            [105, 119, 97, 107, 105] => lookup_640_14_16(acc),
            [105, 122, 117, 109, 105, 122, 97, 107, 105] => lookup_640_14_17(acc),
            [107, 97, 103, 97, 109, 105, 105, 115, 104, 105] => lookup_640_14_18(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_640_14_19(acc),
            [107, 97, 119, 97, 109, 97, 116, 97] => lookup_640_14_20(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_640_14_21(acc),
            [107, 105, 116, 97, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_640_14_22(acc),
            [107, 111, 111, 114, 105] => lookup_640_14_23(acc),
            [107, 111, 114, 105, 121, 97, 109, 97] => lookup_640_14_24(acc),
            [107, 117, 110, 105, 109, 105] => lookup_640_14_25(acc),
            [109, 105, 104, 97, 114, 117] => lookup_640_14_26(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_640_14_27(acc),
            [110, 97, 109, 105, 101] => lookup_640_14_28(acc),
            [110, 97, 110, 103, 111] => lookup_640_14_29(acc),
            [110, 105, 115, 104, 105, 97, 105, 122, 117] => lookup_640_14_30(acc),
            [110, 105, 115, 104, 105, 103, 111] => lookup_640_14_31(acc),
            [111, 107, 117, 109, 97] => lookup_640_14_32(acc),
            [111, 109, 111, 116, 101, 103, 111] => lookup_640_14_33(acc),
            [111, 110, 111] => lookup_640_14_34(acc),
            [111, 116, 97, 109, 97] => lookup_640_14_35(acc),
            [115, 97, 109, 101, 103, 97, 119, 97] => lookup_640_14_36(acc),
            [115, 104, 105, 109, 111, 103, 111] => lookup_640_14_37(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_640_14_38(acc),
            [115, 104, 111, 119, 97] => lookup_640_14_39(acc),
            [115, 111, 109, 97] => lookup_640_14_40(acc),
            [115, 117, 107, 97, 103, 97, 119, 97] => lookup_640_14_41(acc),
            [116, 97, 105, 115, 104, 105, 110] => lookup_640_14_42(acc),
            [116, 97, 109, 97, 107, 97, 119, 97] => lookup_640_14_43(acc),
            [116, 97, 110, 97, 103, 117, 114, 97] => lookup_640_14_44(acc),
            [116, 101, 110, 101, 105] => lookup_640_14_45(acc),
            [121, 97, 98, 117, 107, 105] => lookup_640_14_46(acc),
            [121, 97, 109, 97, 116, 111] => lookup_640_14_47(acc),
            [121, 97, 109, 97, 116, 115, 117, 114, 105] => lookup_640_14_48(acc),
            [121, 97, 110, 97, 105, 122, 117] => lookup_640_14_49(acc),
            [121, 117, 103, 97, 119, 97] => lookup_640_14_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_15<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 112, 97, 99, 104, 105] => lookup_640_15_0(acc),
            [101, 110, 97] => lookup_640_15_1(acc),
            [103, 105, 102, 117] => lookup_640_15_2(acc),
            [103, 105, 110, 97, 110] => lookup_640_15_3(acc),
            [103, 111, 100, 111] => lookup_640_15_4(acc),
            [103, 117, 106, 111] => lookup_640_15_5(acc),
            [104, 97, 115, 104, 105, 109, 97] => lookup_640_15_6(acc),
            [104, 105, 99, 104, 105, 115, 111] => lookup_640_15_7(acc),
            [104, 105, 100, 97] => lookup_640_15_8(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 104, 105, 114, 97, 107, 97, 119, 97] => {
                lookup_640_15_9(acc)
            }
            [105, 98, 105, 103, 97, 119, 97] => lookup_640_15_10(acc),
            [105, 107, 101, 100, 97] => lookup_640_15_11(acc),
            [107, 97, 107, 97, 109, 105, 103, 97, 104, 97, 114, 97] => lookup_640_15_12(acc),
            [107, 97, 110, 105] => lookup_640_15_13(acc),
            [107, 97, 115, 97, 104, 97, 114, 97] => lookup_640_15_14(acc),
            [107, 97, 115, 97, 109, 97, 116, 115, 117] => lookup_640_15_15(acc),
            [107, 97, 119, 97, 117, 101] => lookup_640_15_16(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_640_15_17(acc),
            [109, 105, 110, 111] => lookup_640_15_18(acc),
            [109, 105, 110, 111, 107, 97, 109, 111] => lookup_640_15_19(acc),
            [109, 105, 116, 97, 107, 101] => lookup_640_15_20(acc),
            [109, 105, 122, 117, 110, 97, 109, 105] => lookup_640_15_21(acc),
            [109, 111, 116, 111, 115, 117] => lookup_640_15_22(acc),
            [110, 97, 107, 97, 116, 115, 117, 103, 97, 119, 97] => lookup_640_15_23(acc),
            [111, 103, 97, 107, 105] => lookup_640_15_24(acc),
            [115, 97, 107, 97, 104, 111, 103, 105] => lookup_640_15_25(acc),
            [115, 101, 107, 105] => lookup_640_15_26(acc),
            [115, 101, 107, 105, 103, 97, 104, 97, 114, 97] => lookup_640_15_27(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_640_15_28(acc),
            [116, 97, 106, 105, 109, 105] => lookup_640_15_29(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_640_15_30(acc),
            [116, 97, 114, 117, 105] => lookup_640_15_31(acc),
            [116, 111, 107, 105] => lookup_640_15_32(acc),
            [116, 111, 109, 105, 107, 97] => lookup_640_15_33(acc),
            [119, 97, 110, 111, 117, 99, 104, 105] => lookup_640_15_34(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_640_15_35(acc),
            [121, 97, 111, 116, 115, 117] => lookup_640_15_36(acc),
            [121, 111, 114, 111] => lookup_640_15_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_18<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 110, 97, 107, 97] => lookup_640_18_0(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_640_18_1(acc),
            [102, 117, 106, 105, 111, 107, 97] => lookup_640_18_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 97, 103, 97, 116, 115, 117, 109, 97] => {
                lookup_640_18_3(acc)
            }
            [105, 115, 101, 115, 97, 107, 105] => lookup_640_18_4(acc),
            [105, 116, 97, 107, 117, 114, 97] => lookup_640_18_5(acc),
            [107, 97, 110, 110, 97] => lookup_640_18_6(acc),
            [107, 97, 110, 114, 97] => lookup_640_18_7(acc),
            [107, 97, 116, 97, 115, 104, 105, 110, 97] => lookup_640_18_8(acc),
            [107, 97, 119, 97, 98, 97] => lookup_640_18_9(acc),
            [107, 105, 114, 121, 117] => lookup_640_18_10(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_640_18_11(acc),
            [109, 97, 101, 98, 97, 115, 104, 105] => lookup_640_18_12(acc),
            [109, 101, 105, 119, 97] => lookup_640_18_13(acc),
            [109, 105, 100, 111, 114, 105] => lookup_640_18_14(acc),
            [109, 105, 110, 97, 107, 97, 109, 105] => lookup_640_18_15(acc),
            [110, 97, 103, 97, 110, 111, 104, 97, 114, 97] => lookup_640_18_16(acc),
            [110, 97, 107, 97, 110, 111, 106, 111] => lookup_640_18_17(acc),
            [110, 97, 110, 109, 111, 107, 117] => lookup_640_18_18(acc),
            [110, 117, 109, 97, 116, 97] => lookup_640_18_19(acc),
            [111, 105, 122, 117, 109, 105] => lookup_640_18_20(acc),
            [111, 114, 97] => lookup_640_18_21(acc),
            [111, 116, 97] => lookup_640_18_22(acc),
            [115, 104, 105, 98, 117, 107, 97, 119, 97] => lookup_640_18_23(acc),
            [115, 104, 105, 109, 111, 110, 105, 116, 97] => lookup_640_18_24(acc),
            [115, 104, 105, 110, 116, 111] => lookup_640_18_25(acc),
            [115, 104, 111, 119, 97] => lookup_640_18_26(acc),
            [116, 97, 107, 97, 115, 97, 107, 105] => lookup_640_18_27(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_640_18_28(acc),
            [116, 97, 109, 97, 109, 117, 114, 97] => lookup_640_18_29(acc),
            [116, 97, 116, 101, 98, 97, 121, 97, 115, 104, 105] => lookup_640_18_30(acc),
            [116, 111, 109, 105, 111, 107, 97] => lookup_640_18_31(acc),
            [116, 115, 117, 107, 105, 121, 111, 110, 111] => lookup_640_18_32(acc),
            [116, 115, 117, 109, 97, 103, 111, 105] => lookup_640_18_33(acc),
            [117, 101, 110, 111] => lookup_640_18_34(acc),
            [121, 111, 115, 104, 105, 111, 107, 97] => lookup_640_18_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_640_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 109, 105, 110, 97, 109, 105] => lookup_640_20_0(acc),
            [100, 97, 105, 119, 97] => lookup_640_20_1(acc),
            [101, 116, 97, 106, 105, 109, 97] => lookup_640_20_2(acc),
            [102, 117, 99, 104, 117] => lookup_640_20_3(acc),
            [102, 117, 107, 117, 121, 97, 109, 97] => lookup_640_20_4(acc),
            [104, 97, 116, 115, 117, 107, 97, 105, 99, 104, 105] => lookup_640_20_5(acc),
            [104, 105, 103, 97, 115, 104, 105, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_640_20_6(acc)
            }
            [104, 111, 110, 103, 111] => lookup_640_20_7(acc),
            [106, 105, 110, 115, 101, 107, 105, 107, 111, 103, 101, 110] => lookup_640_20_8(acc),
            [107, 97, 105, 116, 97] => lookup_640_20_9(acc),
            [107, 117, 105] => lookup_640_20_10(acc),
            [107, 117, 109, 97, 110, 111] => lookup_640_20_11(acc),
            [107, 117, 114, 101] => lookup_640_20_12(acc),
            [109, 105, 104, 97, 114, 97] => lookup_640_20_13(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_640_20_14(acc),
            [110, 97, 107, 97] => lookup_640_20_15(acc),
            [111, 110, 111, 109, 105, 99, 104, 105] => lookup_640_20_16(acc),
            [111, 115, 97, 107, 105, 107, 97, 109, 105, 106, 105, 109, 97] => lookup_640_20_17(acc),
            [111, 116, 97, 107, 101] => lookup_640_20_18(acc),
            [115, 97, 107, 97] => lookup_640_20_19(acc),
            [115, 101, 114, 97] => lookup_640_20_20(acc),
            [115, 101, 114, 97, 110, 105, 115, 104, 105] => lookup_640_20_21(acc),
            [115, 104, 105, 110, 105, 99, 104, 105] => lookup_640_20_22(acc),
            [115, 104, 111, 98, 97, 114, 97] => lookup_640_20_23(acc),
            [116, 97, 107, 101, 104, 97, 114, 97] => lookup_640_20_24(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_21<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 97, 115, 104, 105, 114, 105] => lookup_640_21_0(acc),
            [97, 98, 105, 114, 97] => lookup_640_21_1(acc),
            [97, 105, 98, 101, 116, 115, 117] => lookup_640_21_2(acc),
            [97, 107, 97, 98, 105, 114, 97] => lookup_640_21_3(acc),
            [97, 107, 107, 101, 115, 104, 105] => lookup_640_21_4(acc),
            [97, 115, 97, 104, 105, 107, 97, 119, 97] => lookup_640_21_5(acc),
            [97, 115, 104, 105, 98, 101, 116, 115, 117] => lookup_640_21_6(acc),
            [97, 115, 104, 111, 114, 111] => lookup_640_21_7(acc),
            [97, 115, 115, 97, 98, 117] => lookup_640_21_8(acc),
            [97, 116, 115, 117, 109, 97] => lookup_640_21_9(acc),
            [98, 105, 98, 97, 105] => lookup_640_21_10(acc),
            [98, 105, 101, 105] => lookup_640_21_11(acc),
            [98, 105, 102, 117, 107, 97] => lookup_640_21_12(acc),
            [98, 105, 104, 111, 114, 111] => lookup_640_21_13(acc),
            [98, 105, 114, 97, 116, 111, 114, 105] => lookup_640_21_14(acc),
            [99, 104, 105, 112, 112, 117, 98, 101, 116, 115, 117] => lookup_640_21_15(acc),
            [99, 104, 105, 116, 111, 115, 101] => lookup_640_21_16(acc),
            [100, 97, 116, 101] => lookup_640_21_17(acc),
            [101, 98, 101, 116, 115, 117] => lookup_640_21_18(acc),
            [101, 109, 98, 101, 116, 115, 117] => lookup_640_21_19(acc),
            [101, 110, 105, 119, 97] => lookup_640_21_20(acc),
            [101, 114, 105, 109, 111] => lookup_640_21_21(acc),
            [101, 115, 97, 110] => lookup_640_21_22(acc),
            [101, 115, 97, 115, 104, 105] => lookup_640_21_23(acc),
            [102, 117, 107, 97, 103, 97, 119, 97] => lookup_640_21_24(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_640_21_25(acc),
            [102, 117, 114, 97, 110, 111] => lookup_640_21_26(acc),
            [102, 117, 114, 117, 98, 105, 114, 97] => lookup_640_21_27(acc),
            [104, 97, 98, 111, 114, 111] => lookup_640_21_28(acc),
            [104, 97, 107, 111, 100, 97, 116, 101] => lookup_640_21_29(acc),
            [104, 97, 109, 97, 116, 111, 110, 98, 101, 116, 115, 117] => lookup_640_21_30(acc),
            [104, 105, 100, 97, 107, 97] => lookup_640_21_31(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 117, 114, 97] => lookup_640_21_32(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 119, 97] => lookup_640_21_33(acc),
            [104, 105, 114, 111, 111] => lookup_640_21_34(acc),
            [104, 111, 107, 117, 114, 121, 117] => lookup_640_21_35(acc),
            [104, 111, 107, 117, 116, 111] => lookup_640_21_36(acc),
            [104, 111, 110, 98, 101, 116, 115, 117] => lookup_640_21_37(acc),
            [104, 111, 114, 111, 107, 97, 110, 97, 105] => lookup_640_21_38(acc),
            [104, 111, 114, 111, 110, 111, 98, 101] => lookup_640_21_39(acc),
            [105, 107, 101, 100, 97] => lookup_640_21_40(acc),
            [105, 109, 97, 107, 97, 110, 101] => lookup_640_21_41(acc),
            [105, 115, 104, 105, 107, 97, 114, 105] => lookup_640_21_42(acc),
            [105, 119, 97, 109, 105, 122, 97, 119, 97] => lookup_640_21_43(acc),
            [105, 119, 97, 110, 97, 105] => lookup_640_21_44(acc),
            [107, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_640_21_45(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_640_21_46(acc),
            [107, 97, 109, 105, 115, 104, 105, 104, 111, 114, 111] => lookup_640_21_47(acc),
            [107, 97, 109, 105, 115, 117, 110, 97, 103, 97, 119, 97] => lookup_640_21_48(acc),
            [107, 97, 109, 111, 101, 110, 97, 105] => lookup_640_21_49(acc),
            [107, 97, 121, 97, 98, 101] => lookup_640_21_50(acc),
            [107, 101, 109, 98, 117, 99, 104, 105] => lookup_640_21_51(acc),
            [107, 105, 107, 111, 110, 97, 105] => lookup_640_21_52(acc),
            [107, 105, 109, 111, 98, 101, 116, 115, 117] => lookup_640_21_53(acc),
            [107, 105, 116, 97, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_640_21_54(acc)
            }
            [107, 105, 116, 97, 109, 105] => lookup_640_21_55(acc),
            [107, 105, 121, 111, 115, 97, 116, 111] => lookup_640_21_56(acc),
            [107, 111, 115, 104, 105, 109, 105, 122, 117] => lookup_640_21_57(acc),
            [107, 117, 110, 110, 101, 112, 112, 117] => lookup_640_21_58(acc),
            [107, 117, 114, 105, 121, 97, 109, 97] => lookup_640_21_59(acc),
            [107, 117, 114, 111, 109, 97, 116, 115, 117, 110, 97, 105] => lookup_640_21_60(acc),
            [107, 117, 115, 104, 105, 114, 111] => lookup_640_21_61(acc),
            [107, 117, 116, 99, 104, 97, 110] => lookup_640_21_62(acc),
            [107, 121, 111, 119, 97] => lookup_640_21_63(acc),
            [109, 97, 115, 104, 105, 107, 101] => lookup_640_21_64(acc),
            [109, 97, 116, 115, 117, 109, 97, 101] => lookup_640_21_65(acc),
            [109, 105, 107, 97, 115, 97] => lookup_640_21_66(acc),
            [109, 105, 110, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_640_21_67(acc),
            [109, 111, 109, 98, 101, 116, 115, 117] => lookup_640_21_68(acc),
            [109, 111, 115, 101, 117, 115, 104, 105] => lookup_640_21_69(acc),
            [109, 117, 107, 97, 119, 97] => lookup_640_21_70(acc),
            [109, 117, 114, 111, 114, 97, 110] => lookup_640_21_71(acc),
            [110, 97, 105, 101] => lookup_640_21_72(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_640_21_73(acc),
            [110, 97, 107, 97, 115, 97, 116, 115, 117, 110, 97, 105] => lookup_640_21_74(acc),
            [110, 97, 107, 97, 116, 111, 109, 98, 101, 116, 115, 117] => lookup_640_21_75(acc),
            [110, 97, 110, 97, 101] => lookup_640_21_76(acc),
            [110, 97, 110, 112, 111, 114, 111] => lookup_640_21_77(acc),
            [110, 97, 121, 111, 114, 111] => lookup_640_21_78(acc),
            [110, 101, 109, 117, 114, 111] => lookup_640_21_79(acc),
            [110, 105, 105, 107, 97, 112, 112, 117] => lookup_640_21_80(acc),
            [110, 105, 107, 105] => lookup_640_21_81(acc),
            [110, 105, 115, 104, 105, 111, 107, 111, 112, 112, 101] => lookup_640_21_82(acc),
            [110, 111, 98, 111, 114, 105, 98, 101, 116, 115, 117] => lookup_640_21_83(acc),
            [110, 117, 109, 97, 116, 97] => lookup_640_21_84(acc),
            [111, 98, 105, 104, 105, 114, 111] => lookup_640_21_85(acc),
            [111, 98, 105, 114, 97] => lookup_640_21_86(acc),
            [111, 107, 101, 116, 111] => lookup_640_21_87(acc),
            [111, 107, 111, 112, 112, 101] => lookup_640_21_88(acc),
            [111, 116, 97, 114, 117] => lookup_640_21_89(acc),
            [111, 116, 111, 98, 101] => lookup_640_21_90(acc),
            [111, 116, 111, 102, 117, 107, 101] => lookup_640_21_91(acc),
            [111, 116, 111, 105, 110, 101, 112, 112, 117] => lookup_640_21_92(acc),
            [111, 117, 109, 117] => lookup_640_21_93(acc),
            [111, 122, 111, 114, 97] => lookup_640_21_94(acc),
            [112, 105, 112, 112, 117] => lookup_640_21_95(acc),
            [114, 97, 110, 107, 111, 115, 104, 105] => lookup_640_21_96(acc),
            [114, 101, 98, 117, 110] => lookup_640_21_97(acc),
            [114, 105, 107, 117, 98, 101, 116, 115, 117] => lookup_640_21_98(acc),
            [114, 105, 115, 104, 105, 114, 105] => lookup_640_21_99(acc),
            [114, 105, 115, 104, 105, 114, 105, 102, 117, 106, 105] => lookup_640_21_100(acc),
            [115, 97, 114, 111, 109, 97] => lookup_640_21_101(acc),
            [115, 97, 114, 117, 102, 117, 116, 115, 117] => lookup_640_21_102(acc),
            [115, 104, 97, 107, 111, 116, 97, 110] => lookup_640_21_103(acc),
            [115, 104, 97, 114, 105] => lookup_640_21_104(acc),
            [115, 104, 105, 98, 101, 99, 104, 97] => lookup_640_21_105(acc),
            [115, 104, 105, 98, 101, 116, 115, 117] => lookup_640_21_106(acc),
            [115, 104, 105, 107, 97, 98, 101] => lookup_640_21_107(acc),
            [115, 104, 105, 107, 97, 111, 105] => lookup_640_21_108(acc),
            [115, 104, 105, 109, 97, 109, 97, 107, 105] => lookup_640_21_109(acc),
            [115, 104, 105, 109, 105, 122, 117] => lookup_640_21_110(acc),
            [115, 104, 105, 109, 111, 107, 97, 119, 97] => lookup_640_21_111(acc),
            [115, 104, 105, 110, 115, 104, 105, 110, 111, 116, 115, 117] => lookup_640_21_112(acc),
            [115, 104, 105, 110, 116, 111, 107, 117] => lookup_640_21_113(acc),
            [115, 104, 105, 114, 97, 110, 117, 107, 97] => lookup_640_21_114(acc),
            [115, 104, 105, 114, 97, 111, 105] => lookup_640_21_115(acc),
            [115, 104, 105, 114, 105, 117, 99, 104, 105] => lookup_640_21_116(acc),
            [115, 111, 98, 101, 116, 115, 117] => lookup_640_21_117(acc),
            [115, 117, 110, 97, 103, 97, 119, 97] => lookup_640_21_118(acc),
            [116, 97, 105, 107, 105] => lookup_640_21_119(acc),
            [116, 97, 107, 97, 115, 117] => lookup_640_21_120(acc),
            [116, 97, 107, 105, 107, 97, 119, 97] => lookup_640_21_121(acc),
            [116, 97, 107, 105, 110, 111, 117, 101] => lookup_640_21_122(acc),
            [116, 101, 115, 104, 105, 107, 97, 103, 97] => lookup_640_21_123(acc),
            [116, 111, 98, 101, 116, 115, 117] => lookup_640_21_124(acc),
            [116, 111, 104, 109, 97] => lookup_640_21_125(acc),
            [116, 111, 109, 97, 107, 111, 109, 97, 105] => lookup_640_21_126(acc),
            [116, 111, 109, 97, 114, 105] => lookup_640_21_127(acc),
            [116, 111, 121, 97] => lookup_640_21_128(acc),
            [116, 111, 121, 97, 107, 111] => lookup_640_21_129(acc),
            [116, 111, 121, 111, 116, 111, 109, 105] => lookup_640_21_130(acc),
            [116, 111, 121, 111, 117, 114, 97] => lookup_640_21_131(acc),
            [116, 115, 117, 98, 101, 116, 115, 117] => lookup_640_21_132(acc),
            [116, 115, 117, 107, 105, 103, 97, 116, 97] => lookup_640_21_133(acc),
            [117, 114, 97, 107, 97, 119, 97] => lookup_640_21_134(acc),
            [117, 114, 97, 117, 115, 117] => lookup_640_21_135(acc),
            [117, 114, 121, 117] => lookup_640_21_136(acc),
            [117, 116, 97, 115, 104, 105, 110, 97, 105] => lookup_640_21_137(acc),
            [119, 97, 107, 107, 97, 110, 97, 105] => lookup_640_21_138(acc),
            [119, 97, 115, 115, 97, 109, 117] => lookup_640_21_139(acc),
            [121, 97, 107, 117, 109, 111] => lookup_640_21_140(acc),
            [121, 111, 105, 99, 104, 105] => lookup_640_21_141(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_22<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 111, 105] => lookup_640_22_0(acc),
            [97, 107, 97, 115, 104, 105] => lookup_640_22_1(acc),
            [97, 107, 111] => lookup_640_22_2(acc),
            [97, 109, 97, 103, 97, 115, 97, 107, 105] => lookup_640_22_3(acc),
            [97, 111, 103, 97, 107, 105] => lookup_640_22_4(acc),
            [97, 115, 97, 103, 111] => lookup_640_22_5(acc),
            [97, 115, 104, 105, 121, 97] => lookup_640_22_6(acc),
            [97, 119, 97, 106, 105] => lookup_640_22_7(acc),
            [102, 117, 107, 117, 115, 97, 107, 105] => lookup_640_22_8(acc),
            [103, 111, 115, 104, 105, 107, 105] => lookup_640_22_9(acc),
            [104, 97, 114, 105, 109, 97] => lookup_640_22_10(acc),
            [104, 105, 109, 101, 106, 105] => lookup_640_22_11(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_640_22_12(acc),
            [105, 110, 97, 103, 97, 119, 97] => lookup_640_22_13(acc),
            [105, 116, 97, 109, 105] => lookup_640_22_14(acc),
            [107, 97, 107, 111, 103, 97, 119, 97] => lookup_640_22_15(acc),
            [107, 97, 109, 105, 103, 111, 114, 105] => lookup_640_22_16(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_640_22_17(acc),
            [107, 97, 115, 97, 105] => lookup_640_22_18(acc),
            [107, 97, 115, 117, 103, 97] => lookup_640_22_19(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_640_22_20(acc),
            [109, 105, 107, 105] => lookup_640_22_21(acc),
            [109, 105, 110, 97, 109, 105, 97, 119, 97, 106, 105] => lookup_640_22_22(acc),
            [110, 105, 115, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_640_22_23(acc),
            [110, 105, 115, 104, 105, 119, 97, 107, 105] => lookup_640_22_24(acc),
            [111, 110, 111] => lookup_640_22_25(acc),
            [115, 97, 110, 100, 97] => lookup_640_22_26(acc),
            [115, 97, 110, 110, 97, 110] => lookup_640_22_27(acc),
            [115, 97, 115, 97, 121, 97, 109, 97] => lookup_640_22_28(acc),
            [115, 97, 121, 111] => lookup_640_22_29(acc),
            [115, 104, 105, 110, 103, 117] => lookup_640_22_30(acc),
            [115, 104, 105, 110, 111, 110, 115, 101, 110] => lookup_640_22_31(acc),
            [115, 104, 105, 115, 111] => lookup_640_22_32(acc),
            [115, 117, 109, 111, 116, 111] => lookup_640_22_33(acc),
            [116, 97, 105, 115, 104, 105] => lookup_640_22_34(acc),
            [116, 97, 107, 97] => lookup_640_22_35(acc),
            [116, 97, 107, 97, 114, 97, 122, 117, 107, 97] => lookup_640_22_36(acc),
            [116, 97, 107, 97, 115, 97, 103, 111] => lookup_640_22_37(acc),
            [116, 97, 107, 105, 110, 111] => lookup_640_22_38(acc),
            [116, 97, 109, 98, 97] => lookup_640_22_39(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_640_22_40(acc),
            [116, 111, 121, 111, 111, 107, 97] => lookup_640_22_41(acc),
            [121, 97, 98, 117] => lookup_640_22_42(acc),
            [121, 97, 115, 104, 105, 114, 111] => lookup_640_22_43(acc),
            [121, 111, 107, 97] => lookup_640_22_44(acc),
            [121, 111, 107, 97, 119, 97] => lookup_640_22_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 105] => lookup_640_23_0(acc),
            [97, 115, 97, 104, 105] => lookup_640_23_1(acc),
            [98, 97, 110, 100, 111] => lookup_640_23_2(acc),
            [99, 104, 105, 107, 117, 115, 101, 105] => lookup_640_23_3(acc),
            [100, 97, 105, 103, 111] => lookup_640_23_4(acc),
            [102, 117, 106, 105, 115, 104, 105, 114, 111] => lookup_640_23_5(acc),
            [104, 105, 116, 97, 99, 104, 105] => lookup_640_23_6(acc),
            [104, 105, 116, 97, 99, 104, 105, 110, 97, 107, 97] => lookup_640_23_7(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 109, 105, 121, 97] => lookup_640_23_8(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 116, 97] => lookup_640_23_9(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_640_23_10(acc),
            [105, 110, 97] => lookup_640_23_11(acc),
            [105, 110, 97, 115, 104, 105, 107, 105] => lookup_640_23_12(acc),
            [105, 116, 97, 107, 111] => lookup_640_23_13(acc),
            [105, 119, 97, 109, 97] => lookup_640_23_14(acc),
            [106, 111, 115, 111] => lookup_640_23_15(acc),
            [107, 97, 109, 105, 115, 117] => lookup_640_23_16(acc),
            [107, 97, 115, 97, 109, 97] => lookup_640_23_17(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_640_23_18(acc),
            [107, 97, 115, 117, 109, 105, 103, 97, 117, 114, 97] => lookup_640_23_19(acc),
            [107, 111, 103, 97] => lookup_640_23_20(acc),
            [109, 105, 104, 111] => lookup_640_23_21(acc),
            [109, 105, 116, 111] => lookup_640_23_22(acc),
            [109, 111, 114, 105, 121, 97] => lookup_640_23_23(acc),
            [110, 97, 107, 97] => lookup_640_23_24(acc),
            [110, 97, 109, 101, 103, 97, 116, 97] => lookup_640_23_25(acc),
            [111, 97, 114, 97, 105] => lookup_640_23_26(acc),
            [111, 103, 97, 119, 97] => lookup_640_23_27(acc),
            [111, 109, 105, 116, 97, 109, 97] => lookup_640_23_28(acc),
            [114, 121, 117, 103, 97, 115, 97, 107, 105] => lookup_640_23_29(acc),
            [115, 97, 107, 97, 105] => lookup_640_23_30(acc),
            [115, 97, 107, 117, 114, 97, 103, 97, 119, 97] => lookup_640_23_31(acc),
            [115, 104, 105, 109, 111, 100, 97, 116, 101] => lookup_640_23_32(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 109, 97] => lookup_640_23_33(acc),
            [115, 104, 105, 114, 111, 115, 97, 116, 111] => lookup_640_23_34(acc),
            [115, 111, 119, 97] => lookup_640_23_35(acc),
            [115, 117, 105, 102, 117] => lookup_640_23_36(acc),
            [116, 97, 107, 97, 104, 97, 103, 105] => lookup_640_23_37(acc),
            [116, 97, 109, 97, 116, 115, 117, 107, 117, 114, 105] => lookup_640_23_38(acc),
            [116, 111, 107, 97, 105] => lookup_640_23_39(acc),
            [116, 111, 109, 111, 98, 101] => lookup_640_23_40(acc),
            [116, 111, 110, 101] => lookup_640_23_41(acc),
            [116, 111, 114, 105, 100, 101] => lookup_640_23_42(acc),
            [116, 115, 117, 99, 104, 105, 117, 114, 97] => lookup_640_23_43(acc),
            [116, 115, 117, 107, 117, 98, 97] => lookup_640_23_44(acc),
            [117, 99, 104, 105, 104, 97, 114, 97] => lookup_640_23_45(acc),
            [117, 115, 104, 105, 107, 117] => lookup_640_23_46(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_640_23_47(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_640_23_48(acc),
            [121, 97, 119, 97, 114, 97] => lookup_640_23_49(acc),
            [121, 117, 107, 105] => lookup_640_23_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_24<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 109, 105, 122, 117] => lookup_640_24_0(acc),
            [104, 97, 107, 117, 105] => lookup_640_24_1(acc),
            [104, 97, 107, 117, 115, 97, 110] => lookup_640_24_2(acc),
            [107, 97, 103, 97] => lookup_640_24_3(acc),
            [107, 97, 104, 111, 107, 117] => lookup_640_24_4(acc),
            [107, 97, 110, 97, 122, 97, 119, 97] => lookup_640_24_5(acc),
            [107, 97, 119, 97, 107, 105, 116, 97] => lookup_640_24_6(acc),
            [107, 111, 109, 97, 116, 115, 117] => lookup_640_24_7(acc),
            [110, 97, 107, 97, 110, 111, 116, 111] => lookup_640_24_8(acc),
            [110, 97, 110, 97, 111] => lookup_640_24_9(acc),
            [110, 111, 109, 105] => lookup_640_24_10(acc),
            [110, 111, 110, 111, 105, 99, 104, 105] => lookup_640_24_11(acc),
            [110, 111, 116, 111] => lookup_640_24_12(acc),
            [115, 104, 105, 107, 97] => lookup_640_24_13(acc),
            [115, 117, 122, 117] => lookup_640_24_14(acc),
            [116, 115, 117, 98, 97, 116, 97] => lookup_640_24_15(acc),
            [116, 115, 117, 114, 117, 103, 105] => lookup_640_24_16(acc),
            [117, 99, 104, 105, 110, 97, 100, 97] => lookup_640_24_17(acc),
            [119, 97, 106, 105, 109, 97] => lookup_640_24_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_25<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 100, 97, 105] => lookup_640_25_0(acc),
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_640_25_1(acc),
            [104, 97, 110, 97, 109, 97, 107, 105] => lookup_640_25_2(acc),
            [104, 105, 114, 97, 105, 122, 117, 109, 105] => lookup_640_25_3(acc),
            [104, 105, 114, 111, 110, 111] => lookup_640_25_4(acc),
            [105, 99, 104, 105, 110, 111, 104, 101] => lookup_640_25_5(acc),
            [105, 99, 104, 105, 110, 111, 115, 101, 107, 105] => lookup_640_25_6(acc),
            [105, 119, 97, 105, 122, 117, 109, 105] => lookup_640_25_7(acc),
            [105, 119, 97, 116, 101] => lookup_640_25_8(acc),
            [106, 111, 98, 111, 106, 105] => lookup_640_25_9(acc),
            [107, 97, 109, 97, 105, 115, 104, 105] => lookup_640_25_10(acc),
            [107, 97, 110, 101, 103, 97, 115, 97, 107, 105] => lookup_640_25_11(acc),
            [107, 97, 114, 117, 109, 97, 105] => lookup_640_25_12(acc),
            [107, 97, 119, 97, 105] => lookup_640_25_13(acc),
            [107, 105, 116, 97, 107, 97, 109, 105] => lookup_640_25_14(acc),
            [107, 117, 106, 105] => lookup_640_25_15(acc),
            [107, 117, 110, 111, 104, 101] => lookup_640_25_16(acc),
            [107, 117, 122, 117, 109, 97, 107, 105] => lookup_640_25_17(acc),
            [109, 105, 121, 97, 107, 111] => lookup_640_25_18(acc),
            [109, 105, 122, 117, 115, 97, 119, 97] => lookup_640_25_19(acc),
            [109, 111, 114, 105, 111, 107, 97] => lookup_640_25_20(acc),
            [110, 105, 110, 111, 104, 101] => lookup_640_25_21(acc),
            [110, 111, 100, 97] => lookup_640_25_22(acc),
            [111, 102, 117, 110, 97, 116, 111] => lookup_640_25_23(acc),
            [111, 115, 104, 117] => lookup_640_25_24(acc),
            [111, 116, 115, 117, 99, 104, 105] => lookup_640_25_25(acc),
            [114, 105, 107, 117, 122, 101, 110, 116, 97, 107, 97, 116, 97] => lookup_640_25_26(acc),
            [115, 104, 105, 119, 97] => lookup_640_25_27(acc),
            [115, 104, 105, 122, 117, 107, 117, 105, 115, 104, 105] => lookup_640_25_28(acc),
            [115, 117, 109, 105, 116, 97] => lookup_640_25_29(acc),
            [116, 97, 110, 111, 104, 97, 116, 97] => lookup_640_25_30(acc),
            [116, 111, 110, 111] => lookup_640_25_31(acc),
            [121, 97, 104, 97, 98, 97] => lookup_640_25_32(acc),
            [121, 97, 109, 97, 100, 97] => lookup_640_25_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_26_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_26<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 121, 97, 103, 97, 119, 97] => lookup_640_26_0(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 97, 119, 97] => lookup_640_26_1(acc),
            [107, 97, 110, 111, 110, 106, 105] => lookup_640_26_2(acc),
            [107, 111, 116, 111, 104, 105, 114, 97] => lookup_640_26_3(acc),
            [109, 97, 110, 110, 111] => lookup_640_26_4(acc),
            [109, 97, 114, 117, 103, 97, 109, 101] => lookup_640_26_5(acc),
            [109, 105, 116, 111, 121, 111] => lookup_640_26_6(acc),
            [110, 97, 111, 115, 104, 105, 109, 97] => lookup_640_26_7(acc),
            [115, 97, 110, 117, 107, 105] => lookup_640_26_8(acc),
            [116, 97, 100, 111, 116, 115, 117] => lookup_640_26_9(acc),
            [116, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_640_26_10(acc),
            [116, 111, 110, 111, 115, 104, 111] => lookup_640_26_11(acc),
            [117, 99, 104, 105, 110, 111, 109, 105] => lookup_640_26_12(acc),
            [117, 116, 97, 122, 117] => lookup_640_26_13(acc),
            [122, 101, 110, 116, 115, 117, 106, 105] => lookup_640_26_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_27<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 117, 110, 101] => lookup_640_27_0(acc),
            [97, 109, 97, 109, 105] => lookup_640_27_1(acc),
            [104, 105, 111, 107, 105] => lookup_640_27_2(acc),
            [105, 115, 97] => lookup_640_27_3(acc),
            [105, 115, 101, 110] => lookup_640_27_4(acc),
            [105, 122, 117, 109, 105] => lookup_640_27_5(acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_640_27_6(acc),
            [107, 97, 110, 111, 121, 97] => lookup_640_27_7(acc),
            [107, 97, 119, 97, 110, 97, 98, 101] => lookup_640_27_8(acc),
            [107, 105, 110, 107, 111] => lookup_640_27_9(acc),
            [107, 111, 117, 121, 97, 109, 97] => lookup_640_27_10(acc),
            [109, 97, 107, 117, 114, 97, 122, 97, 107, 105] => lookup_640_27_11(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_640_27_12(acc),
            [109, 105, 110, 97, 109, 105, 116, 97, 110, 101] => lookup_640_27_13(acc),
            [110, 97, 107, 97, 116, 97, 110, 101] => lookup_640_27_14(acc),
            [110, 105, 115, 104, 105, 110, 111, 111, 109, 111, 116, 101] => lookup_640_27_15(acc),
            [115, 97, 116, 115, 117, 109, 97, 115, 101, 110, 100, 97, 105] => lookup_640_27_16(acc),
            [115, 111, 111] => lookup_640_27_17(acc),
            [116, 97, 114, 117, 109, 105, 122, 117] => lookup_640_27_18(acc),
            [121, 117, 115, 117, 105] => lookup_640_27_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_28<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 107, 97, 119, 97] => lookup_640_28_0(acc),
            [97, 116, 115, 117, 103, 105] => lookup_640_28_1(acc),
            [97, 121, 97, 115, 101] => lookup_640_28_2(acc),
            [99, 104, 105, 103, 97, 115, 97, 107, 105] => lookup_640_28_3(acc),
            [101, 98, 105, 110, 97] => lookup_640_28_4(acc),
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_640_28_5(acc),
            [104, 97, 100, 97, 110, 111] => lookup_640_28_6(acc),
            [104, 97, 107, 111, 110, 101] => lookup_640_28_7(acc),
            [104, 105, 114, 97, 116, 115, 117, 107, 97] => lookup_640_28_8(acc),
            [105, 115, 101, 104, 97, 114, 97] => lookup_640_28_9(acc),
            [107, 97, 105, 115, 101, 105] => lookup_640_28_10(acc),
            [107, 97, 109, 97, 107, 117, 114, 97] => lookup_640_28_11(acc),
            [107, 105, 121, 111, 107, 97, 119, 97] => lookup_640_28_12(acc),
            [109, 97, 116, 115, 117, 100, 97] => lookup_640_28_13(acc),
            [109, 105, 110, 97, 109, 105, 97, 115, 104, 105, 103, 97, 114, 97] => {
                lookup_640_28_14(acc)
            }
            [109, 105, 117, 114, 97] => lookup_640_28_15(acc),
            [110, 97, 107, 97, 105] => lookup_640_28_16(acc),
            [110, 105, 110, 111, 109, 105, 121, 97] => lookup_640_28_17(acc),
            [111, 100, 97, 119, 97, 114, 97] => lookup_640_28_18(acc),
            [111, 105] => lookup_640_28_19(acc),
            [111, 105, 115, 111] => lookup_640_28_20(acc),
            [115, 97, 103, 97, 109, 105, 104, 97, 114, 97] => lookup_640_28_21(acc),
            [115, 97, 109, 117, 107, 97, 119, 97] => lookup_640_28_22(acc),
            [116, 115, 117, 107, 117, 105] => lookup_640_28_23(acc),
            [121, 97, 109, 97, 107, 105, 116, 97] => lookup_640_28_24(acc),
            [121, 97, 109, 97, 116, 111] => lookup_640_28_25(acc),
            [121, 111, 107, 111, 115, 117, 107, 97] => lookup_640_28_26(acc),
            [121, 117, 103, 97, 119, 97, 114, 97] => lookup_640_28_27(acc),
            [122, 97, 109, 97] => lookup_640_28_28(acc),
            [122, 117, 115, 104, 105] => lookup_640_28_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_640_30_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_30_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_30<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_640_30_0(acc),
            wild => lookup_640_30_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_640_31_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_31_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_31<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_640_31_0(acc),
            wild => lookup_640_31_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_640_32_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_32_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_32<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_640_32_0(acc),
            wild => lookup_640_32_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_640_33_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_33<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 105] => lookup_640_33_0(acc),
            [103, 101, 105, 115, 101, 105] => lookup_640_33_1(acc),
            [104, 105, 100, 97, 107, 97] => lookup_640_33_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 116, 115, 117, 110, 111] => lookup_640_33_3(acc),
            [105, 110, 111] => lookup_640_33_4(acc),
            [107, 97, 103, 97, 109, 105] => lookup_640_33_5(acc),
            [107, 97, 109, 105] => lookup_640_33_6(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_640_33_7(acc),
            [107, 111, 99, 104, 105] => lookup_640_33_8(acc),
            [109, 105, 104, 97, 114, 97] => lookup_640_33_9(acc),
            [109, 111, 116, 111, 121, 97, 109, 97] => lookup_640_33_10(acc),
            [109, 117, 114, 111, 116, 111] => lookup_640_33_11(acc),
            [110, 97, 104, 97, 114, 105] => lookup_640_33_12(acc),
            [110, 97, 107, 97, 109, 117, 114, 97] => lookup_640_33_13(acc),
            [110, 97, 110, 107, 111, 107, 117] => lookup_640_33_14(acc),
            [110, 105, 115, 104, 105, 116, 111, 115, 97] => lookup_640_33_15(acc),
            [110, 105, 121, 111, 100, 111, 103, 97, 119, 97] => lookup_640_33_16(acc),
            [111, 99, 104, 105] => lookup_640_33_17(acc),
            [111, 107, 97, 119, 97] => lookup_640_33_18(acc),
            [111, 116, 111, 121, 111] => lookup_640_33_19(acc),
            [111, 116, 115, 117, 107, 105] => lookup_640_33_20(acc),
            [115, 97, 107, 97, 119, 97] => lookup_640_33_21(acc),
            [115, 117, 107, 117, 109, 111] => lookup_640_33_22(acc),
            [115, 117, 115, 97, 107, 105] => lookup_640_33_23(acc),
            [116, 111, 115, 97] => lookup_640_33_24(acc),
            [116, 111, 115, 97, 115, 104, 105, 109, 105, 122, 117] => lookup_640_33_25(acc),
            [116, 111, 121, 111] => lookup_640_33_26(acc),
            [116, 115, 117, 110, 111] => lookup_640_33_27(acc),
            [117, 109, 97, 106, 105] => lookup_640_33_28(acc),
            [121, 97, 115, 117, 100, 97] => lookup_640_33_29(acc),
            [121, 117, 115, 117, 104, 97, 114, 97] => lookup_640_33_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_34_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_34<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 97, 107, 117, 115, 97] => lookup_640_34_0(acc),
            [97, 114, 97, 111] => lookup_640_34_1(acc),
            [97, 115, 111] => lookup_640_34_2(acc),
            [99, 104, 111, 121, 111] => lookup_640_34_3(acc),
            [103, 121, 111, 107, 117, 116, 111] => lookup_640_34_4(acc),
            [107, 97, 109, 105, 97, 109, 97, 107, 117, 115, 97] => lookup_640_34_5(acc),
            [107, 105, 107, 117, 99, 104, 105] => lookup_640_34_6(acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_640_34_7(acc),
            [109, 97, 115, 104, 105, 107, 105] => lookup_640_34_8(acc),
            [109, 105, 102, 117, 110, 101] => lookup_640_34_9(acc),
            [109, 105, 110, 97, 109, 97, 116, 97] => lookup_640_34_10(acc),
            [109, 105, 110, 97, 109, 105, 111, 103, 117, 110, 105] => lookup_640_34_11(acc),
            [110, 97, 103, 97, 115, 117] => lookup_640_34_12(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_640_34_13(acc),
            [111, 103, 117, 110, 105] => lookup_640_34_14(acc),
            [111, 122, 117] => lookup_640_34_15(acc),
            [115, 117, 109, 111, 116, 111] => lookup_640_34_16(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_640_34_17(acc),
            [117, 107, 105] => lookup_640_34_18(acc),
            [117, 116, 111] => lookup_640_34_19(acc),
            [121, 97, 109, 97, 103, 97] => lookup_640_34_20(acc),
            [121, 97, 109, 97, 116, 111] => lookup_640_34_21(acc),
            [121, 97, 116, 115, 117, 115, 104, 105, 114, 111] => lookup_640_34_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_35<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 121, 97, 98, 101] => lookup_640_35_0(acc),
            [102, 117, 107, 117, 99, 104, 105, 121, 97, 109, 97] => lookup_640_35_1(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97] => lookup_640_35_2(acc),
            [105, 100, 101] => lookup_640_35_3(acc),
            [105, 110, 101] => lookup_640_35_4(acc),
            [106, 111, 121, 111] => lookup_640_35_5(acc),
            [107, 97, 109, 101, 111, 107, 97] => lookup_640_35_6(acc),
            [107, 97, 109, 111] => lookup_640_35_7(acc),
            [107, 105, 116, 97] => lookup_640_35_8(acc),
            [107, 105, 122, 117] => lookup_640_35_9(acc),
            [107, 117, 109, 105, 121, 97, 109, 97] => lookup_640_35_10(acc),
            [107, 121, 111, 116, 97, 109, 98, 97] => lookup_640_35_11(acc),
            [107, 121, 111, 116, 97, 110, 97, 98, 101] => lookup_640_35_12(acc),
            [107, 121, 111, 116, 97, 110, 103, 111] => lookup_640_35_13(acc),
            [109, 97, 105, 122, 117, 114, 117] => lookup_640_35_14(acc),
            [109, 105, 110, 97, 109, 105] => lookup_640_35_15(acc),
            [109, 105, 110, 97, 109, 105, 121, 97, 109, 97, 115, 104, 105, 114, 111] => {
                lookup_640_35_16(acc)
            }
            [109, 105, 121, 97, 122, 117] => lookup_640_35_17(acc),
            [109, 117, 107, 111] => lookup_640_35_18(acc),
            [110, 97, 103, 97, 111, 107, 97, 107, 121, 111] => lookup_640_35_19(acc),
            [110, 97, 107, 97, 103, 121, 111] => lookup_640_35_20(acc),
            [110, 97, 110, 116, 97, 110] => lookup_640_35_21(acc),
            [111, 121, 97, 109, 97, 122, 97, 107, 105] => lookup_640_35_22(acc),
            [115, 97, 107, 121, 111] => lookup_640_35_23(acc),
            [115, 101, 105, 107, 97] => lookup_640_35_24(acc),
            [116, 97, 110, 97, 98, 101] => lookup_640_35_25(acc),
            [117, 106, 105] => lookup_640_35_26(acc),
            [117, 106, 105, 116, 97, 119, 97, 114, 97] => lookup_640_35_27(acc),
            [119, 97, 122, 117, 107, 97] => lookup_640_35_28(acc),
            [121, 97, 109, 97, 115, 104, 105, 110, 97] => lookup_640_35_29(acc),
            [121, 97, 119, 97, 116, 97] => lookup_640_35_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_37<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 104, 105] => lookup_640_37_0(acc),
            [105, 110, 97, 98, 101] => lookup_640_37_1(acc),
            [105, 115, 101] => lookup_640_37_2(acc),
            [107, 97, 109, 101, 121, 97, 109, 97] => lookup_640_37_3(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_640_37_4(acc),
            [107, 105, 104, 111] => lookup_640_37_5(acc),
            [107, 105, 115, 111, 115, 97, 107, 105] => lookup_640_37_6(acc),
            [107, 105, 119, 97] => lookup_640_37_7(acc),
            [107, 111, 109, 111, 110, 111] => lookup_640_37_8(acc),
            [107, 117, 109, 97, 110, 111] => lookup_640_37_9(acc),
            [107, 117, 119, 97, 110, 97] => lookup_640_37_10(acc),
            [109, 97, 116, 115, 117, 115, 97, 107, 97] => lookup_640_37_11(acc),
            [109, 101, 105, 119, 97] => lookup_640_37_12(acc),
            [109, 105, 104, 97, 109, 97] => lookup_640_37_13(acc),
            [109, 105, 110, 97, 109, 105, 105, 115, 101] => lookup_640_37_14(acc),
            [109, 105, 115, 117, 103, 105] => lookup_640_37_15(acc),
            [109, 105, 121, 97, 109, 97] => lookup_640_37_16(acc),
            [110, 97, 98, 97, 114, 105] => lookup_640_37_17(acc),
            [115, 104, 105, 109, 97] => lookup_640_37_18(acc),
            [115, 117, 122, 117, 107, 97] => lookup_640_37_19(acc),
            [116, 97, 100, 111] => lookup_640_37_20(acc),
            [116, 97, 105, 107, 105] => lookup_640_37_21(acc),
            [116, 97, 107, 105] => lookup_640_37_22(acc),
            [116, 97, 109, 97, 107, 105] => lookup_640_37_23(acc),
            [116, 111, 98, 97] => lookup_640_37_24(acc),
            [116, 115, 117] => lookup_640_37_25(acc),
            [117, 100, 111, 110, 111] => lookup_640_37_26(acc),
            [117, 114, 101, 115, 104, 105, 110, 111] => lookup_640_37_27(acc),
            [119, 97, 116, 97, 114, 97, 105] => lookup_640_37_28(acc),
            [121, 111, 107, 107, 97, 105, 99, 104, 105] => lookup_640_37_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_38<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 114, 117, 107, 97, 119, 97] => lookup_640_38_0(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => {
                lookup_640_38_1(acc)
            }
            [105, 115, 104, 105, 110, 111, 109, 97, 107, 105] => lookup_640_38_2(acc),
            [105, 119, 97, 110, 117, 109, 97] => lookup_640_38_3(acc),
            [107, 97, 107, 117, 100, 97] => lookup_640_38_4(acc),
            [107, 97, 109, 105] => lookup_640_38_5(acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_640_38_6(acc),
            [109, 97, 114, 117, 109, 111, 114, 105] => lookup_640_38_7(acc),
            [109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_640_38_8(acc),
            [109, 105, 110, 97, 109, 105, 115, 97, 110, 114, 105, 107, 117] => lookup_640_38_9(acc),
            [109, 105, 115, 97, 116, 111] => lookup_640_38_10(acc),
            [109, 117, 114, 97, 116, 97] => lookup_640_38_11(acc),
            [110, 97, 116, 111, 114, 105] => lookup_640_38_12(acc),
            [111, 103, 97, 119, 97, 114, 97] => lookup_640_38_13(acc),
            [111, 104, 105, 114, 97] => lookup_640_38_14(acc),
            [111, 110, 97, 103, 97, 119, 97] => lookup_640_38_15(acc),
            [111, 115, 97, 107, 105] => lookup_640_38_16(acc),
            [114, 105, 102, 117] => lookup_640_38_17(acc),
            [115, 101, 109, 105, 110, 101] => lookup_640_38_18(acc),
            [115, 104, 105, 98, 97, 116, 97] => lookup_640_38_19(acc),
            [115, 104, 105, 99, 104, 105, 107, 97, 115, 104, 117, 107, 117] => {
                lookup_640_38_20(acc)
            }
            [115, 104, 105, 107, 97, 109, 97] => lookup_640_38_21(acc),
            [115, 104, 105, 111, 103, 97, 109, 97] => lookup_640_38_22(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_640_38_23(acc),
            [116, 97, 103, 97, 106, 111] => lookup_640_38_24(acc),
            [116, 97, 105, 119, 97] => lookup_640_38_25(acc),
            [116, 111, 109, 101] => lookup_640_38_26(acc),
            [116, 111, 109, 105, 121, 97] => lookup_640_38_27(acc),
            [119, 97, 107, 117, 121, 97] => lookup_640_38_28(acc),
            [119, 97, 116, 97, 114, 105] => lookup_640_38_29(acc),
            [121, 97, 109, 97, 109, 111, 116, 111] => lookup_640_38_30(acc),
            [122, 97, 111] => lookup_640_38_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_39_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_39<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 121, 97] => lookup_640_39_0(acc),
            [101, 98, 105, 110, 111] => lookup_640_39_1(acc),
            [103, 111, 107, 97, 115, 101] => lookup_640_39_2(acc),
            [104, 121, 117, 103, 97] => lookup_640_39_3(acc),
            [107, 97, 100, 111, 103, 97, 119, 97] => lookup_640_39_4(acc),
            [107, 97, 119, 97, 109, 105, 110, 97, 109, 105] => lookup_640_39_5(acc),
            [107, 105, 106, 111] => lookup_640_39_6(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_640_39_7(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_640_39_8(acc),
            [107, 105, 116, 97, 117, 114, 97] => lookup_640_39_9(acc),
            [107, 111, 98, 97, 121, 97, 115, 104, 105] => lookup_640_39_10(acc),
            [107, 117, 110, 105, 116, 111, 109, 105] => lookup_640_39_11(acc),
            [107, 117, 115, 104, 105, 109, 97] => lookup_640_39_12(acc),
            [109, 105, 109, 97, 116, 97] => lookup_640_39_13(acc),
            [109, 105, 121, 97, 107, 111, 110, 111, 106, 111] => lookup_640_39_14(acc),
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_640_39_15(acc),
            [109, 111, 114, 111, 116, 115, 117, 107, 97] => lookup_640_39_16(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_640_39_17(acc),
            [110, 105, 115, 104, 105, 109, 101, 114, 97] => lookup_640_39_18(acc),
            [110, 111, 98, 101, 111, 107, 97] => lookup_640_39_19(acc),
            [115, 97, 105, 116, 111] => lookup_640_39_20(acc),
            [115, 104, 105, 105, 98, 97] => lookup_640_39_21(acc),
            [115, 104, 105, 110, 116, 111, 109, 105] => lookup_640_39_22(acc),
            [116, 97, 107, 97, 104, 97, 114, 117] => lookup_640_39_23(acc),
            [116, 97, 107, 97, 110, 97, 98, 101] => lookup_640_39_24(acc),
            [116, 97, 107, 97, 122, 97, 107, 105] => lookup_640_39_25(acc),
            [116, 115, 117, 110, 111] => lookup_640_39_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_40_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_40<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 104, 105] => lookup_640_40_0(acc),
            [97, 103, 101, 109, 97, 116, 115, 117] => lookup_640_40_1(acc),
            [97, 110, 97, 110] => lookup_640_40_2(acc),
            [97, 111, 107, 105] => lookup_640_40_3(acc),
            [97, 115, 97, 104, 105] => lookup_640_40_4(acc),
            [97, 122, 117, 109, 105, 110, 111] => lookup_640_40_5(acc),
            [99, 104, 105, 107, 117, 104, 111, 107, 117] => lookup_640_40_6(acc),
            [99, 104, 105, 107, 117, 109, 97] => lookup_640_40_7(acc),
            [99, 104, 105, 110, 111] => lookup_640_40_8(acc),
            [102, 117, 106, 105, 109, 105] => lookup_640_40_9(acc),
            [104, 97, 107, 117, 98, 97] => lookup_640_40_10(acc),
            [104, 97, 114, 97] => lookup_640_40_11(acc),
            [104, 105, 114, 97, 121, 97] => lookup_640_40_12(acc),
            [105, 105, 100, 97] => lookup_640_40_13(acc),
            [105, 105, 106, 105, 109, 97] => lookup_640_40_14(acc),
            [105, 105, 121, 97, 109, 97] => lookup_640_40_15(acc),
            [105, 105, 122, 117, 110, 97] => lookup_640_40_16(acc),
            [105, 107, 101, 100, 97] => lookup_640_40_17(acc),
            [105, 107, 117, 115, 97, 107, 97] => lookup_640_40_18(acc),
            [105, 110, 97] => lookup_640_40_19(acc),
            [107, 97, 114, 117, 105, 122, 97, 119, 97] => lookup_640_40_20(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_640_40_21(acc),
            [107, 105, 115, 111] => lookup_640_40_22(acc),
            [107, 105, 115, 111, 102, 117, 107, 117, 115, 104, 105, 109, 97] => {
                lookup_640_40_23(acc)
            }
            [107, 105, 116, 97, 97, 105, 107, 105] => lookup_640_40_24(acc),
            [107, 111, 109, 97, 103, 97, 110, 101] => lookup_640_40_25(acc),
            [107, 111, 109, 111, 114, 111] => lookup_640_40_26(acc),
            [109, 97, 116, 115, 117, 107, 97, 119, 97] => lookup_640_40_27(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_640_40_28(acc),
            [109, 105, 97, 115, 97] => lookup_640_40_29(acc),
            [109, 105, 110, 97, 109, 105, 97, 105, 107, 105] => lookup_640_40_30(acc),
            [109, 105, 110, 97, 109, 105, 109, 97, 107, 105] => lookup_640_40_31(acc),
            [109, 105, 110, 97, 109, 105, 109, 105, 110, 111, 119, 97] => lookup_640_40_32(acc),
            [109, 105, 110, 111, 119, 97] => lookup_640_40_33(acc),
            [109, 105, 121, 97, 100, 97] => lookup_640_40_34(acc),
            [109, 105, 121, 111, 116, 97] => lookup_640_40_35(acc),
            [109, 111, 99, 104, 105, 122, 117, 107, 105] => lookup_640_40_36(acc),
            [110, 97, 103, 97, 110, 111] => lookup_640_40_37(acc),
            [110, 97, 103, 97, 119, 97] => lookup_640_40_38(acc),
            [110, 97, 103, 105, 115, 111] => lookup_640_40_39(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_640_40_40(acc),
            [110, 97, 107, 97, 110, 111] => lookup_640_40_41(acc),
            [110, 111, 122, 97, 119, 97, 111, 110, 115, 101, 110] => lookup_640_40_42(acc),
            [111, 98, 117, 115, 101] => lookup_640_40_43(acc),
            [111, 103, 97, 119, 97] => lookup_640_40_44(acc),
            [111, 107, 97, 121, 97] => lookup_640_40_45(acc),
            [111, 109, 97, 99, 104, 105] => lookup_640_40_46(acc),
            [111, 109, 105] => lookup_640_40_47(acc),
            [111, 111, 107, 117, 119, 97] => lookup_640_40_48(acc),
            [111, 111, 115, 104, 105, 107, 97] => lookup_640_40_49(acc),
            [111, 116, 97, 107, 105] => lookup_640_40_50(acc),
            [111, 116, 97, 114, 105] => lookup_640_40_51(acc),
            [115, 97, 107, 97, 101] => lookup_640_40_52(acc),
            [115, 97, 107, 97, 107, 105] => lookup_640_40_53(acc),
            [115, 97, 107, 117] => lookup_640_40_54(acc),
            [115, 97, 107, 117, 104, 111] => lookup_640_40_55(acc),
            [115, 104, 105, 109, 111, 115, 117, 119, 97] => lookup_640_40_56(acc),
            [115, 104, 105, 110, 97, 110, 111, 109, 97, 99, 104, 105] => lookup_640_40_57(acc),
            [115, 104, 105, 111, 106, 105, 114, 105] => lookup_640_40_58(acc),
            [115, 117, 119, 97] => lookup_640_40_59(acc),
            [115, 117, 122, 97, 107, 97] => lookup_640_40_60(acc),
            [116, 97, 107, 97, 103, 105] => lookup_640_40_61(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_640_40_62(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_640_40_63(acc),
            [116, 97, 116, 101, 115, 104, 105, 110, 97] => lookup_640_40_64(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_640_40_65(acc),
            [116, 111, 103, 97, 107, 117, 115, 104, 105] => lookup_640_40_66(acc),
            [116, 111, 103, 117, 114, 97] => lookup_640_40_67(acc),
            [116, 111, 109, 105] => lookup_640_40_68(acc),
            [117, 101, 100, 97] => lookup_640_40_69(acc),
            [119, 97, 100, 97] => lookup_640_40_70(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_640_40_71(acc),
            [121, 97, 109, 97, 110, 111, 117, 99, 104, 105] => lookup_640_40_72(acc),
            [121, 97, 115, 97, 107, 97] => lookup_640_40_73(acc),
            [121, 97, 115, 117, 111, 107, 97] => lookup_640_40_74(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_41_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_41<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 105, 106, 105, 119, 97] => lookup_640_41_0(acc),
            [102, 117, 116, 115, 117] => lookup_640_41_1(acc),
            [103, 111, 116, 111] => lookup_640_41_2(acc),
            [104, 97, 115, 97, 109, 105] => lookup_640_41_3(acc),
            [104, 105, 114, 97, 100, 111] => lookup_640_41_4(acc),
            [105, 107, 105] => lookup_640_41_5(acc),
            [105, 115, 97, 104, 97, 121, 97] => lookup_640_41_6(acc),
            [107, 97, 119, 97, 116, 97, 110, 97] => lookup_640_41_7(acc),
            [107, 117, 99, 104, 105, 110, 111, 116, 115, 117] => lookup_640_41_8(acc),
            [109, 97, 116, 115, 117, 117, 114, 97] => lookup_640_41_9(acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_640_41_10(acc),
            [111, 98, 97, 109, 97] => lookup_640_41_11(acc),
            [111, 109, 117, 114, 97] => lookup_640_41_12(acc),
            [111, 115, 101, 116, 111] => lookup_640_41_13(acc),
            [115, 97, 105, 107, 97, 105] => lookup_640_41_14(acc),
            [115, 97, 115, 101, 98, 111] => lookup_640_41_15(acc),
            [115, 101, 105, 104, 105] => lookup_640_41_16(acc),
            [115, 104, 105, 109, 97, 98, 97, 114, 97] => lookup_640_41_17(acc),
            [115, 104, 105, 110, 107, 97, 109, 105, 103, 111, 116, 111] => lookup_640_41_18(acc),
            [116, 111, 103, 105, 116, 115, 117] => lookup_640_41_19(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_640_41_20(acc),
            [117, 110, 122, 101, 110] => lookup_640_41_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_42_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_42_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_42<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_640_42_0(acc),
            wild => lookup_640_42_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_640_43_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_43<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 100, 111] => lookup_640_43_0(acc),
            [103, 111, 115, 101] => lookup_640_43_1(acc),
            [104, 101, 103, 117, 114, 105] => lookup_640_43_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 115, 104, 105, 110, 111] => {
                lookup_640_43_3(acc)
            }
            [105, 107, 97, 114, 117, 103, 97] => lookup_640_43_4(acc),
            [105, 107, 111, 109, 97] => lookup_640_43_5(acc),
            [107, 97, 109, 105, 107, 105, 116, 97, 121, 97, 109, 97] => lookup_640_43_6(acc),
            [107, 97, 110, 109, 97, 107, 105] => lookup_640_43_7(acc),
            [107, 97, 115, 104, 105, 98, 97] => lookup_640_43_8(acc),
            [107, 97, 115, 104, 105, 104, 97, 114, 97] => lookup_640_43_9(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_640_43_10(acc),
            [107, 97, 119, 97, 105] => lookup_640_43_11(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_640_43_12(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_640_43_13(acc),
            [107, 111, 114, 121, 111] => lookup_640_43_14(acc),
            [107, 117, 114, 111, 116, 97, 107, 105] => lookup_640_43_15(acc),
            [109, 105, 116, 115, 117, 101] => lookup_640_43_16(acc),
            [109, 105, 121, 97, 107, 101] => lookup_640_43_17(acc),
            [110, 97, 114, 97] => lookup_640_43_18(acc),
            [110, 111, 115, 101, 103, 97, 119, 97] => lookup_640_43_19(acc),
            [111, 106, 105] => lookup_640_43_20(acc),
            [111, 117, 100, 97] => lookup_640_43_21(acc),
            [111, 121, 111, 100, 111] => lookup_640_43_22(acc),
            [115, 97, 107, 117, 114, 97, 105] => lookup_640_43_23(acc),
            [115, 97, 110, 103, 111] => lookup_640_43_24(acc),
            [115, 104, 105, 109, 111, 105, 99, 104, 105] => lookup_640_43_25(acc),
            [115, 104, 105, 109, 111, 107, 105, 116, 97, 121, 97, 109, 97] => lookup_640_43_26(acc),
            [115, 104, 105, 110, 106, 111] => lookup_640_43_27(acc),
            [115, 111, 110, 105] => lookup_640_43_28(acc),
            [116, 97, 107, 97, 116, 111, 114, 105] => lookup_640_43_29(acc),
            [116, 97, 119, 97, 114, 97, 109, 111, 116, 111] => lookup_640_43_30(acc),
            [116, 101, 110, 107, 97, 119, 97] => lookup_640_43_31(acc),
            [116, 101, 110, 114, 105] => lookup_640_43_32(acc),
            [117, 100, 97] => lookup_640_43_33(acc),
            [121, 97, 109, 97, 116, 111, 107, 111, 114, 105, 121, 97, 109, 97] => {
                lookup_640_43_34(acc)
            }
            [121, 97, 109, 97, 116, 111, 116, 97, 107, 97, 100, 97] => lookup_640_43_35(acc),
            [121, 97, 109, 97, 122, 111, 101] => lookup_640_43_36(acc),
            [121, 111, 115, 104, 105, 110, 111] => lookup_640_43_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_44_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_640_44_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_640_44_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_640_44<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 101, 105, 110, 101, 116] => lookup_640_44_0(info, labels, acc),
            [103, 101, 104, 105, 114, 110] => lookup_640_44_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_45<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 103, 97] => lookup_640_45_0(acc),
            [97, 103, 97, 110, 111] => lookup_640_45_1(acc),
            [103, 111, 115, 101, 110] => lookup_640_45_2(acc),
            [105, 116, 111, 105, 103, 97, 119, 97] => lookup_640_45_3(acc),
            [105, 122, 117, 109, 111, 122, 97, 107, 105] => lookup_640_45_4(acc),
            [106, 111, 101, 116, 115, 117] => lookup_640_45_5(acc),
            [107, 97, 109, 111] => lookup_640_45_6(acc),
            [107, 97, 114, 105, 119, 97] => lookup_640_45_7(acc),
            [107, 97, 115, 104, 105, 119, 97, 122, 97, 107, 105] => lookup_640_45_8(acc),
            [109, 105, 110, 97, 109, 105, 117, 111, 110, 117, 109, 97] => lookup_640_45_9(acc),
            [109, 105, 116, 115, 117, 107, 101] => lookup_640_45_10(acc),
            [109, 117, 105, 107, 97] => lookup_640_45_11(acc),
            [109, 117, 114, 97, 107, 97, 109, 105] => lookup_640_45_12(acc),
            [109, 121, 111, 107, 111] => lookup_640_45_13(acc),
            [110, 97, 103, 97, 111, 107, 97] => lookup_640_45_14(acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_640_45_15(acc),
            [111, 106, 105, 121, 97] => lookup_640_45_16(acc),
            [111, 109, 105] => lookup_640_45_17(acc),
            [115, 97, 100, 111] => lookup_640_45_18(acc),
            [115, 97, 110, 106, 111] => lookup_640_45_19(acc),
            [115, 101, 105, 114, 111] => lookup_640_45_20(acc),
            [115, 101, 105, 114, 111, 117] => lookup_640_45_21(acc),
            [115, 101, 107, 105, 107, 97, 119, 97] => lookup_640_45_22(acc),
            [115, 104, 105, 98, 97, 116, 97] => lookup_640_45_23(acc),
            [116, 97, 103, 97, 109, 105] => lookup_640_45_24(acc),
            [116, 97, 105, 110, 97, 105] => lookup_640_45_25(acc),
            [116, 111, 99, 104, 105, 111] => lookup_640_45_26(acc),
            [116, 111, 107, 97, 109, 97, 99, 104, 105] => lookup_640_45_27(acc),
            [116, 115, 117, 98, 97, 109, 101] => lookup_640_45_28(acc),
            [116, 115, 117, 110, 97, 110] => lookup_640_45_29(acc),
            [117, 111, 110, 117, 109, 97] => lookup_640_45_30(acc),
            [121, 97, 104, 105, 107, 111] => lookup_640_45_31(acc),
            [121, 111, 105, 116, 97] => lookup_640_45_32(acc),
            [121, 117, 122, 97, 119, 97] => lookup_640_45_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_46_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_46<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 112, 112, 117] => lookup_640_46_0(acc),
            [98, 117, 110, 103, 111, 111, 110, 111] => lookup_640_46_1(acc),
            [98, 117, 110, 103, 111, 116, 97, 107, 97, 100, 97] => lookup_640_46_2(acc),
            [104, 97, 115, 97, 109, 97] => lookup_640_46_3(acc),
            [104, 105, 106, 105] => lookup_640_46_4(acc),
            [104, 105, 109, 101, 115, 104, 105, 109, 97] => lookup_640_46_5(acc),
            [104, 105, 116, 97] => lookup_640_46_6(acc),
            [107, 97, 109, 105, 116, 115, 117, 101] => lookup_640_46_7(acc),
            [107, 111, 107, 111, 110, 111, 101] => lookup_640_46_8(acc),
            [107, 117, 106, 117] => lookup_640_46_9(acc),
            [107, 117, 110, 105, 115, 97, 107, 105] => lookup_640_46_10(acc),
            [107, 117, 115, 117] => lookup_640_46_11(acc),
            [111, 105, 116, 97] => lookup_640_46_12(acc),
            [115, 97, 105, 107, 105] => lookup_640_46_13(acc),
            [116, 97, 107, 101, 116, 97] => lookup_640_46_14(acc),
            [116, 115, 117, 107, 117, 109, 105] => lookup_640_46_15(acc),
            [117, 115, 97] => lookup_640_46_16(acc),
            [117, 115, 117, 107, 105] => lookup_640_46_17(acc),
            [121, 117, 102, 117] => lookup_640_46_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_47_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_47<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 97, 105, 119, 97] => lookup_640_47_0(acc),
            [97, 115, 97, 107, 117, 99, 104, 105] => lookup_640_47_1(acc),
            [98, 105, 122, 101, 110] => lookup_640_47_2(acc),
            [104, 97, 121, 97, 115, 104, 105, 109, 97] => lookup_640_47_3(acc),
            [105, 98, 97, 114, 97] => lookup_640_47_4(acc),
            [107, 97, 103, 97, 109, 105, 110, 111] => lookup_640_47_5(acc),
            [107, 97, 115, 97, 111, 107, 97] => lookup_640_47_6(acc),
            [107, 105, 98, 105, 99, 104, 117, 111] => lookup_640_47_7(acc),
            [107, 117, 109, 101, 110, 97, 110] => lookup_640_47_8(acc),
            [107, 117, 114, 97, 115, 104, 105, 107, 105] => lookup_640_47_9(acc),
            [109, 97, 110, 105, 119, 97] => lookup_640_47_10(acc),
            [109, 105, 115, 97, 107, 105] => lookup_640_47_11(acc),
            [110, 97, 103, 105] => lookup_640_47_12(acc),
            [110, 105, 105, 109, 105] => lookup_640_47_13(acc),
            [110, 105, 115, 104, 105, 97, 119, 97, 107, 117, 114, 97] => lookup_640_47_14(acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_640_47_15(acc),
            [115, 97, 116, 111, 115, 104, 111] => lookup_640_47_16(acc),
            [115, 101, 116, 111, 117, 99, 104, 105] => lookup_640_47_17(acc),
            [115, 104, 105, 110, 106, 111] => lookup_640_47_18(acc),
            [115, 104, 111, 111] => lookup_640_47_19(acc),
            [115, 111, 106, 97] => lookup_640_47_20(acc),
            [116, 97, 107, 97, 104, 97, 115, 104, 105] => lookup_640_47_21(acc),
            [116, 97, 109, 97, 110, 111] => lookup_640_47_22(acc),
            [116, 115, 117, 121, 97, 109, 97] => lookup_640_47_23(acc),
            [119, 97, 107, 101] => lookup_640_47_24(acc),
            [121, 97, 107, 97, 103, 101] => lookup_640_47_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_48_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_48<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 103, 117, 110, 105] => lookup_640_48_0(acc),
            [103, 105, 110, 111, 119, 97, 110] => lookup_640_48_1(acc),
            [103, 105, 110, 111, 122, 97] => lookup_640_48_2(acc),
            [103, 117, 115, 104, 105, 107, 97, 109, 105] => lookup_640_48_3(acc),
            [104, 97, 101, 98, 97, 114, 117] => lookup_640_48_4(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_640_48_5(acc),
            [104, 105, 114, 97, 114, 97] => lookup_640_48_6(acc),
            [105, 104, 101, 121, 97] => lookup_640_48_7(acc),
            [105, 115, 104, 105, 103, 97, 107, 105] => lookup_640_48_8(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_640_48_9(acc),
            [105, 116, 111, 109, 97, 110] => lookup_640_48_10(acc),
            [105, 122, 101, 110, 97] => lookup_640_48_11(acc),
            [107, 97, 100, 101, 110, 97] => lookup_640_48_12(acc),
            [107, 105, 110] => lookup_640_48_13(acc),
            [107, 105, 116, 97, 100, 97, 105, 116, 111] => lookup_640_48_14(acc),
            [107, 105, 116, 97, 110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => {
                lookup_640_48_15(acc)
            }
            [107, 117, 109, 101, 106, 105, 109, 97] => lookup_640_48_16(acc),
            [107, 117, 110, 105, 103, 97, 109, 105] => lookup_640_48_17(acc),
            [109, 105, 110, 97, 109, 105, 100, 97, 105, 116, 111] => lookup_640_48_18(acc),
            [109, 111, 116, 111, 98, 117] => lookup_640_48_19(acc),
            [110, 97, 103, 111] => lookup_640_48_20(acc),
            [110, 97, 104, 97] => lookup_640_48_21(acc),
            [110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => lookup_640_48_22(acc),
            [110, 97, 107, 105, 106, 105, 110] => lookup_640_48_23(acc),
            [110, 97, 110, 106, 111] => lookup_640_48_24(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_640_48_25(acc),
            [111, 103, 105, 109, 105] => lookup_640_48_26(acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_640_48_27(acc),
            [111, 110, 110, 97] => lookup_640_48_28(acc),
            [115, 104, 105, 109, 111, 106, 105] => lookup_640_48_29(acc),
            [116, 97, 107, 101, 116, 111, 109, 105] => lookup_640_48_30(acc),
            [116, 97, 114, 97, 109, 97] => lookup_640_48_31(acc),
            [116, 111, 107, 97, 115, 104, 105, 107, 105] => lookup_640_48_32(acc),
            [116, 111, 109, 105, 103, 117, 115, 117, 107, 117] => lookup_640_48_33(acc),
            [116, 111, 110, 97, 107, 105] => lookup_640_48_34(acc),
            [117, 114, 97, 115, 111, 101] => lookup_640_48_35(acc),
            [117, 114, 117, 109, 97] => lookup_640_48_36(acc),
            [121, 97, 101, 115, 101] => lookup_640_48_37(acc),
            [121, 111, 109, 105, 116, 97, 110] => lookup_640_48_38(acc),
            [121, 111, 110, 97, 98, 97, 114, 117] => lookup_640_48_39(acc),
            [121, 111, 110, 97, 103, 117, 110, 105] => lookup_640_48_40(acc),
            [122, 97, 109, 97, 109, 105] => lookup_640_48_41(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_50<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 101, 110, 111] => lookup_640_50_0(acc),
            [99, 104, 105, 104, 97, 121, 97, 97, 107, 97, 115, 97, 107, 97] => lookup_640_50_1(acc),
            [99, 104, 117, 111] => lookup_640_50_2(acc),
            [100, 97, 105, 116, 111] => lookup_640_50_3(acc),
            [102, 117, 106, 105, 105, 100, 101, 114, 97] => lookup_640_50_4(acc),
            [104, 97, 98, 105, 107, 105, 110, 111] => lookup_640_50_5(acc),
            [104, 97, 110, 110, 97, 110] => lookup_640_50_6(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 115, 97, 107, 97] => lookup_640_50_7(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 117, 109, 105, 121, 111, 115, 104, 105] => {
                lookup_640_50_8(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 100, 111, 103, 97, 119, 97] => {
                lookup_640_50_9(acc)
            }
            [104, 105, 114, 97, 107, 97, 116, 97] => lookup_640_50_10(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_640_50_11(acc),
            [105, 107, 101, 100, 97] => lookup_640_50_12(acc),
            [105, 122, 117, 109, 105] => lookup_640_50_13(acc),
            [105, 122, 117, 109, 105, 111, 116, 115, 117] => lookup_640_50_14(acc),
            [105, 122, 117, 109, 105, 115, 97, 110, 111] => lookup_640_50_15(acc),
            [107, 97, 100, 111, 109, 97] => lookup_640_50_16(acc),
            [107, 97, 105, 122, 117, 107, 97] => lookup_640_50_17(acc),
            [107, 97, 110, 97, 110] => lookup_640_50_18(acc),
            [107, 97, 115, 104, 105, 119, 97, 114, 97] => lookup_640_50_19(acc),
            [107, 97, 116, 97, 110, 111] => lookup_640_50_20(acc),
            [107, 97, 119, 97, 99, 104, 105, 110, 97, 103, 97, 110, 111] => lookup_640_50_21(acc),
            [107, 105, 115, 104, 105, 119, 97, 100, 97] => lookup_640_50_22(acc),
            [107, 105, 116, 97] => lookup_640_50_23(acc),
            [107, 117, 109, 97, 116, 111, 114, 105] => lookup_640_50_24(acc),
            [109, 97, 116, 115, 117, 98, 97, 114, 97] => lookup_640_50_25(acc),
            [109, 105, 110, 97, 116, 111] => lookup_640_50_26(acc),
            [109, 105, 110, 111, 104] => lookup_640_50_27(acc),
            [109, 105, 115, 97, 107, 105] => lookup_640_50_28(acc),
            [109, 111, 114, 105, 103, 117, 99, 104, 105] => lookup_640_50_29(acc),
            [110, 101, 121, 97, 103, 97, 119, 97] => lookup_640_50_30(acc),
            [110, 105, 115, 104, 105] => lookup_640_50_31(acc),
            [110, 111, 115, 101] => lookup_640_50_32(acc),
            [111, 115, 97, 107, 97, 115, 97, 121, 97, 109, 97] => lookup_640_50_33(acc),
            [115, 97, 107, 97, 105] => lookup_640_50_34(acc),
            [115, 97, 121, 97, 109, 97] => lookup_640_50_35(acc),
            [115, 101, 110, 110, 97, 110] => lookup_640_50_36(acc),
            [115, 101, 116, 116, 115, 117] => lookup_640_50_37(acc),
            [115, 104, 105, 106, 111, 110, 97, 119, 97, 116, 101] => lookup_640_50_38(acc),
            [115, 104, 105, 109, 97, 109, 111, 116, 111] => lookup_640_50_39(acc),
            [115, 117, 105, 116, 97] => lookup_640_50_40(acc),
            [116, 97, 100, 97, 111, 107, 97] => lookup_640_50_41(acc),
            [116, 97, 105, 115, 104, 105] => lookup_640_50_42(acc),
            [116, 97, 106, 105, 114, 105] => lookup_640_50_43(acc),
            [116, 97, 107, 97, 105, 115, 104, 105] => lookup_640_50_44(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_640_50_45(acc),
            [116, 111, 110, 100, 97, 98, 97, 121, 97, 115, 104, 105] => lookup_640_50_46(acc),
            [116, 111, 121, 111, 110, 97, 107, 97] => lookup_640_50_47(acc),
            [116, 111, 121, 111, 110, 111] => lookup_640_50_48(acc),
            [121, 97, 111] => lookup_640_50_49(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_51_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_51<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 105, 97, 107, 101] => lookup_640_51_0(acc),
            [97, 114, 105, 116, 97] => lookup_640_51_1(acc),
            [102, 117, 107, 117, 100, 111, 109, 105] => lookup_640_51_2(acc),
            [103, 101, 110, 107, 97, 105] => lookup_640_51_3(acc),
            [104, 97, 109, 97, 116, 97, 109, 97] => lookup_640_51_4(acc),
            [104, 105, 122, 101, 110] => lookup_640_51_5(acc),
            [105, 109, 97, 114, 105] => lookup_640_51_6(acc),
            [107, 97, 109, 105, 109, 105, 110, 101] => lookup_640_51_7(acc),
            [107, 97, 110, 122, 97, 107, 105] => lookup_640_51_8(acc),
            [107, 97, 114, 97, 116, 115, 117] => lookup_640_51_9(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_640_51_10(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_640_51_11(acc),
            [107, 105, 116, 97, 104, 97, 116, 97] => lookup_640_51_12(acc),
            [107, 105, 121, 97, 109, 97] => lookup_640_51_13(acc),
            [107, 111, 117, 104, 111, 107, 117] => lookup_640_51_14(acc),
            [107, 121, 117, 114, 97, 103, 105] => lookup_640_51_15(acc),
            [110, 105, 115, 104, 105, 97, 114, 105, 116, 97] => lookup_640_51_16(acc),
            [111, 103, 105] => lookup_640_51_17(acc),
            [111, 109, 97, 99, 104, 105] => lookup_640_51_18(acc),
            [111, 117, 99, 104, 105] => lookup_640_51_19(acc),
            [115, 97, 103, 97] => lookup_640_51_20(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_640_51_21(acc),
            [116, 97, 107, 117] => lookup_640_51_22(acc),
            [116, 97, 114, 97] => lookup_640_51_23(acc),
            [116, 111, 115, 117] => lookup_640_51_24(acc),
            [121, 111, 115, 104, 105, 110, 111, 103, 97, 114, 105] => lookup_640_51_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_52<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 97, 107, 97, 119, 97] => lookup_640_52_0(acc),
            [97, 115, 97, 107, 97] => lookup_640_52_1(acc),
            [99, 104, 105, 99, 104, 105, 98, 117] => lookup_640_52_2(acc),
            [102, 117, 106, 105, 109, 105] => lookup_640_52_3(acc),
            [102, 117, 106, 105, 109, 105, 110, 111] => lookup_640_52_4(acc),
            [102, 117, 107, 97, 121, 97] => lookup_640_52_5(acc),
            [104, 97, 110, 110, 111] => lookup_640_52_6(acc),
            [104, 97, 110, 121, 117] => lookup_640_52_7(acc),
            [104, 97, 115, 117, 100, 97] => lookup_640_52_8(acc),
            [104, 97, 116, 111, 103, 97, 121, 97] => lookup_640_52_9(acc),
            [104, 97, 116, 111, 121, 97, 109, 97] => lookup_640_52_10(acc),
            [104, 105, 100, 97, 107, 97] => lookup_640_52_11(acc),
            [104, 105, 103, 97, 115, 104, 105, 99, 104, 105, 99, 104, 105, 98, 117] => {
                lookup_640_52_12(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 121, 97, 109, 97] => {
                lookup_640_52_13(acc)
            }
            [104, 111, 110, 106, 111] => lookup_640_52_14(acc),
            [105, 110, 97] => lookup_640_52_15(acc),
            [105, 114, 117, 109, 97] => lookup_640_52_16(acc),
            [105, 119, 97, 116, 115, 117, 107, 105] => lookup_640_52_17(acc),
            [107, 97, 109, 105, 105, 122, 117, 109, 105] => lookup_640_52_18(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_640_52_19(acc),
            [107, 97, 109, 105, 115, 97, 116, 111] => lookup_640_52_20(acc),
            [107, 97, 115, 117, 107, 97, 98, 101] => lookup_640_52_21(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_640_52_22(acc),
            [107, 97, 119, 97, 103, 117, 99, 104, 105] => lookup_640_52_23(acc),
            [107, 97, 119, 97, 106, 105, 109, 97] => lookup_640_52_24(acc),
            [107, 97, 122, 111] => lookup_640_52_25(acc),
            [107, 105, 116, 97, 109, 111, 116, 111] => lookup_640_52_26(acc),
            [107, 111, 115, 104, 105, 103, 97, 121, 97] => lookup_640_52_27(acc),
            [107, 111, 117, 110, 111, 115, 117] => lookup_640_52_28(acc),
            [107, 117, 107, 105] => lookup_640_52_29(acc),
            [107, 117, 109, 97, 103, 97, 121, 97] => lookup_640_52_30(acc),
            [109, 97, 116, 115, 117, 98, 117, 115, 104, 105] => lookup_640_52_31(acc),
            [109, 105, 110, 97, 110, 111] => lookup_640_52_32(acc),
            [109, 105, 115, 97, 116, 111] => lookup_640_52_33(acc),
            [109, 105, 121, 97, 115, 104, 105, 114, 111] => lookup_640_52_34(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_640_52_35(acc),
            [109, 111, 114, 111, 121, 97, 109, 97] => lookup_640_52_36(acc),
            [110, 97, 103, 97, 116, 111, 114, 111] => lookup_640_52_37(acc),
            [110, 97, 109, 101, 103, 97, 119, 97] => lookup_640_52_38(acc),
            [110, 105, 105, 122, 97] => lookup_640_52_39(acc),
            [111, 103, 97, 110, 111] => lookup_640_52_40(acc),
            [111, 103, 97, 119, 97] => lookup_640_52_41(acc),
            [111, 103, 111, 115, 101] => lookup_640_52_42(acc),
            [111, 107, 101, 103, 97, 119, 97] => lookup_640_52_43(acc),
            [111, 109, 105, 121, 97] => lookup_640_52_44(acc),
            [111, 116, 97, 107, 105] => lookup_640_52_45(acc),
            [114, 97, 110, 122, 97, 110] => lookup_640_52_46(acc),
            [114, 121, 111, 107, 97, 109, 105] => lookup_640_52_47(acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_640_52_48(acc),
            [115, 97, 107, 97, 100, 111] => lookup_640_52_49(acc),
            [115, 97, 116, 116, 101] => lookup_640_52_50(acc),
            [115, 97, 121, 97, 109, 97] => lookup_640_52_51(acc),
            [115, 104, 105, 107, 105] => lookup_640_52_52(acc),
            [115, 104, 105, 114, 97, 111, 107, 97] => lookup_640_52_53(acc),
            [115, 111, 107, 97] => lookup_640_52_54(acc),
            [115, 117, 103, 105, 116, 111] => lookup_640_52_55(acc),
            [116, 111, 100, 97] => lookup_640_52_56(acc),
            [116, 111, 107, 105, 103, 97, 119, 97] => lookup_640_52_57(acc),
            [116, 111, 107, 111, 114, 111, 122, 97, 119, 97] => lookup_640_52_58(acc),
            [116, 115, 117, 114, 117, 103, 97, 115, 104, 105, 109, 97] => lookup_640_52_59(acc),
            [117, 114, 97, 119, 97] => lookup_640_52_60(acc),
            [119, 97, 114, 97, 98, 105] => lookup_640_52_61(acc),
            [121, 97, 115, 104, 105, 111] => lookup_640_52_62(acc),
            [121, 111, 107, 111, 122, 101] => lookup_640_52_63(acc),
            [121, 111, 110, 111] => lookup_640_52_64(acc),
            [121, 111, 114, 105, 105] => lookup_640_52_65(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_640_52_66(acc),
            [121, 111, 115, 104, 105, 107, 97, 119, 97] => lookup_640_52_67(acc),
            [121, 111, 115, 104, 105, 109, 105] => lookup_640_52_68(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_53_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_53_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_53<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_640_53_0(acc),
            wild => lookup_640_53_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_640_54_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_54_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_54<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_640_54_0(acc),
            wild => lookup_640_54_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_640_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 115, 104, 111] => lookup_640_55_0(acc),
            [103, 97, 109, 111] => lookup_640_55_1(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 109, 105] => lookup_640_55_2(acc),
            [104, 105, 107, 111, 110, 101] => lookup_640_55_3(acc),
            [107, 111, 107, 97] => lookup_640_55_4(acc),
            [107, 111, 110, 97, 110] => lookup_640_55_5(acc),
            [107, 111, 115, 101, 105] => lookup_640_55_6(acc),
            [107, 111, 116, 111] => lookup_640_55_7(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_640_55_8(acc),
            [109, 97, 105, 98, 97, 114, 97] => lookup_640_55_9(acc),
            [109, 111, 114, 105, 121, 97, 109, 97] => lookup_640_55_10(acc),
            [110, 97, 103, 97, 104, 97, 109, 97] => lookup_640_55_11(acc),
            [110, 105, 115, 104, 105, 97, 122, 97, 105] => lookup_640_55_12(acc),
            [110, 111, 116, 111, 103, 97, 119, 97] => lookup_640_55_13(acc),
            [111, 109, 105, 104, 97, 99, 104, 105, 109, 97, 110] => lookup_640_55_14(acc),
            [111, 116, 115, 117] => lookup_640_55_15(acc),
            [114, 105, 116, 116, 111] => lookup_640_55_16(acc),
            [114, 121, 117, 111, 104] => lookup_640_55_17(acc),
            [116, 97, 107, 97, 115, 104, 105, 109, 97] => lookup_640_55_18(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_640_55_19(acc),
            [116, 111, 114, 97, 104, 105, 109, 101] => lookup_640_55_20(acc),
            [116, 111, 121, 111, 115, 97, 116, 111] => lookup_640_55_21(acc),
            [121, 97, 115, 117] => lookup_640_55_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_56_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_56<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 97, 103, 105] => lookup_640_56_0(acc),
            [97, 109, 97] => lookup_640_56_1(acc),
            [103, 111, 116, 115, 117] => lookup_640_56_2(acc),
            [104, 97, 109, 97, 100, 97] => lookup_640_56_3(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117, 109, 111] => lookup_640_56_4(acc),
            [104, 105, 107, 97, 119, 97] => lookup_640_56_5(acc),
            [104, 105, 107, 105, 109, 105] => lookup_640_56_6(acc),
            [105, 122, 117, 109, 111] => lookup_640_56_7(acc),
            [107, 97, 107, 105, 110, 111, 107, 105] => lookup_640_56_8(acc),
            [109, 97, 115, 117, 100, 97] => lookup_640_56_9(acc),
            [109, 97, 116, 115, 117, 101] => lookup_640_56_10(acc),
            [109, 105, 115, 97, 116, 111] => lookup_640_56_11(acc),
            [110, 105, 115, 104, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_640_56_12(acc),
            [111, 104, 100, 97] => lookup_640_56_13(acc),
            [111, 107, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_640_56_14(acc),
            [111, 107, 117, 105, 122, 117, 109, 111] => lookup_640_56_15(acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_640_56_16(acc),
            [116, 97, 109, 97, 121, 117] => lookup_640_56_17(acc),
            [116, 115, 117, 119, 97, 110, 111] => lookup_640_56_18(acc),
            [117, 110, 110, 97, 110] => lookup_640_56_19(acc),
            [121, 97, 107, 117, 109, 111] => lookup_640_56_20(acc),
            [121, 97, 115, 117, 103, 105] => lookup_640_56_21(acc),
            [121, 97, 116, 115, 117, 107, 97] => lookup_640_56_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_57_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_57<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 97, 105] => lookup_640_57_0(acc),
            [97, 116, 97, 109, 105] => lookup_640_57_1(acc),
            [102, 117, 106, 105] => lookup_640_57_2(acc),
            [102, 117, 106, 105, 101, 100, 97] => lookup_640_57_3(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_640_57_4(acc),
            [102, 117, 106, 105, 110, 111, 109, 105, 121, 97] => lookup_640_57_5(acc),
            [102, 117, 107, 117, 114, 111, 105] => lookup_640_57_6(acc),
            [103, 111, 116, 101, 109, 98, 97] => lookup_640_57_7(acc),
            [104, 97, 105, 98, 97, 114, 97] => lookup_640_57_8(acc),
            [104, 97, 109, 97, 109, 97, 116, 115, 117] => lookup_640_57_9(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117] => lookup_640_57_10(acc),
            [105, 116, 111] => lookup_640_57_11(acc),
            [105, 119, 97, 116, 97] => lookup_640_57_12(acc),
            [105, 122, 117] => lookup_640_57_13(acc),
            [105, 122, 117, 110, 111, 107, 117, 110, 105] => lookup_640_57_14(acc),
            [107, 97, 107, 101, 103, 97, 119, 97] => lookup_640_57_15(acc),
            [107, 97, 110, 110, 97, 109, 105] => lookup_640_57_16(acc),
            [107, 97, 119, 97, 110, 101, 104, 111, 110] => lookup_640_57_17(acc),
            [107, 97, 119, 97, 122, 117] => lookup_640_57_18(acc),
            [107, 105, 107, 117, 103, 97, 119, 97] => lookup_640_57_19(acc),
            [107, 111, 115, 97, 105] => lookup_640_57_20(acc),
            [109, 97, 107, 105, 110, 111, 104, 97, 114, 97] => lookup_640_57_21(acc),
            [109, 97, 116, 115, 117, 122, 97, 107, 105] => lookup_640_57_22(acc),
            [109, 105, 110, 97, 109, 105, 105, 122, 117] => lookup_640_57_23(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_640_57_24(acc),
            [109, 111, 114, 105, 109, 97, 99, 104, 105] => lookup_640_57_25(acc),
            [110, 105, 115, 104, 105, 105, 122, 117] => lookup_640_57_26(acc),
            [110, 117, 109, 97, 122, 117] => lookup_640_57_27(acc),
            [111, 109, 97, 101, 122, 97, 107, 105] => lookup_640_57_28(acc),
            [115, 104, 105, 109, 97, 100, 97] => lookup_640_57_29(acc),
            [115, 104, 105, 109, 105, 122, 117] => lookup_640_57_30(acc),
            [115, 104, 105, 109, 111, 100, 97] => lookup_640_57_31(acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_640_57_32(acc),
            [115, 117, 115, 111, 110, 111] => lookup_640_57_33(acc),
            [121, 97, 105, 122, 117] => lookup_640_57_34(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_640_57_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_640_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_640_60_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_60<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 104, 105, 107, 97, 103, 97] => lookup_640_60_0(acc),
            [98, 97, 116, 111] => lookup_640_60_1(acc),
            [104, 97, 103, 97] => lookup_640_60_2(acc),
            [105, 99, 104, 105, 107, 97, 105] => lookup_640_60_3(acc),
            [105, 119, 97, 102, 117, 110, 101] => lookup_640_60_4(acc),
            [107, 97, 109, 105, 110, 111, 107, 97, 119, 97] => lookup_640_60_5(acc),
            [107, 97, 110, 117, 109, 97] => lookup_640_60_6(acc),
            [107, 97, 114, 97, 115, 117, 121, 97, 109, 97] => lookup_640_60_7(acc),
            [107, 117, 114, 111, 105, 115, 111] => lookup_640_60_8(acc),
            [109, 97, 115, 104, 105, 107, 111] => lookup_640_60_9(acc),
            [109, 105, 98, 117] => lookup_640_60_10(acc),
            [109, 111, 107, 97] => lookup_640_60_11(acc),
            [109, 111, 116, 101, 103, 105] => lookup_640_60_12(acc),
            [110, 97, 115, 117] => lookup_640_60_13(acc),
            [110, 97, 115, 117, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_640_60_14(acc),
            [110, 105, 107, 107, 111] => lookup_640_60_15(acc),
            [110, 105, 115, 104, 105, 107, 97, 116, 97] => lookup_640_60_16(acc),
            [110, 111, 103, 105] => lookup_640_60_17(acc),
            [111, 104, 105, 114, 97] => lookup_640_60_18(acc),
            [111, 104, 116, 97, 119, 97, 114, 97] => lookup_640_60_19(acc),
            [111, 121, 97, 109, 97] => lookup_640_60_20(acc),
            [115, 97, 107, 117, 114, 97] => lookup_640_60_21(acc),
            [115, 97, 110, 111] => lookup_640_60_22(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 107, 101] => lookup_640_60_23(acc),
            [115, 104, 105, 111, 121, 97] => lookup_640_60_24(acc),
            [116, 97, 107, 97, 110, 101, 122, 97, 119, 97] => lookup_640_60_25(acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_640_60_26(acc),
            [116, 115, 117, 103, 97] => lookup_640_60_27(acc),
            [117, 106, 105, 105, 101] => lookup_640_60_28(acc),
            [117, 116, 115, 117, 110, 111, 109, 105, 121, 97] => lookup_640_60_29(acc),
            [121, 97, 105, 116, 97] => lookup_640_60_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_61_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_61<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 122, 117, 109, 105] => lookup_640_61_0(acc),
            [97, 110, 97, 110] => lookup_640_61_1(acc),
            [105, 99, 104, 105, 98, 97] => lookup_640_61_2(acc),
            [105, 116, 97, 110, 111] => lookup_640_61_3(acc),
            [107, 97, 105, 110, 97, 110] => lookup_640_61_4(acc),
            [107, 111, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_640_61_5(acc),
            [109, 97, 116, 115, 117, 115, 104, 105, 103, 101] => lookup_640_61_6(acc),
            [109, 105, 109, 97] => lookup_640_61_7(acc),
            [109, 105, 110, 97, 109, 105] => lookup_640_61_8(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_640_61_9(acc),
            [109, 117, 103, 105] => lookup_640_61_10(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_640_61_11(acc),
            [110, 97, 114, 117, 116, 111] => lookup_640_61_12(acc),
            [115, 97, 110, 97, 103, 111, 99, 104, 105] => lookup_640_61_13(acc),
            [115, 104, 105, 115, 104, 105, 107, 117, 105] => lookup_640_61_14(acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_640_61_15(acc),
            [119, 97, 106, 105, 107, 105] => lookup_640_61_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_62_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_62<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 97, 99, 104, 105] => lookup_640_62_0(acc),
            [97, 107, 105, 114, 117, 110, 111] => lookup_640_62_1(acc),
            [97, 107, 105, 115, 104, 105, 109, 97] => lookup_640_62_2(acc),
            [97, 111, 103, 97, 115, 104, 105, 109, 97] => lookup_640_62_3(acc),
            [97, 114, 97, 107, 97, 119, 97] => lookup_640_62_4(acc),
            [98, 117, 110, 107, 121, 111] => lookup_640_62_5(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_640_62_6(acc),
            [99, 104, 111, 102, 117] => lookup_640_62_7(acc),
            [99, 104, 117, 111] => lookup_640_62_8(acc),
            [101, 100, 111, 103, 97, 119, 97] => lookup_640_62_9(acc),
            [102, 117, 99, 104, 117] => lookup_640_62_10(acc),
            [102, 117, 115, 115, 97] => lookup_640_62_11(acc),
            [104, 97, 99, 104, 105, 106, 111] => lookup_640_62_12(acc),
            [104, 97, 99, 104, 105, 111, 106, 105] => lookup_640_62_13(acc),
            [104, 97, 109, 117, 114, 97] => lookup_640_62_14(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 117, 114, 117, 109, 101] => {
                lookup_640_62_15(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_640_62_16(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97, 116, 111] => lookup_640_62_17(acc),
            [104, 105, 110, 111] => lookup_640_62_18(acc),
            [104, 105, 110, 111, 100, 101] => lookup_640_62_19(acc),
            [104, 105, 110, 111, 104, 97, 114, 97] => lookup_640_62_20(acc),
            [105, 110, 97, 103, 105] => lookup_640_62_21(acc),
            [105, 116, 97, 98, 97, 115, 104, 105] => lookup_640_62_22(acc),
            [107, 97, 116, 115, 117, 115, 104, 105, 107, 97] => lookup_640_62_23(acc),
            [107, 105, 116, 97] => lookup_640_62_24(acc),
            [107, 105, 121, 111, 115, 101] => lookup_640_62_25(acc),
            [107, 111, 100, 97, 105, 114, 97] => lookup_640_62_26(acc),
            [107, 111, 103, 97, 110, 101, 105] => lookup_640_62_27(acc),
            [107, 111, 107, 117, 98, 117, 110, 106, 105] => lookup_640_62_28(acc),
            [107, 111, 109, 97, 101] => lookup_640_62_29(acc),
            [107, 111, 116, 111] => lookup_640_62_30(acc),
            [107, 111, 117, 122, 117, 115, 104, 105, 109, 97] => lookup_640_62_31(acc),
            [107, 117, 110, 105, 116, 97, 99, 104, 105] => lookup_640_62_32(acc),
            [109, 97, 99, 104, 105, 100, 97] => lookup_640_62_33(acc),
            [109, 101, 103, 117, 114, 111] => lookup_640_62_34(acc),
            [109, 105, 110, 97, 116, 111] => lookup_640_62_35(acc),
            [109, 105, 116, 97, 107, 97] => lookup_640_62_36(acc),
            [109, 105, 122, 117, 104, 111] => lookup_640_62_37(acc),
            [109, 117, 115, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_640_62_38(acc)
            }
            [109, 117, 115, 97, 115, 104, 105, 110, 111] => lookup_640_62_39(acc),
            [110, 97, 107, 97, 110, 111] => lookup_640_62_40(acc),
            [110, 101, 114, 105, 109, 97] => lookup_640_62_41(acc),
            [111, 103, 97, 115, 97, 119, 97, 114, 97] => lookup_640_62_42(acc),
            [111, 107, 117, 116, 97, 109, 97] => lookup_640_62_43(acc),
            [111, 109, 101] => lookup_640_62_44(acc),
            [111, 115, 104, 105, 109, 97] => lookup_640_62_45(acc),
            [111, 116, 97] => lookup_640_62_46(acc),
            [115, 101, 116, 97, 103, 97, 121, 97] => lookup_640_62_47(acc),
            [115, 104, 105, 98, 117, 121, 97] => lookup_640_62_48(acc),
            [115, 104, 105, 110, 97, 103, 97, 119, 97] => lookup_640_62_49(acc),
            [115, 104, 105, 110, 106, 117, 107, 117] => lookup_640_62_50(acc),
            [115, 117, 103, 105, 110, 97, 109, 105] => lookup_640_62_51(acc),
            [115, 117, 109, 105, 100, 97] => lookup_640_62_52(acc),
            [116, 97, 99, 104, 105, 107, 97, 119, 97] => lookup_640_62_53(acc),
            [116, 97, 105, 116, 111] => lookup_640_62_54(acc),
            [116, 97, 109, 97] => lookup_640_62_55(acc),
            [116, 111, 115, 104, 105, 109, 97] => lookup_640_62_56(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_63_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_63_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_63_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_63_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_63_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_63_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_63_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_63_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_63_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_63_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_63<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 105, 122, 117] => lookup_640_63_0(acc),
            [104, 105, 110, 111] => lookup_640_63_1(acc),
            [107, 97, 119, 97, 104, 97, 114, 97] => lookup_640_63_2(acc),
            [107, 111, 103, 101] => lookup_640_63_3(acc),
            [107, 111, 116, 111, 117, 114, 97] => lookup_640_63_4(acc),
            [109, 105, 115, 97, 115, 97] => lookup_640_63_5(acc),
            [110, 97, 110, 98, 117] => lookup_640_63_6(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_640_63_7(acc),
            [115, 97, 107, 97, 105, 109, 105, 110, 97, 116, 111] => lookup_640_63_8(acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_640_63_9(acc),
            [119, 97, 107, 97, 115, 97] => lookup_640_63_10(acc),
            [121, 97, 122, 117] => lookup_640_63_11(acc),
            [121, 111, 110, 97, 103, 111] => lookup_640_63_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_64<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 104, 105] => lookup_640_64_0(acc),
            [102, 117, 99, 104, 117] => lookup_640_64_1(acc),
            [102, 117, 107, 117, 109, 105, 116, 115, 117] => lookup_640_64_2(acc),
            [102, 117, 110, 97, 104, 97, 115, 104, 105] => lookup_640_64_3(acc),
            [104, 105, 109, 105] => lookup_640_64_4(acc),
            [105, 109, 105, 122, 117] => lookup_640_64_5(acc),
            [105, 110, 97, 109, 105] => lookup_640_64_6(acc),
            [106, 111, 104, 97, 110, 97] => lookup_640_64_7(acc),
            [107, 97, 109, 105, 105, 99, 104, 105] => lookup_640_64_8(acc),
            [107, 117, 114, 111, 98, 101] => lookup_640_64_9(acc),
            [110, 97, 107, 97, 110, 105, 105, 107, 97, 119, 97] => lookup_640_64_10(acc),
            [110, 97, 109, 101, 114, 105, 107, 97, 119, 97] => lookup_640_64_11(acc),
            [110, 97, 110, 116, 111] => lookup_640_64_12(acc),
            [110, 121, 117, 122, 101, 110] => lookup_640_64_13(acc),
            [111, 121, 97, 98, 101] => lookup_640_64_14(acc),
            [116, 97, 105, 114, 97] => lookup_640_64_15(acc),
            [116, 97, 107, 97, 111, 107, 97] => lookup_640_64_16(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_640_64_17(acc),
            [116, 111, 103, 97] => lookup_640_64_18(acc),
            [116, 111, 110, 97, 109, 105] => lookup_640_64_19(acc),
            [116, 111, 121, 97, 109, 97] => lookup_640_64_20(acc),
            [117, 110, 97, 122, 117, 107, 105] => lookup_640_64_21(acc),
            [117, 111, 122, 117] => lookup_640_64_22(acc),
            [121, 97, 109, 97, 100, 97] => lookup_640_64_23(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_640_66_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_66<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 105, 100, 97] => lookup_640_66_0(acc),
            [97, 114, 105, 100, 97, 103, 97, 119, 97] => lookup_640_66_1(acc),
            [103, 111, 98, 111] => lookup_640_66_2(acc),
            [104, 97, 115, 104, 105, 109, 111, 116, 111] => lookup_640_66_3(acc),
            [104, 105, 100, 97, 107, 97] => lookup_640_66_4(acc),
            [104, 105, 114, 111, 103, 97, 119, 97] => lookup_640_66_5(acc),
            [105, 110, 97, 109, 105] => lookup_640_66_6(acc),
            [105, 119, 97, 100, 101] => lookup_640_66_7(acc),
            [107, 97, 105, 110, 97, 110] => lookup_640_66_8(acc),
            [107, 97, 109, 105, 116, 111, 110, 100, 97] => lookup_640_66_9(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_640_66_10(acc),
            [107, 105, 109, 105, 110, 111] => lookup_640_66_11(acc),
            [107, 105, 110, 111, 107, 97, 119, 97] => lookup_640_66_12(acc),
            [107, 105, 116, 97, 121, 97, 109, 97] => lookup_640_66_13(acc),
            [107, 111, 121, 97] => lookup_640_66_14(acc),
            [107, 111, 122, 97] => lookup_640_66_15(acc),
            [107, 111, 122, 97, 103, 97, 119, 97] => lookup_640_66_16(acc),
            [107, 117, 100, 111, 121, 97, 109, 97] => lookup_640_66_17(acc),
            [107, 117, 115, 104, 105, 109, 111, 116, 111] => lookup_640_66_18(acc),
            [109, 105, 104, 97, 109, 97] => lookup_640_66_19(acc),
            [109, 105, 115, 97, 116, 111] => lookup_640_66_20(acc),
            [110, 97, 99, 104, 105, 107, 97, 116, 115, 117, 117, 114, 97] => lookup_640_66_21(acc),
            [115, 104, 105, 110, 103, 117] => lookup_640_66_22(acc),
            [115, 104, 105, 114, 97, 104, 97, 109, 97] => lookup_640_66_23(acc),
            [116, 97, 105, 106, 105] => lookup_640_66_24(acc),
            [116, 97, 110, 97, 98, 101] => lookup_640_66_25(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_640_66_26(acc),
            [121, 117, 97, 115, 97] => lookup_640_66_27(acc),
            [121, 117, 114, 97] => lookup_640_66_28(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_114<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 104, 105] => lookup_640_114_0(acc),
            [102, 117, 110, 97, 103, 97, 116, 97] => lookup_640_114_1(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 101] => lookup_640_114_2(acc),
            [105, 105, 100, 101] => lookup_640_114_3(acc),
            [107, 97, 104, 111, 107, 117] => lookup_640_114_4(acc),
            [107, 97, 109, 105, 110, 111, 121, 97, 109, 97] => lookup_640_114_5(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_640_114_6(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_640_114_7(acc),
            [109, 97, 109, 117, 114, 111, 103, 97, 119, 97] => lookup_640_114_8(acc),
            [109, 105, 107, 97, 119, 97] => lookup_640_114_9(acc),
            [109, 117, 114, 97, 121, 97, 109, 97] => lookup_640_114_10(acc),
            [110, 97, 103, 97, 105] => lookup_640_114_11(acc),
            [110, 97, 107, 97, 121, 97, 109, 97] => lookup_640_114_12(acc),
            [110, 97, 110, 121, 111] => lookup_640_114_13(acc),
            [110, 105, 115, 104, 105, 107, 97, 119, 97] => lookup_640_114_14(acc),
            [111, 98, 97, 110, 97, 122, 97, 119, 97] => lookup_640_114_15(acc),
            [111, 101] => lookup_640_114_16(acc),
            [111, 103, 117, 110, 105] => lookup_640_114_17(acc),
            [111, 104, 107, 117, 114, 97] => lookup_640_114_18(acc),
            [111, 105, 115, 104, 105, 100, 97] => lookup_640_114_19(acc),
            [115, 97, 103, 97, 101] => lookup_640_114_20(acc),
            [115, 97, 107, 97, 116, 97] => lookup_640_114_21(acc),
            [115, 97, 107, 101, 103, 97, 119, 97] => lookup_640_114_22(acc),
            [115, 104, 105, 110, 106, 111] => lookup_640_114_23(acc),
            [115, 104, 105, 114, 97, 116, 97, 107, 97] => lookup_640_114_24(acc),
            [115, 104, 111, 110, 97, 105] => lookup_640_114_25(acc),
            [116, 97, 107, 97, 104, 97, 116, 97] => lookup_640_114_26(acc),
            [116, 101, 110, 100, 111] => lookup_640_114_27(acc),
            [116, 111, 122, 97, 119, 97] => lookup_640_114_28(acc),
            [116, 115, 117, 114, 117, 111, 107, 97] => lookup_640_114_29(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_640_114_30(acc),
            [121, 97, 109, 97, 110, 111, 98, 101] => lookup_640_114_31(acc),
            [121, 111, 110, 101, 122, 97, 119, 97] => lookup_640_114_32(acc),
            [121, 117, 122, 97] => lookup_640_114_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_115_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_115<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 117] => lookup_640_115_0(acc),
            [104, 97, 103, 105] => lookup_640_115_1(acc),
            [104, 105, 107, 97, 114, 105] => lookup_640_115_2(acc),
            [104, 111, 102, 117] => lookup_640_115_3(acc),
            [105, 119, 97, 107, 117, 110, 105] => lookup_640_115_4(acc),
            [107, 117, 100, 97, 109, 97, 116, 115, 117] => lookup_640_115_5(acc),
            [109, 105, 116, 111, 117] => lookup_640_115_6(acc),
            [110, 97, 103, 97, 116, 111] => lookup_640_115_7(acc),
            [111, 115, 104, 105, 109, 97] => lookup_640_115_8(acc),
            [115, 104, 105, 109, 111, 110, 111, 115, 101, 107, 105] => lookup_640_115_9(acc),
            [115, 104, 117, 110, 97, 110] => lookup_640_115_10(acc),
            [116, 97, 98, 117, 115, 101] => lookup_640_115_11(acc),
            [116, 111, 107, 117, 121, 97, 109, 97] => lookup_640_115_12(acc),
            [116, 111, 121, 111, 116, 97] => lookup_640_115_13(acc),
            [117, 98, 101] => lookup_640_115_14(acc),
            [121, 117, 117] => lookup_640_115_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_116_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_116<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 117, 111] => lookup_640_116_0(acc),
            [100, 111, 115, 104, 105] => lookup_640_116_1(acc),
            [102, 117, 101, 102, 117, 107, 105] => lookup_640_116_2(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_640_116_3(acc),
            [102, 117, 106, 105, 107, 97, 119, 97, 103, 117, 99, 104, 105, 107, 111] => {
                lookup_640_116_4(acc)
            }
            [102, 117, 106, 105, 121, 111, 115, 104, 105, 100, 97] => lookup_640_116_5(acc),
            [104, 97, 121, 97, 107, 97, 119, 97] => lookup_640_116_6(acc),
            [104, 111, 107, 117, 116, 111] => lookup_640_116_7(acc),
            [105, 99, 104, 105, 107, 97, 119, 97, 109, 105, 115, 97, 116, 111] => {
                lookup_640_116_8(acc)
            }
            [107, 97, 105] => lookup_640_116_9(acc),
            [107, 111, 102, 117] => lookup_640_116_10(acc),
            [107, 111, 115, 104, 117] => lookup_640_116_11(acc),
            [107, 111, 115, 117, 103, 101] => lookup_640_116_12(acc),
            [109, 105, 110, 97, 109, 105, 45, 97, 108, 112, 115] => lookup_640_116_13(acc),
            [109, 105, 110, 111, 98, 117] => lookup_640_116_14(acc),
            [110, 97, 107, 97, 109, 105, 99, 104, 105] => lookup_640_116_15(acc),
            [110, 97, 110, 98, 117] => lookup_640_116_16(acc),
            [110, 97, 114, 117, 115, 97, 119, 97] => lookup_640_116_17(acc),
            [110, 105, 114, 97, 115, 97, 107, 105] => lookup_640_116_18(acc),
            [110, 105, 115, 104, 105, 107, 97, 116, 115, 117, 114, 97] => lookup_640_116_19(acc),
            [111, 115, 104, 105, 110, 111] => lookup_640_116_20(acc),
            [111, 116, 115, 117, 107, 105] => lookup_640_116_21(acc),
            [115, 104, 111, 119, 97] => lookup_640_116_22(acc),
            [116, 97, 98, 97, 121, 97, 109, 97] => lookup_640_116_23(acc),
            [116, 115, 117, 114, 117] => lookup_640_116_24(acc),
            [117, 101, 110, 111, 104, 97, 114, 97] => lookup_640_116_25(acc),
            [121, 97, 109, 97, 110, 97, 107, 97, 107, 111] => lookup_640_116_26(acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_640_116_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_640_117_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_117_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_117<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_640_117_0(acc),
            wild => lookup_640_117_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_640_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_640_0(acc),
            [97, 100] => lookup_640_1(acc),
            [97, 105, 99, 104, 105] => lookup_640_2(labels, acc),
            [97, 107, 105, 116, 97] => lookup_640_3(labels, acc),
            [97, 111, 109, 111, 114, 105] => lookup_640_4(labels, acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_640_5(acc),
            [98, 117, 121, 115, 104, 111, 112] => lookup_640_6(acc),
            [99, 104, 105, 98, 97] => lookup_640_7(labels, acc),
            [99, 111] => lookup_640_8(acc),
            [101, 100] => lookup_640_9(acc),
            [101, 104, 105, 109, 101] => lookup_640_10(labels, acc),
            [102, 97, 115, 104, 105, 111, 110, 115, 116, 111, 114, 101] => lookup_640_11(acc),
            [102, 117, 107, 117, 105] => lookup_640_12(labels, acc),
            [102, 117, 107, 117, 111, 107, 97] => lookup_640_13(labels, acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_640_14(labels, acc),
            [103, 105, 102, 117] => lookup_640_15(labels, acc),
            [103, 111] => lookup_640_16(acc),
            [103, 114] => lookup_640_17(acc),
            [103, 117, 110, 109, 97] => lookup_640_18(labels, acc),
            [104, 97, 110, 100, 99, 114, 97, 102, 116, 101, 100] => lookup_640_19(acc),
            [104, 105, 114, 111, 115, 104, 105, 109, 97] => lookup_640_20(labels, acc),
            [104, 111, 107, 107, 97, 105, 100, 111] => lookup_640_21(labels, acc),
            [104, 121, 111, 103, 111] => lookup_640_22(labels, acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_640_23(labels, acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_640_24(labels, acc),
            [105, 119, 97, 116, 101] => lookup_640_25(labels, acc),
            [107, 97, 103, 97, 119, 97] => lookup_640_26(labels, acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_640_27(labels, acc),
            [107, 97, 110, 97, 103, 97, 119, 97] => lookup_640_28(labels, acc),
            [107, 97, 119, 97, 105, 105, 115, 104, 111, 112] => lookup_640_29(acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_640_30(info, labels, acc),
            [107, 105, 116, 97, 107, 121, 117, 115, 104, 117] => lookup_640_31(info, labels, acc),
            [107, 111, 98, 101] => lookup_640_32(info, labels, acc),
            [107, 111, 99, 104, 105] => lookup_640_33(labels, acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_640_34(labels, acc),
            [107, 121, 111, 116, 111] => lookup_640_35(labels, acc),
            [108, 103] => lookup_640_36(acc),
            [109, 105, 101] => lookup_640_37(labels, acc),
            [109, 105, 121, 97, 103, 105] => lookup_640_38(labels, acc),
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_640_39(labels, acc),
            [110, 97, 103, 97, 110, 111] => lookup_640_40(labels, acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_640_41(labels, acc),
            [110, 97, 103, 111, 121, 97] => lookup_640_42(info, labels, acc),
            [110, 97, 114, 97] => lookup_640_43(labels, acc),
            [110, 101] => lookup_640_44(labels, acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_640_45(labels, acc),
            [111, 105, 116, 97] => lookup_640_46(labels, acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_640_47(labels, acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_640_48(labels, acc),
            [111, 114] => lookup_640_49(acc),
            [111, 115, 97, 107, 97] => lookup_640_50(labels, acc),
            [115, 97, 103, 97] => lookup_640_51(labels, acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_640_52(labels, acc),
            [115, 97, 112, 112, 111, 114, 111] => lookup_640_53(info, labels, acc),
            [115, 101, 110, 100, 97, 105] => lookup_640_54(info, labels, acc),
            [115, 104, 105, 103, 97] => lookup_640_55(labels, acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_640_56(labels, acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_640_57(labels, acc),
            [115, 117, 112, 101, 114, 115, 97, 108, 101] => lookup_640_58(acc),
            [116, 104, 101, 115, 104, 111, 112] => lookup_640_59(acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_640_60(labels, acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_640_61(labels, acc),
            [116, 111, 107, 121, 111] => lookup_640_62(labels, acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_640_63(labels, acc),
            [116, 111, 121, 97, 109, 97] => lookup_640_64(labels, acc),
            [117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_640_65(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_640_66(labels, acc),
            [120, 110, 45, 45, 48, 116, 114, 113, 55, 112, 55, 110, 110] => lookup_640_67(acc),
            [120, 110, 45, 45, 49, 99, 116, 119, 111] => lookup_640_68(acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 48, 51, 110] => lookup_640_69(acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 55, 49, 100] => lookup_640_70(acc),
            [120, 110, 45, 45, 50, 109, 52, 97, 49, 53, 101] => lookup_640_71(acc),
            [120, 110, 45, 45, 51, 50, 118, 112, 51, 48, 104] => lookup_640_72(acc),
            [120, 110, 45, 45, 52, 105, 116, 49, 54, 56, 100] => lookup_640_73(acc),
            [120, 110, 45, 45, 52, 105, 116, 55, 57, 55, 107] => lookup_640_74(acc),
            [120, 110, 45, 45, 52, 112, 118, 120, 115] => lookup_640_75(acc),
            [120, 110, 45, 45, 53, 106, 115, 48, 52, 53, 100] => lookup_640_76(acc),
            [120, 110, 45, 45, 53, 114, 116, 112, 52, 57, 99] => lookup_640_77(acc),
            [120, 110, 45, 45, 53, 114, 116, 113, 51, 52, 107] => lookup_640_78(acc),
            [120, 110, 45, 45, 54, 98, 116, 119, 53, 97] => lookup_640_79(acc),
            [120, 110, 45, 45, 54, 111, 114, 120, 50, 114] => lookup_640_80(acc),
            [120, 110, 45, 45, 55, 116, 48, 97, 50, 54, 52, 99] => lookup_640_81(acc),
            [120, 110, 45, 45, 56, 108, 116, 114, 54, 50, 107] => lookup_640_82(acc),
            [120, 110, 45, 45, 56, 112, 118, 114, 52, 117] => lookup_640_83(acc),
            [120, 110, 45, 45, 99, 51, 115, 49, 52, 109] => lookup_640_84(acc),
            [120, 110, 45, 45, 100, 53, 113, 118, 55, 122, 56, 55, 54, 99] => lookup_640_85(acc),
            [120, 110, 45, 45, 100, 106, 114, 115, 55, 50, 100, 54, 117, 121] => lookup_640_86(acc),
            [120, 110, 45, 45, 100, 106, 116, 121, 52, 107] => lookup_640_87(acc),
            [120, 110, 45, 45, 101, 102, 118, 110, 57, 115] => lookup_640_88(acc),
            [120, 110, 45, 45, 101, 104, 113, 122, 53, 54, 110] => lookup_640_89(acc),
            [120, 110, 45, 45, 101, 108, 113, 113, 49, 54, 104] => lookup_640_90(acc),
            [120, 110, 45, 45, 102, 54, 113, 120, 53, 51, 97] => lookup_640_91(acc),
            [120, 110, 45, 45, 107, 55, 121, 110, 57, 53, 101] => lookup_640_92(acc),
            [120, 110, 45, 45, 107, 98, 114, 113, 55, 111] => lookup_640_93(acc),
            [120, 110, 45, 45, 107, 108, 116, 55, 56, 55, 100] => lookup_640_94(acc),
            [120, 110, 45, 45, 107, 108, 116, 112, 55, 100] => lookup_640_95(acc),
            [120, 110, 45, 45, 107, 108, 116, 120, 57, 97] => lookup_640_96(acc),
            [120, 110, 45, 45, 107, 108, 116, 121, 53, 120] => lookup_640_97(acc),
            [120, 110, 45, 45, 109, 107, 114, 117, 52, 53, 105] => lookup_640_98(acc),
            [120, 110, 45, 45, 110, 105, 116, 50, 50, 53, 107] => lookup_640_99(acc),
            [120, 110, 45, 45, 110, 116, 115, 111, 48, 105, 113, 120, 51, 97] => {
                lookup_640_100(acc)
            }
            [120, 110, 45, 45, 110, 116, 115, 113, 49, 55, 103] => lookup_640_101(acc),
            [120, 110, 45, 45, 112, 115, 115, 117, 51, 51, 108] => lookup_640_102(acc),
            [120, 110, 45, 45, 113, 113, 113, 116, 49, 49, 109] => lookup_640_103(acc),
            [120, 110, 45, 45, 114, 104, 116, 50, 55, 122] => lookup_640_104(acc),
            [120, 110, 45, 45, 114, 104, 116, 51, 100] => lookup_640_105(acc),
            [120, 110, 45, 45, 114, 104, 116, 54, 49, 101] => lookup_640_106(acc),
            [120, 110, 45, 45, 114, 110, 121, 51, 49, 104] => lookup_640_107(acc),
            [120, 110, 45, 45, 116, 111, 114, 49, 51, 49, 111] => lookup_640_108(acc),
            [120, 110, 45, 45, 117, 105, 115, 116, 50, 50, 104] => lookup_640_109(acc),
            [120, 110, 45, 45, 117, 105, 115, 122, 51, 103] => lookup_640_110(acc),
            [120, 110, 45, 45, 117, 117, 119, 117, 53, 56, 97] => lookup_640_111(acc),
            [120, 110, 45, 45, 118, 103, 117, 52, 48, 50, 99] => lookup_640_112(acc),
            [120, 110, 45, 45, 122, 98, 120, 48, 50, 53, 100] => lookup_640_113(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_640_114(labels, acc),
            [121, 97, 109, 97, 103, 117, 99, 104, 105] => lookup_640_115(labels, acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_640_116(labels, acc),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_640_117(info, labels, acc),
            [228, 184, 137, 233, 135, 141] => lookup_640_118(acc),
            [228, 186, 172, 233, 131, 189] => lookup_640_119(acc),
            [228, 189, 144, 232, 179, 128] => lookup_640_120(acc),
            [229, 133, 181, 229, 186, 171] => lookup_640_121(acc),
            [229, 140, 151, 230, 181, 183, 233, 129, 147] => lookup_640_122(acc),
            [229, 141, 131, 232, 145, 137] => lookup_640_123(acc),
            [229, 146, 140, 230, 173, 140, 229, 177, 177] => lookup_640_124(acc),
            [229, 159, 188, 231, 142, 137] => lookup_640_125(acc),
            [229, 164, 167, 229, 136, 134] => lookup_640_126(acc),
            [229, 164, 167, 233, 152, 170] => lookup_640_127(acc),
            [229, 165, 136, 232, 137, 175] => lookup_640_128(acc),
            [229, 174, 174, 229, 159, 142] => lookup_640_129(acc),
            [229, 174, 174, 229, 180, 142] => lookup_640_130(acc),
            [229, 175, 140, 229, 177, 177] => lookup_640_131(acc),
            [229, 177, 177, 229, 143, 163] => lookup_640_132(acc),
            [229, 177, 177, 229, 189, 162] => lookup_640_133(acc),
            [229, 177, 177, 230, 162, 168] => lookup_640_134(acc),
            [229, 178, 144, 233, 152, 156] => lookup_640_135(acc),
            [229, 178, 161, 229, 177, 177] => lookup_640_136(acc),
            [229, 178, 169, 230, 137, 139] => lookup_640_137(acc),
            [229, 179, 182, 230, 160, 185] => lookup_640_138(acc),
            [229, 186, 131, 229, 179, 182] => lookup_640_139(acc),
            [229, 190, 179, 229, 179, 182] => lookup_640_140(acc),
            [230, 132, 155, 229, 170, 155] => lookup_640_141(acc),
            [230, 132, 155, 231, 159, 165] => lookup_640_142(acc),
            [230, 150, 176, 230, 189, 159] => lookup_640_143(acc),
            [230, 157, 177, 228, 186, 172] => lookup_640_144(acc),
            [230, 160, 131, 230, 156, 168] => lookup_640_145(acc),
            [230, 178, 150, 231, 184, 132] => lookup_640_146(acc),
            [230, 187, 139, 232, 179, 128] => lookup_640_147(acc),
            [231, 134, 138, 230, 156, 172] => lookup_640_148(acc),
            [231, 159, 179, 229, 183, 157] => lookup_640_149(acc),
            [231, 165, 158, 229, 165, 136, 229, 183, 157] => lookup_640_150(acc),
            [231, 166, 143, 228, 186, 149] => lookup_640_151(acc),
            [231, 166, 143, 229, 178, 161] => lookup_640_152(acc),
            [231, 166, 143, 229, 179, 182] => lookup_640_153(acc),
            [231, 167, 139, 231, 148, 176] => lookup_640_154(acc),
            [231, 190, 164, 233, 166, 172] => lookup_640_155(acc),
            [232, 140, 168, 229, 159, 142] => lookup_640_156(acc),
            [233, 149, 183, 229, 180, 142] => lookup_640_157(acc),
            [233, 149, 183, 233, 135, 142] => lookup_640_158(acc),
            [233, 157, 146, 230, 163, 174] => lookup_640_159(acc),
            [233, 157, 153, 229, 178, 161] => lookup_640_160(acc),
            [233, 166, 153, 229, 183, 157] => lookup_640_161(acc),
            [233, 171, 152, 231, 159, 165] => lookup_640_162(acc),
            [233, 179, 165, 229, 143, 150] => lookup_640_163(acc),
            [233, 185, 191, 229, 133, 144, 229, 179, 182] => lookup_640_164(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_641() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_642() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_643() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_646() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_647_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_647_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_647_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_647_0(acc),
            [99, 111] => lookup_647_1(labels, acc),
            [103, 111] => lookup_647_2(acc),
            [105, 110, 102, 111] => lookup_647_3(acc),
            [109, 101] => lookup_647_4(acc),
            [109, 111, 98, 105] => lookup_647_5(acc),
            [110, 101] => lookup_647_6(acc),
            [111, 114] => lookup_647_7(acc),
            [115, 99] => lookup_647_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_648() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_650() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_651() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_652_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_652_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_652_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_652_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_652_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_652<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103] => lookup_652_0(acc),
            [99, 111, 109] => lookup_652_1(acc),
            [101, 100, 117] => lookup_652_2(acc),
            [103, 111, 118] => lookup_652_3(acc),
            [105, 111] => lookup_652_4(acc),
            [106, 112] => lookup_652_5(acc),
            [109, 105, 108] => lookup_652_6(acc),
            [110, 101, 116] => lookup_652_7(acc),
            [111, 114, 103] => lookup_652_8(acc),
            [116, 118] => lookup_652_9(acc),
            [117, 107] => lookup_652_10(acc),
            [117, 115] => lookup_652_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_653_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_653_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_654_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_654_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_654_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_654_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_654_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_654_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_654_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_654<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_654_0(acc),
            [99, 111, 109] => lookup_654_1(acc),
            [101, 100, 117] => lookup_654_2(acc),
            [103, 111, 118] => lookup_654_3(acc),
            [105, 110, 102, 111] => lookup_654_4(acc),
            [110, 101, 116] => lookup_654_5(acc),
            [111, 114, 103] => lookup_654_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_655() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_661() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115] => lookup_662_0(acc),
            [97, 115, 115, 111] => lookup_662_1(acc),
            [99, 111, 109] => lookup_662_2(acc),
            [99, 111, 111, 112] => lookup_662_3(acc),
            [101, 100, 117] => lookup_662_4(acc),
            [103, 111, 117, 118] => lookup_662_5(acc),
            [103, 111, 118] => lookup_662_6(acc),
            [109, 101, 100, 101, 99, 105, 110] => lookup_662_7(acc),
            [109, 105, 108] => lookup_662_8(acc),
            [110, 111, 109] => lookup_662_9(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_662_10(acc),
            [111, 114, 103] => lookup_662_11(acc),
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110, 115] => lookup_662_12(acc),
            [112, 114, 100] => lookup_662_13(acc),
            [112, 114, 101, 115, 115, 101] => lookup_662_14(acc),
            [116, 109] => lookup_662_15(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_662_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_663_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_663_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_663_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_663_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_663<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_663_0(acc),
            [103, 111, 118] => lookup_663_1(acc),
            [110, 101, 116] => lookup_663_2(acc),
            [111, 114, 103] => lookup_663_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_664() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_666() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_667_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_667_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_667_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_667_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_667_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_667_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_667<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_667_0(acc),
            [101, 100, 117] => lookup_667_1(acc),
            [103, 111, 118] => lookup_667_2(acc),
            [111, 114, 103] => lookup_667_3(acc),
            [114, 101, 112] => lookup_667_4(acc),
            [116, 114, 97] => lookup_667_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_668() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_670_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_670_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_670_1(acc),
            [98, 117, 115, 97, 110] => lookup_670_2(acc),
            [99, 104, 117, 110, 103, 98, 117, 107] => lookup_670_3(acc),
            [99, 104, 117, 110, 103, 110, 97, 109] => lookup_670_4(acc),
            [99, 111] => lookup_670_5(acc),
            [100, 97, 101, 103, 117] => lookup_670_6(acc),
            [100, 97, 101, 106, 101, 111, 110] => lookup_670_7(acc),
            [101, 115] => lookup_670_8(acc),
            [103, 97, 110, 103, 119, 111, 110] => lookup_670_9(acc),
            [103, 111] => lookup_670_10(acc),
            [103, 119, 97, 110, 103, 106, 117] => lookup_670_11(acc),
            [103, 121, 101, 111, 110, 103, 98, 117, 107] => lookup_670_12(acc),
            [103, 121, 101, 111, 110, 103, 103, 105] => lookup_670_13(acc),
            [103, 121, 101, 111, 110, 103, 110, 97, 109] => lookup_670_14(acc),
            [104, 115] => lookup_670_15(acc),
            [105, 110, 99, 104, 101, 111, 110] => lookup_670_16(acc),
            [106, 101, 106, 117] => lookup_670_17(acc),
            [106, 101, 111, 110, 98, 117, 107] => lookup_670_18(acc),
            [106, 101, 111, 110, 110, 97, 109] => lookup_670_19(acc),
            [107, 103] => lookup_670_20(acc),
            [109, 105, 108] => lookup_670_21(acc),
            [109, 115] => lookup_670_22(acc),
            [110, 101] => lookup_670_23(acc),
            [111, 114] => lookup_670_24(acc),
            [112, 101] => lookup_670_25(acc),
            [114, 101] => lookup_670_26(acc),
            [115, 99] => lookup_670_27(acc),
            [115, 101, 111, 117, 108] => lookup_670_28(acc),
            [117, 108, 115, 97, 110] => lookup_670_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_671_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_671_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_671<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_671_0(acc),
            [101, 100, 117] => lookup_671_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_672() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_674_0(acc),
            [101, 100, 117] => lookup_674_1(acc),
            [101, 109, 98] => lookup_674_2(acc),
            [103, 111, 118] => lookup_674_3(acc),
            [105, 110, 100] => lookup_674_4(acc),
            [110, 101, 116] => lookup_674_5(acc),
            [111, 114, 103] => lookup_674_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_675_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_675_0(acc),
            [101, 100, 117] => lookup_675_1(acc),
            [110, 101, 116] => lookup_675_2(acc),
            [111, 114, 103] => lookup_675_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_676() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_677_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_677_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [117, 112, 97, 97, 115] => lookup_677_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_677_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_677_0(acc),
            [101, 100, 117] => lookup_677_1(acc),
            [103, 111, 118] => lookup_677_2(acc),
            [106, 99, 108, 111, 117, 100] => lookup_677_3(acc),
            [107, 97, 122, 116, 101, 108, 101, 112, 111, 114, 116] => {
                lookup_677_4(info, labels, acc)
            }
            [109, 105, 108] => lookup_677_5(acc),
            [110, 101, 116] => lookup_677_6(acc),
            [111, 114, 103] => lookup_677_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_678_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_678_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_678_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_678_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_678_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_678_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_678_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_678_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_678_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_678_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_678<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 110, 114] => lookup_678_0(acc),
            [99] => lookup_678_1(acc),
            [99, 111, 109] => lookup_678_2(acc),
            [101, 100, 117] => lookup_678_3(acc),
            [103, 111, 118] => lookup_678_4(acc),
            [105, 110, 102, 111] => lookup_678_5(acc),
            [105, 110, 116] => lookup_678_6(acc),
            [110, 101, 116] => lookup_678_7(acc),
            [111, 114, 103] => lookup_678_8(acc),
            [112, 101, 114] => lookup_678_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_679() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_680() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_681() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_682() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_683() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_684_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_684_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_684_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_684_0_0(acc),
            [115, 105, 116, 101, 115] => lookup_684_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_684<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_684_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_685() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_686() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_687() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_688() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_689() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_690() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_691() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_693_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_693_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_693_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_693_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_693_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_693<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_693_0(acc),
            [101, 100, 117] => lookup_693_1(acc),
            [103, 111, 118] => lookup_693_2(acc),
            [110, 101, 116] => lookup_693_3(acc),
            [111, 114, 103] => lookup_693_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_694_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_694_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_694_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_694_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_694_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_694_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_694_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_694<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_694_0(acc),
            [99, 111, 109] => lookup_694_1(acc),
            [101, 100, 117] => lookup_694_2(acc),
            [103, 111, 118] => lookup_694_3(acc),
            [110, 101, 116] => lookup_694_4(acc),
            [111, 114, 103] => lookup_694_5(acc),
            [111, 121] => lookup_694_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_695() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_696() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_697() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_698() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_700() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_701() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_702() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_703_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_703_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_703<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_703_0(acc),
            [99, 97, 97] => lookup_703_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_704() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_705() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_706() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_707() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_708() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_709() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_711() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_715_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_715_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_715_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_715_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_715<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 121, 111, 110] => lookup_715_0(acc),
            [100, 119, 101, 98] => lookup_715_1(info, labels, acc),
            [109, 121, 112, 101, 112] => lookup_715_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_716() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_717_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_717<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 108, 120] => lookup_717_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_718() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_719_0(acc),
            [97, 115, 115, 110] => lookup_719_1(acc),
            [99, 111, 109] => lookup_719_2(acc),
            [101, 100, 117] => lookup_719_3(acc),
            [103, 111, 118] => lookup_719_4(acc),
            [103, 114, 112] => lookup_719_5(acc),
            [104, 111, 116, 101, 108] => lookup_719_6(acc),
            [105, 110, 116] => lookup_719_7(acc),
            [108, 116, 100] => lookup_719_8(acc),
            [110, 101, 116] => lookup_719_9(acc),
            [110, 103, 111] => lookup_719_10(acc),
            [111, 114, 103] => lookup_719_11(acc),
            [115, 99, 104] => lookup_719_12(acc),
            [115, 111, 99] => lookup_719_13(acc),
            [119, 101, 98] => lookup_719_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_720() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_721() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_724() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_725() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_726() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_727<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 109, 103] => lookup_727_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_728_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_728_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_728<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110] => lookup_728_0(acc),
            [111, 102] => lookup_728_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_729() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_730() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_731() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_732() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_733() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_734_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_734_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_734_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_734_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_734_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_734<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_734_0(acc),
            [101, 100, 117] => lookup_734_1(acc),
            [103, 111, 118] => lookup_734_2(acc),
            [110, 101, 116] => lookup_734_3(acc),
            [111, 114, 103] => lookup_734_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_735_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_735_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_735_0(acc),
            [98, 105, 122] => lookup_735_1(acc),
            [99, 111] => lookup_735_2(acc),
            [100, 101] => lookup_735_3(acc),
            [101, 100, 117] => lookup_735_4(acc),
            [103, 111, 118] => lookup_735_5(acc),
            [105, 110, 102, 111] => lookup_735_6(acc),
            [110, 101, 116] => lookup_735_7(acc),
            [111, 114, 103] => lookup_735_8(acc),
            [115, 99] => lookup_735_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_736_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_736_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_736_0(acc),
            [103, 111, 118] => lookup_736_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_737() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_739<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_739_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_740() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 110] => lookup_743_0(acc),
            [99, 111, 109] => lookup_743_1(acc),
            [99, 111, 110, 102] => lookup_743_2(acc),
            [101, 100, 117] => lookup_743_3(acc),
            [103, 111, 118] => lookup_743_4(acc),
            [105, 100] => lookup_743_5(acc),
            [109, 105, 108] => lookup_743_6(acc),
            [110, 101, 116] => lookup_743_7(acc),
            [111, 114, 103] => lookup_743_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_744_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_744_0(acc),
            [101, 100, 117] => lookup_744_1(acc),
            [103, 111, 118] => lookup_744_2(acc),
            [105, 100] => lookup_744_3(acc),
            [109, 101, 100] => lookup_744_4(acc),
            [110, 101, 116] => lookup_744_5(acc),
            [111, 114, 103] => lookup_744_6(acc),
            [112, 108, 99] => lookup_744_7(acc),
            [115, 99, 104] => lookup_744_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_745_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_745_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_745_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_745_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_745_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_745_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_745<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_745_0(acc),
            [99, 111] => lookup_745_1(acc),
            [103, 111, 118] => lookup_745_2(acc),
            [110, 101, 116] => lookup_745_3(acc),
            [111, 114, 103] => lookup_745_4(acc),
            [112, 114, 101, 115, 115] => lookup_745_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_746() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_748() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_749() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_751() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_752_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_752<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 111, 117, 116, 101, 114] => lookup_752_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_753() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_754() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_755() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_756_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_756<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 111, 109] => lookup_756_0(acc),
            [119, 105, 116, 104] => lookup_756_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_757() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_761() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_763_0(acc),
            [116, 109] => lookup_763_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_764() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_765_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_765_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_765_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_765_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_765_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_765<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116] => lookup_765_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_765_1(acc),
            [100, 101] => lookup_765_2(acc),
            [106, 112] => lookup_765_3(acc),
            [116, 111] => lookup_765_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_766_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 99, 97, 108, 104, 111, 115, 116] => lookup_766_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_766_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_766_0(acc),
            [98, 97, 114, 115, 121] => lookup_766_1(acc),
            [98, 114, 97, 115, 105, 108, 105, 97] => lookup_766_2(acc),
            [99, 54, 54] => lookup_766_3(acc),
            [99, 111] => lookup_766_4(acc),
            [99, 111, 117, 107] => lookup_766_5(acc),
            [100, 97, 112, 108, 105, 101] => lookup_766_6(labels, acc),
            [100, 100, 110, 115] => lookup_766_7(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_766_8(acc),
            [100, 110, 115, 102, 111, 114] => lookup_766_9(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_766_10(acc),
            [101, 100, 103, 101, 115, 116, 97, 99, 107] => lookup_766_11(acc),
            [101, 100, 117] => lookup_766_12(acc),
            [102, 105, 108, 101, 103, 101, 97, 114] => lookup_766_13(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 97, 117] => lookup_766_14(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 100, 101] => lookup_766_15(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 103, 98] => lookup_766_16(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 105, 101] => lookup_766_17(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 106, 112] => lookup_766_18(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 115, 103] => lookup_766_19(acc),
            [103, 108, 105, 116, 99, 104] => lookup_766_20(acc),
            [103, 111, 118] => lookup_766_21(acc),
            [104, 111, 112, 116, 111] => lookup_766_22(acc),
            [105, 50, 51, 52] => lookup_766_23(acc),
            [105, 116, 115] => lookup_766_24(acc),
            [108, 111, 103, 105, 110, 116, 111] => lookup_766_25(acc),
            [108, 111, 104, 109, 117, 115] => lookup_766_26(acc),
            [109, 99, 100, 105, 114] => lookup_766_27(acc),
            [109, 99, 112, 101] => lookup_766_28(acc),
            [109, 121, 100, 115] => lookup_766_29(acc),
            [110, 101, 116] => lookup_766_30(acc),
            [110, 111, 104, 111, 115, 116] => lookup_766_31(acc),
            [110, 111, 105, 112] => lookup_766_32(acc),
            [111, 114, 103] => lookup_766_33(acc),
            [112, 114, 105, 118] => lookup_766_34(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_766_35(acc),
            [115, 111, 117, 110, 100, 99, 97, 115, 116] => lookup_766_36(acc),
            [115, 121, 110, 111, 108, 111, 103, 121] => lookup_766_37(acc),
            [116, 98, 105, 116, 115] => lookup_766_38(acc),
            [116, 99, 112, 52] => lookup_766_39(acc),
            [117, 107, 99, 111] => lookup_766_40(acc),
            [118, 112, 52] => lookup_766_41(acc),
            [119, 98, 113] => lookup_766_42(acc),
            [119, 101, 98, 104, 111, 112] => lookup_766_43(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_766_44(acc),
            [121, 111, 109, 98, 111] => lookup_766_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_767() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_769() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_770() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_771() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_773_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_773_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_773<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114] => lookup_773_0(acc),
            [114, 101, 112, 97, 105, 114] => lookup_773_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_774_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_774<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_774_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_775() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_776_0(acc),
            [99, 111, 109] => lookup_776_1(acc),
            [101, 100, 117] => lookup_776_2(acc),
            [103, 111, 118] => lookup_776_3(acc),
            [109, 105, 108] => lookup_776_4(acc),
            [110, 111, 109] => lookup_776_5(acc),
            [111, 114, 103] => lookup_776_6(acc),
            [112, 114, 100] => lookup_776_7(acc),
            [116, 109] => lookup_776_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_777() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_779() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_780() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_781() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_782() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_783() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_785_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_785_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_785_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_785_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_785_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_785_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_785_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_785_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_785<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_785_0(acc),
            [99, 111, 109] => lookup_785_1(acc),
            [101, 100, 117] => lookup_785_2(acc),
            [103, 111, 118] => lookup_785_3(acc),
            [105, 110, 102] => lookup_785_4(acc),
            [110, 97, 109, 101] => lookup_785_5(acc),
            [110, 101, 116] => lookup_785_6(acc),
            [111, 114, 103] => lookup_785_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_786_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_786_0(acc),
            [101, 100, 117] => lookup_786_1(acc),
            [103, 111, 117, 118] => lookup_786_2(acc),
            [103, 111, 118] => lookup_786_3(acc),
            [110, 101, 116] => lookup_786_4(acc),
            [111, 114, 103] => lookup_786_5(acc),
            [112, 114, 101, 115, 115, 101] => lookup_786_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_787() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_789_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_789<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_789_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_790() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_791_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_791_0(acc),
            [103, 111, 118] => lookup_791_1(acc),
            [110, 121, 99] => lookup_791_2(acc),
            [111, 114, 103] => lookup_791_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_792_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_792_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_792_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_792_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_792_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_792<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_792_0(acc),
            [101, 100, 117] => lookup_792_1(acc),
            [103, 111, 118] => lookup_792_2(acc),
            [110, 101, 116] => lookup_792_3(acc),
            [111, 114, 103] => lookup_792_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_793_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_793_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_793<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_793_0(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_793_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_794() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_796() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_798_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_798<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 100] => lookup_798_0(acc),
            [102, 111, 114] => lookup_798_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_799() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_800() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_803() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_805() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_806() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_808() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_809<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 117] => lookup_809_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_810() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_811_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_811_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_811<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_811_0(acc),
            [103, 111, 118] => lookup_811_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_812_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_812_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_812_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_812_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_812<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_812_0(acc),
            [101, 100, 117] => lookup_812_1(acc),
            [103, 111, 118] => lookup_812_2(acc),
            [108, 97, 98] => lookup_812_3(acc),
            [109, 105, 110, 105, 115, 105, 116, 101] => lookup_812_4(acc),
            [110, 101, 116] => lookup_812_5(acc),
            [111, 114, 103] => lookup_812_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_813() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_814_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_814_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_814_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_814_0(labels, acc),
            [101, 100, 117] => lookup_814_1(acc),
            [110, 101, 116] => lookup_814_2(acc),
            [111, 114, 103] => lookup_814_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_816() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_817_0(acc),
            [99, 111] => lookup_817_1(acc),
            [99, 111, 109] => lookup_817_2(acc),
            [103, 111, 118] => lookup_817_3(acc),
            [110, 101, 116] => lookup_817_4(acc),
            [111, 114] => lookup_817_5(acc),
            [111, 114, 103] => lookup_817_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_818_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 29usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 28usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_434(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_435(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_436(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_437(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_438(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_439(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_440(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_441(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_442(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_443(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_444(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_445(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_446(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_447(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_448(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_449(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_450(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_451(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_452(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_453(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_454(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_455(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_456(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_457(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_458(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_459(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_460(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_461(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_462(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_463(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_464(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_465(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_466(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_467(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_468(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_469(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_470(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_471(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_472(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_473(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_474(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_475(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_476(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_477(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_478(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_479(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_480(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_481(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_482(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_483(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_484(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_485(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_486(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_487(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_488(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_489(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_490(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_491(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_492(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_493(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_494(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_495(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_496(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_497(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_498(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_499(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_500(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_501(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_502(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_503(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_504(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_505(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_506(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_507(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_508(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_509(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_510(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_511(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_512(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_513(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_514(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_515(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_516(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_517(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_518(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_519(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_520(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_521(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_522(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_523(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_524(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_525(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_526(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_527(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_528(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_529(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_530(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_531(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_532(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_533(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_534(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_535(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_536(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_537(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_538(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_539(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_540(acc: usize) -> Info {
    Info {
        len: acc + 1 + 36usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_541(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_542(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_543(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_544(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_545(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_546(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_547(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_548(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_549(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_550(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 97, 100, 101, 109, 121] => lookup_818_0(acc),
            [97, 103, 114, 105, 99, 117, 108, 116, 117, 114, 101] => lookup_818_1(acc),
            [97, 105, 114] => lookup_818_2(acc),
            [97, 105, 114, 103, 117, 97, 114, 100] => lookup_818_3(acc),
            [97, 108, 97, 98, 97, 109, 97] => lookup_818_4(acc),
            [97, 108, 97, 115, 107, 97] => lookup_818_5(acc),
            [97, 109, 98, 101, 114] => lookup_818_6(acc),
            [97, 109, 98, 117, 108, 97, 110, 99, 101] => lookup_818_7(acc),
            [97, 109, 101, 114, 105, 99, 97, 110] => lookup_818_8(acc),
            [97, 109, 101, 114, 105, 99, 97, 110, 97] => lookup_818_9(acc),
            [97, 109, 101, 114, 105, 99, 97, 110, 97, 110, 116, 105, 113, 117, 101, 115] => {
                lookup_818_10(acc)
            }
            [97, 109, 101, 114, 105, 99, 97, 110, 97, 114, 116] => lookup_818_11(acc),
            [97, 109, 115, 116, 101, 114, 100, 97, 109] => lookup_818_12(acc),
            [97, 110, 100] => lookup_818_13(acc),
            [97, 110, 110, 101, 102, 114, 97, 110, 107] => lookup_818_14(acc),
            [97, 110, 116, 104, 114, 111] => lookup_818_15(acc),
            [97, 110, 116, 104, 114, 111, 112, 111, 108, 111, 103, 121] => lookup_818_16(acc),
            [97, 110, 116, 105, 113, 117, 101, 115] => lookup_818_17(acc),
            [97, 113, 117, 97, 114, 105, 117, 109] => lookup_818_18(acc),
            [97, 114, 98, 111, 114, 101, 116, 117, 109] => lookup_818_19(acc),
            [97, 114, 99, 104, 97, 101, 111, 108, 111, 103, 105, 99, 97, 108] => lookup_818_20(acc),
            [97, 114, 99, 104, 97, 101, 111, 108, 111, 103, 121] => lookup_818_21(acc),
            [97, 114, 99, 104, 105, 116, 101, 99, 116, 117, 114, 101] => lookup_818_22(acc),
            [97, 114, 116] => lookup_818_23(acc),
            [97, 114, 116, 97, 110, 100, 100, 101, 115, 105, 103, 110] => lookup_818_24(acc),
            [97, 114, 116, 99, 101, 110, 116, 101, 114] => lookup_818_25(acc),
            [97, 114, 116, 100, 101, 99, 111] => lookup_818_26(acc),
            [97, 114, 116, 101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_818_27(acc),
            [97, 114, 116, 103, 97, 108, 108, 101, 114, 121] => lookup_818_28(acc),
            [97, 114, 116, 115] => lookup_818_29(acc),
            [97, 114, 116, 115, 97, 110, 100, 99, 114, 97, 102, 116, 115] => lookup_818_30(acc),
            [97, 115, 109, 97, 116, 97, 114, 116] => lookup_818_31(acc),
            [97, 115, 115, 97, 115, 115, 105, 110, 97, 116, 105, 111, 110] => lookup_818_32(acc),
            [97, 115, 115, 105, 115, 105] => lookup_818_33(acc),
            [97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => lookup_818_34(acc),
            [97, 115, 116, 114, 111, 110, 111, 109, 121] => lookup_818_35(acc),
            [97, 116, 108, 97, 110, 116, 97] => lookup_818_36(acc),
            [97, 117, 115, 116, 105, 110] => lookup_818_37(acc),
            [97, 117, 115, 116, 114, 97, 108, 105, 97] => lookup_818_38(acc),
            [97, 117, 116, 111, 109, 111, 116, 105, 118, 101] => lookup_818_39(acc),
            [97, 118, 105, 97, 116, 105, 111, 110] => lookup_818_40(acc),
            [97, 120, 105, 115] => lookup_818_41(acc),
            [98, 97, 100, 97, 106, 111, 122] => lookup_818_42(acc),
            [98, 97, 103, 104, 100, 97, 100] => lookup_818_43(acc),
            [98, 97, 104, 110] => lookup_818_44(acc),
            [98, 97, 108, 101] => lookup_818_45(acc),
            [98, 97, 108, 116, 105, 109, 111, 114, 101] => lookup_818_46(acc),
            [98, 97, 114, 99, 101, 108, 111, 110, 97] => lookup_818_47(acc),
            [98, 97, 115, 101, 98, 97, 108, 108] => lookup_818_48(acc),
            [98, 97, 115, 101, 108] => lookup_818_49(acc),
            [98, 97, 116, 104, 115] => lookup_818_50(acc),
            [98, 97, 117, 101, 114, 110] => lookup_818_51(acc),
            [98, 101, 97, 117, 120, 97, 114, 116, 115] => lookup_818_52(acc),
            [98, 101, 101, 108, 100, 101, 110, 103, 101, 108, 117, 105, 100] => lookup_818_53(acc),
            [98, 101, 108, 108, 101, 118, 117, 101] => lookup_818_54(acc),
            [98, 101, 114, 103, 98, 97, 117] => lookup_818_55(acc),
            [98, 101, 114, 107, 101, 108, 101, 121] => lookup_818_56(acc),
            [98, 101, 114, 108, 105, 110] => lookup_818_57(acc),
            [98, 101, 114, 110] => lookup_818_58(acc),
            [98, 105, 98, 108, 101] => lookup_818_59(acc),
            [98, 105, 108, 98, 97, 111] => lookup_818_60(acc),
            [98, 105, 108, 108] => lookup_818_61(acc),
            [98, 105, 114, 100, 97, 114, 116] => lookup_818_62(acc),
            [98, 105, 114, 116, 104, 112, 108, 97, 99, 101] => lookup_818_63(acc),
            [98, 111, 110, 110] => lookup_818_64(acc),
            [98, 111, 115, 116, 111, 110] => lookup_818_65(acc),
            [98, 111, 116, 97, 110, 105, 99, 97, 108] => lookup_818_66(acc),
            [98, 111, 116, 97, 110, 105, 99, 97, 108, 103, 97, 114, 100, 101, 110] => {
                lookup_818_67(acc)
            }
            [98, 111, 116, 97, 110, 105, 99, 103, 97, 114, 100, 101, 110] => lookup_818_68(acc),
            [98, 111, 116, 97, 110, 121] => lookup_818_69(acc),
            [98, 114, 97, 110, 100, 121, 119, 105, 110, 101, 118, 97, 108, 108, 101, 121] => {
                lookup_818_70(acc)
            }
            [98, 114, 97, 115, 105, 108] => lookup_818_71(acc),
            [98, 114, 105, 115, 116, 111, 108] => lookup_818_72(acc),
            [98, 114, 105, 116, 105, 115, 104] => lookup_818_73(acc),
            [98, 114, 105, 116, 105, 115, 104, 99, 111, 108, 117, 109, 98, 105, 97] => {
                lookup_818_74(acc)
            }
            [98, 114, 111, 97, 100, 99, 97, 115, 116] => lookup_818_75(acc),
            [98, 114, 117, 110, 101, 108] => lookup_818_76(acc),
            [98, 114, 117, 115, 115, 101, 108] => lookup_818_77(acc),
            [98, 114, 117, 115, 115, 101, 108, 115] => lookup_818_78(acc),
            [98, 114, 117, 120, 101, 108, 108, 101, 115] => lookup_818_79(acc),
            [98, 117, 105, 108, 100, 105, 110, 103] => lookup_818_80(acc),
            [98, 117, 114, 103, 104, 111, 102] => lookup_818_81(acc),
            [98, 117, 115] => lookup_818_82(acc),
            [98, 117, 115, 104, 101, 121] => lookup_818_83(acc),
            [99, 97, 100, 97, 113, 117, 101, 115] => lookup_818_84(acc),
            [99, 97, 108, 105, 102, 111, 114, 110, 105, 97] => lookup_818_85(acc),
            [99, 97, 109, 98, 114, 105, 100, 103, 101] => lookup_818_86(acc),
            [99, 97, 110] => lookup_818_87(acc),
            [99, 97, 110, 97, 100, 97] => lookup_818_88(acc),
            [99, 97, 112, 101, 98, 114, 101, 116, 111, 110] => lookup_818_89(acc),
            [99, 97, 114, 114, 105, 101, 114] => lookup_818_90(acc),
            [99, 97, 114, 116, 111, 111, 110, 97, 114, 116] => lookup_818_91(acc),
            [99, 97, 115, 97, 100, 101, 108, 97, 109, 111, 110, 101, 100, 97] => lookup_818_92(acc),
            [99, 97, 115, 116, 108, 101] => lookup_818_93(acc),
            [99, 97, 115, 116, 114, 101, 115] => lookup_818_94(acc),
            [99, 101, 108, 116, 105, 99] => lookup_818_95(acc),
            [99, 101, 110, 116, 101, 114] => lookup_818_96(acc),
            [99, 104, 97, 116, 116, 97, 110, 111, 111, 103, 97] => lookup_818_97(acc),
            [99, 104, 101, 108, 116, 101, 110, 104, 97, 109] => lookup_818_98(acc),
            [99, 104, 101, 115, 97, 112, 101, 97, 107, 101, 98, 97, 121] => lookup_818_99(acc),
            [99, 104, 105, 99, 97, 103, 111] => lookup_818_100(acc),
            [99, 104, 105, 108, 100, 114, 101, 110] => lookup_818_101(acc),
            [99, 104, 105, 108, 100, 114, 101, 110, 115] => lookup_818_102(acc),
            [99, 104, 105, 108, 100, 114, 101, 110, 115, 103, 97, 114, 100, 101, 110] => {
                lookup_818_103(acc)
            }
            [99, 104, 105, 114, 111, 112, 114, 97, 99, 116, 105, 99] => lookup_818_104(acc),
            [99, 104, 111, 99, 111, 108, 97, 116, 101] => lookup_818_105(acc),
            [99, 104, 114, 105, 115, 116, 105, 97, 110, 115, 98, 117, 114, 103] => {
                lookup_818_106(acc)
            }
            [99, 105, 110, 99, 105, 110, 110, 97, 116, 105] => lookup_818_107(acc),
            [99, 105, 110, 101, 109, 97] => lookup_818_108(acc),
            [99, 105, 114, 99, 117, 115] => lookup_818_109(acc),
            [99, 105, 118, 105, 108, 105, 115, 97, 116, 105, 111, 110] => lookup_818_110(acc),
            [99, 105, 118, 105, 108, 105, 122, 97, 116, 105, 111, 110] => lookup_818_111(acc),
            [99, 105, 118, 105, 108, 119, 97, 114] => lookup_818_112(acc),
            [99, 108, 105, 110, 116, 111, 110] => lookup_818_113(acc),
            [99, 108, 111, 99, 107] => lookup_818_114(acc),
            [99, 111, 97, 108] => lookup_818_115(acc),
            [99, 111, 97, 115, 116, 97, 108, 100, 101, 102, 101, 110, 99, 101] => {
                lookup_818_116(acc)
            }
            [99, 111, 100, 121] => lookup_818_117(acc),
            [99, 111, 108, 100, 119, 97, 114] => lookup_818_118(acc),
            [99, 111, 108, 108, 101, 99, 116, 105, 111, 110] => lookup_818_119(acc),
            [99, 111, 108, 111, 110, 105, 97, 108, 119, 105, 108, 108, 105, 97, 109, 115, 98, 117, 114, 103] => {
                lookup_818_120(acc)
            }
            [99, 111, 108, 111, 114, 97, 100, 111, 112, 108, 97, 116, 101, 97, 117] => {
                lookup_818_121(acc)
            }
            [99, 111, 108, 117, 109, 98, 105, 97] => lookup_818_122(acc),
            [99, 111, 108, 117, 109, 98, 117, 115] => lookup_818_123(acc),
            [99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110] => lookup_818_124(acc),
            [99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110, 115] => {
                lookup_818_125(acc)
            }
            [99, 111, 109, 109, 117, 110, 105, 116, 121] => lookup_818_126(acc),
            [99, 111, 109, 112, 117, 116, 101, 114] => lookup_818_127(acc),
            [99, 111, 109, 112, 117, 116, 101, 114, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_818_128(acc)
            }
            [99, 111, 109, 117, 110, 105, 99, 97, 195, 167, 195, 181, 101, 115] => {
                lookup_818_129(acc)
            }
            [99, 111, 110, 116, 101, 109, 112, 111, 114, 97, 114, 121] => lookup_818_130(acc),
            [99, 111, 110, 116, 101, 109, 112, 111, 114, 97, 114, 121, 97, 114, 116] => {
                lookup_818_131(acc)
            }
            [99, 111, 110, 118, 101, 110, 116] => lookup_818_132(acc),
            [99, 111, 112, 101, 110, 104, 97, 103, 101, 110] => lookup_818_133(acc),
            [99, 111, 114, 112, 111, 114, 97, 116, 105, 111, 110] => lookup_818_134(acc),
            [99, 111, 114, 114, 101, 105, 111, 115, 45, 101, 45, 116, 101, 108, 101, 99, 111, 109, 117, 110, 105, 99, 97, 195, 167, 195, 181, 101, 115] => {
                lookup_818_135(acc)
            }
            [99, 111, 114, 118, 101, 116, 116, 101] => lookup_818_136(acc),
            [99, 111, 115, 116, 117, 109, 101] => lookup_818_137(acc),
            [99, 111, 117, 110, 116, 114, 121, 101, 115, 116, 97, 116, 101] => lookup_818_138(acc),
            [99, 111, 117, 110, 116, 121] => lookup_818_139(acc),
            [99, 114, 97, 102, 116, 115] => lookup_818_140(acc),
            [99, 114, 97, 110, 98, 114, 111, 111, 107] => lookup_818_141(acc),
            [99, 114, 101, 97, 116, 105, 111, 110] => lookup_818_142(acc),
            [99, 117, 108, 116, 117, 114, 97, 108] => lookup_818_143(acc),
            [99, 117, 108, 116, 117, 114, 97, 108, 99, 101, 110, 116, 101, 114] => {
                lookup_818_144(acc)
            }
            [99, 117, 108, 116, 117, 114, 101] => lookup_818_145(acc),
            [99, 121, 98, 101, 114] => lookup_818_146(acc),
            [99, 121, 109, 114, 117] => lookup_818_147(acc),
            [100, 97, 108, 105] => lookup_818_148(acc),
            [100, 97, 108, 108, 97, 115] => lookup_818_149(acc),
            [100, 97, 116, 97, 98, 97, 115, 101] => lookup_818_150(acc),
            [100, 100, 114] => lookup_818_151(acc),
            [100, 101, 99, 111, 114, 97, 116, 105, 118, 101, 97, 114, 116, 115] => {
                lookup_818_152(acc)
            }
            [100, 101, 108, 97, 119, 97, 114, 101] => lookup_818_153(acc),
            [100, 101, 108, 109, 101, 110, 104, 111, 114, 115, 116] => lookup_818_154(acc),
            [100, 101, 110, 109, 97, 114, 107] => lookup_818_155(acc),
            [100, 101, 112, 111, 116] => lookup_818_156(acc),
            [100, 101, 115, 105, 103, 110] => lookup_818_157(acc),
            [100, 101, 116, 114, 111, 105, 116] => lookup_818_158(acc),
            [100, 105, 110, 111, 115, 97, 117, 114] => lookup_818_159(acc),
            [100, 105, 115, 99, 111, 118, 101, 114, 121] => lookup_818_160(acc),
            [100, 111, 108, 108, 115] => lookup_818_161(acc),
            [100, 111, 110, 111, 115, 116, 105, 97] => lookup_818_162(acc),
            [100, 117, 114, 104, 97, 109] => lookup_818_163(acc),
            [101, 97, 115, 116, 97, 102, 114, 105, 99, 97] => lookup_818_164(acc),
            [101, 97, 115, 116, 99, 111, 97, 115, 116] => lookup_818_165(acc),
            [101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_818_166(acc),
            [101, 100, 117, 99, 97, 116, 105, 111, 110, 97, 108] => lookup_818_167(acc),
            [101, 103, 121, 112, 116, 105, 97, 110] => lookup_818_168(acc),
            [101, 105, 115, 101, 110, 98, 97, 104, 110] => lookup_818_169(acc),
            [101, 108, 98, 117, 114, 103] => lookup_818_170(acc),
            [101, 108, 118, 101, 110, 100, 114, 101, 108, 108] => lookup_818_171(acc),
            [101, 109, 98, 114, 111, 105, 100, 101, 114, 121] => lookup_818_172(acc),
            [101, 110, 99, 121, 99, 108, 111, 112, 101, 100, 105, 99] => lookup_818_173(acc),
            [101, 110, 103, 108, 97, 110, 100] => lookup_818_174(acc),
            [101, 110, 116, 111, 109, 111, 108, 111, 103, 121] => lookup_818_175(acc),
            [101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116] => lookup_818_176(acc),
            [101, 110, 118, 105, 114, 111, 110, 109, 101, 110, 116, 97, 108, 99, 111, 110, 115, 101, 114, 118, 97, 116, 105, 111, 110] => {
                lookup_818_177(acc)
            }
            [101, 112, 105, 108, 101, 112, 115, 121] => lookup_818_178(acc),
            [101, 115, 115, 101, 120] => lookup_818_179(acc),
            [101, 115, 116, 97, 116, 101] => lookup_818_180(acc),
            [101, 116, 104, 110, 111, 108, 111, 103, 121] => lookup_818_181(acc),
            [101, 120, 101, 116, 101, 114] => lookup_818_182(acc),
            [101, 120, 104, 105, 98, 105, 116, 105, 111, 110] => lookup_818_183(acc),
            [102, 97, 109, 105, 108, 121] => lookup_818_184(acc),
            [102, 97, 114, 109] => lookup_818_185(acc),
            [102, 97, 114, 109, 101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_818_186(acc),
            [102, 97, 114, 109, 101, 114, 115] => lookup_818_187(acc),
            [102, 97, 114, 109, 115, 116, 101, 97, 100] => lookup_818_188(acc),
            [102, 105, 101, 108, 100] => lookup_818_189(acc),
            [102, 105, 103, 117, 101, 114, 101, 115] => lookup_818_190(acc),
            [102, 105, 108, 97, 116, 101, 108, 105, 97] => lookup_818_191(acc),
            [102, 105, 108, 109] => lookup_818_192(acc),
            [102, 105, 110, 101, 97, 114, 116] => lookup_818_193(acc),
            [102, 105, 110, 101, 97, 114, 116, 115] => lookup_818_194(acc),
            [102, 105, 110, 108, 97, 110, 100] => lookup_818_195(acc),
            [102, 108, 97, 110, 100, 101, 114, 115] => lookup_818_196(acc),
            [102, 108, 111, 114, 105, 100, 97] => lookup_818_197(acc),
            [102, 111, 114, 99, 101] => lookup_818_198(acc),
            [102, 111, 114, 116, 109, 105, 115, 115, 111, 117, 108, 97] => lookup_818_199(acc),
            [102, 111, 114, 116, 119, 111, 114, 116, 104] => lookup_818_200(acc),
            [102, 111, 117, 110, 100, 97, 116, 105, 111, 110] => lookup_818_201(acc),
            [102, 114, 97, 110, 99, 97, 105, 115, 101] => lookup_818_202(acc),
            [102, 114, 97, 110, 107, 102, 117, 114, 116] => lookup_818_203(acc),
            [102, 114, 97, 110, 122, 105, 115, 107, 97, 110, 101, 114] => lookup_818_204(acc),
            [102, 114, 101, 101, 109, 97, 115, 111, 110, 114, 121] => lookup_818_205(acc),
            [102, 114, 101, 105, 98, 117, 114, 103] => lookup_818_206(acc),
            [102, 114, 105, 98, 111, 117, 114, 103] => lookup_818_207(acc),
            [102, 114, 111, 103] => lookup_818_208(acc),
            [102, 117, 110, 100, 97, 99, 105, 111] => lookup_818_209(acc),
            [102, 117, 114, 110, 105, 116, 117, 114, 101] => lookup_818_210(acc),
            [103, 97, 108, 108, 101, 114, 121] => lookup_818_211(acc),
            [103, 97, 114, 100, 101, 110] => lookup_818_212(acc),
            [103, 97, 116, 101, 119, 97, 121] => lookup_818_213(acc),
            [103, 101, 101, 108, 118, 105, 110, 99, 107] => lookup_818_214(acc),
            [103, 101, 109, 111, 108, 111, 103, 105, 99, 97, 108] => lookup_818_215(acc),
            [103, 101, 111, 108, 111, 103, 121] => lookup_818_216(acc),
            [103, 101, 111, 114, 103, 105, 97] => lookup_818_217(acc),
            [103, 105, 101, 115, 115, 101, 110] => lookup_818_218(acc),
            [103, 108, 97, 115] => lookup_818_219(acc),
            [103, 108, 97, 115, 115] => lookup_818_220(acc),
            [103, 111, 114, 103, 101] => lookup_818_221(acc),
            [103, 114, 97, 110, 100, 114, 97, 112, 105, 100, 115] => lookup_818_222(acc),
            [103, 114, 97, 122] => lookup_818_223(acc),
            [103, 117, 101, 114, 110, 115, 101, 121] => lookup_818_224(acc),
            [104, 97, 108, 108, 111, 102, 102, 97, 109, 101] => lookup_818_225(acc),
            [104, 97, 109, 98, 117, 114, 103] => lookup_818_226(acc),
            [104, 97, 110, 100, 115, 111, 110] => lookup_818_227(acc),
            [104, 97, 114, 118, 101, 115, 116, 99, 101, 108, 101, 98, 114, 97, 116, 105, 111, 110] => {
                lookup_818_228(acc)
            }
            [104, 97, 119, 97, 105, 105] => lookup_818_229(acc),
            [104, 101, 97, 108, 116, 104] => lookup_818_230(acc),
            [104, 101, 105, 109, 97, 116, 117, 110, 100, 117, 104, 114, 101, 110] => {
                lookup_818_231(acc)
            }
            [104, 101, 108, 108, 97, 115] => lookup_818_232(acc),
            [104, 101, 108, 115, 105, 110, 107, 105] => lookup_818_233(acc),
            [104, 101, 109, 98, 121, 103, 100, 115, 102, 111, 114, 98, 117, 110, 100] => {
                lookup_818_234(acc)
            }
            [104, 101, 114, 105, 116, 97, 103, 101] => lookup_818_235(acc),
            [104, 105, 115, 116, 111, 105, 114, 101] => lookup_818_236(acc),
            [104, 105, 115, 116, 111, 114, 105, 99, 97, 108] => lookup_818_237(acc),
            [104, 105, 115, 116, 111, 114, 105, 99, 97, 108, 115, 111, 99, 105, 101, 116, 121] => {
                lookup_818_238(acc)
            }
            [104, 105, 115, 116, 111, 114, 105, 99, 104, 111, 117, 115, 101, 115] => {
                lookup_818_239(acc)
            }
            [104, 105, 115, 116, 111, 114, 105, 115, 99, 104] => lookup_818_240(acc),
            [104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => lookup_818_241(acc),
            [104, 105, 115, 116, 111, 114, 121] => lookup_818_242(acc),
            [104, 105, 115, 116, 111, 114, 121, 111, 102, 115, 99, 105, 101, 110, 99, 101] => {
                lookup_818_243(acc)
            }
            [104, 111, 114, 111, 108, 111, 103, 121] => lookup_818_244(acc),
            [104, 111, 117, 115, 101] => lookup_818_245(acc),
            [104, 117, 109, 97, 110, 105, 116, 105, 101, 115] => lookup_818_246(acc),
            [105, 108, 108, 117, 115, 116, 114, 97, 116, 105, 111, 110] => lookup_818_247(acc),
            [105, 109, 97, 103, 101, 97, 110, 100, 115, 111, 117, 110, 100] => lookup_818_248(acc),
            [105, 110, 100, 105, 97, 110] => lookup_818_249(acc),
            [105, 110, 100, 105, 97, 110, 97] => lookup_818_250(acc),
            [105, 110, 100, 105, 97, 110, 97, 112, 111, 108, 105, 115] => lookup_818_251(acc),
            [105, 110, 100, 105, 97, 110, 109, 97, 114, 107, 101, 116] => lookup_818_252(acc),
            [105, 110, 116, 101, 108, 108, 105, 103, 101, 110, 99, 101] => lookup_818_253(acc),
            [105, 110, 116, 101, 114, 97, 99, 116, 105, 118, 101] => lookup_818_254(acc),
            [105, 114, 97, 113] => lookup_818_255(acc),
            [105, 114, 111, 110] => lookup_818_256(acc),
            [105, 115, 108, 101, 111, 102, 109, 97, 110] => lookup_818_257(acc),
            [106, 97, 109, 105, 115, 111, 110] => lookup_818_258(acc),
            [106, 101, 102, 102, 101, 114, 115, 111, 110] => lookup_818_259(acc),
            [106, 101, 114, 117, 115, 97, 108, 101, 109] => lookup_818_260(acc),
            [106, 101, 119, 101, 108, 114, 121] => lookup_818_261(acc),
            [106, 101, 119, 105, 115, 104] => lookup_818_262(acc),
            [106, 101, 119, 105, 115, 104, 97, 114, 116] => lookup_818_263(acc),
            [106, 102, 107] => lookup_818_264(acc),
            [106, 111, 117, 114, 110, 97, 108, 105, 115, 109] => lookup_818_265(acc),
            [106, 117, 100, 97, 105, 99, 97] => lookup_818_266(acc),
            [106, 117, 100, 121, 103, 97, 114, 108, 97, 110, 100] => lookup_818_267(acc),
            [106, 117, 101, 100, 105, 115, 99, 104, 101, 115] => lookup_818_268(acc),
            [106, 117, 105, 102] => lookup_818_269(acc),
            [107, 97, 114, 97, 116, 101] => lookup_818_270(acc),
            [107, 97, 114, 105, 107, 97, 116, 117, 114] => lookup_818_271(acc),
            [107, 105, 100, 115] => lookup_818_272(acc),
            [107, 111, 101, 98, 101, 110, 104, 97, 118, 110] => lookup_818_273(acc),
            [107, 111, 101, 108, 110] => lookup_818_274(acc),
            [107, 117, 110, 115, 116] => lookup_818_275(acc),
            [107, 117, 110, 115, 116, 115, 97, 109, 109, 108, 117, 110, 103] => lookup_818_276(acc),
            [107, 117, 110, 115, 116, 117, 110, 100, 100, 101, 115, 105, 103, 110] => {
                lookup_818_277(acc)
            }
            [108, 97, 98, 111, 114] => lookup_818_278(acc),
            [108, 97, 98, 111, 117, 114] => lookup_818_279(acc),
            [108, 97, 106, 111, 108, 108, 97] => lookup_818_280(acc),
            [108, 97, 110, 99, 97, 115, 104, 105, 114, 101] => lookup_818_281(acc),
            [108, 97, 110, 100, 101, 115] => lookup_818_282(acc),
            [108, 97, 110, 115] => lookup_818_283(acc),
            [108, 97, 114, 115, 115, 111, 110] => lookup_818_284(acc),
            [108, 101, 119, 105, 115, 109, 105, 108, 108, 101, 114] => lookup_818_285(acc),
            [108, 105, 110, 99, 111, 108, 110] => lookup_818_286(acc),
            [108, 105, 110, 122] => lookup_818_287(acc),
            [108, 105, 118, 105, 110, 103] => lookup_818_288(acc),
            [108, 105, 118, 105, 110, 103, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_818_289(acc)
            }
            [108, 111, 99, 97, 108, 104, 105, 115, 116, 111, 114, 121] => lookup_818_290(acc),
            [108, 111, 110, 100, 111, 110] => lookup_818_291(acc),
            [108, 111, 115, 97, 110, 103, 101, 108, 101, 115] => lookup_818_292(acc),
            [108, 111, 117, 118, 114, 101] => lookup_818_293(acc),
            [108, 111, 121, 97, 108, 105, 115, 116] => lookup_818_294(acc),
            [108, 117, 99, 101, 114, 110, 101] => lookup_818_295(acc),
            [108, 117, 120, 101, 109, 98, 111, 117, 114, 103] => lookup_818_296(acc),
            [108, 117, 122, 101, 114, 110] => lookup_818_297(acc),
            [108, 195, 164, 110, 115] => lookup_818_298(acc),
            [109, 97, 100] => lookup_818_299(acc),
            [109, 97, 100, 114, 105, 100] => lookup_818_300(acc),
            [109, 97, 108, 108, 111, 114, 99, 97] => lookup_818_301(acc),
            [109, 97, 110, 99, 104, 101, 115, 116, 101, 114] => lookup_818_302(acc),
            [109, 97, 110, 115, 105, 111, 110] => lookup_818_303(acc),
            [109, 97, 110, 115, 105, 111, 110, 115] => lookup_818_304(acc),
            [109, 97, 110, 120] => lookup_818_305(acc),
            [109, 97, 114, 98, 117, 114, 103] => lookup_818_306(acc),
            [109, 97, 114, 105, 116, 105, 109, 101] => lookup_818_307(acc),
            [109, 97, 114, 105, 116, 105, 109, 111] => lookup_818_308(acc),
            [109, 97, 114, 121, 108, 97, 110, 100] => lookup_818_309(acc),
            [109, 97, 114, 121, 108, 104, 117, 114, 115, 116] => lookup_818_310(acc),
            [109, 101, 100, 105, 97] => lookup_818_311(acc),
            [109, 101, 100, 105, 99, 97, 108] => lookup_818_312(acc),
            [109, 101, 100, 105, 122, 105, 110, 104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => {
                lookup_818_313(acc)
            }
            [109, 101, 101, 114, 101, 115] => lookup_818_314(acc),
            [109, 101, 109, 111, 114, 105, 97, 108] => lookup_818_315(acc),
            [109, 101, 115, 97, 118, 101, 114, 100, 101] => lookup_818_316(acc),
            [109, 105, 99, 104, 105, 103, 97, 110] => lookup_818_317(acc),
            [109, 105, 100, 97, 116, 108, 97, 110, 116, 105, 99] => lookup_818_318(acc),
            [109, 105, 108, 105, 116, 97, 114, 121] => lookup_818_319(acc),
            [109, 105, 108, 108] => lookup_818_320(acc),
            [109, 105, 110, 101, 114, 115] => lookup_818_321(acc),
            [109, 105, 110, 105, 110, 103] => lookup_818_322(acc),
            [109, 105, 110, 110, 101, 115, 111, 116, 97] => lookup_818_323(acc),
            [109, 105, 115, 115, 105, 108, 101] => lookup_818_324(acc),
            [109, 105, 115, 115, 111, 117, 108, 97] => lookup_818_325(acc),
            [109, 111, 100, 101, 114, 110] => lookup_818_326(acc),
            [109, 111, 109, 97] => lookup_818_327(acc),
            [109, 111, 110, 101, 121] => lookup_818_328(acc),
            [109, 111, 110, 109, 111, 117, 116, 104] => lookup_818_329(acc),
            [109, 111, 110, 116, 105, 99, 101, 108, 108, 111] => lookup_818_330(acc),
            [109, 111, 110, 116, 114, 101, 97, 108] => lookup_818_331(acc),
            [109, 111, 115, 99, 111, 119] => lookup_818_332(acc),
            [109, 111, 116, 111, 114, 99, 121, 99, 108, 101] => lookup_818_333(acc),
            [109, 117, 101, 110, 99, 104, 101, 110] => lookup_818_334(acc),
            [109, 117, 101, 110, 115, 116, 101, 114] => lookup_818_335(acc),
            [109, 117, 108, 104, 111, 117, 115, 101] => lookup_818_336(acc),
            [109, 117, 110, 99, 105, 101] => lookup_818_337(acc),
            [109, 117, 115, 101, 101, 116] => lookup_818_338(acc),
            [109, 117, 115, 101, 117, 109, 99, 101, 110, 116, 101, 114] => lookup_818_339(acc),
            [109, 117, 115, 101, 117, 109, 118, 101, 114, 101, 110, 105, 103, 105, 110, 103] => {
                lookup_818_340(acc)
            }
            [109, 117, 115, 105, 99] => lookup_818_341(acc),
            [110, 97, 116, 105, 111, 110, 97, 108] => lookup_818_342(acc),
            [110, 97, 116, 105, 111, 110, 97, 108, 102, 105, 114, 101, 97, 114, 109, 115] => {
                lookup_818_343(acc)
            }
            [110, 97, 116, 105, 111, 110, 97, 108, 104, 101, 114, 105, 116, 97, 103, 101] => {
                lookup_818_344(acc)
            }
            [110, 97, 116, 105, 118, 101, 97, 109, 101, 114, 105, 99, 97, 110] => {
                lookup_818_345(acc)
            }
            [110, 97, 116, 117, 114, 97, 108, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_818_346(acc)
            }
            [110, 97, 116, 117, 114, 97, 108, 104, 105, 115, 116, 111, 114, 121, 109, 117, 115, 101, 117, 109] => {
                lookup_818_347(acc)
            }
            [110, 97, 116, 117, 114, 97, 108, 115, 99, 105, 101, 110, 99, 101, 115] => {
                lookup_818_348(acc)
            }
            [110, 97, 116, 117, 114, 101] => lookup_818_349(acc),
            [110, 97, 116, 117, 114, 104, 105, 115, 116, 111, 114, 105, 115, 99, 104, 101, 115] => {
                lookup_818_350(acc)
            }
            [110, 97, 116, 117, 117, 114, 119, 101, 116, 101, 110, 115, 99, 104, 97, 112, 112, 101, 110] => {
                lookup_818_351(acc)
            }
            [110, 97, 117, 109, 98, 117, 114, 103] => lookup_818_352(acc),
            [110, 97, 118, 97, 108] => lookup_818_353(acc),
            [110, 101, 98, 114, 97, 115, 107, 97] => lookup_818_354(acc),
            [110, 101, 117, 101, 115] => lookup_818_355(acc),
            [110, 101, 119, 104, 97, 109, 112, 115, 104, 105, 114, 101] => lookup_818_356(acc),
            [110, 101, 119, 106, 101, 114, 115, 101, 121] => lookup_818_357(acc),
            [110, 101, 119, 109, 101, 120, 105, 99, 111] => lookup_818_358(acc),
            [110, 101, 119, 112, 111, 114, 116] => lookup_818_359(acc),
            [110, 101, 119, 115, 112, 97, 112, 101, 114] => lookup_818_360(acc),
            [110, 101, 119, 121, 111, 114, 107] => lookup_818_361(acc),
            [110, 105, 101, 112, 99, 101] => lookup_818_362(acc),
            [110, 111, 114, 102, 111, 108, 107] => lookup_818_363(acc),
            [110, 111, 114, 116, 104] => lookup_818_364(acc),
            [110, 114, 119] => lookup_818_365(acc),
            [110, 121, 99] => lookup_818_366(acc),
            [110, 121, 110, 121] => lookup_818_367(acc),
            [111, 99, 101, 97, 110, 111, 103, 114, 97, 112, 104, 105, 99] => lookup_818_368(acc),
            [111, 99, 101, 97, 110, 111, 103, 114, 97, 112, 104, 105, 113, 117, 101] => {
                lookup_818_369(acc)
            }
            [111, 109, 97, 104, 97] => lookup_818_370(acc),
            [111, 110, 108, 105, 110, 101] => lookup_818_371(acc),
            [111, 110, 116, 97, 114, 105, 111] => lookup_818_372(acc),
            [111, 112, 101, 110, 97, 105, 114] => lookup_818_373(acc),
            [111, 114, 101, 103, 111, 110] => lookup_818_374(acc),
            [111, 114, 101, 103, 111, 110, 116, 114, 97, 105, 108] => lookup_818_375(acc),
            [111, 116, 97, 103, 111] => lookup_818_376(acc),
            [111, 120, 102, 111, 114, 100] => lookup_818_377(acc),
            [112, 97, 99, 105, 102, 105, 99] => lookup_818_378(acc),
            [112, 97, 100, 101, 114, 98, 111, 114, 110] => lookup_818_379(acc),
            [112, 97, 108, 97, 99, 101] => lookup_818_380(acc),
            [112, 97, 108, 101, 111] => lookup_818_381(acc),
            [112, 97, 108, 109, 115, 112, 114, 105, 110, 103, 115] => lookup_818_382(acc),
            [112, 97, 110, 97, 109, 97] => lookup_818_383(acc),
            [112, 97, 114, 105, 115] => lookup_818_384(acc),
            [112, 97, 115, 97, 100, 101, 110, 97] => lookup_818_385(acc),
            [112, 104, 97, 114, 109, 97, 99, 121] => lookup_818_386(acc),
            [112, 104, 105, 108, 97, 100, 101, 108, 112, 104, 105, 97] => lookup_818_387(acc),
            [112, 104, 105, 108, 97, 100, 101, 108, 112, 104, 105, 97, 97, 114, 101, 97] => {
                lookup_818_388(acc)
            }
            [112, 104, 105, 108, 97, 116, 101, 108, 121] => lookup_818_389(acc),
            [112, 104, 111, 101, 110, 105, 120] => lookup_818_390(acc),
            [112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 121] => lookup_818_391(acc),
            [112, 105, 108, 111, 116, 115] => lookup_818_392(acc),
            [112, 105, 116, 116, 115, 98, 117, 114, 103, 104] => lookup_818_393(acc),
            [112, 108, 97, 110, 101, 116, 97, 114, 105, 117, 109] => lookup_818_394(acc),
            [112, 108, 97, 110, 116, 97, 116, 105, 111, 110] => lookup_818_395(acc),
            [112, 108, 97, 110, 116, 115] => lookup_818_396(acc),
            [112, 108, 97, 122, 97] => lookup_818_397(acc),
            [112, 111, 114, 116, 97, 108] => lookup_818_398(acc),
            [112, 111, 114, 116, 108, 97, 110, 100] => lookup_818_399(acc),
            [112, 111, 114, 116, 108, 108, 105, 103, 97, 116] => lookup_818_400(acc),
            [112, 111, 115, 116, 115, 45, 97, 110, 100, 45, 116, 101, 108, 101, 99, 111, 109, 109, 117, 110, 105, 99, 97, 116, 105, 111, 110, 115] => {
                lookup_818_401(acc)
            }
            [112, 114, 101, 115, 101, 114, 118, 97, 116, 105, 111, 110] => lookup_818_402(acc),
            [112, 114, 101, 115, 105, 100, 105, 111] => lookup_818_403(acc),
            [112, 114, 101, 115, 115] => lookup_818_404(acc),
            [112, 114, 111, 106, 101, 99, 116] => lookup_818_405(acc),
            [112, 117, 98, 108, 105, 99] => lookup_818_406(acc),
            [112, 117, 98, 111, 108] => lookup_818_407(acc),
            [113, 117, 101, 98, 101, 99] => lookup_818_408(acc),
            [114, 97, 105, 108, 114, 111, 97, 100] => lookup_818_409(acc),
            [114, 97, 105, 108, 119, 97, 121] => lookup_818_410(acc),
            [114, 101, 115, 101, 97, 114, 99, 104] => lookup_818_411(acc),
            [114, 101, 115, 105, 115, 116, 97, 110, 99, 101] => lookup_818_412(acc),
            [114, 105, 111, 100, 101, 106, 97, 110, 101, 105, 114, 111] => lookup_818_413(acc),
            [114, 111, 99, 104, 101, 115, 116, 101, 114] => lookup_818_414(acc),
            [114, 111, 99, 107, 97, 114, 116] => lookup_818_415(acc),
            [114, 111, 109, 97] => lookup_818_416(acc),
            [114, 117, 115, 115, 105, 97] => lookup_818_417(acc),
            [115, 97, 105, 110, 116, 108, 111, 117, 105, 115] => lookup_818_418(acc),
            [115, 97, 108, 101, 109] => lookup_818_419(acc),
            [115, 97, 108, 118, 97, 100, 111, 114, 100, 97, 108, 105] => lookup_818_420(acc),
            [115, 97, 108, 122, 98, 117, 114, 103] => lookup_818_421(acc),
            [115, 97, 110, 100, 105, 101, 103, 111] => lookup_818_422(acc),
            [115, 97, 110, 102, 114, 97, 110, 99, 105, 115, 99, 111] => lookup_818_423(acc),
            [115, 97, 110, 116, 97, 98, 97, 114, 98, 97, 114, 97] => lookup_818_424(acc),
            [115, 97, 110, 116, 97, 99, 114, 117, 122] => lookup_818_425(acc),
            [115, 97, 110, 116, 97, 102, 101] => lookup_818_426(acc),
            [115, 97, 115, 107, 97, 116, 99, 104, 101, 119, 97, 110] => lookup_818_427(acc),
            [115, 97, 116, 120] => lookup_818_428(acc),
            [115, 97, 118, 97, 110, 110, 97, 104, 103, 97] => lookup_818_429(acc),
            [115, 99, 104, 108, 101, 115, 105, 115, 99, 104, 101, 115] => lookup_818_430(acc),
            [115, 99, 104, 111, 101, 110, 98, 114, 117, 110, 110] => lookup_818_431(acc),
            [115, 99, 104, 111, 107, 111, 108, 97, 100, 101, 110] => lookup_818_432(acc),
            [115, 99, 104, 111, 111, 108] => lookup_818_433(acc),
            [115, 99, 104, 119, 101, 105, 122] => lookup_818_434(acc),
            [115, 99, 105, 101, 110, 99, 101] => lookup_818_435(acc),
            [115, 99, 105, 101, 110, 99, 101, 45, 102, 105, 99, 116, 105, 111, 110] => {
                lookup_818_436(acc)
            }
            [115, 99, 105, 101, 110, 99, 101, 97, 110, 100, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_818_437(acc)
            }
            [115, 99, 105, 101, 110, 99, 101, 97, 110, 100, 105, 110, 100, 117, 115, 116, 114, 121] => {
                lookup_818_438(acc)
            }
            [115, 99, 105, 101, 110, 99, 101, 99, 101, 110, 116, 101, 114] => lookup_818_439(acc),
            [115, 99, 105, 101, 110, 99, 101, 99, 101, 110, 116, 101, 114, 115] => {
                lookup_818_440(acc)
            }
            [115, 99, 105, 101, 110, 99, 101, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_818_441(acc)
            }
            [115, 99, 105, 101, 110, 99, 101, 115] => lookup_818_442(acc),
            [115, 99, 105, 101, 110, 99, 101, 115, 110, 97, 116, 117, 114, 101, 108, 108, 101, 115] => {
                lookup_818_443(acc)
            }
            [115, 99, 111, 116, 108, 97, 110, 100] => lookup_818_444(acc),
            [115, 101, 97, 112, 111, 114, 116] => lookup_818_445(acc),
            [115, 101, 116, 116, 108, 101, 109, 101, 110, 116] => lookup_818_446(acc),
            [115, 101, 116, 116, 108, 101, 114, 115] => lookup_818_447(acc),
            [115, 104, 101, 108, 108] => lookup_818_448(acc),
            [115, 104, 101, 114, 98, 114, 111, 111, 107, 101] => lookup_818_449(acc),
            [115, 105, 98, 101, 110, 105, 107] => lookup_818_450(acc),
            [115, 105, 108, 107] => lookup_818_451(acc),
            [115, 107, 105] => lookup_818_452(acc),
            [115, 107, 111, 108, 101] => lookup_818_453(acc),
            [115, 111, 99, 105, 101, 116, 121] => lookup_818_454(acc),
            [115, 111, 108, 111, 103, 110, 101] => lookup_818_455(acc),
            [115, 111, 117, 110, 100, 97, 110, 100, 118, 105, 115, 105, 111, 110] => {
                lookup_818_456(acc)
            }
            [115, 111, 117, 116, 104, 99, 97, 114, 111, 108, 105, 110, 97] => lookup_818_457(acc),
            [115, 111, 117, 116, 104, 119, 101, 115, 116] => lookup_818_458(acc),
            [115, 112, 97, 99, 101] => lookup_818_459(acc),
            [115, 112, 121] => lookup_818_460(acc),
            [115, 113, 117, 97, 114, 101] => lookup_818_461(acc),
            [115, 116, 97, 100, 116] => lookup_818_462(acc),
            [115, 116, 97, 108, 98, 97, 110, 115] => lookup_818_463(acc),
            [115, 116, 97, 114, 110, 98, 101, 114, 103] => lookup_818_464(acc),
            [115, 116, 97, 116, 101] => lookup_818_465(acc),
            [115, 116, 97, 116, 101, 111, 102, 100, 101, 108, 97, 119, 97, 114, 101] => {
                lookup_818_466(acc)
            }
            [115, 116, 97, 116, 105, 111, 110] => lookup_818_467(acc),
            [115, 116, 101, 97, 109] => lookup_818_468(acc),
            [115, 116, 101, 105, 101, 114, 109, 97, 114, 107] => lookup_818_469(acc),
            [115, 116, 106, 111, 104, 110] => lookup_818_470(acc),
            [115, 116, 111, 99, 107, 104, 111, 108, 109] => lookup_818_471(acc),
            [115, 116, 112, 101, 116, 101, 114, 115, 98, 117, 114, 103] => lookup_818_472(acc),
            [115, 116, 117, 116, 116, 103, 97, 114, 116] => lookup_818_473(acc),
            [115, 117, 105, 115, 115, 101] => lookup_818_474(acc),
            [115, 117, 114, 103, 101, 111, 110, 115, 104, 97, 108, 108] => lookup_818_475(acc),
            [115, 117, 114, 114, 101, 121] => lookup_818_476(acc),
            [115, 118, 105, 122, 122, 101, 114, 97] => lookup_818_477(acc),
            [115, 119, 101, 100, 101, 110] => lookup_818_478(acc),
            [115, 121, 100, 110, 101, 121] => lookup_818_479(acc),
            [116, 97, 110, 107] => lookup_818_480(acc),
            [116, 99, 109] => lookup_818_481(acc),
            [116, 101, 99, 104, 110, 111, 108, 111, 103, 121] => lookup_818_482(acc),
            [116, 101, 108, 101, 107, 111, 109, 109, 117, 110, 105, 107, 97, 116, 105, 111, 110] => {
                lookup_818_483(acc)
            }
            [116, 101, 108, 101, 118, 105, 115, 105, 111, 110] => lookup_818_484(acc),
            [116, 101, 120, 97, 115] => lookup_818_485(acc),
            [116, 101, 120, 116, 105, 108, 101] => lookup_818_486(acc),
            [116, 104, 101, 97, 116, 101, 114] => lookup_818_487(acc),
            [116, 105, 109, 101] => lookup_818_488(acc),
            [116, 105, 109, 101, 107, 101, 101, 112, 105, 110, 103] => lookup_818_489(acc),
            [116, 111, 112, 111, 108, 111, 103, 121] => lookup_818_490(acc),
            [116, 111, 114, 105, 110, 111] => lookup_818_491(acc),
            [116, 111, 117, 99, 104] => lookup_818_492(acc),
            [116, 111, 119, 110] => lookup_818_493(acc),
            [116, 114, 97, 110, 115, 112, 111, 114, 116] => lookup_818_494(acc),
            [116, 114, 101, 101] => lookup_818_495(acc),
            [116, 114, 111, 108, 108, 101, 121] => lookup_818_496(acc),
            [116, 114, 117, 115, 116] => lookup_818_497(acc),
            [116, 114, 117, 115, 116, 101, 101] => lookup_818_498(acc),
            [117, 104, 114, 101, 110] => lookup_818_499(acc),
            [117, 108, 109] => lookup_818_500(acc),
            [117, 110, 100, 101, 114, 115, 101, 97] => lookup_818_501(acc),
            [117, 110, 105, 118, 101, 114, 115, 105, 116, 121] => lookup_818_502(acc),
            [117, 115, 97] => lookup_818_503(acc),
            [117, 115, 97, 110, 116, 105, 113, 117, 101, 115] => lookup_818_504(acc),
            [117, 115, 97, 114, 116, 115] => lookup_818_505(acc),
            [117, 115, 99, 111, 117, 110, 116, 114, 121, 101, 115, 116, 97, 116, 101] => {
                lookup_818_506(acc)
            }
            [117, 115, 99, 117, 108, 116, 117, 114, 101] => lookup_818_507(acc),
            [117, 115, 100, 101, 99, 111, 114, 97, 116, 105, 118, 101, 97, 114, 116, 115] => {
                lookup_818_508(acc)
            }
            [117, 115, 103, 97, 114, 100, 101, 110] => lookup_818_509(acc),
            [117, 115, 104, 105, 115, 116, 111, 114, 121] => lookup_818_510(acc),
            [117, 115, 104, 117, 97, 105, 97] => lookup_818_511(acc),
            [117, 115, 108, 105, 118, 105, 110, 103, 104, 105, 115, 116, 111, 114, 121] => {
                lookup_818_512(acc)
            }
            [117, 116, 97, 104] => lookup_818_513(acc),
            [117, 118, 105, 99] => lookup_818_514(acc),
            [118, 97, 108, 108, 101, 121] => lookup_818_515(acc),
            [118, 97, 110, 116, 97, 97] => lookup_818_516(acc),
            [118, 101, 114, 115, 97, 105, 108, 108, 101, 115] => lookup_818_517(acc),
            [118, 105, 107, 105, 110, 103] => lookup_818_518(acc),
            [118, 105, 108, 108, 97, 103, 101] => lookup_818_519(acc),
            [118, 105, 114, 103, 105, 110, 105, 97] => lookup_818_520(acc),
            [118, 105, 114, 116, 117, 97, 108] => lookup_818_521(acc),
            [118, 105, 114, 116, 117, 101, 108] => lookup_818_522(acc),
            [118, 108, 97, 97, 110, 100, 101, 114, 101, 110] => lookup_818_523(acc),
            [118, 111, 108, 107, 101, 110, 107, 117, 110, 100, 101] => lookup_818_524(acc),
            [119, 97, 108, 101, 115] => lookup_818_525(acc),
            [119, 97, 108, 108, 111, 110, 105, 101] => lookup_818_526(acc),
            [119, 97, 114] => lookup_818_527(acc),
            [119, 97, 115, 104, 105, 110, 103, 116, 111, 110, 100, 99] => lookup_818_528(acc),
            [119, 97, 116, 99, 104, 45, 97, 110, 100, 45, 99, 108, 111, 99, 107] => {
                lookup_818_529(acc)
            }
            [119, 97, 116, 99, 104, 97, 110, 100, 99, 108, 111, 99, 107] => lookup_818_530(acc),
            [119, 101, 115, 116, 101, 114, 110] => lookup_818_531(acc),
            [119, 101, 115, 116, 102, 97, 108, 101, 110] => lookup_818_532(acc),
            [119, 104, 97, 108, 105, 110, 103] => lookup_818_533(acc),
            [119, 105, 108, 100, 108, 105, 102, 101] => lookup_818_534(acc),
            [119, 105, 108, 108, 105, 97, 109, 115, 98, 117, 114, 103] => lookup_818_535(acc),
            [119, 105, 110, 100, 109, 105, 108, 108] => lookup_818_536(acc),
            [119, 111, 114, 107, 115, 104, 111, 112] => lookup_818_537(acc),
            [120, 110, 45, 45, 57, 100, 98, 104, 98, 108, 103, 54, 100, 105] => lookup_818_538(acc),
            [120, 110, 45, 45, 99, 111, 109, 117, 110, 105, 99, 97, 101, 115, 45, 118, 54, 97, 50, 111] => {
                lookup_818_539(acc)
            }
            [120, 110, 45, 45, 99, 111, 114, 114, 101, 105, 111, 115, 45, 101, 45, 116, 101, 108, 101, 99, 111, 109, 117, 110, 105, 99, 97, 101, 115, 45, 103, 104, 99, 50, 57, 97] => {
                lookup_818_540(acc)
            }
            [120, 110, 45, 45, 104, 49, 97, 101, 103, 104] => lookup_818_541(acc),
            [120, 110, 45, 45, 108, 110, 115, 45, 113, 108, 97] => lookup_818_542(acc),
            [121, 111, 114, 107] => lookup_818_543(acc),
            [121, 111, 114, 107, 115, 104, 105, 114, 101] => lookup_818_544(acc),
            [121, 111, 115, 101, 109, 105, 116, 101] => lookup_818_545(acc),
            [121, 111, 117, 116, 104] => lookup_818_546(acc),
            [122, 111, 111, 108, 111, 103, 105, 99, 97, 108] => lookup_818_547(acc),
            [122, 111, 111, 108, 111, 103, 121] => lookup_818_548(acc),
            [208, 184, 208, 186, 208, 190, 208, 188] => lookup_818_549(acc),
            [215, 153, 215, 168, 215, 149, 215, 169, 215, 156, 215, 153, 215, 157] => {
                lookup_818_550(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_819() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 101, 114, 111] => lookup_821_0(acc),
            [98, 105, 122] => lookup_821_1(acc),
            [99, 111, 109] => lookup_821_2(acc),
            [99, 111, 111, 112] => lookup_821_3(acc),
            [101, 100, 117] => lookup_821_4(acc),
            [103, 111, 118] => lookup_821_5(acc),
            [105, 110, 102, 111] => lookup_821_6(acc),
            [105, 110, 116] => lookup_821_7(acc),
            [109, 105, 108] => lookup_821_8(acc),
            [109, 117, 115, 101, 117, 109] => lookup_821_9(acc),
            [110, 97, 109, 101] => lookup_821_10(acc),
            [110, 101, 116] => lookup_821_11(acc),
            [111, 114, 103] => lookup_821_12(acc),
            [112, 114, 111] => lookup_821_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_822_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_822_0(acc),
            [98, 105, 122] => lookup_822_1(acc),
            [99, 111] => lookup_822_2(acc),
            [99, 111, 109] => lookup_822_3(acc),
            [99, 111, 111, 112] => lookup_822_4(acc),
            [101, 100, 117] => lookup_822_5(acc),
            [103, 111, 118] => lookup_822_6(acc),
            [105, 110, 116] => lookup_822_7(acc),
            [109, 117, 115, 101, 117, 109] => lookup_822_8(acc),
            [110, 101, 116] => lookup_822_9(acc),
            [111, 114, 103] => lookup_822_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_823_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_823_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_823_0(acc),
            [99, 111, 109] => lookup_823_1(acc),
            [101, 100, 117] => lookup_823_2(acc),
            [103, 111, 98] => lookup_823_3(acc),
            [110, 101, 116] => lookup_823_4(acc),
            [111, 114, 103] => lookup_823_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_824_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_824_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_824_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_824_1(acc),
            [99, 111, 109] => lookup_824_2(acc),
            [101, 100, 117] => lookup_824_3(acc),
            [103, 111, 118] => lookup_824_4(acc),
            [109, 105, 108] => lookup_824_5(acc),
            [110, 97, 109, 101] => lookup_824_6(acc),
            [110, 101, 116] => lookup_824_7(acc),
            [111, 114, 103] => lookup_824_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_825_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_825_0(acc),
            [97, 100, 118] => lookup_825_1(acc),
            [99, 111] => lookup_825_2(acc),
            [101, 100, 117] => lookup_825_3(acc),
            [103, 111, 118] => lookup_825_4(acc),
            [109, 105, 108] => lookup_825_5(acc),
            [110, 101, 116] => lookup_825_6(acc),
            [111, 114, 103] => lookup_825_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_826_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 97] => lookup_826_0(acc),
            [99, 99] => lookup_826_1(acc),
            [99, 111] => lookup_826_2(acc),
            [99, 111, 109] => lookup_826_3(acc),
            [100, 114] => lookup_826_4(acc),
            [105, 110] => lookup_826_5(acc),
            [105, 110, 102, 111] => lookup_826_6(acc),
            [109, 111, 98, 105] => lookup_826_7(acc),
            [109, 120] => lookup_826_8(acc),
            [110, 97, 109, 101] => lookup_826_9(acc),
            [111, 114] => lookup_826_10(acc),
            [111, 114, 103] => lookup_826_11(acc),
            [112, 114, 111] => lookup_826_12(acc),
            [115, 99, 104, 111, 111, 108] => lookup_826_13(acc),
            [116, 118] => lookup_826_14(acc),
            [117, 115] => lookup_826_15(acc),
            [119, 115] => lookup_826_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_827() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_828() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_829_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_829_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_829_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_829_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_829_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_829_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_829<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114] => lookup_829_0(info, labels, acc),
            [104, 105, 115] => lookup_829_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_830() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_833_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_833_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_833<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_833_0(acc),
            [110, 111, 109] => lookup_833_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_834() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_836_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_4_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_4_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 100, 110] => lookup_836_4_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111, 100] => lookup_836_4_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_6_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_6_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_6_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 101, 110, 116, 114, 97, 108, 117, 115] => lookup_836_6_0(acc),
            [101, 97, 115, 116, 97, 115, 105, 97] => lookup_836_6_1(acc),
            [101, 97, 115, 116, 117, 115, 50] => lookup_836_6_2(acc),
            [119, 101, 115, 116, 101, 117, 114, 111, 112, 101] => lookup_836_6_3(acc),
            [119, 101, 115, 116, 117, 115, 50] => lookup_836_6_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_836_22_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_24<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117] => lookup_836_24_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_30_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 49, 45, 100, 101] => lookup_836_30_0(acc),
            [119, 101, 115, 116, 49, 45, 117, 115] => lookup_836_30_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_33_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_33<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_836_33_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_836_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_50_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_50_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_50<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108, 115, 45, 115, 116, 111, 49] => lookup_836_50_0(acc),
            [106, 108, 115, 45, 115, 116, 111, 50] => lookup_836_50_1(acc),
            [106, 108, 115, 45, 115, 116, 111, 51] => lookup_836_50_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_54_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_54_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_54_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_54_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_836_54_2_0(acc),
            [103, 108, 111, 98, 97, 108] => lookup_836_54_2_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_54_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_54_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_54_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_54_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_836_54_3_0(acc),
            [98] => lookup_836_54_3_1(acc),
            [103, 108, 111, 98, 97, 108] => lookup_836_54_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_54<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [102, 114, 101, 101, 116, 108, 115] => lookup_836_54_0(acc),
            [109, 97, 112] => lookup_836_54_1(acc),
            [112, 114, 111, 100] => lookup_836_54_2(info, labels, acc),
            [115, 115, 108] => lookup_836_54_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 112] => lookup_836_55_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_87_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_87_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_87_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_87_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_87_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_87_0_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_87_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [102, 114, 45, 49] => lookup_836_87_0_0(acc),
            [108, 111, 110, 45, 49] => lookup_836_87_0_1(acc),
            [108, 111, 110, 45, 50] => lookup_836_87_0_2(acc),
            [110, 121, 45, 49] => lookup_836_87_0_3(acc),
            [110, 121, 45, 50] => lookup_836_87_0_4(acc),
            [115, 103, 45, 49] => lookup_836_87_0_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_87<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_836_87_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_104_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_104_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_836_104_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_836_104_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_104_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_836_104_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_836_104<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [104, 111, 115, 116, 105, 110, 103] => lookup_836_104_0(info, labels, acc),
            [119, 101, 98, 112, 97, 97, 115] => lookup_836_104_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_113_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_113_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_113<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_836_113_0(acc),
            [110, 111, 114, 100, 101, 115, 116, 101, 45, 105, 100, 99] => lookup_836_113_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_114_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_114<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_836_114_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_129_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_129_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_129<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [115, 111, 99] => lookup_836_129_0(acc),
            [117, 115, 101, 114] => lookup_836_129_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_134_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_134<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116, 97] => lookup_836_134_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_136_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_136<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_836_136_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_138_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_138<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_836_138_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_143_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_143_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_143_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_143_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [97, 116, 108] => lookup_836_143_0_0(acc),
            [110, 106, 115] => lookup_836_143_0_1(acc),
            [114, 105, 99] => lookup_836_143_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_143<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_836_143_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_145_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_145_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836_145<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 97, 103, 101] => lookup_836_145_0(acc),
            [119, 101, 98, 115, 105, 116, 101] => lookup_836_145_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_836<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => lookup_836_0(acc),
            [97, 108, 119, 97, 121, 115, 100, 97, 116, 97] => lookup_836_1(acc),
            [97, 112, 112, 117, 100, 111] => lookup_836_2(acc),
            [97, 116, 45, 98, 97, 110, 100, 45, 99, 97, 109, 112] => lookup_836_3(acc),
            [97, 116, 108, 97, 115, 115, 105, 97, 110, 45, 100, 101, 118] => {
                lookup_836_4(info, labels, acc)
            }
            [97, 122, 117, 114, 101, 45, 109, 111, 98, 105, 108, 101] => lookup_836_5(acc),
            [97, 122, 117, 114, 101, 115, 116, 97, 116, 105, 99, 97, 112, 112, 115] => {
                lookup_836_6(labels, acc)
            }
            [97, 122, 117, 114, 101, 119, 101, 98, 115, 105, 116, 101, 115] => lookup_836_7(acc),
            [98, 97, 114, 48] => lookup_836_8(acc),
            [98, 97, 114, 49] => lookup_836_9(acc),
            [98, 97, 114, 50] => lookup_836_10(acc),
            [98, 97, 114, 115, 121] => lookup_836_11(acc),
            [98, 105, 116, 98, 114, 105, 100, 103, 101] => lookup_836_12(acc),
            [98, 108, 97, 99, 107, 98, 97, 117, 100, 99, 100, 110] => lookup_836_13(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_836_14(acc),
            [98, 111, 111, 109, 108, 97] => lookup_836_15(acc),
            [98, 111, 117, 110, 99, 101, 109, 101] => lookup_836_16(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_836_17(acc),
            [98, 114, 111, 107, 101, 45, 105, 116] => lookup_836_18(acc),
            [98, 117, 121, 115, 104, 111, 117, 115, 101, 115] => lookup_836_19(acc),
            [99, 97, 115, 97, 99, 97, 109] => lookup_836_20(acc),
            [99, 100, 110, 45, 101, 100, 103, 101, 115] => lookup_836_21(acc),
            [99, 100, 110, 55, 55] => lookup_836_22(info, labels, acc),
            [99, 100, 110, 55, 55, 45, 115, 115, 108] => lookup_836_23(acc),
            [99, 104, 97, 110, 110, 101, 108, 115, 100, 118, 114] => lookup_836_24(labels, acc),
            [99, 108, 105, 99, 107, 114, 105, 115, 105, 110, 103] => lookup_836_25(acc),
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_836_26(acc),
            [99, 108, 111, 117, 100, 97, 112, 112] => lookup_836_27(acc),
            [99, 108, 111, 117, 100, 102, 114, 111, 110, 116] => lookup_836_28(acc),
            [99, 108, 111, 117, 100, 102, 117, 110, 99, 116, 105, 111, 110, 115] => {
                lookup_836_29(acc)
            }
            [99, 108, 111, 117, 100, 106, 105, 102, 102, 121] => lookup_836_30(labels, acc),
            [99, 108, 111, 117, 100, 121, 99, 108, 117, 115, 116, 101, 114] => lookup_836_31(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_836_32(acc),
            [99, 114, 121, 112, 116, 111, 110, 111, 109, 105, 99] => {
                lookup_836_33(info, labels, acc)
            }
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_836_34(acc),
            [100, 100, 110, 115] => lookup_836_35(acc),
            [100, 101, 98, 105, 97, 110] => lookup_836_36(acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_836_37(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_836_38(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_836_39(acc),
            [100, 110, 115, 117, 112] => lookup_836_40(acc),
            [100, 111, 101, 115, 45, 105, 116] => lookup_836_41(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_836_42(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_836_43(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_836_44(acc),
            [100, 121, 110, 97, 116, 104, 111, 109, 101] => lookup_836_45(acc),
            [100, 121, 110, 117] => lookup_836_46(acc),
            [100, 121, 110, 118, 54] => lookup_836_47(acc),
            [101, 97, 116, 105, 110, 103, 45, 111, 114, 103, 97, 110, 105, 99] => {
                lookup_836_48(acc)
            }
            [101, 100, 103, 101, 97, 112, 112] => lookup_836_49(acc),
            [101, 108, 97, 115, 116, 120] => lookup_836_50(info, labels, acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => lookup_836_51(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_836_52(acc),
            [102, 97, 115, 116, 98, 108, 111, 103] => lookup_836_53(acc),
            [102, 97, 115, 116, 108, 121] => lookup_836_54(info, labels, acc),
            [102, 97, 115, 116, 108, 121, 108, 98] => lookup_836_55(labels, acc),
            [102, 97, 115, 116, 115, 116, 97, 99, 107, 115] => lookup_836_56(acc),
            [102, 101, 115, 116, 101, 45, 105, 112] => lookup_836_57(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_836_58(acc)
            }
            [102, 108, 121, 110, 110, 104, 111, 115, 116, 105, 110, 103] => lookup_836_59(acc),
            [102, 114, 111, 109, 45, 97, 122] => lookup_836_60(acc),
            [102, 114, 111, 109, 45, 99, 111] => lookup_836_61(acc),
            [102, 114, 111, 109, 45, 108, 97] => lookup_836_62(acc),
            [102, 114, 111, 109, 45, 110, 121] => lookup_836_63(acc),
            [103, 98] => lookup_836_64(acc),
            [103, 101, 116, 115, 45, 105, 116] => lookup_836_65(acc),
            [104, 97, 109, 45, 114, 97, 100, 105, 111, 45, 111, 112] => lookup_836_66(acc),
            [104, 105, 99, 97, 109] => lookup_836_67(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_836_68(acc),
            [104, 111, 109, 101, 105, 112] => lookup_836_69(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_836_70(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_836_71(acc),
            [104, 117] => lookup_836_72(acc),
            [105, 110] => lookup_836_73(acc),
            [105, 110, 45, 100, 115, 108] => lookup_836_74(acc),
            [105, 110, 45, 116, 104, 101, 45, 98, 97, 110, 100] => lookup_836_75(acc),
            [105, 110, 45, 118, 112, 110] => lookup_836_76(acc),
            [105, 111, 98, 98] => lookup_836_77(acc),
            [105, 112, 105, 102, 111, 110, 121] => lookup_836_78(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_836_79(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_836_80(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_836_81(acc),
            [106, 112] => lookup_836_82(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_836_83(acc),
            [107, 105, 110, 103, 104, 111, 115, 116] => lookup_836_84(acc),
            [107, 110, 120, 45, 115, 101, 114, 118, 101, 114] => lookup_836_85(acc),
            [107, 114, 101, 108, 108, 105, 97, 110] => lookup_836_86(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_836_87(info, labels, acc)
            }
            [109, 101, 105, 110, 102, 111, 114, 117, 109] => lookup_836_88(acc),
            [109, 101, 109, 115, 101, 116] => lookup_836_89(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_836_90(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_836_91(acc),
            [109, 121, 100, 105, 115, 115, 101, 110, 116] => lookup_836_92(acc),
            [109, 121, 101, 102, 102, 101, 99, 116] => lookup_836_93(acc),
            [109, 121, 102, 114, 105, 116, 122] => lookup_836_94(acc),
            [109, 121, 109, 101, 100, 105, 97, 112, 99] => lookup_836_95(acc),
            [109, 121, 112, 115, 120] => lookup_836_96(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_836_97(acc)
            }
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_836_98(acc),
            [110, 104, 108, 102, 97, 110] => lookup_836_99(acc),
            [110, 111, 45, 105, 112] => lookup_836_100(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_836_101(acc),
            [111, 102, 102, 105, 99, 101, 45, 111, 110, 45, 116, 104, 101] => lookup_836_102(acc),
            [111, 110, 97, 118, 115, 116, 97, 99, 107] => lookup_836_103(acc),
            [111, 118, 104] => lookup_836_104(info, labels, acc),
            [111, 119, 110, 105, 112] => lookup_836_105(acc),
            [112, 103, 97, 102, 97, 110] => lookup_836_106(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_836_107(acc),
            [112, 114, 105, 118, 97, 116, 105, 122, 101, 104, 101, 97, 108, 116, 104, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_836_108(acc)
            }
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_836_109(acc),
            [114, 101, 100, 105, 114, 101, 99, 116, 109, 101] => lookup_836_110(acc),
            [114, 101, 115, 101, 114, 118, 101, 45, 111, 110, 108, 105, 110, 101] => {
                lookup_836_111(acc)
            }
            [114, 117] => lookup_836_112(acc),
            [115, 97, 118, 101, 105, 110, 99, 108, 111, 117, 100] => {
                lookup_836_113(info, labels, acc)
            }
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_836_114(info, labels, acc),
            [115, 99, 104, 111, 107, 111, 107, 101, 107, 115] => lookup_836_115(acc),
            [115, 99, 114, 97, 112, 112, 101, 114, 45, 115, 105, 116, 101] => lookup_836_116(acc),
            [115, 101] => lookup_836_117(acc),
            [115, 101, 105, 100, 97, 116] => lookup_836_118(acc),
            [115, 101, 108, 102, 105, 112] => lookup_836_119(acc),
            [115, 101, 108, 108, 115, 45, 105, 116] => lookup_836_120(acc),
            [115, 101, 110, 115, 101, 101, 114, 105, 110, 103] => lookup_836_121(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_836_122(acc),
            [115, 101, 114, 118, 101, 98, 108, 111, 103] => lookup_836_123(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_836_124(acc),
            [115, 101, 114, 118, 101, 109, 105, 110, 101, 99, 114, 97, 102, 116] => {
                lookup_836_125(acc)
            }
            [115, 104, 111, 112, 115, 101, 108, 101, 99, 116] => lookup_836_126(acc),
            [115, 105, 116, 101, 108, 101, 97, 102] => lookup_836_127(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_836_128(acc),
            [115, 114, 99, 102] => lookup_836_129(info, labels, acc),
            [115, 116, 97, 116, 105, 99, 45, 97, 99, 99, 101, 115, 115] => lookup_836_130(acc),
            [115, 117, 112, 97, 98, 97, 115, 101] => lookup_836_131(acc),
            [115, 121, 116, 101, 115] => lookup_836_132(acc),
            [116, 51, 108, 51, 112, 48, 114, 116] => lookup_836_133(acc),
            [116, 97, 105, 108, 115, 99, 97, 108, 101] => lookup_836_134(info, labels, acc),
            [116, 104, 114, 117, 104, 101, 114, 101] => lookup_836_135(acc),
            [116, 111, 114, 112, 114, 111, 106, 101, 99, 116] => lookup_836_136(labels, acc),
            [116, 115] => lookup_836_137(acc),
            [116, 115, 117, 107, 97, 101, 114, 117] => lookup_836_138(info, labels, acc),
            [116, 119, 109, 97, 105, 108] => lookup_836_139(acc),
            [117, 107] => lookup_836_140(acc),
            [117, 110, 105, 53] => lookup_836_141(acc),
            [118, 112, 110, 100, 110, 115] => lookup_836_142(acc),
            [118, 112, 115, 45, 104, 111, 115, 116] => lookup_836_143(labels, acc),
            [119, 101, 98, 104, 111, 112] => lookup_836_144(acc),
            [121, 97, 110, 100, 101, 120, 99, 108, 111, 117, 100] => lookup_836_145(labels, acc),
            [122, 97] => lookup_836_146(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_837() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_839_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_839_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_839_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_839_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_839_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_839_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_839_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_839<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108, 99, 101, 115] => lookup_839_0(info, labels, acc),
            [97, 114, 118, 111] => lookup_839_1(acc),
            [97, 122, 105, 109, 117, 116, 104] => lookup_839_2(acc),
            [99, 111] => lookup_839_3(acc),
            [116, 108, 111, 110] => lookup_839_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_840() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_841() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_842_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_842<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 105, 99, 101, 97, 98, 108, 101] => lookup_842_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_843() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_846_0(acc),
            [99, 111, 109] => lookup_846_1(acc),
            [102, 105, 114, 109] => lookup_846_2(acc),
            [105, 110, 102, 111] => lookup_846_3(acc),
            [110, 101, 116] => lookup_846_4(acc),
            [111, 116, 104, 101, 114] => lookup_846_5(acc),
            [112, 101, 114] => lookup_846_6(acc),
            [114, 101, 99] => lookup_846_7(acc),
            [115, 116, 111, 114, 101] => lookup_846_8(acc),
            [119, 101, 98] => lookup_846_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_847() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_848_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_848_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_848_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_848_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_848_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_848_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_848_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_848_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 108] => lookup_848_0(acc),
            [99, 111, 109] => lookup_848_1(labels, acc),
            [101, 100, 117] => lookup_848_2(acc),
            [102, 105, 114, 109] => lookup_848_3(acc),
            [103, 101, 110] => lookup_848_4(acc),
            [103, 111, 118] => lookup_848_5(acc),
            [105] => lookup_848_6(acc),
            [108, 116, 100] => lookup_848_7(acc),
            [109, 105, 108] => lookup_848_8(acc),
            [109, 111, 98, 105] => lookup_848_9(acc),
            [110, 97, 109, 101] => lookup_848_10(acc),
            [110, 101, 116] => lookup_848_11(acc),
            [110, 103, 111] => lookup_848_12(acc),
            [111, 114, 103] => lookup_848_13(acc),
            [115, 99, 104] => lookup_848_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_849() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_850() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_851_0(acc),
            [98, 105, 122] => lookup_851_1(acc),
            [99, 111] => lookup_851_2(acc),
            [99, 111, 109] => lookup_851_3(acc),
            [101, 100, 117] => lookup_851_4(acc),
            [103, 111, 98] => lookup_851_5(acc),
            [105, 110] => lookup_851_6(acc),
            [105, 110, 102, 111] => lookup_851_7(acc),
            [105, 110, 116] => lookup_851_8(acc),
            [109, 105, 108] => lookup_851_9(acc),
            [110, 101, 116] => lookup_851_10(acc),
            [110, 111, 109] => lookup_851_11(acc),
            [111, 114, 103] => lookup_851_12(acc),
            [119, 101, 98] => lookup_851_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_852() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_853() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_854() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_855() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_857() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_858_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_858_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_858<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_858_0(acc),
            [99, 105, 115, 116, 114, 111, 110] => lookup_858_1(acc),
            [99, 111] => lookup_858_2(acc),
            [100, 101, 109, 111, 110] => lookup_858_3(acc),
            [104, 111, 115, 116, 105, 110, 103, 45, 99, 108, 117, 115, 116, 101, 114] => {
                lookup_858_4(acc)
            }
            [107, 104, 112, 108, 97, 121] => lookup_858_5(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_858_6(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_858_7(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_859_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_859_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_84_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_84<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_84_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_86_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_86<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_859_86_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_859_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_153_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_153<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_153_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_221_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_221_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_221_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_221_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_221<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_859_221_0(acc),
            [118, 97, 108, 101, 114] => lookup_859_221_1(acc),
            [118, 195, 165, 108, 101, 114] => lookup_859_221_2(acc),
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_859_221_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_229_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_229<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_229_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_230_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_230<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_230_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_241_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_241<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_859_241_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_264_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_264<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_264_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_381_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_381_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_381<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114, 111, 121] => lookup_859_381_0(acc),
            [115, 97, 110, 100, 101] => lookup_859_381_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_388_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_388<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_388_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_859_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_397_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_397_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_397<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114, 195, 184, 121] => lookup_859_397_0(acc),
            [115, 97, 110, 100, 101] => lookup_859_397_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_416_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_416<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_416_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_422_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_422_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_422_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_422_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_422_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_422_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_422<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 111] => lookup_859_422_0(acc),
            [98, 195, 184] => lookup_859_422_1(acc),
            [104, 101, 114, 111, 121] => lookup_859_422_2(acc),
            [104, 101, 114, 195, 184, 121] => lookup_859_422_3(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_859_422_4(acc),
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_859_422_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_428_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_428<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_428_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_434_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_434<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_434_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_435(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_436_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_436<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_436_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_437(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_438(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_439(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_440(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_441(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_442(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_443(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_444(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_445(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_446(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_447_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_447<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_447_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_448(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_449(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_450(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_451_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_451<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [118, 97, 108, 101, 114] => lookup_859_451_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_452(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_453(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_454(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_455(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_456(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_457(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_458(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_459(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_460(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_461(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_462(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_463(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_464(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_465(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_466(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_467(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_468(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_469(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_470(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_471(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_472(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_473(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_474(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_475(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_476(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_477(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_478(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_479(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_480(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_481(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_482(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_483(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_484(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_485(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_486_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_486<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_486_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_487(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_488(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_489(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_490(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_491(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_492(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_493(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_494(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_495(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_496(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_497(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_498(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_499(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_500(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_501(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_502(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_503(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_504(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_505(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_506(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_507(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_508(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_509(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_510(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_511(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_512(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_513(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_514(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_515(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_516(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_517(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_518(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_519(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_520(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_521(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_522(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_523(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_524(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_525(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_526_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_526<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_526_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_527(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_528(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_529(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_530(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_531(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_532(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_533(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_534(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_535(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_536(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_537(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_538(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_539(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_540(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_541(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_542(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_543(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_544(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_545(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_546(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_547(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_548(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_549(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_550(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_551(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_552(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_553(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_554(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_555(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_556(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_557(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_558(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_559(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_560(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_561(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_562(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_563(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_564(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_565(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_566(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_567(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_568(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_569(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_570(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_571(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_572(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_573(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_574(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_575_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_575<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_575_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_576(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_577(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_578(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_579(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_580(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_581(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_582(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_583(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_584(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_585(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_586(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_587(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_588(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_589(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_590(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_591(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_592(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_593(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_594(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_595(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_596(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_597(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_598(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_599(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_600_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_600<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_600_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_601(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_602(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_603(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_604(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_605(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_606(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_607(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_608(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_609(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_610(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_611(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_612(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_613(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_614(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_615(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_616(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_617(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_618_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_618_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_618_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_618<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 111] => lookup_859_618_0(acc),
            [98, 195, 184] => lookup_859_618_1(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_859_618_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_619(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_620(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_621(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_622(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_623(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_624(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_625_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_625<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_625_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_626(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_627(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_628(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_629(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_630_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_630<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_630_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_631(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_632(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_633(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_634(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_635(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_636(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_637(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_638(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_639(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_640(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_641(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_642(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_643(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_644(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_645(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_646(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_647(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_648(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_649(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_650(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_651(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_652(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_653(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_654(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_655(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_656(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_657(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_658_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_658<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_658_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_659(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_660(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_661(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_662(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_663(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_664(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_665(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_666(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_667(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_668(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_669(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_670(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_671(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_672(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_673(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_674(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_675(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_676(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_677(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_678(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_679(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_680(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_681_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_681<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_859_681_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_682(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_683(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_684(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_685(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_686(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_687(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_688_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_688<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_859_688_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_689(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_690(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_691(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_692(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_693(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_694(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_695(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_696(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_697(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_698(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_699(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_700(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_701(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_702(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_703(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_704(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_705(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_706(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_707(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_708(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_709(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_710(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_711(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_712(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_713(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_714(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_715(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_716(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_717(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_718(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_719(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_720(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_721(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_722(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_723(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_724(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_725(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_726(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_727(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_728(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_729(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_730(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_731(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_732(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_733(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_734(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_735(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_736(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_737(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_738(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_739(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_740(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_741(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_742(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_743(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_744(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_745(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_746(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_747(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_748(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_749(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_750(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_751(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_752(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_753(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_754(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_755(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_756(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_757(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_758(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_759(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_760(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_761(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_762(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_763(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_764(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_765(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_766(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_767(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_768(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_769(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_770(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_771(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_772(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_773(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_774(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_775(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_776(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_777(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_778(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_779(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_780(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_781(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_782(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_783(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_784(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_785(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_786(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_787(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_788(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_789(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_790_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_790_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_790<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 22usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_859_790_0(acc),
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_859_790_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_791(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_792(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_793(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_794(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_795(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_796(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_797(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_798(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_799(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_800(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_801(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_802(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_803(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_804(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_805(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_806(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_807(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_808(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_809(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_810(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_811(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_812(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_813(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_814(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_815(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_816(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_817(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_818(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_819(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_820(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_821(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_822(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_823(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_824(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_825(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_826(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_827(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_828(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_829(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_830(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_831(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_832(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_833(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_834(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_835(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_836(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_837(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_838(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_839(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_840(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_841(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_842(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_843(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_844(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_845_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_845<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_859_845_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_846(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_847(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_848(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_849(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_850(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_851(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_852(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_853(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_854(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_855(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_856(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_857(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_858(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_859(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_860(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_861(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_862(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_863(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_864(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_865(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_866(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_867(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_868(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_869(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_870(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_871(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_872(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_873(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_874(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_875(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_876(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_877(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_878(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_879(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_880(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_881(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_882(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_883(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_884(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_885(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_886(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_887(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_888_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_888<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 195, 165, 108, 101, 114] => lookup_859_888_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859_889(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_890(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_891(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_892(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_893(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_894(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 97] => lookup_859_0(labels, acc),
            [97, 97, 114, 98, 111, 114, 116, 101] => lookup_859_1(acc),
            [97, 101, 106, 114, 105, 101] => lookup_859_2(acc),
            [97, 102, 106, 111, 114, 100] => lookup_859_3(acc),
            [97, 103, 100, 101, 110, 101, 115] => lookup_859_4(acc),
            [97, 104] => lookup_859_5(labels, acc),
            [97, 107, 101, 114, 115, 104, 117, 115] => lookup_859_6(info, labels, acc),
            [97, 107, 110, 111, 108, 117, 111, 107, 116, 97] => lookup_859_7(acc),
            [97, 107, 114, 101, 104, 97, 109, 110] => lookup_859_8(acc),
            [97, 108] => lookup_859_9(acc),
            [97, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_859_10(acc),
            [97, 108, 101, 115, 117, 110, 100] => lookup_859_11(acc),
            [97, 108, 103, 97, 114, 100] => lookup_859_12(acc),
            [97, 108, 115, 116, 97, 104, 97, 117, 103] => lookup_859_13(acc),
            [97, 108, 116, 97] => lookup_859_14(acc),
            [97, 108, 118, 100, 97, 108] => lookup_859_15(acc),
            [97, 109, 108, 105] => lookup_859_16(acc),
            [97, 109, 111, 116] => lookup_859_17(acc),
            [97, 110, 100, 97, 115, 117, 111, 108, 111] => lookup_859_18(acc),
            [97, 110, 100, 101, 98, 117] => lookup_859_19(acc),
            [97, 110, 100, 111, 121] => lookup_859_20(acc),
            [97, 110, 100, 195, 184, 121] => lookup_859_21(acc),
            [97, 114, 100, 97, 108] => lookup_859_22(acc),
            [97, 114, 101, 109, 97, 114, 107] => lookup_859_23(acc),
            [97, 114, 101, 110, 100, 97, 108] => lookup_859_24(acc),
            [97, 114, 110, 97] => lookup_859_25(acc),
            [97, 115, 101, 114, 97, 108] => lookup_859_26(acc),
            [97, 115, 107, 101, 114] => lookup_859_27(acc),
            [97, 115, 107, 105, 109] => lookup_859_28(acc),
            [97, 115, 107, 111, 121] => lookup_859_29(acc),
            [97, 115, 107, 118, 111, 108, 108] => lookup_859_30(acc),
            [97, 115, 107, 195, 184, 121] => lookup_859_31(acc),
            [97, 115, 110, 101, 115] => lookup_859_32(acc),
            [97, 117, 100, 110, 101, 100, 97, 108, 110] => lookup_859_33(acc),
            [97, 117, 107, 114, 97] => lookup_859_34(acc),
            [97, 117, 114, 101] => lookup_859_35(acc),
            [97, 117, 114, 108, 97, 110, 100] => lookup_859_36(acc),
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 111, 108, 97, 110, 100] => {
                lookup_859_37(acc)
            }
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 195, 184, 108, 97, 110, 100] => {
                lookup_859_38(acc)
            }
            [97, 117, 115, 116, 101, 118, 111, 108, 108] => lookup_859_39(acc),
            [97, 117, 115, 116, 114, 104, 101, 105, 109] => lookup_859_40(acc),
            [97, 118, 101, 114, 111, 121] => lookup_859_41(acc),
            [97, 118, 101, 114, 195, 184, 121] => lookup_859_42(acc),
            [98, 97, 100, 97, 100, 100, 106, 97] => lookup_859_43(acc),
            [98, 97, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_859_44(acc),
            [98, 97, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_859_45(acc),
            [98, 97, 105, 100, 97, 114] => lookup_859_46(acc),
            [98, 97, 106, 100, 100, 97, 114] => lookup_859_47(acc),
            [98, 97, 108, 97, 116] => lookup_859_48(acc),
            [98, 97, 108, 101, 115, 116, 114, 97, 110, 100] => lookup_859_49(acc),
            [98, 97, 108, 108, 97, 110, 103, 101, 110] => lookup_859_50(acc),
            [98, 97, 108, 115, 102, 106, 111, 114, 100] => lookup_859_51(acc),
            [98, 97, 109, 98, 108, 101] => lookup_859_52(acc),
            [98, 97, 114, 100, 117] => lookup_859_53(acc),
            [98, 97, 114, 117, 109] => lookup_859_54(acc),
            [98, 97, 116, 115, 102, 106, 111, 114, 100] => lookup_859_55(acc),
            [98, 101, 97, 114, 97, 108, 118, 97, 104, 107, 105] => lookup_859_56(acc),
            [98, 101, 97, 114, 97, 108, 118, 195, 161, 104, 107, 105] => lookup_859_57(acc),
            [98, 101, 97, 114, 100, 117] => lookup_859_58(acc),
            [98, 101, 105, 97, 114, 110] => lookup_859_59(acc),
            [98, 101, 114, 103] => lookup_859_60(acc),
            [98, 101, 114, 103, 101, 110] => lookup_859_61(acc),
            [98, 101, 114, 108, 101, 118, 97, 103] => lookup_859_62(acc),
            [98, 101, 114, 108, 101, 118, 195, 165, 103] => lookup_859_63(acc),
            [98, 105, 101, 118, 97, 116] => lookup_859_64(acc),
            [98, 105, 101, 118, 195, 161, 116] => lookup_859_65(acc),
            [98, 105, 110, 100, 97, 108] => lookup_859_66(acc),
            [98, 105, 114, 107, 101, 110, 101, 115] => lookup_859_67(acc),
            [98, 106, 97, 114, 107, 111, 121] => lookup_859_68(acc),
            [98, 106, 97, 114, 107, 195, 184, 121] => lookup_859_69(acc),
            [98, 106, 101, 114, 107, 114, 101, 105, 109] => lookup_859_70(acc),
            [98, 106, 117, 103, 110] => lookup_859_71(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_859_72(acc),
            [98, 111, 100, 111] => lookup_859_73(acc),
            [98, 111, 100, 195, 184] => lookup_859_74(acc),
            [98, 111, 107, 110] => lookup_859_75(acc),
            [98, 111, 109, 108, 111] => lookup_859_76(acc),
            [98, 114, 101, 109, 97, 110, 103, 101, 114] => lookup_859_77(acc),
            [98, 114, 111, 110, 110, 111, 121] => lookup_859_78(acc),
            [98, 114, 111, 110, 110, 111, 121, 115, 117, 110, 100] => lookup_859_79(acc),
            [98, 114, 117, 109, 117, 110, 100, 100, 97, 108] => lookup_859_80(acc),
            [98, 114, 121, 110, 101] => lookup_859_81(acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121] => lookup_859_82(acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121, 115, 117, 110, 100] => lookup_859_83(acc),
            [98, 117] => lookup_859_84(labels, acc),
            [98, 117, 100, 101, 106, 106, 117] => lookup_859_85(acc),
            [98, 117, 115, 107, 101, 114, 117, 100] => lookup_859_86(info, labels, acc),
            [98, 121, 103, 108, 97, 110, 100] => lookup_859_87(acc),
            [98, 121, 107, 108, 101] => lookup_859_88(acc),
            [98, 195, 161, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_859_89(acc),
            [98, 195, 161, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_859_90(acc),
            [98, 195, 161, 105, 100, 195, 161, 114] => lookup_859_91(acc),
            [98, 195, 161, 106, 100, 100, 97, 114] => lookup_859_92(acc),
            [98, 195, 161, 108, 195, 161, 116] => lookup_859_93(acc),
            [98, 195, 165, 100, 195, 165, 100, 100, 106, 195, 165] => lookup_859_94(acc),
            [98, 195, 165, 116, 115, 102, 106, 111, 114, 100] => lookup_859_95(acc),
            [98, 195, 166, 114, 117, 109] => lookup_859_96(acc),
            [98, 195, 184, 109, 108, 111] => lookup_859_97(acc),
            [99, 97, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_859_98(acc),
            [99, 111] => lookup_859_99(acc),
            [100, 97, 118, 118, 101, 110, 106, 97, 114, 103, 97] => lookup_859_100(acc),
            [100, 97, 118, 118, 101, 110, 106, 195, 161, 114, 103, 97] => lookup_859_101(acc),
            [100, 97, 118, 118, 101, 115, 105, 105, 100, 97] => lookup_859_102(acc),
            [100, 101, 97, 116, 110, 117] => lookup_859_103(acc),
            [100, 101, 112] => lookup_859_104(acc),
            [100, 105, 101, 108, 100, 100, 97, 110, 117, 111, 114, 114, 105] => lookup_859_105(acc),
            [100, 105, 118, 116, 97, 115, 118, 117, 111, 100, 110, 97] => lookup_859_106(acc),
            [100, 105, 118, 116, 116, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_859_107(acc),
            [100, 111, 110, 110, 97] => lookup_859_108(acc),
            [100, 111, 118, 114, 101] => lookup_859_109(acc),
            [100, 114, 97, 109, 109, 101, 110] => lookup_859_110(acc),
            [100, 114, 97, 110, 103, 101, 100, 97, 108] => lookup_859_111(acc),
            [100, 114, 111, 98, 97, 107] => lookup_859_112(acc),
            [100, 114, 195, 184, 98, 97, 107] => lookup_859_113(acc),
            [100, 121, 114, 111, 121] => lookup_859_114(acc),
            [100, 121, 114, 195, 184, 121] => lookup_859_115(acc),
            [100, 195, 184, 110, 110, 97] => lookup_859_116(acc),
            [101, 103, 101, 114, 115, 117, 110, 100] => lookup_859_117(acc),
            [101, 105, 100] => lookup_859_118(acc),
            [101, 105, 100, 102, 106, 111, 114, 100] => lookup_859_119(acc),
            [101, 105, 100, 115, 98, 101, 114, 103] => lookup_859_120(acc),
            [101, 105, 100, 115, 107, 111, 103] => lookup_859_121(acc),
            [101, 105, 100, 115, 118, 111, 108, 108] => lookup_859_122(acc),
            [101, 105, 103, 101, 114, 115, 117, 110, 100] => lookup_859_123(acc),
            [101, 108, 118, 101, 114, 117, 109] => lookup_859_124(acc),
            [101, 110, 101, 98, 97, 107, 107] => lookup_859_125(acc),
            [101, 110, 103, 101, 114, 100, 97, 108] => lookup_859_126(acc),
            [101, 116, 110, 101] => lookup_859_127(acc),
            [101, 116, 110, 101, 100, 97, 108] => lookup_859_128(acc),
            [101, 118, 101, 110, 97, 115, 115, 105] => lookup_859_129(acc),
            [101, 118, 101, 110, 101, 115] => lookup_859_130(acc),
            [101, 118, 101, 110, 195, 161, 197, 161, 197, 161, 105] => lookup_859_131(acc),
            [101, 118, 106, 101, 45, 111, 103, 45, 104, 111, 114, 110, 110, 101, 115] => {
                lookup_859_132(acc)
            }
            [102, 97, 114, 115, 117, 110, 100] => lookup_859_133(acc),
            [102, 97, 117, 115, 107, 101] => lookup_859_134(acc),
            [102, 101, 100, 106, 101] => lookup_859_135(acc),
            [102, 101, 116] => lookup_859_136(acc),
            [102, 101, 116, 115, 117, 110, 100] => lookup_859_137(acc),
            [102, 104, 115] => lookup_859_138(acc),
            [102, 105, 110, 110, 111, 121] => lookup_859_139(acc),
            [102, 105, 110, 110, 195, 184, 121] => lookup_859_140(acc),
            [102, 105, 116, 106, 97, 114] => lookup_859_141(acc),
            [102, 106, 97, 108, 101, 114] => lookup_859_142(acc),
            [102, 106, 101, 108, 108] => lookup_859_143(acc),
            [102, 108, 97] => lookup_859_144(acc),
            [102, 108, 97, 107, 115, 116, 97, 100] => lookup_859_145(acc),
            [102, 108, 97, 116, 97, 110, 103, 101, 114] => lookup_859_146(acc),
            [102, 108, 101, 107, 107, 101, 102, 106, 111, 114, 100] => lookup_859_147(acc),
            [102, 108, 101, 115, 98, 101, 114, 103] => lookup_859_148(acc),
            [102, 108, 111, 114, 97] => lookup_859_149(acc),
            [102, 108, 111, 114, 111] => lookup_859_150(acc),
            [102, 108, 111, 114, 195, 184] => lookup_859_151(acc),
            [102, 108, 195, 165] => lookup_859_152(acc),
            [102, 109] => lookup_859_153(labels, acc),
            [102, 111, 108, 107, 101, 98, 105, 98, 108] => lookup_859_154(acc),
            [102, 111, 108, 108, 100, 97, 108] => lookup_859_155(acc),
            [102, 111, 114, 100, 101] => lookup_859_156(acc),
            [102, 111, 114, 115, 97, 110, 100] => lookup_859_157(acc),
            [102, 111, 115, 110, 101, 115] => lookup_859_158(acc),
            [102, 114, 97, 110, 97] => lookup_859_159(acc),
            [102, 114, 101, 100, 114, 105, 107, 115, 116, 97, 100] => lookup_859_160(acc),
            [102, 114, 101, 105] => lookup_859_161(acc),
            [102, 114, 111, 103, 110] => lookup_859_162(acc),
            [102, 114, 111, 108, 97, 110, 100] => lookup_859_163(acc),
            [102, 114, 111, 115, 116, 97] => lookup_859_164(acc),
            [102, 114, 111, 121, 97] => lookup_859_165(acc),
            [102, 114, 195, 166, 110, 97] => lookup_859_166(acc),
            [102, 114, 195, 184, 121, 97] => lookup_859_167(acc),
            [102, 117, 111, 105, 115, 107, 117] => lookup_859_168(acc),
            [102, 117, 111, 115, 115, 107, 111] => lookup_859_169(acc),
            [102, 117, 115, 97] => lookup_859_170(acc),
            [102, 121, 108, 107, 101, 115, 98, 105, 98, 108] => lookup_859_171(acc),
            [102, 121, 114, 101, 115, 100, 97, 108] => lookup_859_172(acc),
            [102, 195, 184, 114, 100, 101] => lookup_859_173(acc),
            [103, 97, 105, 118, 117, 111, 116, 110, 97] => lookup_859_174(acc),
            [103, 97, 108, 115, 97] => lookup_859_175(acc),
            [103, 97, 109, 118, 105, 107] => lookup_859_176(acc),
            [103, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_859_177(acc),
            [103, 97, 117, 108, 97, 114] => lookup_859_178(acc),
            [103, 97, 117, 115, 100, 97, 108] => lookup_859_179(acc),
            [103, 105, 101, 104, 116, 97, 118, 117, 111, 97, 116, 110, 97] => lookup_859_180(acc),
            [103, 105, 108, 100, 101, 115, 107, 97, 108] => lookup_859_181(acc),
            [103, 105, 108, 100, 101, 115, 107, 195, 165, 108] => lookup_859_182(acc),
            [103, 105, 115, 107, 101] => lookup_859_183(acc),
            [103, 106, 101, 109, 110, 101, 115] => lookup_859_184(acc),
            [103, 106, 101, 114, 100, 114, 117, 109] => lookup_859_185(acc),
            [103, 106, 101, 114, 115, 116, 97, 100] => lookup_859_186(acc),
            [103, 106, 101, 115, 100, 97, 108] => lookup_859_187(acc),
            [103, 106, 111, 118, 105, 107] => lookup_859_188(acc),
            [103, 106, 195, 184, 118, 105, 107] => lookup_859_189(acc),
            [103, 108, 111, 112, 112, 101, 110] => lookup_859_190(acc),
            [103, 111, 108] => lookup_859_191(acc),
            [103, 114, 97, 110] => lookup_859_192(acc),
            [103, 114, 97, 110, 101] => lookup_859_193(acc),
            [103, 114, 97, 110, 118, 105, 110] => lookup_859_194(acc),
            [103, 114, 97, 116, 97, 110, 103, 101, 110] => lookup_859_195(acc),
            [103, 114, 105, 109, 115, 116, 97, 100] => lookup_859_196(acc),
            [103, 114, 111, 110, 103] => lookup_859_197(acc),
            [103, 114, 117, 101] => lookup_859_198(acc),
            [103, 117, 108, 101, 110] => lookup_859_199(acc),
            [103, 117, 111, 118, 100, 97, 103, 101, 97, 105, 100, 110, 117] => lookup_859_200(acc),
            [103, 195, 161, 105, 118, 117, 111, 116, 110, 97] => lookup_859_201(acc),
            [103, 195, 161, 108, 115, 195, 161] => lookup_859_202(acc),
            [103, 195, 161, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_859_203(acc),
            [104, 97] => lookup_859_204(acc),
            [104, 97, 98, 109, 101, 114] => lookup_859_205(acc),
            [104, 97, 100, 115, 101, 108] => lookup_859_206(acc),
            [104, 97, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_859_207(acc),
            [104, 97, 108, 100, 101, 110] => lookup_859_208(acc),
            [104, 97, 108, 115, 97] => lookup_859_209(acc),
            [104, 97, 109, 97, 114] => lookup_859_210(acc),
            [104, 97, 109, 97, 114, 111, 121] => lookup_859_211(acc),
            [104, 97, 109, 109, 97, 114, 102, 101, 97, 115, 116, 97] => lookup_859_212(acc),
            [104, 97, 109, 109, 101, 114, 102, 101, 115, 116] => lookup_859_213(acc),
            [104, 97, 112, 109, 105, 114] => lookup_859_214(acc),
            [104, 97, 114, 97, 109] => lookup_859_215(acc),
            [104, 97, 114, 101, 105, 100] => lookup_859_216(acc),
            [104, 97, 114, 115, 116, 97, 100] => lookup_859_217(acc),
            [104, 97, 115, 118, 105, 107] => lookup_859_218(acc),
            [104, 97, 116, 116, 102, 106, 101, 108, 108, 100, 97, 108] => lookup_859_219(acc),
            [104, 97, 117, 103, 101, 115, 117, 110, 100] => lookup_859_220(acc),
            [104, 101, 100, 109, 97, 114, 107] => lookup_859_221(info, labels, acc),
            [104, 101, 109, 110, 101] => lookup_859_222(acc),
            [104, 101, 109, 110, 101, 115] => lookup_859_223(acc),
            [104, 101, 109, 115, 101, 100, 97, 108] => lookup_859_224(acc),
            [104, 101, 114, 97, 100] => lookup_859_225(acc),
            [104, 105, 116, 114, 97] => lookup_859_226(acc),
            [104, 106, 97, 114, 116, 100, 97, 108] => lookup_859_227(acc),
            [104, 106, 101, 108, 109, 101, 108, 97, 110, 100] => lookup_859_228(acc),
            [104, 108] => lookup_859_229(labels, acc),
            [104, 109] => lookup_859_230(labels, acc),
            [104, 111, 98, 111, 108] => lookup_859_231(acc),
            [104, 111, 98, 195, 184, 108] => lookup_859_232(acc),
            [104, 111, 102] => lookup_859_233(acc),
            [104, 111, 107, 107, 115, 117, 110, 100] => lookup_859_234(acc),
            [104, 111, 108] => lookup_859_235(acc),
            [104, 111, 108, 101] => lookup_859_236(acc),
            [104, 111, 108, 109, 101, 115, 116, 114, 97, 110, 100] => lookup_859_237(acc),
            [104, 111, 108, 116, 97, 108, 101, 110] => lookup_859_238(acc),
            [104, 111, 108, 116, 195, 165, 108, 101, 110] => lookup_859_239(acc),
            [104, 111, 110, 101, 102, 111, 115, 115] => lookup_859_240(acc),
            [104, 111, 114, 100, 97, 108, 97, 110, 100] => lookup_859_241(info, labels, acc),
            [104, 111, 114, 110, 105, 110, 100, 97, 108] => lookup_859_242(acc),
            [104, 111, 114, 116, 101, 110] => lookup_859_243(acc),
            [104, 111, 121, 97, 110, 103, 101, 114] => lookup_859_244(acc),
            [104, 111, 121, 108, 97, 110, 100, 101, 116] => lookup_859_245(acc),
            [104, 117, 114, 100, 97, 108] => lookup_859_246(acc),
            [104, 117, 114, 117, 109] => lookup_859_247(acc),
            [104, 118, 97, 108, 101, 114] => lookup_859_248(acc),
            [104, 121, 108, 108, 101, 115, 116, 97, 100] => lookup_859_249(acc),
            [104, 195, 161, 98, 109, 101, 114] => lookup_859_250(acc),
            [104, 195, 161, 109, 109, 195, 161, 114, 102, 101, 97, 115, 116, 97] => {
                lookup_859_251(acc)
            }
            [104, 195, 161, 112, 109, 105, 114] => lookup_859_252(acc),
            [104, 195, 165] => lookup_859_253(acc),
            [104, 195, 166, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_859_254(acc),
            [104, 195, 184, 110, 101, 102, 111, 115, 115] => lookup_859_255(acc),
            [104, 195, 184, 121, 97, 110, 103, 101, 114] => lookup_859_256(acc),
            [104, 195, 184, 121, 108, 97, 110, 100, 101, 116] => lookup_859_257(acc),
            [105, 98, 101, 115, 116, 97, 100] => lookup_859_258(acc),
            [105, 100, 114, 101, 116, 116] => lookup_859_259(acc),
            [105, 110, 100, 101, 114, 111, 121] => lookup_859_260(acc),
            [105, 110, 100, 101, 114, 195, 184, 121] => lookup_859_261(acc),
            [105, 118, 101, 108, 97, 110, 100] => lookup_859_262(acc),
            [105, 118, 103, 117] => lookup_859_263(acc),
            [106, 97, 110, 45, 109, 97, 121, 101, 110] => lookup_859_264(labels, acc),
            [106, 101, 115, 115, 104, 101, 105, 109] => lookup_859_265(acc),
            [106, 101, 118, 110, 97, 107, 101, 114] => lookup_859_266(acc),
            [106, 111, 108, 115, 116, 101, 114] => lookup_859_267(acc),
            [106, 111, 110, 100, 97, 108] => lookup_859_268(acc),
            [106, 111, 114, 112, 101, 108, 97, 110, 100] => lookup_859_269(acc),
            [106, 195, 184, 108, 115, 116, 101, 114] => lookup_859_270(acc),
            [106, 195, 184, 114, 112, 101, 108, 97, 110, 100] => lookup_859_271(acc),
            [107, 97, 102, 106, 111, 114, 100] => lookup_859_272(acc),
            [107, 97, 114, 97, 115, 106, 111, 104, 107, 97] => lookup_859_273(acc),
            [107, 97, 114, 97, 115, 106, 111, 107] => lookup_859_274(acc),
            [107, 97, 114, 108, 115, 111, 121] => lookup_859_275(acc),
            [107, 97, 114, 109, 111, 121] => lookup_859_276(acc),
            [107, 97, 114, 109, 195, 184, 121] => lookup_859_277(acc),
            [107, 97, 117, 116, 111, 107, 101, 105, 110, 111] => lookup_859_278(acc),
            [107, 105, 114, 107, 101, 110, 101, 115] => lookup_859_279(acc),
            [107, 108, 97, 98, 117] => lookup_859_280(acc),
            [107, 108, 101, 112, 112] => lookup_859_281(acc),
            [107, 108, 195, 166, 98, 117] => lookup_859_282(acc),
            [107, 111, 109, 109, 117, 110, 101] => lookup_859_283(acc),
            [107, 111, 110, 103, 115, 98, 101, 114, 103] => lookup_859_284(acc),
            [107, 111, 110, 103, 115, 118, 105, 110, 103, 101, 114] => lookup_859_285(acc),
            [107, 111, 112, 101, 114, 118, 105, 107] => lookup_859_286(acc),
            [107, 114, 97, 97, 110, 103, 104, 107, 101] => lookup_859_287(acc),
            [107, 114, 97, 103, 101, 114, 111] => lookup_859_288(acc),
            [107, 114, 97, 103, 101, 114, 195, 184] => lookup_859_289(acc),
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 97, 110, 100] => lookup_859_290(acc),
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 117, 110, 100] => lookup_859_291(acc),
            [107, 114, 111, 100, 115, 104, 101, 114, 97, 100] => lookup_859_292(acc),
            [107, 114, 111, 107, 115, 116, 97, 100, 101, 108, 118, 97] => lookup_859_293(acc),
            [107, 114, 195, 165, 97, 110, 103, 104, 107, 101] => lookup_859_294(acc),
            [107, 114, 195, 184, 100, 115, 104, 101, 114, 97, 100] => lookup_859_295(acc),
            [107, 118, 97, 102, 106, 111, 114, 100] => lookup_859_296(acc),
            [107, 118, 97, 108, 115, 117, 110, 100] => lookup_859_297(acc),
            [107, 118, 97, 109] => lookup_859_298(acc),
            [107, 118, 97, 110, 97, 110, 103, 101, 110] => lookup_859_299(acc),
            [107, 118, 105, 110, 101, 115, 100, 97, 108] => lookup_859_300(acc),
            [107, 118, 105, 110, 110, 104, 101, 114, 97, 100] => lookup_859_301(acc),
            [107, 118, 105, 116, 101, 115, 101, 105, 100] => lookup_859_302(acc),
            [107, 118, 105, 116, 115, 111, 121] => lookup_859_303(acc),
            [107, 118, 105, 116, 115, 195, 184, 121] => lookup_859_304(acc),
            [107, 118, 195, 166, 102, 106, 111, 114, 100] => lookup_859_305(acc),
            [107, 118, 195, 166, 110, 97, 110, 103, 101, 110] => lookup_859_306(acc),
            [107, 195, 161, 114, 195, 161, 197, 161, 106, 111, 104, 107, 97] => lookup_859_307(acc),
            [107, 195, 165, 102, 106, 111, 114, 100] => lookup_859_308(acc),
            [108, 97, 97, 107, 101, 115, 118, 117, 101, 109, 105, 101] => lookup_859_309(acc),
            [108, 97, 104, 112, 112, 105] => lookup_859_310(acc),
            [108, 97, 110, 103, 101, 118, 97, 103] => lookup_859_311(acc),
            [108, 97, 110, 103, 101, 118, 195, 165, 103] => lookup_859_312(acc),
            [108, 97, 114, 100, 97, 108] => lookup_859_313(acc),
            [108, 97, 114, 118, 105, 107] => lookup_859_314(acc),
            [108, 97, 118, 97, 103, 105, 115] => lookup_859_315(acc),
            [108, 97, 118, 97, 110, 103, 101, 110] => lookup_859_316(acc),
            [108, 101, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_859_317(acc),
            [108, 101, 97, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_859_318(acc),
            [108, 101, 98, 101, 115, 98, 121] => lookup_859_319(acc),
            [108, 101, 105, 107, 97, 110, 103, 101, 114] => lookup_859_320(acc),
            [108, 101, 105, 114, 102, 106, 111, 114, 100] => lookup_859_321(acc),
            [108, 101, 105, 114, 118, 105, 107] => lookup_859_322(acc),
            [108, 101, 107, 97] => lookup_859_323(acc),
            [108, 101, 107, 115, 118, 105, 107] => lookup_859_324(acc),
            [108, 101, 110, 118, 105, 107] => lookup_859_325(acc),
            [108, 101, 114, 100, 97, 108] => lookup_859_326(acc),
            [108, 101, 115, 106, 97] => lookup_859_327(acc),
            [108, 101, 118, 97, 110, 103, 101, 114] => lookup_859_328(acc),
            [108, 105, 101, 114] => lookup_859_329(acc),
            [108, 105, 101, 114, 110, 101] => lookup_859_330(acc),
            [108, 105, 108, 108, 101, 104, 97, 109, 109, 101, 114] => lookup_859_331(acc),
            [108, 105, 108, 108, 101, 115, 97, 110, 100] => lookup_859_332(acc),
            [108, 105, 110, 100, 97, 115] => lookup_859_333(acc),
            [108, 105, 110, 100, 101, 115, 110, 101, 115] => lookup_859_334(acc),
            [108, 105, 110, 100, 195, 165, 115] => lookup_859_335(acc),
            [108, 111, 97, 98, 97, 116] => lookup_859_336(acc),
            [108, 111, 97, 98, 195, 161, 116] => lookup_859_337(acc),
            [108, 111, 100, 105, 110, 103, 101, 110] => lookup_859_338(acc),
            [108, 111, 109] => lookup_859_339(acc),
            [108, 111, 112, 112, 97] => lookup_859_340(acc),
            [108, 111, 114, 101, 110, 115, 107, 111, 103] => lookup_859_341(acc),
            [108, 111, 116, 101, 110] => lookup_859_342(acc),
            [108, 117, 110, 100] => lookup_859_343(acc),
            [108, 117, 110, 110, 101, 114] => lookup_859_344(acc),
            [108, 117, 114, 111, 121] => lookup_859_345(acc),
            [108, 117, 114, 195, 184, 121] => lookup_859_346(acc),
            [108, 117, 115, 116, 101, 114] => lookup_859_347(acc),
            [108, 121, 110, 103, 100, 97, 108] => lookup_859_348(acc),
            [108, 121, 110, 103, 101, 110] => lookup_859_349(acc),
            [108, 195, 161, 104, 112, 112, 105] => lookup_859_350(acc),
            [108, 195, 166, 114, 100, 97, 108] => lookup_859_351(acc),
            [108, 195, 184, 100, 105, 110, 103, 101, 110] => lookup_859_352(acc),
            [108, 195, 184, 114, 101, 110, 115, 107, 111, 103] => lookup_859_353(acc),
            [108, 195, 184, 116, 101, 110] => lookup_859_354(acc),
            [109, 97, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_859_355(acc),
            [109, 97, 108, 115, 101, 108, 118] => lookup_859_356(acc),
            [109, 97, 108, 118, 105, 107] => lookup_859_357(acc),
            [109, 97, 110, 100, 97, 108] => lookup_859_358(acc),
            [109, 97, 114, 107, 101, 114] => lookup_859_359(acc),
            [109, 97, 114, 110, 97, 114, 100, 97, 108] => lookup_859_360(acc),
            [109, 97, 115, 102, 106, 111, 114, 100, 101, 110] => lookup_859_361(acc),
            [109, 97, 115, 111, 121] => lookup_859_362(acc),
            [109, 97, 116, 116, 97, 45, 118, 97, 114, 106, 106, 97, 116] => lookup_859_363(acc),
            [109, 101, 108, 97, 110, 100] => lookup_859_364(acc),
            [109, 101, 108, 100, 97, 108] => lookup_859_365(acc),
            [109, 101, 108, 104, 117, 115] => lookup_859_366(acc),
            [109, 101, 108, 111, 121] => lookup_859_367(acc),
            [109, 101, 108, 195, 184, 121] => lookup_859_368(acc),
            [109, 101, 114, 97, 107, 101, 114] => lookup_859_369(acc),
            [109, 101, 114, 195, 165, 107, 101, 114] => lookup_859_370(acc),
            [109, 105, 100, 115, 117, 110, 100] => lookup_859_371(acc),
            [109, 105, 100, 116, 114, 101, 45, 103, 97, 117, 108, 100, 97, 108] => {
                lookup_859_372(acc)
            }
            [109, 105, 108] => lookup_859_373(acc),
            [109, 106, 111, 110, 100, 97, 108, 101, 110] => lookup_859_374(acc),
            [109, 106, 195, 184, 110, 100, 97, 108, 101, 110] => lookup_859_375(acc),
            [109, 111, 45, 105, 45, 114, 97, 110, 97] => lookup_859_376(acc),
            [109, 111, 97, 114, 101, 107, 101] => lookup_859_377(acc),
            [109, 111, 100, 97, 108, 101, 110] => lookup_859_378(acc),
            [109, 111, 100, 117, 109] => lookup_859_379(acc),
            [109, 111, 108, 100, 101] => lookup_859_380(acc),
            [109, 111, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_859_381(info, labels, acc)
            }
            [109, 111, 115, 106, 111, 101, 110] => lookup_859_382(acc),
            [109, 111, 115, 106, 195, 184, 101, 110] => lookup_859_383(acc),
            [109, 111, 115, 107, 101, 110, 101, 115] => lookup_859_384(acc),
            [109, 111, 115, 115] => lookup_859_385(acc),
            [109, 111, 115, 118, 105, 107] => lookup_859_386(acc),
            [109, 111, 195, 165, 114, 101, 107, 101] => lookup_859_387(acc),
            [109, 114] => lookup_859_388(labels, acc),
            [109, 117, 111, 115, 97, 116] => lookup_859_389(acc),
            [109, 117, 111, 115, 195, 161, 116] => lookup_859_390(acc),
            [109, 117, 115, 101, 117, 109] => lookup_859_391(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_859_392(acc),
            [109, 195, 161, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_859_393(acc),
            [109, 195, 161, 116, 116, 97, 45, 118, 195, 161, 114, 106, 106, 97, 116] => {
                lookup_859_394(acc)
            }
            [109, 195, 165, 108, 115, 101, 108, 118] => lookup_859_395(acc),
            [109, 195, 165, 115, 195, 184, 121] => lookup_859_396(acc),
            [109, 195, 184, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_859_397(info, labels, acc)
            }
            [110, 97, 97, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_859_398(acc)
            }
            [110, 97, 109, 100, 97, 108, 115, 101, 105, 100] => lookup_859_399(acc),
            [110, 97, 109, 115, 111, 115] => lookup_859_400(acc),
            [110, 97, 109, 115, 115, 107, 111, 103, 97, 110] => lookup_859_401(acc),
            [110, 97, 110, 110, 101, 115, 116, 97, 100] => lookup_859_402(acc),
            [110, 97, 114, 111, 121] => lookup_859_403(acc),
            [110, 97, 114, 118, 105, 105, 107, 97] => lookup_859_404(acc),
            [110, 97, 114, 118, 105, 107] => lookup_859_405(acc),
            [110, 97, 117, 115, 116, 100, 97, 108] => lookup_859_406(acc),
            [110, 97, 118, 117, 111, 116, 110, 97] => lookup_859_407(acc),
            [110, 101, 100, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_859_408(acc),
            [110, 101, 115, 110, 97] => lookup_859_409(acc),
            [110, 101, 115, 111, 100, 100, 101, 110] => lookup_859_410(acc),
            [110, 101, 115, 111, 100, 100, 116, 97, 110, 103, 101, 110] => lookup_859_411(acc),
            [110, 101, 115, 115, 101, 98, 121] => lookup_859_412(acc),
            [110, 101, 115, 115, 101, 116] => lookup_859_413(acc),
            [110, 105, 115, 115, 101, 100, 97, 108] => lookup_859_414(acc),
            [110, 105, 116, 116, 101, 100, 97, 108] => lookup_859_415(acc),
            [110, 108] => lookup_859_416(labels, acc),
            [110, 111, 114, 100, 45, 97, 117, 114, 100, 97, 108] => lookup_859_417(acc),
            [110, 111, 114, 100, 45, 102, 114, 111, 110] => lookup_859_418(acc),
            [110, 111, 114, 100, 45, 111, 100, 97, 108] => lookup_859_419(acc),
            [110, 111, 114, 100, 100, 97, 108] => lookup_859_420(acc),
            [110, 111, 114, 100, 107, 97, 112, 112] => lookup_859_421(acc),
            [110, 111, 114, 100, 108, 97, 110, 100] => lookup_859_422(info, labels, acc),
            [110, 111, 114, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_859_423(acc),
            [110, 111, 114, 100, 114, 101, 105, 115, 97] => lookup_859_424(acc),
            [110, 111, 114, 101, 45, 111, 103, 45, 117, 118, 100, 97, 108] => lookup_859_425(acc),
            [110, 111, 116, 111, 100, 100, 101, 110] => lookup_859_426(acc),
            [110, 111, 116, 116, 101, 114, 111, 121] => lookup_859_427(acc),
            [110, 116] => lookup_859_428(labels, acc),
            [110, 195, 161, 118, 117, 111, 116, 110, 97] => lookup_859_429(acc),
            [110, 195, 165, 195, 165, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_859_430(acc)
            }
            [110, 195, 166, 114, 195, 184, 121] => lookup_859_431(acc),
            [110, 195, 184, 116, 116, 101, 114, 195, 184, 121] => lookup_859_432(acc),
            [111, 100, 100, 97] => lookup_859_433(acc),
            [111, 102] => lookup_859_434(labels, acc),
            [111, 107, 115, 110, 101, 115] => lookup_859_435(acc),
            [111, 108] => lookup_859_436(labels, acc),
            [111, 109, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_859_437(acc),
            [111, 112, 112, 100, 97, 108] => lookup_859_438(acc),
            [111, 112, 112, 101, 103, 97, 114, 100] => lookup_859_439(acc),
            [111, 112, 112, 101, 103, 195, 165, 114, 100] => lookup_859_440(acc),
            [111, 114, 107, 97, 110, 103, 101, 114] => lookup_859_441(acc),
            [111, 114, 107, 100, 97, 108] => lookup_859_442(acc),
            [111, 114, 108, 97, 110, 100] => lookup_859_443(acc),
            [111, 114, 115, 107, 111, 103] => lookup_859_444(acc),
            [111, 114, 115, 116, 97] => lookup_859_445(acc),
            [111, 115, 101, 110] => lookup_859_446(acc),
            [111, 115, 108, 111] => lookup_859_447(labels, acc),
            [111, 115, 111, 121, 114, 111] => lookup_859_448(acc),
            [111, 115, 116, 101, 114, 111, 121] => lookup_859_449(acc),
            [111, 115, 116, 101, 114, 195, 184, 121] => lookup_859_450(acc),
            [111, 115, 116, 102, 111, 108, 100] => lookup_859_451(info, labels, acc),
            [111, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_859_452(acc),
            [111, 115, 195, 184, 121, 114, 111] => lookup_859_453(acc),
            [111, 118, 101, 114, 104, 97, 108, 108, 97] => lookup_859_454(acc),
            [111, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_859_455(acc),
            [111, 121, 101, 114] => lookup_859_456(acc),
            [111, 121, 103, 97, 114, 100, 101, 110] => lookup_859_457(acc),
            [111, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => lookup_859_458(acc),
            [112, 111, 114, 115, 97, 110, 103, 101, 114] => lookup_859_459(acc),
            [112, 111, 114, 115, 97, 110, 103, 117] => lookup_859_460(acc),
            [112, 111, 114, 115, 103, 114, 117, 110, 110] => lookup_859_461(acc),
            [112, 111, 114, 115, 195, 161, 197, 139, 103, 117] => lookup_859_462(acc),
            [112, 114, 105, 118] => lookup_859_463(acc),
            [114, 97, 100, 101] => lookup_859_464(acc),
            [114, 97, 100, 111, 121] => lookup_859_465(acc),
            [114, 97, 100, 195, 184, 121] => lookup_859_466(acc),
            [114, 97, 104, 107, 107, 101, 114, 97, 118, 106, 117] => lookup_859_467(acc),
            [114, 97, 104, 111, 108, 116] => lookup_859_468(acc),
            [114, 97, 105, 115, 97] => lookup_859_469(acc),
            [114, 97, 107, 107, 101, 115, 116, 97, 100] => lookup_859_470(acc),
            [114, 97, 108, 105, 110, 103, 101, 110] => lookup_859_471(acc),
            [114, 97, 110, 97] => lookup_859_472(acc),
            [114, 97, 110, 100, 97, 98, 101, 114, 103] => lookup_859_473(acc),
            [114, 97, 117, 109, 97] => lookup_859_474(acc),
            [114, 101, 110, 100, 97, 108, 101, 110] => lookup_859_475(acc),
            [114, 101, 110, 110, 101, 98, 117] => lookup_859_476(acc),
            [114, 101, 110, 110, 101, 115, 111, 121] => lookup_859_477(acc),
            [114, 101, 110, 110, 101, 115, 195, 184, 121] => lookup_859_478(acc),
            [114, 105, 110, 100, 97, 108] => lookup_859_479(acc),
            [114, 105, 110, 103, 101, 98, 117] => lookup_859_480(acc),
            [114, 105, 110, 103, 101, 114, 105, 107, 101] => lookup_859_481(acc),
            [114, 105, 110, 103, 115, 97, 107, 101, 114] => lookup_859_482(acc),
            [114, 105, 115, 111, 114] => lookup_859_483(acc),
            [114, 105, 115, 115, 97] => lookup_859_484(acc),
            [114, 105, 115, 195, 184, 114] => lookup_859_485(acc),
            [114, 108] => lookup_859_486(labels, acc),
            [114, 111, 97, 110] => lookup_859_487(acc),
            [114, 111, 100, 111, 121] => lookup_859_488(acc),
            [114, 111, 108, 108, 97, 103] => lookup_859_489(acc),
            [114, 111, 109, 115, 97] => lookup_859_490(acc),
            [114, 111, 109, 115, 107, 111, 103] => lookup_859_491(acc),
            [114, 111, 114, 111, 115] => lookup_859_492(acc),
            [114, 111, 115, 116] => lookup_859_493(acc),
            [114, 111, 121, 107, 101, 110] => lookup_859_494(acc),
            [114, 111, 121, 114, 118, 105, 107] => lookup_859_495(acc),
            [114, 117, 111, 118, 97, 116] => lookup_859_496(acc),
            [114, 121, 103, 103, 101] => lookup_859_497(acc),
            [114, 195, 161, 104, 107, 107, 101, 114, 195, 161, 118, 106, 117] => {
                lookup_859_498(acc)
            }
            [114, 195, 161, 105, 115, 97] => lookup_859_499(acc),
            [114, 195, 165, 100, 101] => lookup_859_500(acc),
            [114, 195, 165, 104, 111, 108, 116] => lookup_859_501(acc),
            [114, 195, 166, 108, 105, 110, 103, 101, 110] => lookup_859_502(acc),
            [114, 195, 184, 100, 195, 184, 121] => lookup_859_503(acc),
            [114, 195, 184, 109, 115, 107, 111, 103] => lookup_859_504(acc),
            [114, 195, 184, 114, 111, 115] => lookup_859_505(acc),
            [114, 195, 184, 115, 116] => lookup_859_506(acc),
            [114, 195, 184, 121, 107, 101, 110] => lookup_859_507(acc),
            [114, 195, 184, 121, 114, 118, 105, 107] => lookup_859_508(acc),
            [115, 97, 108, 97, 110, 103, 101, 110] => lookup_859_509(acc),
            [115, 97, 108, 97, 116] => lookup_859_510(acc),
            [115, 97, 108, 116, 100, 97, 108] => lookup_859_511(acc),
            [115, 97, 109, 110, 97, 110, 103, 101, 114] => lookup_859_512(acc),
            [115, 97, 110, 100, 101, 102, 106, 111, 114, 100] => lookup_859_513(acc),
            [115, 97, 110, 100, 110, 101, 115] => lookup_859_514(acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 111, 101, 110] => lookup_859_515(acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 195, 184, 101, 110] => lookup_859_516(acc),
            [115, 97, 110, 100, 111, 121] => lookup_859_517(acc),
            [115, 97, 110, 100, 195, 184, 121] => lookup_859_518(acc),
            [115, 97, 114, 112, 115, 98, 111, 114, 103] => lookup_859_519(acc),
            [115, 97, 117, 100, 97] => lookup_859_520(acc),
            [115, 97, 117, 104, 101, 114, 97, 100] => lookup_859_521(acc),
            [115, 101, 108] => lookup_859_522(acc),
            [115, 101, 108, 98, 117] => lookup_859_523(acc),
            [115, 101, 108, 106, 101] => lookup_859_524(acc),
            [115, 101, 108, 106, 111, 114, 100] => lookup_859_525(acc),
            [115, 102] => lookup_859_526(labels, acc),
            [115, 105, 101, 108, 108, 97, 107] => lookup_859_527(acc),
            [115, 105, 103, 100, 97, 108] => lookup_859_528(acc),
            [115, 105, 108, 106, 97, 110] => lookup_859_529(acc),
            [115, 105, 114, 100, 97, 108] => lookup_859_530(acc),
            [115, 107, 97, 110, 105, 116] => lookup_859_531(acc),
            [115, 107, 97, 110, 108, 97, 110, 100] => lookup_859_532(acc),
            [115, 107, 97, 117, 110] => lookup_859_533(acc),
            [115, 107, 101, 100, 115, 109, 111] => lookup_859_534(acc),
            [115, 107, 101, 100, 115, 109, 111, 107, 111, 114, 115, 101, 116] => {
                lookup_859_535(acc)
            }
            [115, 107, 105] => lookup_859_536(acc),
            [115, 107, 105, 101, 110] => lookup_859_537(acc),
            [115, 107, 105, 101, 114, 118, 97] => lookup_859_538(acc),
            [115, 107, 105, 101, 114, 118, 195, 161] => lookup_859_539(acc),
            [115, 107, 105, 112, 116, 118, 101, 116] => lookup_859_540(acc),
            [115, 107, 106, 97, 107] => lookup_859_541(acc),
            [115, 107, 106, 101, 114, 118, 111, 121] => lookup_859_542(acc),
            [115, 107, 106, 101, 114, 118, 195, 184, 121] => lookup_859_543(acc),
            [115, 107, 106, 195, 165, 107] => lookup_859_544(acc),
            [115, 107, 111, 100, 106, 101] => lookup_859_545(acc),
            [115, 107, 195, 161, 110, 105, 116] => lookup_859_546(acc),
            [115, 107, 195, 165, 110, 108, 97, 110, 100] => lookup_859_547(acc),
            [115, 108, 97, 116, 116, 117, 109] => lookup_859_548(acc),
            [115, 109, 111, 108, 97] => lookup_859_549(acc),
            [115, 109, 195, 184, 108, 97] => lookup_859_550(acc),
            [115, 110, 97, 97, 115, 101] => lookup_859_551(acc),
            [115, 110, 97, 115, 97] => lookup_859_552(acc),
            [115, 110, 105, 108, 108, 102, 106, 111, 114, 100] => lookup_859_553(acc),
            [115, 110, 111, 97, 115, 97] => lookup_859_554(acc),
            [115, 110, 195, 165, 97, 115, 101] => lookup_859_555(acc),
            [115, 110, 195, 165, 115, 97] => lookup_859_556(acc),
            [115, 111, 103, 110, 100, 97, 108] => lookup_859_557(acc),
            [115, 111, 103, 110, 101] => lookup_859_558(acc),
            [115, 111, 107, 110, 100, 97, 108] => lookup_859_559(acc),
            [115, 111, 108, 97] => lookup_859_560(acc),
            [115, 111, 108, 117, 110, 100] => lookup_859_561(acc),
            [115, 111, 109, 110, 97] => lookup_859_562(acc),
            [115, 111, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_859_563(acc),
            [115, 111, 110, 103, 100, 97, 108, 101, 110] => lookup_859_564(acc),
            [115, 111, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_859_565(acc),
            [115, 111, 114, 45, 102, 114, 111, 110] => lookup_859_566(acc),
            [115, 111, 114, 45, 111, 100, 97, 108] => lookup_859_567(acc),
            [115, 111, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_859_568(acc),
            [115, 111, 114, 102, 111, 108, 100] => lookup_859_569(acc),
            [115, 111, 114, 114, 101, 105, 115, 97] => lookup_859_570(acc),
            [115, 111, 114, 116, 108, 97, 110, 100] => lookup_859_571(acc),
            [115, 111, 114, 117, 109] => lookup_859_572(acc),
            [115, 112, 106, 101, 108, 107, 97, 118, 105, 107] => lookup_859_573(acc),
            [115, 112, 121, 100, 101, 98, 101, 114, 103] => lookup_859_574(acc),
            [115, 116] => lookup_859_575(labels, acc),
            [115, 116, 97, 110, 103, 101] => lookup_859_576(acc),
            [115, 116, 97, 116] => lookup_859_577(acc),
            [115, 116, 97, 116, 104, 101, 108, 108, 101] => lookup_859_578(acc),
            [115, 116, 97, 118, 97, 110, 103, 101, 114] => lookup_859_579(acc),
            [115, 116, 97, 118, 101, 114, 110] => lookup_859_580(acc),
            [115, 116, 101, 105, 103, 101, 110] => lookup_859_581(acc),
            [115, 116, 101, 105, 110, 107, 106, 101, 114] => lookup_859_582(acc),
            [115, 116, 106, 111, 114, 100, 97, 108] => lookup_859_583(acc),
            [115, 116, 106, 111, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_859_584(acc)
            }
            [115, 116, 106, 195, 184, 114, 100, 97, 108] => lookup_859_585(acc),
            [115, 116, 106, 195, 184, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_859_586(acc)
            }
            [115, 116, 111, 107, 107, 101] => lookup_859_587(acc),
            [115, 116, 111, 114, 45, 101, 108, 118, 100, 97, 108] => lookup_859_588(acc),
            [115, 116, 111, 114, 100] => lookup_859_589(acc),
            [115, 116, 111, 114, 100, 97, 108] => lookup_859_590(acc),
            [115, 116, 111, 114, 102, 106, 111, 114, 100] => lookup_859_591(acc),
            [115, 116, 114, 97, 110, 100] => lookup_859_592(acc),
            [115, 116, 114, 97, 110, 100, 97] => lookup_859_593(acc),
            [115, 116, 114, 121, 110] => lookup_859_594(acc),
            [115, 117, 108, 97] => lookup_859_595(acc),
            [115, 117, 108, 100, 97, 108] => lookup_859_596(acc),
            [115, 117, 110, 100] => lookup_859_597(acc),
            [115, 117, 110, 110, 100, 97, 108] => lookup_859_598(acc),
            [115, 117, 114, 110, 97, 100, 97, 108] => lookup_859_599(acc),
            [115, 118, 97, 108, 98, 97, 114, 100] => lookup_859_600(labels, acc),
            [115, 118, 101, 105, 111] => lookup_859_601(acc),
            [115, 118, 101, 108, 118, 105, 107] => lookup_859_602(acc),
            [115, 121, 107, 107, 121, 108, 118, 101, 110] => lookup_859_603(acc),
            [115, 195, 161, 108, 97, 116] => lookup_859_604(acc),
            [115, 195, 161, 108, 195, 161, 116] => lookup_859_605(acc),
            [115, 195, 184, 103, 110, 101] => lookup_859_606(acc),
            [115, 195, 184, 109, 110, 97] => lookup_859_607(acc),
            [115, 195, 184, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_859_608(acc),
            [115, 195, 184, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_859_609(acc),
            [115, 195, 184, 114, 45, 102, 114, 111, 110] => lookup_859_610(acc),
            [115, 195, 184, 114, 45, 111, 100, 97, 108] => lookup_859_611(acc),
            [115, 195, 184, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_859_612(acc),
            [115, 195, 184, 114, 102, 111, 108, 100] => lookup_859_613(acc),
            [115, 195, 184, 114, 114, 101, 105, 115, 97] => lookup_859_614(acc),
            [115, 195, 184, 114, 117, 109] => lookup_859_615(acc),
            [116, 97, 110, 97] => lookup_859_616(acc),
            [116, 97, 110, 97, 110, 103, 101, 114] => lookup_859_617(acc),
            [116, 101, 108, 101, 109, 97, 114, 107] => lookup_859_618(info, labels, acc),
            [116, 105, 109, 101] => lookup_859_619(acc),
            [116, 105, 110, 103, 118, 111, 108, 108] => lookup_859_620(acc),
            [116, 105, 110, 110] => lookup_859_621(acc),
            [116, 106, 101, 108, 100, 115, 117, 110, 100] => lookup_859_622(acc),
            [116, 106, 111, 109, 101] => lookup_859_623(acc),
            [116, 106, 195, 184, 109, 101] => lookup_859_624(acc),
            [116, 109] => lookup_859_625(labels, acc),
            [116, 111, 107, 107, 101] => lookup_859_626(acc),
            [116, 111, 108, 103, 97] => lookup_859_627(acc),
            [116, 111, 110, 115, 98, 101, 114, 103] => lookup_859_628(acc),
            [116, 111, 114, 115, 107, 101, 110] => lookup_859_629(acc),
            [116, 114] => lookup_859_630(labels, acc),
            [116, 114, 97, 110, 97] => lookup_859_631(acc),
            [116, 114, 97, 110, 98, 121] => lookup_859_632(acc),
            [116, 114, 97, 110, 111, 121] => lookup_859_633(acc),
            [116, 114, 97, 110, 195, 184, 121] => lookup_859_634(acc),
            [116, 114, 111, 97, 110, 100, 105, 110] => lookup_859_635(acc),
            [116, 114, 111, 103, 115, 116, 97, 100] => lookup_859_636(acc),
            [116, 114, 111, 109, 115, 97] => lookup_859_637(acc),
            [116, 114, 111, 109, 115, 111] => lookup_859_638(acc),
            [116, 114, 111, 109, 115, 195, 184] => lookup_859_639(acc),
            [116, 114, 111, 110, 100, 104, 101, 105, 109] => lookup_859_640(acc),
            [116, 114, 121, 115, 105, 108] => lookup_859_641(acc),
            [116, 114, 195, 166, 110, 97] => lookup_859_642(acc),
            [116, 114, 195, 184, 103, 115, 116, 97, 100] => lookup_859_643(acc),
            [116, 118, 101, 100, 101, 115, 116, 114, 97, 110, 100] => lookup_859_644(acc),
            [116, 121, 100, 97, 108] => lookup_859_645(acc),
            [116, 121, 110, 115, 101, 116] => lookup_859_646(acc),
            [116, 121, 115, 102, 106, 111, 114, 100] => lookup_859_647(acc),
            [116, 121, 115, 110, 101, 115] => lookup_859_648(acc),
            [116, 121, 115, 118, 97, 114] => lookup_859_649(acc),
            [116, 121, 115, 118, 195, 166, 114] => lookup_859_650(acc),
            [116, 195, 184, 110, 115, 98, 101, 114, 103] => lookup_859_651(acc),
            [117, 108, 108, 101, 110, 115, 97, 107, 101, 114] => lookup_859_652(acc),
            [117, 108, 108, 101, 110, 115, 118, 97, 110, 103] => lookup_859_653(acc),
            [117, 108, 118, 105, 107] => lookup_859_654(acc),
            [117, 110, 106, 97, 114, 103, 97] => lookup_859_655(acc),
            [117, 110, 106, 195, 161, 114, 103, 97] => lookup_859_656(acc),
            [117, 116, 115, 105, 114, 97] => lookup_859_657(acc),
            [118, 97] => lookup_859_658(labels, acc),
            [118, 97, 97, 112, 115, 116, 101] => lookup_859_659(acc),
            [118, 97, 100, 115, 111] => lookup_859_660(acc),
            [118, 97, 100, 115, 195, 184] => lookup_859_661(acc),
            [118, 97, 103, 97] => lookup_859_662(acc),
            [118, 97, 103, 97, 110] => lookup_859_663(acc),
            [118, 97, 103, 115, 111, 121] => lookup_859_664(acc),
            [118, 97, 107, 115, 100, 97, 108] => lookup_859_665(acc),
            [118, 97, 108, 108, 101] => lookup_859_666(acc),
            [118, 97, 110, 103] => lookup_859_667(acc),
            [118, 97, 110, 121, 108, 118, 101, 110] => lookup_859_668(acc),
            [118, 97, 114, 100, 111] => lookup_859_669(acc),
            [118, 97, 114, 100, 195, 184] => lookup_859_670(acc),
            [118, 97, 114, 103, 103, 97, 116] => lookup_859_671(acc),
            [118, 97, 114, 111, 121] => lookup_859_672(acc),
            [118, 101, 102, 115, 110] => lookup_859_673(acc),
            [118, 101, 103, 97] => lookup_859_674(acc),
            [118, 101, 103, 97, 114, 115, 104, 101, 105] => lookup_859_675(acc),
            [118, 101, 103, 195, 165, 114, 115, 104, 101, 105] => lookup_859_676(acc),
            [118, 101, 110, 110, 101, 115, 108, 97] => lookup_859_677(acc),
            [118, 101, 114, 100, 97, 108] => lookup_859_678(acc),
            [118, 101, 114, 114, 97, 110] => lookup_859_679(acc),
            [118, 101, 115, 116, 98, 121] => lookup_859_680(acc),
            [118, 101, 115, 116, 102, 111, 108, 100] => lookup_859_681(info, labels, acc),
            [118, 101, 115, 116, 110, 101, 115] => lookup_859_682(acc),
            [118, 101, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => lookup_859_683(acc),
            [118, 101, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_859_684(acc),
            [118, 101, 115, 116, 118, 97, 103, 111, 121] => lookup_859_685(acc),
            [118, 101, 115, 116, 118, 195, 165, 103, 195, 184, 121] => lookup_859_686(acc),
            [118, 101, 118, 101, 108, 115, 116, 97, 100] => lookup_859_687(acc),
            [118, 102] => lookup_859_688(labels, acc),
            [118, 103, 115] => lookup_859_689(acc),
            [118, 105, 107] => lookup_859_690(acc),
            [118, 105, 107, 110, 97] => lookup_859_691(acc),
            [118, 105, 110, 100, 97, 102, 106, 111, 114, 100] => lookup_859_692(acc),
            [118, 111, 97, 103, 97, 116] => lookup_859_693(acc),
            [118, 111, 108, 100, 97] => lookup_859_694(acc),
            [118, 111, 115, 115] => lookup_859_695(acc),
            [118, 111, 115, 115, 101, 118, 97, 110, 103, 101, 110] => lookup_859_696(acc),
            [118, 195, 161, 114, 103, 103, 195, 161, 116] => lookup_859_697(acc),
            [118, 195, 165, 103, 97, 110] => lookup_859_698(acc),
            [118, 195, 165, 103, 115, 195, 184, 121] => lookup_859_699(acc),
            [118, 195, 165, 103, 195, 165] => lookup_859_700(acc),
            [118, 195, 166, 114, 195, 184, 121] => lookup_859_701(acc),
            [120, 110, 45, 45, 97, 110, 100, 121, 45, 105, 114, 97] => lookup_859_702(acc),
            [120, 110, 45, 45, 97, 115, 107, 121, 45, 105, 114, 97] => lookup_859_703(acc),
            [120, 110, 45, 45, 97, 117, 114, 115, 107, 111, 103, 45, 104, 108, 97, 110, 100, 45, 106, 110, 98] => {
                lookup_859_704(acc)
            }
            [120, 110, 45, 45, 97, 118, 101, 114, 121, 45, 121, 117, 97] => lookup_859_705(acc),
            [120, 110, 45, 45, 98, 100, 100, 100, 106, 45, 109, 114, 97, 98, 100] => {
                lookup_859_706(acc)
            }
            [120, 110, 45, 45, 98, 101, 97, 114, 97, 108, 118, 104, 107, 105, 45, 121, 52, 97] => {
                lookup_859_707(acc)
            }
            [120, 110, 45, 45, 98, 101, 114, 108, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_859_708(acc)
            }
            [120, 110, 45, 45, 98, 104, 99, 97, 118, 117, 111, 116, 110, 97, 45, 115, 52, 97] => {
                lookup_859_709(acc)
            }
            [120, 110, 45, 45, 98, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97, 45, 107, 55, 97] => {
                lookup_859_710(acc)
            }
            [120, 110, 45, 45, 98, 105, 100, 114, 45, 53, 110, 97, 99] => lookup_859_711(acc),
            [120, 110, 45, 45, 98, 105, 101, 118, 116, 45, 48, 113, 97] => lookup_859_712(acc),
            [120, 110, 45, 45, 98, 106, 97, 114, 107, 121, 45, 102, 121, 97] => lookup_859_713(acc),
            [120, 110, 45, 45, 98, 106, 100, 100, 97, 114, 45, 112, 116, 97] => lookup_859_714(acc),
            [120, 110, 45, 45, 98, 108, 116, 45, 101, 108, 97, 98] => lookup_859_715(acc),
            [120, 110, 45, 45, 98, 109, 108, 111, 45, 103, 114, 97] => lookup_859_716(acc),
            [120, 110, 45, 45, 98, 111, 100, 45, 50, 110, 97] => lookup_859_717(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 45, 119, 117, 97, 99] => lookup_859_718(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 115, 117, 110, 100, 45, 109, 56, 97, 99] => {
                lookup_859_719(acc)
            }
            [120, 110, 45, 45, 98, 114, 117, 109, 45, 118, 111, 97] => lookup_859_720(acc),
            [120, 110, 45, 45, 98, 116, 115, 102, 106, 111, 114, 100, 45, 57, 122, 97] => {
                lookup_859_721(acc)
            }
            [120, 110, 45, 45, 100, 97, 118, 118, 101, 110, 106, 114, 103, 97, 45, 121, 52, 97] => {
                lookup_859_722(acc)
            }
            [120, 110, 45, 45, 100, 110, 110, 97, 45, 103, 114, 97] => lookup_859_723(acc),
            [120, 110, 45, 45, 100, 114, 98, 97, 107, 45, 119, 117, 97] => lookup_859_724(acc),
            [120, 110, 45, 45, 100, 121, 114, 121, 45, 105, 114, 97] => lookup_859_725(acc),
            [120, 110, 45, 45, 101, 118, 101, 110, 105, 45, 48, 113, 97, 48, 49, 103, 97] => {
                lookup_859_726(acc)
            }
            [120, 110, 45, 45, 102, 105, 110, 110, 121, 45, 121, 117, 97] => lookup_859_727(acc),
            [120, 110, 45, 45, 102, 106, 111, 114, 100, 45, 108, 114, 97] => lookup_859_728(acc),
            [120, 110, 45, 45, 102, 108, 45, 122, 105, 97] => lookup_859_729(acc),
            [120, 110, 45, 45, 102, 108, 111, 114, 45, 106, 114, 97] => lookup_859_730(acc),
            [120, 110, 45, 45, 102, 114, 100, 101, 45, 103, 114, 97] => lookup_859_731(acc),
            [120, 110, 45, 45, 102, 114, 110, 97, 45, 119, 111, 97] => lookup_859_732(acc),
            [120, 110, 45, 45, 102, 114, 121, 97, 45, 104, 114, 97] => lookup_859_733(acc),
            [120, 110, 45, 45, 103, 103, 97, 118, 105, 105, 107, 97, 45, 56, 121, 97, 52, 55, 104] => {
                lookup_859_734(acc)
            }
            [120, 110, 45, 45, 103, 105, 108, 100, 101, 115, 107, 108, 45, 103, 48, 97] => {
                lookup_859_735(acc)
            }
            [120, 110, 45, 45, 103, 105, 118, 117, 111, 116, 110, 97, 45, 56, 121, 97] => {
                lookup_859_736(acc)
            }
            [120, 110, 45, 45, 103, 106, 118, 105, 107, 45, 119, 117, 97] => lookup_859_737(acc),
            [120, 110, 45, 45, 103, 108, 115, 45, 101, 108, 97, 99] => lookup_859_738(acc),
            [120, 110, 45, 45, 104, 45, 50, 102, 97] => lookup_859_739(acc),
            [120, 110, 45, 45, 104, 98, 109, 101, 114, 45, 120, 113, 97] => lookup_859_740(acc),
            [120, 110, 45, 45, 104, 99, 101, 115, 117, 111, 108, 111, 45, 55, 121, 97, 51, 53, 98] => {
                lookup_859_741(acc)
            }
            [120, 110, 45, 45, 104, 103, 101, 98, 111, 115, 116, 97, 100, 45, 103, 51, 97] => {
                lookup_859_742(acc)
            }
            [120, 110, 45, 45, 104, 109, 109, 114, 102, 101, 97, 115, 116, 97, 45, 115, 52, 97, 99] => {
                lookup_859_743(acc)
            }
            [120, 110, 45, 45, 104, 110, 101, 102, 111, 115, 115, 45, 113, 49, 97] => {
                lookup_859_744(acc)
            }
            [120, 110, 45, 45, 104, 111, 98, 108, 45, 105, 114, 97] => lookup_859_745(acc),
            [120, 110, 45, 45, 104, 111, 108, 116, 108, 101, 110, 45, 104, 120, 97] => {
                lookup_859_746(acc)
            }
            [120, 110, 45, 45, 104, 112, 109, 105, 114, 45, 120, 113, 97] => lookup_859_747(acc),
            [120, 110, 45, 45, 104, 121, 97, 110, 103, 101, 114, 45, 113, 49, 97] => {
                lookup_859_748(acc)
            }
            [120, 110, 45, 45, 104, 121, 108, 97, 110, 100, 101, 116, 45, 53, 52, 97] => {
                lookup_859_749(acc)
            }
            [120, 110, 45, 45, 105, 110, 100, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_859_750(acc)
            }
            [120, 110, 45, 45, 106, 108, 115, 116, 101, 114, 45, 98, 121, 97] => {
                lookup_859_751(acc)
            }
            [120, 110, 45, 45, 106, 114, 112, 101, 108, 97, 110, 100, 45, 53, 52, 97] => {
                lookup_859_752(acc)
            }
            [120, 110, 45, 45, 107, 97, 114, 109, 121, 45, 121, 117, 97] => lookup_859_753(acc),
            [120, 110, 45, 45, 107, 102, 106, 111, 114, 100, 45, 105, 117, 97] => {
                lookup_859_754(acc)
            }
            [120, 110, 45, 45, 107, 108, 98, 117, 45, 119, 111, 97] => lookup_859_755(acc),
            [120, 110, 45, 45, 107, 111, 108, 117, 111, 107, 116, 97, 45, 55, 121, 97, 53, 55, 104] => {
                lookup_859_756(acc)
            }
            [120, 110, 45, 45, 107, 114, 97, 103, 101, 114, 45, 103, 121, 97] => {
                lookup_859_757(acc)
            }
            [120, 110, 45, 45, 107, 114, 97, 110, 103, 104, 107, 101, 45, 98, 48, 97] => {
                lookup_859_758(acc)
            }
            [120, 110, 45, 45, 107, 114, 100, 115, 104, 101, 114, 97, 100, 45, 109, 56, 97] => {
                lookup_859_759(acc)
            }
            [120, 110, 45, 45, 107, 114, 101, 104, 97, 109, 110, 45, 100, 120, 97] => {
                lookup_859_760(acc)
            }
            [120, 110, 45, 45, 107, 114, 106, 111, 104, 107, 97, 45, 104, 119, 97, 98, 52, 57, 106] => {
                lookup_859_761(acc)
            }
            [120, 110, 45, 45, 107, 115, 110, 101, 115, 45, 117, 117, 97] => lookup_859_762(acc),
            [120, 110, 45, 45, 107, 118, 102, 106, 111, 114, 100, 45, 110, 120, 97] => {
                lookup_859_763(acc)
            }
            [120, 110, 45, 45, 107, 118, 105, 116, 115, 121, 45, 102, 121, 97] => {
                lookup_859_764(acc)
            }
            [120, 110, 45, 45, 107, 118, 110, 97, 110, 103, 101, 110, 45, 107, 48, 97] => {
                lookup_859_765(acc)
            }
            [120, 110, 45, 45, 108, 45, 49, 102, 97] => lookup_859_766(acc),
            [120, 110, 45, 45, 108, 97, 104, 101, 97, 100, 106, 117, 45, 55, 121, 97] => {
                lookup_859_767(acc)
            }
            [120, 110, 45, 45, 108, 97, 110, 103, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_859_768(acc)
            }
            [120, 110, 45, 45, 108, 100, 105, 110, 103, 101, 110, 45, 113, 49, 97] => {
                lookup_859_769(acc)
            }
            [120, 110, 45, 45, 108, 101, 97, 103, 97, 118, 105, 105, 107, 97, 45, 53, 50, 98] => {
                lookup_859_770(acc)
            }
            [120, 110, 45, 45, 108, 101, 115, 117, 110, 100, 45, 104, 117, 97] => {
                lookup_859_771(acc)
            }
            [120, 110, 45, 45, 108, 103, 114, 100, 45, 112, 111, 97, 99] => lookup_859_772(acc),
            [120, 110, 45, 45, 108, 104, 112, 112, 105, 45, 120, 113, 97] => lookup_859_773(acc),
            [120, 110, 45, 45, 108, 105, 110, 100, 115, 45, 112, 114, 97] => lookup_859_774(acc),
            [120, 110, 45, 45, 108, 111, 97, 98, 116, 45, 48, 113, 97] => lookup_859_775(acc),
            [120, 110, 45, 45, 108, 114, 100, 97, 108, 45, 115, 114, 97] => lookup_859_776(acc),
            [120, 110, 45, 45, 108, 114, 101, 110, 115, 107, 111, 103, 45, 53, 52, 97] => {
                lookup_859_777(acc)
            }
            [120, 110, 45, 45, 108, 116, 45, 108, 105, 97, 99] => lookup_859_778(acc),
            [120, 110, 45, 45, 108, 116, 101, 110, 45, 103, 114, 97] => lookup_859_779(acc),
            [120, 110, 45, 45, 108, 117, 114, 121, 45, 105, 114, 97] => lookup_859_780(acc),
            [120, 110, 45, 45, 109, 101, 108, 121, 45, 105, 114, 97] => lookup_859_781(acc),
            [120, 110, 45, 45, 109, 101, 114, 107, 101, 114, 45, 107, 117, 97] => {
                lookup_859_782(acc)
            }
            [120, 110, 45, 45, 109, 106, 110, 100, 97, 108, 101, 110, 45, 54, 52, 97] => {
                lookup_859_783(acc)
            }
            [120, 110, 45, 45, 109, 108, 97, 116, 118, 117, 111, 112, 109, 105, 45, 115, 52, 97] => {
                lookup_859_784(acc)
            }
            [120, 110, 45, 45, 109, 108, 105, 45, 116, 108, 97] => lookup_859_785(acc),
            [120, 110, 45, 45, 109, 108, 115, 101, 108, 118, 45, 105, 117, 97] => {
                lookup_859_786(acc)
            }
            [120, 110, 45, 45, 109, 111, 114, 101, 107, 101, 45, 106, 117, 97] => {
                lookup_859_787(acc)
            }
            [120, 110, 45, 45, 109, 111, 115, 106, 101, 110, 45, 101, 121, 97] => {
                lookup_859_788(acc)
            }
            [120, 110, 45, 45, 109, 111, 116, 45, 116, 108, 97] => lookup_859_789(acc),
            [120, 110, 45, 45, 109, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108, 45, 113, 113, 98] => {
                lookup_859_790(info, labels, acc)
            }
            [120, 110, 45, 45, 109, 115, 121, 45, 117, 108, 97, 48, 104] => lookup_859_791(acc),
            [120, 110, 45, 45, 109, 116, 116, 97, 45, 118, 114, 106, 106, 97, 116, 45, 107, 55, 97, 102] => {
                lookup_859_792(acc)
            }
            [120, 110, 45, 45, 109, 117, 111, 115, 116, 45, 48, 113, 97] => lookup_859_793(acc),
            [120, 110, 45, 45, 110, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101, 45, 116, 99, 98, 97] => {
                lookup_859_794(acc)
            }
            [120, 110, 45, 45, 110, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_859_795(acc),
            [120, 110, 45, 45, 110, 116, 116, 101, 114, 121, 45, 98, 121, 97, 101] => {
                lookup_859_796(acc)
            }
            [120, 110, 45, 45, 110, 118, 117, 111, 116, 110, 97, 45, 104, 119, 97] => {
                lookup_859_797(acc)
            }
            [120, 110, 45, 45, 111, 112, 112, 101, 103, 114, 100, 45, 105, 120, 97] => {
                lookup_859_798(acc)
            }
            [120, 110, 45, 45, 111, 115, 116, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_859_799(acc)
            }
            [120, 110, 45, 45, 111, 115, 121, 114, 111, 45, 119, 117, 97] => lookup_859_800(acc),
            [120, 110, 45, 45, 112, 111, 114, 115, 103, 117, 45, 115, 116, 97, 50, 54, 102] => {
                lookup_859_801(acc)
            }
            [120, 110, 45, 45, 114, 97, 100, 121, 45, 105, 114, 97] => lookup_859_802(acc),
            [120, 110, 45, 45, 114, 100, 97, 108, 45, 112, 111, 97] => lookup_859_803(acc),
            [120, 110, 45, 45, 114, 100, 101, 45, 117, 108, 97] => lookup_859_804(acc),
            [120, 110, 45, 45, 114, 100, 121, 45, 48, 110, 97, 98] => lookup_859_805(acc),
            [120, 110, 45, 45, 114, 101, 110, 110, 101, 115, 121, 45, 118, 49, 97] => {
                lookup_859_806(acc)
            }
            [120, 110, 45, 45, 114, 104, 107, 107, 101, 114, 118, 106, 117, 45, 48, 49, 97, 102] => {
                lookup_859_807(acc)
            }
            [120, 110, 45, 45, 114, 104, 111, 108, 116, 45, 109, 114, 97] => lookup_859_808(acc),
            [120, 110, 45, 45, 114, 105, 115, 97, 45, 53, 110, 97] => lookup_859_809(acc),
            [120, 110, 45, 45, 114, 105, 115, 114, 45, 105, 114, 97] => lookup_859_810(acc),
            [120, 110, 45, 45, 114, 108, 97, 110, 100, 45, 117, 117, 97] => lookup_859_811(acc),
            [120, 110, 45, 45, 114, 108, 105, 110, 103, 101, 110, 45, 109, 120, 97] => {
                lookup_859_812(acc)
            }
            [120, 110, 45, 45, 114, 109, 115, 107, 111, 103, 45, 98, 121, 97] => {
                lookup_859_813(acc)
            }
            [120, 110, 45, 45, 114, 114, 111, 115, 45, 103, 114, 97] => lookup_859_814(acc),
            [120, 110, 45, 45, 114, 115, 107, 111, 103, 45, 117, 117, 97] => lookup_859_815(acc),
            [120, 110, 45, 45, 114, 115, 116, 45, 48, 110, 97] => lookup_859_816(acc),
            [120, 110, 45, 45, 114, 115, 116, 97, 45, 102, 114, 97] => lookup_859_817(acc),
            [120, 110, 45, 45, 114, 121, 107, 101, 110, 45, 118, 117, 97] => lookup_859_818(acc),
            [120, 110, 45, 45, 114, 121, 114, 118, 105, 107, 45, 98, 121, 97] => {
                lookup_859_819(acc)
            }
            [120, 110, 45, 45, 115, 45, 49, 102, 97] => lookup_859_820(acc),
            [120, 110, 45, 45, 115, 97, 110, 100, 110, 101, 115, 115, 106, 101, 110, 45, 111, 103, 98] => {
                lookup_859_821(acc)
            }
            [120, 110, 45, 45, 115, 97, 110, 100, 121, 45, 121, 117, 97] => lookup_859_822(acc),
            [120, 110, 45, 45, 115, 101, 114, 97, 108, 45, 108, 114, 97] => lookup_859_823(acc),
            [120, 110, 45, 45, 115, 103, 110, 101, 45, 103, 114, 97] => lookup_859_824(acc),
            [120, 110, 45, 45, 115, 107, 105, 101, 114, 118, 45, 117, 116, 97] => {
                lookup_859_825(acc)
            }
            [120, 110, 45, 45, 115, 107, 106, 101, 114, 118, 121, 45, 118, 49, 97] => {
                lookup_859_826(acc)
            }
            [120, 110, 45, 45, 115, 107, 106, 107, 45, 115, 111, 97] => lookup_859_827(acc),
            [120, 110, 45, 45, 115, 107, 110, 105, 116, 45, 121, 113, 97] => lookup_859_828(acc),
            [120, 110, 45, 45, 115, 107, 110, 108, 97, 110, 100, 45, 102, 120, 97] => {
                lookup_859_829(acc)
            }
            [120, 110, 45, 45, 115, 108, 97, 116, 45, 53, 110, 97] => lookup_859_830(acc),
            [120, 110, 45, 45, 115, 108, 116, 45, 101, 108, 97, 98] => lookup_859_831(acc),
            [120, 110, 45, 45, 115, 109, 108, 97, 45, 104, 114, 97] => lookup_859_832(acc),
            [120, 110, 45, 45, 115, 109, 110, 97, 45, 103, 114, 97] => lookup_859_833(acc),
            [120, 110, 45, 45, 115, 110, 97, 115, 101, 45, 110, 114, 97] => lookup_859_834(acc),
            [120, 110, 45, 45, 115, 110, 100, 114, 101, 45, 108, 97, 110, 100, 45, 48, 99, 98] => {
                lookup_859_835(acc)
            }
            [120, 110, 45, 45, 115, 110, 101, 115, 45, 112, 111, 97] => lookup_859_836(acc),
            [120, 110, 45, 45, 115, 110, 115, 97, 45, 114, 111, 97] => lookup_859_837(acc),
            [120, 110, 45, 45, 115, 114, 45, 97, 117, 114, 100, 97, 108, 45, 108, 56, 97] => {
                lookup_859_838(acc)
            }
            [120, 110, 45, 45, 115, 114, 45, 102, 114, 111, 110, 45, 113, 49, 97] => {
                lookup_859_839(acc)
            }
            [120, 110, 45, 45, 115, 114, 45, 111, 100, 97, 108, 45, 113, 49, 97] => {
                lookup_859_840(acc)
            }
            [120, 110, 45, 45, 115, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114, 45, 103, 103, 98] => {
                lookup_859_841(acc)
            }
            [120, 110, 45, 45, 115, 114, 102, 111, 108, 100, 45, 98, 121, 97] => {
                lookup_859_842(acc)
            }
            [120, 110, 45, 45, 115, 114, 114, 101, 105, 115, 97, 45, 113, 49, 97] => {
                lookup_859_843(acc)
            }
            [120, 110, 45, 45, 115, 114, 117, 109, 45, 103, 114, 97] => lookup_859_844(acc),
            [120, 110, 45, 45, 115, 116, 102, 111, 108, 100, 45, 57, 120, 97] => {
                lookup_859_845(info, labels, acc)
            }
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 45, 115, 49, 97] => {
                lookup_859_846(acc)
            }
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110, 45, 115, 113, 98] => {
                lookup_859_847(acc)
            }
            [120, 110, 45, 45, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110, 45, 122, 99, 98] => {
                lookup_859_848(acc)
            }
            [120, 110, 45, 45, 116, 106, 109, 101, 45, 104, 114, 97] => lookup_859_849(acc),
            [120, 110, 45, 45, 116, 110, 115, 98, 101, 114, 103, 45, 113, 49, 97] => {
                lookup_859_850(acc)
            }
            [120, 110, 45, 45, 116, 114, 97, 110, 121, 45, 121, 117, 97] => lookup_859_851(acc),
            [120, 110, 45, 45, 116, 114, 103, 115, 116, 97, 100, 45, 114, 49, 97] => {
                lookup_859_852(acc)
            }
            [120, 110, 45, 45, 116, 114, 110, 97, 45, 119, 111, 97] => lookup_859_853(acc),
            [120, 110, 45, 45, 116, 114, 111, 109, 115, 45, 122, 117, 97] => lookup_859_854(acc),
            [120, 110, 45, 45, 116, 121, 115, 118, 114, 45, 118, 114, 97] => lookup_859_855(acc),
            [120, 110, 45, 45, 117, 110, 106, 114, 103, 97, 45, 114, 116, 97] => {
                lookup_859_856(acc)
            }
            [120, 110, 45, 45, 118, 97, 100, 115, 45, 106, 114, 97] => lookup_859_857(acc),
            [120, 110, 45, 45, 118, 97, 114, 100, 45, 106, 114, 97] => lookup_859_858(acc),
            [120, 110, 45, 45, 118, 101, 103, 114, 115, 104, 101, 105, 45, 99, 48, 97] => {
                lookup_859_859(acc)
            }
            [120, 110, 45, 45, 118, 101, 115, 116, 118, 103, 121, 45, 105, 120, 97, 54, 111] => {
                lookup_859_860(acc)
            }
            [120, 110, 45, 45, 118, 103, 45, 121, 105, 97, 98] => lookup_859_861(acc),
            [120, 110, 45, 45, 118, 103, 97, 110, 45, 113, 111, 97] => lookup_859_862(acc),
            [120, 110, 45, 45, 118, 103, 115, 121, 45, 113, 111, 97, 48, 106] => {
                lookup_859_863(acc)
            }
            [120, 110, 45, 45, 118, 114, 101, 45, 101, 105, 107, 101, 114, 45, 107, 56, 97] => {
                lookup_859_864(acc)
            }
            [120, 110, 45, 45, 118, 114, 103, 103, 116, 45, 120, 113, 97, 100] => {
                lookup_859_865(acc)
            }
            [120, 110, 45, 45, 118, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_859_866(acc),
            [120, 110, 45, 45, 121, 101, 114, 45, 122, 110, 97] => lookup_859_867(acc),
            [120, 110, 45, 45, 121, 103, 97, 114, 100, 101, 110, 45, 112, 49, 97] => {
                lookup_859_868(acc)
            }
            [120, 110, 45, 45, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101, 45, 117, 106, 98] => {
                lookup_859_869(acc)
            }
            [195, 161, 107, 197, 139, 111, 108, 117, 111, 107, 116, 97] => lookup_859_870(acc),
            [195, 161, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_859_871(acc),
            [195, 161, 108, 116, 195, 161] => lookup_859_872(acc),
            [195, 165, 102, 106, 111, 114, 100] => lookup_859_873(acc),
            [195, 165, 107, 114, 101, 104, 97, 109, 110] => lookup_859_874(acc),
            [195, 165, 108] => lookup_859_875(acc),
            [195, 165, 108, 101, 115, 117, 110, 100] => lookup_859_876(acc),
            [195, 165, 108, 103, 195, 165, 114, 100] => lookup_859_877(acc),
            [195, 165, 109, 108, 105] => lookup_859_878(acc),
            [195, 165, 109, 111, 116] => lookup_859_879(acc),
            [195, 165, 114, 100, 97, 108] => lookup_859_880(acc),
            [195, 165, 115] => lookup_859_881(acc),
            [195, 165, 115, 101, 114, 97, 108] => lookup_859_882(acc),
            [195, 165, 115, 110, 101, 115] => lookup_859_883(acc),
            [195, 184, 107, 115, 110, 101, 115] => lookup_859_884(acc),
            [195, 184, 114, 108, 97, 110, 100] => lookup_859_885(acc),
            [195, 184, 114, 115, 107, 111, 103] => lookup_859_886(acc),
            [195, 184, 114, 115, 116, 97] => lookup_859_887(acc),
            [195, 184, 115, 116, 102, 111, 108, 100] => lookup_859_888(info, labels, acc),
            [195, 184, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_859_889(acc),
            [195, 184, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_859_890(acc),
            [195, 184, 121, 101, 114] => lookup_859_891(acc),
            [195, 184, 121, 103, 97, 114, 100, 101, 110] => lookup_859_892(acc),
            [195, 184, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => {
                lookup_859_893(acc)
            }
            [196, 141, 195, 161, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_859_894(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_860() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_862() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_864() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_866_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_866<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_866_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_867_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_867_0(acc),
            [99, 111, 109] => lookup_867_1(acc),
            [101, 100, 117] => lookup_867_2(acc),
            [103, 111, 118] => lookup_867_3(acc),
            [105, 110, 102, 111] => lookup_867_4(acc),
            [110, 101, 116] => lookup_867_5(acc),
            [111, 114, 103] => lookup_867_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_868() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_869() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_871_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_871_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_871_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_871_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_871<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 99, 108, 111, 117, 100] => {
                lookup_871_0(acc)
            }
            [109, 101, 114, 115, 101, 105, 110, 101] => lookup_871_1(acc),
            [109, 105, 110, 101] => lookup_871_2(acc),
            [115, 104, 97, 99, 107, 110, 101, 116] => lookup_871_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_872() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_873_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_873_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_873_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_873_0(acc),
            [99, 111] => lookup_873_1(labels, acc),
            [99, 114, 105] => lookup_873_2(acc),
            [103, 101, 101, 107] => lookup_873_3(acc),
            [103, 101, 110] => lookup_873_4(acc),
            [103, 111, 118, 116] => lookup_873_5(acc),
            [104, 101, 97, 108, 116, 104] => lookup_873_6(acc),
            [105, 119, 105] => lookup_873_7(acc),
            [107, 105, 119, 105] => lookup_873_8(acc),
            [109, 97, 111, 114, 105] => lookup_873_9(acc),
            [109, 105, 108] => lookup_873_10(acc),
            [109, 196, 129, 111, 114, 105] => lookup_873_11(acc),
            [110, 101, 116] => lookup_873_12(acc),
            [111, 114, 103] => lookup_873_13(acc),
            [112, 97, 114, 108, 105, 97, 109, 101, 110, 116] => lookup_873_14(acc),
            [115, 99, 104, 111, 111, 108] => lookup_873_15(acc),
            [120, 110, 45, 45, 109, 111, 114, 105, 45, 113, 115, 97] => lookup_873_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_874() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_875() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_876() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_877() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_879() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_882_0(acc),
            [99, 111, 109] => lookup_882_1(acc),
            [101, 100, 117] => lookup_882_2(acc),
            [103, 111, 118] => lookup_882_3(acc),
            [109, 101, 100] => lookup_882_4(acc),
            [109, 117, 115, 101, 117, 109] => lookup_882_5(acc),
            [110, 101, 116] => lookup_882_6(acc),
            [111, 114, 103] => lookup_882_7(acc),
            [112, 114, 111] => lookup_882_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_883() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_884_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_884_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_884_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_884_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 105, 110, 103] => lookup_884_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_884_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_884_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_884<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114] => lookup_884_0(acc),
            [104, 111, 109, 101, 108, 105, 110, 107] => lookup_884_1(acc),
            [111, 110, 114, 101, 100] => lookup_884_2(labels, acc),
            [115, 101, 114, 118, 105, 99, 101] => lookup_884_3(acc),
            [117, 110, 100, 101, 114] => lookup_884_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_886() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_887() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_888_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_888_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_888_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_888<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_888_0(acc),
            [101, 101, 114, 111] => lookup_888_1(acc),
            [101, 101, 114, 111, 45, 115, 116, 97, 103, 101] => lookup_888_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_889() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_890() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_893_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [116, 101, 108, 101] => lookup_893_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_893_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [99] => lookup_893_11_0(acc),
            [114, 115, 99] => lookup_893_11_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_893_12_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_12_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [115, 115, 108] => lookup_893_12_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_893_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 114, 105, 103, 105, 110] => lookup_893_12_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_893_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_28_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_28<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111] => lookup_893_28_0(acc),
            [104, 111, 109, 101] => lookup_893_28_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_893_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_32<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108] => lookup_893_32_0(acc),
            [97, 115, 115, 111] => lookup_893_32_1(acc),
            [97, 116] => lookup_893_32_2(acc),
            [97, 117] => lookup_893_32_3(acc),
            [98, 101] => lookup_893_32_4(acc),
            [98, 103] => lookup_893_32_5(acc),
            [99, 97] => lookup_893_32_6(acc),
            [99, 100] => lookup_893_32_7(acc),
            [99, 104] => lookup_893_32_8(acc),
            [99, 110] => lookup_893_32_9(acc),
            [99, 121] => lookup_893_32_10(acc),
            [99, 122] => lookup_893_32_11(acc),
            [100, 101] => lookup_893_32_12(acc),
            [100, 107] => lookup_893_32_13(acc),
            [101, 100, 117] => lookup_893_32_14(acc),
            [101, 101] => lookup_893_32_15(acc),
            [101, 115] => lookup_893_32_16(acc),
            [102, 105] => lookup_893_32_17(acc),
            [102, 114] => lookup_893_32_18(acc),
            [103, 114] => lookup_893_32_19(acc),
            [104, 114] => lookup_893_32_20(acc),
            [104, 117] => lookup_893_32_21(acc),
            [105, 101] => lookup_893_32_22(acc),
            [105, 108] => lookup_893_32_23(acc),
            [105, 110] => lookup_893_32_24(acc),
            [105, 110, 116] => lookup_893_32_25(acc),
            [105, 115] => lookup_893_32_26(acc),
            [105, 116] => lookup_893_32_27(acc),
            [106, 112] => lookup_893_32_28(acc),
            [107, 114] => lookup_893_32_29(acc),
            [108, 116] => lookup_893_32_30(acc),
            [108, 117] => lookup_893_32_31(acc),
            [108, 118] => lookup_893_32_32(acc),
            [109, 99] => lookup_893_32_33(acc),
            [109, 101] => lookup_893_32_34(acc),
            [109, 107] => lookup_893_32_35(acc),
            [109, 116] => lookup_893_32_36(acc),
            [109, 121] => lookup_893_32_37(acc),
            [110, 101, 116] => lookup_893_32_38(acc),
            [110, 103] => lookup_893_32_39(acc),
            [110, 108] => lookup_893_32_40(acc),
            [110, 111] => lookup_893_32_41(acc),
            [110, 122] => lookup_893_32_42(acc),
            [112, 97, 114, 105, 115] => lookup_893_32_43(acc),
            [112, 108] => lookup_893_32_44(acc),
            [112, 116] => lookup_893_32_45(acc),
            [113, 45, 97] => lookup_893_32_46(acc),
            [114, 111] => lookup_893_32_47(acc),
            [114, 117] => lookup_893_32_48(acc),
            [115, 101] => lookup_893_32_49(acc),
            [115, 105] => lookup_893_32_50(acc),
            [115, 107] => lookup_893_32_51(acc),
            [116, 114] => lookup_893_32_52(acc),
            [117, 107] => lookup_893_32_53(acc),
            [117, 115] => lookup_893_32_54(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_893_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_36_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_36_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_893_36_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_893_36_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_36_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_893_36_2_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_893_36_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_893_36_2_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_893_36<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_893_36_0(acc),
            [111, 115] => lookup_893_36_1(info, labels, acc),
            [115, 116, 103] => lookup_893_36_2(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_893_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_101_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_101<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_893_101_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_893_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 99, 101, 115, 115, 99, 97, 109] => lookup_893_0(acc),
            [97, 101] => lookup_893_1(acc),
            [97, 108, 116, 101, 114, 118, 105, 115, 116, 97] => lookup_893_2(acc),
            [97, 109, 117, 110, 101] => lookup_893_3(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_893_4(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_893_5(acc),
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_893_6(acc),
            [98, 109, 111, 97, 116, 116, 97, 99, 104, 109, 101, 110, 116, 115] => lookup_893_7(acc),
            [98, 111, 108, 100, 108, 121, 103, 111, 105, 110, 103, 110, 111, 119, 104, 101, 114, 101] => {
                lookup_893_8(acc)
            }
            [99, 97, 98, 108, 101, 45, 109, 111, 100, 101, 109] => lookup_893_9(acc),
            [99, 97, 109, 100, 118, 114] => lookup_893_10(acc),
            [99, 100, 110, 55, 55] => lookup_893_11(info, labels, acc),
            [99, 100, 110, 55, 55, 45, 115, 101, 99, 117, 114, 101] => {
                lookup_893_12(info, labels, acc)
            }
            [99, 101, 114, 116, 109, 103, 114] => lookup_893_13(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_893_14(acc),
            [99, 111, 108, 108, 101, 103, 101, 102, 97, 110] => lookup_893_15(acc),
            [99, 111, 117, 99, 104, 112, 111, 116, 97, 116, 111, 102, 114, 105, 101, 115] => {
                lookup_893_16(acc)
            }
            [100, 100, 110, 115, 115] => lookup_893_17(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_893_18(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_893_19(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_893_20(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_893_21(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_893_22(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_893_23(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_893_24(acc),
            [100, 117, 99, 107, 100, 110, 115] => lookup_893_25(acc),
            [100, 118, 114, 100, 110, 115] => lookup_893_26(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_893_27(acc),
            [100, 121, 110, 100, 110, 115] => lookup_893_28(labels, acc),
            [100, 121, 110, 115, 101, 114, 118] => lookup_893_29(acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => lookup_893_30(acc),
            [101, 110, 100, 111, 102, 116, 104, 101, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_893_31(acc)
            }
            [101, 117] => lookup_893_32(labels, acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_893_33(acc),
            [102, 101, 100, 111, 114, 97, 105, 110, 102, 114, 97, 99, 108, 111, 117, 100] => {
                lookup_893_34(acc)
            }
            [102, 101, 100, 111, 114, 97, 112, 101, 111, 112, 108, 101] => lookup_893_35(acc),
            [102, 101, 100, 111, 114, 97, 112, 114, 111, 106, 101, 99, 116] => {
                lookup_893_36(info, labels, acc)
            }
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_893_37(acc),
            [102, 114, 101, 101, 100, 101, 115, 107, 116, 111, 112] => lookup_893_38(acc),
            [102, 114, 111, 109, 45, 109, 101] => lookup_893_39(acc),
            [103, 97, 109, 101, 45, 104, 111, 115, 116] => lookup_893_40(acc),
            [103, 111, 116, 100, 110, 115] => lookup_893_41(acc),
            [104, 101, 112, 102, 111, 114, 103, 101] => lookup_893_42(acc),
            [104, 107] => lookup_893_43(acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_893_44(acc),
            [104, 111, 109, 101, 100, 110, 115] => lookup_893_45(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_893_46(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_893_47(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_893_48(acc),
            [104, 111, 112, 116, 111] => lookup_893_49(acc),
            [104, 116, 116, 112, 98, 105, 110] => lookup_893_50(acc),
            [105, 110, 45, 100, 115, 108] => lookup_893_51(acc),
            [105, 110, 45, 118, 112, 110] => lookup_893_52(acc),
            [105, 115, 45, 97, 45, 98, 114, 117, 105, 110, 115, 102, 97, 110] => lookup_893_53(acc),
            [105, 115, 45, 97, 45, 99, 97, 110, 100, 105, 100, 97, 116, 101] => lookup_893_54(acc),
            [105, 115, 45, 97, 45, 99, 101, 108, 116, 105, 99, 115, 102, 97, 110] => {
                lookup_893_55(acc)
            }
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_893_56(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_893_57(acc),
            [105, 115, 45, 97, 45, 107, 110, 105, 103, 104, 116] => lookup_893_58(acc),
            [105, 115, 45, 97, 45, 108, 105, 110, 117, 120, 45, 117, 115, 101, 114] => {
                lookup_893_59(acc)
            }
            [105, 115, 45, 97, 45, 112, 97, 116, 115, 102, 97, 110] => lookup_893_60(acc),
            [105, 115, 45, 97, 45, 115, 111, 120, 102, 97, 110] => lookup_893_61(acc),
            [105, 115, 45, 102, 111, 117, 110, 100] => lookup_893_62(acc),
            [105, 115, 45, 108, 111, 115, 116] => lookup_893_63(acc),
            [105, 115, 45, 115, 97, 118, 101, 100] => lookup_893_64(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 98, 97, 100] => lookup_893_65(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 101, 118, 105, 108] => lookup_893_66(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 103, 111, 111, 100] => lookup_893_67(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 110, 105, 99, 101] => lookup_893_68(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 115, 119, 101, 101, 116] => lookup_893_69(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_893_70(acc),
            [106, 115] => lookup_893_71(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_893_72(acc),
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_893_73(acc),
            [109, 105, 115, 99, 111, 110, 102, 117, 115, 101, 100] => lookup_893_74(acc),
            [109, 108, 98, 102, 97, 110] => lookup_893_75(acc),
            [109, 111, 122, 105, 108, 108, 97, 45, 105, 111, 116] => lookup_893_76(acc),
            [109, 121, 45, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_893_77(acc),
            [109, 121, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_893_78(acc),
            [109, 121, 102, 116, 112] => lookup_893_79(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_893_80(acc)
            }
            [109, 121, 119, 105, 114, 101] => lookup_893_81(acc),
            [110, 102, 108, 102, 97, 110] => lookup_893_82(acc),
            [110, 111, 45, 105, 112] => lookup_893_83(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_893_84(acc),
            [112, 105, 109, 105, 101, 110, 116, 97] => lookup_893_85(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_893_86(acc),
            [112, 111, 105, 118, 114, 111, 110] => lookup_893_87(acc),
            [112, 111, 116, 97, 103, 101, 114] => lookup_893_88(acc),
            [112, 117, 98, 116, 108, 115] => lookup_893_89(acc),
            [114, 101, 97, 100, 45, 98, 111, 111, 107, 115] => lookup_893_90(acc),
            [114, 101, 97, 100, 109, 121, 98, 108, 111, 103] => lookup_893_91(acc),
            [115, 101, 108, 102, 105, 112] => lookup_893_92(acc),
            [115, 101, 108, 108, 115, 121, 111, 117, 114, 104, 111, 109, 101] => lookup_893_93(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_893_94(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_893_95(acc),
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_893_96(acc),
            [115, 109, 97, 108, 108, 45, 119, 101, 98] => lookup_893_97(acc),
            [115, 112, 100, 110, 115] => lookup_893_98(acc),
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_893_99(acc),
            [115, 119, 101, 101, 116, 112, 101, 112, 112, 101, 114] => lookup_893_100(acc),
            [116, 101, 99, 107, 105, 100, 115] => lookup_893_101(info, labels, acc),
            [116, 111, 111, 108, 102, 111, 114, 103, 101] => lookup_893_102(acc),
            [116, 117, 110, 107] => lookup_893_103(acc),
            [116, 117, 120, 102, 97, 109, 105, 108, 121] => lookup_893_104(acc),
            [116, 119, 109, 97, 105, 108] => lookup_893_105(acc),
            [117, 102, 99, 102, 97, 110] => lookup_893_106(acc),
            [117, 115] => lookup_893_107(acc),
            [119, 101, 98, 104, 111, 112] => lookup_893_108(acc),
            [119, 101, 98, 114, 101, 100, 105, 114, 101, 99, 116] => lookup_893_109(acc),
            [119, 109, 99, 108, 111, 117, 100] => lookup_893_110(acc),
            [119, 109, 102, 108, 97, 98, 115] => lookup_893_111(acc),
            [122, 97] => lookup_893_112(acc),
            [122, 97, 112, 116, 111] => lookup_893_113(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_894() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_895() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_896() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_897() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_898() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_899_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_899<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 114, 100, 112, 111, 108] => lookup_899_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_900_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 111] => lookup_900_0(acc),
            [97, 99] => lookup_900_1(acc),
            [99, 111, 109] => lookup_900_2(acc),
            [101, 100, 117] => lookup_900_3(acc),
            [103, 111, 98] => lookup_900_4(acc),
            [105, 110, 103] => lookup_900_5(acc),
            [109, 101, 100] => lookup_900_6(acc),
            [110, 101, 116] => lookup_900_7(acc),
            [110, 111, 109] => lookup_900_8(acc),
            [111, 114, 103] => lookup_900_9(acc),
            [115, 108, 100] => lookup_900_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_901_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_901_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_901_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_901_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_901_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_901_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_901_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_901<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 100, 101, 98, 101, 114, 103] => lookup_901_0(acc),
            [104, 108, 120] => lookup_901_1(acc),
            [104, 108, 120, 51] => lookup_901_2(acc),
            [109, 97, 103, 110, 101, 116] => lookup_901_3(acc),
            [112, 100, 110, 115] => lookup_901_4(acc),
            [112, 108, 101, 115, 107] => lookup_901_5(acc),
            [112, 114, 118, 99, 121] => lookup_901_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_902() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_906() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_907<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_907_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_908() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_909() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_910() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_911_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_911_0(acc),
            [99, 111, 109] => lookup_911_1(acc),
            [101, 100, 117] => lookup_911_2(acc),
            [103, 111, 98] => lookup_911_3(acc),
            [109, 105, 108] => lookup_911_4(acc),
            [110, 101, 116] => lookup_911_5(acc),
            [110, 111, 109] => lookup_911_6(acc),
            [111, 114, 103] => lookup_911_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_912() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_913_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_913_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_913_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_913<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_913_0(acc),
            [101, 100, 117] => lookup_913_1(acc),
            [111, 114, 103] => lookup_913_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_914() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_915_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_915<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_915_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_916_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_916<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_916_0(acc),
            [101, 100, 117] => lookup_916_1(acc),
            [103, 111, 118] => lookup_916_2(acc),
            [105] => lookup_916_3(acc),
            [109, 105, 108] => lookup_916_4(acc),
            [110, 101, 116] => lookup_916_5(acc),
            [110, 103, 111] => lookup_916_6(acc),
            [111, 114, 103] => lookup_916_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_917() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_920() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_921() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_924() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 51, 51, 55] => lookup_927_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_928() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_930() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_931() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_932() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_934_0(acc),
            [99, 111, 109] => lookup_934_1(acc),
            [101, 100, 117] => lookup_934_2(acc),
            [102, 97, 109] => lookup_934_3(acc),
            [103, 111, 98] => lookup_934_4(acc),
            [103, 111, 107] => lookup_934_5(acc),
            [103, 111, 110] => lookup_934_6(acc),
            [103, 111, 112] => lookup_934_7(acc),
            [103, 111, 115] => lookup_934_8(acc),
            [103, 111, 118] => lookup_934_9(acc),
            [105, 110, 102, 111] => lookup_934_10(acc),
            [110, 101, 116] => lookup_934_11(acc),
            [111, 114, 103] => lookup_934_12(acc),
            [119, 101, 98] => lookup_934_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_935_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_36<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112] => lookup_935_36_0(acc),
            [103, 114, 105, 119] => lookup_935_36_1(acc),
            [105, 99] => lookup_935_36_2(acc),
            [105, 115] => lookup_935_36_3(acc),
            [107, 109, 112, 115, 112] => lookup_935_36_4(acc),
            [107, 111, 110, 115, 117, 108, 97, 116] => lookup_935_36_5(acc),
            [107, 112, 112, 115, 112] => lookup_935_36_6(acc),
            [107, 119, 112] => lookup_935_36_7(acc),
            [107, 119, 112, 115, 112] => lookup_935_36_8(acc),
            [109, 117, 112] => lookup_935_36_9(acc),
            [109, 119] => lookup_935_36_10(acc),
            [111, 105, 114, 109] => lookup_935_36_11(acc),
            [111, 117, 109] => lookup_935_36_12(acc),
            [112, 97] => lookup_935_36_13(acc),
            [112, 105, 110, 98] => lookup_935_36_14(acc),
            [112, 105, 119] => lookup_935_36_15(acc),
            [112, 111] => lookup_935_36_16(acc),
            [112, 115, 112] => lookup_935_36_17(acc),
            [112, 115, 115, 101] => lookup_935_36_18(acc),
            [112, 117, 112] => lookup_935_36_19(acc),
            [114, 122, 103, 119] => lookup_935_36_20(acc),
            [115, 97] => lookup_935_36_21(acc),
            [115, 100, 110] => lookup_935_36_22(acc),
            [115, 107, 111] => lookup_935_36_23(acc),
            [115, 111] => lookup_935_36_24(acc),
            [115, 114] => lookup_935_36_25(acc),
            [115, 116, 97, 114, 111, 115, 116, 119, 111] => lookup_935_36_26(acc),
            [117, 103] => lookup_935_36_27(acc),
            [117, 103, 105, 109] => lookup_935_36_28(acc),
            [117, 109] => lookup_935_36_29(acc),
            [117, 109, 105, 103] => lookup_935_36_30(acc),
            [117, 112, 111, 119] => lookup_935_36_31(acc),
            [117, 112, 112, 111] => lookup_935_36_32(acc),
            [117, 115] => lookup_935_36_33(acc),
            [117, 119] => lookup_935_36_34(acc),
            [117, 122, 115] => lookup_935_36_35(acc),
            [119, 105, 102] => lookup_935_36_36(acc),
            [119, 105, 105, 104] => lookup_935_36_37(acc),
            [119, 105, 110, 98] => lookup_935_36_38(acc),
            [119, 105, 111, 115] => lookup_935_36_39(acc),
            [119, 105, 116, 100] => lookup_935_36_40(acc),
            [119, 105, 119] => lookup_935_36_41(acc),
            [119, 115, 97] => lookup_935_36_42(acc),
            [119, 115, 107, 114] => lookup_935_36_43(acc),
            [119, 117, 111, 122] => lookup_935_36_44(acc),
            [119, 122, 109, 105, 117, 119] => lookup_935_36_45(acc),
            [122, 112] => lookup_935_36_46(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_935_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_935_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 103, 114, 111] => lookup_935_0(acc),
            [97, 105, 100] => lookup_935_1(acc),
            [97, 114, 116] => lookup_935_2(acc),
            [97, 116, 109] => lookup_935_3(acc),
            [97, 117, 103, 117, 115, 116, 111, 119] => lookup_935_4(acc),
            [97, 117, 116, 111] => lookup_935_5(acc),
            [98, 97, 98, 105, 97, 45, 103, 111, 114, 97] => lookup_935_6(acc),
            [98, 101, 100, 122, 105, 110] => lookup_935_7(acc),
            [98, 101, 101, 112] => lookup_935_8(acc),
            [98, 101, 115, 107, 105, 100, 121] => lookup_935_9(acc),
            [98, 105, 97, 108, 111, 119, 105, 101, 122, 97] => lookup_935_10(acc),
            [98, 105, 97, 108, 121, 115, 116, 111, 107] => lookup_935_11(acc),
            [98, 105, 101, 108, 97, 119, 97] => lookup_935_12(acc),
            [98, 105, 101, 115, 122, 99, 122, 97, 100, 121] => lookup_935_13(acc),
            [98, 105, 122] => lookup_935_14(acc),
            [98, 111, 108, 101, 115, 108, 97, 119, 105, 101, 99] => lookup_935_15(acc),
            [98, 121, 100, 103, 111, 115, 122, 99, 122] => lookup_935_16(acc),
            [98, 121, 116, 111, 109] => lookup_935_17(acc),
            [99, 105, 101, 115, 122, 121, 110] => lookup_935_18(acc),
            [99, 111] => lookup_935_19(acc),
            [99, 111, 109] => lookup_935_20(acc),
            [99, 122, 101, 108, 97, 100, 122] => lookup_935_21(acc),
            [99, 122, 101, 115, 116] => lookup_935_22(acc),
            [100, 108, 117, 103, 111, 108, 101, 107, 97] => lookup_935_23(acc),
            [101, 99, 111, 109, 109, 101, 114, 99, 101, 45, 115, 104, 111, 112] => {
                lookup_935_24(acc)
            }
            [101, 100, 117] => lookup_935_25(acc),
            [101, 108, 98, 108, 97, 103] => lookup_935_26(acc),
            [101, 108, 107] => lookup_935_27(acc),
            [103, 100, 97] => lookup_935_28(acc),
            [103, 100, 97, 110, 115, 107] => lookup_935_29(acc),
            [103, 100, 121, 110, 105, 97] => lookup_935_30(acc),
            [103, 108, 105, 119, 105, 99, 101] => lookup_935_31(acc),
            [103, 108, 111, 103, 111, 119] => lookup_935_32(acc),
            [103, 109, 105, 110, 97] => lookup_935_33(acc),
            [103, 110, 105, 101, 122, 110, 111] => lookup_935_34(acc),
            [103, 111, 114, 108, 105, 99, 101] => lookup_935_35(acc),
            [103, 111, 118] => lookup_935_36(labels, acc),
            [103, 114, 97, 106, 101, 119, 111] => lookup_935_37(acc),
            [103, 115, 109] => lookup_935_38(acc),
            [104, 111, 109, 101, 115, 107, 108, 101, 112] => lookup_935_39(acc),
            [105, 108, 97, 119, 97] => lookup_935_40(acc),
            [105, 110, 102, 111] => lookup_935_41(acc),
            [106, 97, 119, 111, 114, 122, 110, 111] => lookup_935_42(acc),
            [106, 101, 108, 101, 110, 105, 97, 45, 103, 111, 114, 97] => lookup_935_43(acc),
            [106, 103, 111, 114, 97] => lookup_935_44(acc),
            [107, 97, 108, 105, 115, 122] => lookup_935_45(acc),
            [107, 97, 114, 112, 97, 99, 122] => lookup_935_46(acc),
            [107, 97, 114, 116, 117, 122, 121] => lookup_935_47(acc),
            [107, 97, 115, 122, 117, 98, 121] => lookup_935_48(acc),
            [107, 97, 116, 111, 119, 105, 99, 101] => lookup_935_49(acc),
            [107, 97, 122, 105, 109, 105, 101, 114, 122, 45, 100, 111, 108, 110, 121] => {
                lookup_935_50(acc)
            }
            [107, 101, 112, 110, 111] => lookup_935_51(acc),
            [107, 101, 116, 114, 122, 121, 110] => lookup_935_52(acc),
            [107, 108, 111, 100, 122, 107, 111] => lookup_935_53(acc),
            [107, 111, 98, 105, 101, 114, 122, 121, 99, 101] => lookup_935_54(acc),
            [107, 111, 108, 111, 98, 114, 122, 101, 103] => lookup_935_55(acc),
            [107, 111, 110, 105, 110] => lookup_935_56(acc),
            [107, 111, 110, 115, 107, 111, 119, 111, 108, 97] => lookup_935_57(acc),
            [107, 114, 97, 107, 111, 119] => lookup_935_58(acc),
            [107, 114, 97, 115, 110, 105, 107] => lookup_935_59(acc),
            [107, 117, 116, 110, 111] => lookup_935_60(acc),
            [108, 97, 112, 121] => lookup_935_61(acc),
            [108, 101, 98, 111, 114, 107] => lookup_935_62(acc),
            [108, 101, 99, 122, 110, 97] => lookup_935_63(acc),
            [108, 101, 103, 110, 105, 99, 97] => lookup_935_64(acc),
            [108, 101, 122, 97, 106, 115, 107] => lookup_935_65(acc),
            [108, 105, 109, 97, 110, 111, 119, 97] => lookup_935_66(acc),
            [108, 111, 109, 122, 97] => lookup_935_67(acc),
            [108, 111, 119, 105, 99, 122] => lookup_935_68(acc),
            [108, 117, 98, 97, 114, 116, 111, 119] => lookup_935_69(acc),
            [108, 117, 98, 105, 110] => lookup_935_70(acc),
            [108, 117, 98, 108, 105, 110] => lookup_935_71(acc),
            [108, 117, 107, 111, 119] => lookup_935_72(acc),
            [109, 97, 105, 108] => lookup_935_73(acc),
            [109, 97, 108, 98, 111, 114, 107] => lookup_935_74(acc),
            [109, 97, 108, 111, 112, 111, 108, 115, 107, 97] => lookup_935_75(acc),
            [109, 97, 122, 111, 119, 115, 122, 101] => lookup_935_76(acc),
            [109, 97, 122, 117, 114, 121] => lookup_935_77(acc),
            [109, 101, 100] => lookup_935_78(acc),
            [109, 101, 100, 105, 97] => lookup_935_79(acc),
            [109, 105, 97, 115, 116, 97] => lookup_935_80(acc),
            [109, 105, 101, 108, 101, 99] => lookup_935_81(acc),
            [109, 105, 101, 108, 110, 111] => lookup_935_82(acc),
            [109, 105, 108] => lookup_935_83(acc),
            [109, 114, 97, 103, 111, 119, 111] => lookup_935_84(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_935_85(acc),
            [110, 97, 107, 108, 111] => lookup_935_86(acc),
            [110, 101, 116] => lookup_935_87(acc),
            [110, 105, 101, 114, 117, 99, 104, 111, 109, 111, 115, 99, 105] => lookup_935_88(acc),
            [110, 111, 109] => lookup_935_89(acc),
            [110, 111, 119, 97, 114, 117, 100, 97] => lookup_935_90(acc),
            [110, 121, 115, 97] => lookup_935_91(acc),
            [111, 108, 97, 119, 97] => lookup_935_92(acc),
            [111, 108, 101, 99, 107, 111] => lookup_935_93(acc),
            [111, 108, 107, 117, 115, 122] => lookup_935_94(acc),
            [111, 108, 115, 122, 116, 121, 110] => lookup_935_95(acc),
            [111, 112, 111, 99, 122, 110, 111] => lookup_935_96(acc),
            [111, 112, 111, 108, 101] => lookup_935_97(acc),
            [111, 114, 103] => lookup_935_98(acc),
            [111, 115, 116, 114, 111, 100, 97] => lookup_935_99(acc),
            [111, 115, 116, 114, 111, 108, 101, 107, 97] => lookup_935_100(acc),
            [111, 115, 116, 114, 111, 119, 105, 101, 99] => lookup_935_101(acc),
            [111, 115, 116, 114, 111, 119, 119, 108, 107, 112] => lookup_935_102(acc),
            [112, 99] => lookup_935_103(acc),
            [112, 105, 108, 97] => lookup_935_104(acc),
            [112, 105, 115, 122] => lookup_935_105(acc),
            [112, 111, 100, 104, 97, 108, 101] => lookup_935_106(acc),
            [112, 111, 100, 108, 97, 115, 105, 101] => lookup_935_107(acc),
            [112, 111, 108, 107, 111, 119, 105, 99, 101] => lookup_935_108(acc),
            [112, 111, 109, 111, 114, 115, 107, 105, 101] => lookup_935_109(acc),
            [112, 111, 109, 111, 114, 122, 101] => lookup_935_110(acc),
            [112, 111, 110, 105, 97, 116, 111, 119, 97] => lookup_935_111(acc),
            [112, 111, 119, 105, 97, 116] => lookup_935_112(acc),
            [112, 111, 122, 110, 97, 110] => lookup_935_113(acc),
            [112, 114, 105, 118] => lookup_935_114(acc),
            [112, 114, 111, 99, 104, 111, 119, 105, 99, 101] => lookup_935_115(acc),
            [112, 114, 117, 115, 122, 107, 111, 119] => lookup_935_116(acc),
            [112, 114, 122, 101, 119, 111, 114, 115, 107] => lookup_935_117(acc),
            [112, 117, 108, 97, 119, 121] => lookup_935_118(acc),
            [114, 97, 100, 111, 109] => lookup_935_119(acc),
            [114, 97, 119, 97, 45, 109, 97, 122] => lookup_935_120(acc),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_935_121(acc),
            [114, 101, 108] => lookup_935_122(acc),
            [114, 121, 98, 110, 105, 107] => lookup_935_123(acc),
            [114, 122, 101, 115, 122, 111, 119] => lookup_935_124(acc),
            [115, 97, 110, 111, 107] => lookup_935_125(acc),
            [115, 100, 115, 99, 108, 111, 117, 100] => lookup_935_126(acc),
            [115, 101, 106, 110, 121] => lookup_935_127(acc),
            [115, 101, 120] => lookup_935_128(acc),
            [115, 104, 111, 112] => lookup_935_129(acc),
            [115, 104, 111, 112, 97, 114, 101, 110, 97] => lookup_935_130(acc),
            [115, 107, 108, 101, 112] => lookup_935_131(acc),
            [115, 107, 111, 99, 122, 111, 119] => lookup_935_132(acc),
            [115, 108, 97, 115, 107] => lookup_935_133(acc),
            [115, 108, 117, 112, 115, 107] => lookup_935_134(acc),
            [115, 111, 112, 111, 116] => lookup_935_135(acc),
            [115, 111, 115] => lookup_935_136(acc),
            [115, 111, 115, 110, 111, 119, 105, 101, 99] => lookup_935_137(acc),
            [115, 116, 97, 108, 111, 119, 97, 45, 119, 111, 108, 97] => lookup_935_138(acc),
            [115, 116, 97, 114, 97, 99, 104, 111, 119, 105, 99, 101] => lookup_935_139(acc),
            [115, 116, 97, 114, 103, 97, 114, 100] => lookup_935_140(acc),
            [115, 117, 119, 97, 108, 107, 105] => lookup_935_141(acc),
            [115, 119, 105, 100, 110, 105, 99, 97] => lookup_935_142(acc),
            [115, 119, 105, 100, 110, 105, 107] => lookup_935_143(acc),
            [115, 119, 105, 101, 98, 111, 100, 122, 105, 110] => lookup_935_144(acc),
            [115, 119, 105, 110, 111, 117, 106, 115, 99, 105, 101] => lookup_935_145(acc),
            [115, 122, 99, 122, 101, 99, 105, 110] => lookup_935_146(acc),
            [115, 122, 99, 122, 121, 116, 110, 111] => lookup_935_147(acc),
            [115, 122, 107, 111, 108, 97] => lookup_935_148(acc),
            [116, 97, 114, 103, 105] => lookup_935_149(acc),
            [116, 97, 114, 110, 111, 98, 114, 122, 101, 103] => lookup_935_150(acc),
            [116, 103, 111, 114, 121] => lookup_935_151(acc),
            [116, 109] => lookup_935_152(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_935_153(acc),
            [116, 114, 97, 118, 101, 108] => lookup_935_154(acc),
            [116, 117, 114, 101, 107] => lookup_935_155(acc),
            [116, 117, 114, 121, 115, 116, 121, 107, 97] => lookup_935_156(acc),
            [116, 121, 99, 104, 121] => lookup_935_157(acc),
            [117, 110, 105, 99, 108, 111, 117, 100] => lookup_935_158(acc),
            [117, 115, 116, 107, 97] => lookup_935_159(acc),
            [119, 97, 108, 98, 114, 122, 121, 99, 104] => lookup_935_160(acc),
            [119, 97, 114, 109, 105, 97] => lookup_935_161(acc),
            [119, 97, 114, 115, 122, 97, 119, 97] => lookup_935_162(acc),
            [119, 97, 119] => lookup_935_163(acc),
            [119, 101, 103, 114, 111, 119] => lookup_935_164(acc),
            [119, 105, 101, 108, 117, 110] => lookup_935_165(acc),
            [119, 108, 111, 99, 108] => lookup_935_166(acc),
            [119, 108, 111, 99, 108, 97, 119, 101, 107] => lookup_935_167(acc),
            [119, 111, 100, 122, 105, 115, 108, 97, 119] => lookup_935_168(acc),
            [119, 111, 108, 111, 109, 105, 110] => lookup_935_169(acc),
            [119, 114, 111, 99] => lookup_935_170(acc),
            [119, 114, 111, 99, 108, 97, 119] => lookup_935_171(acc),
            [122, 97, 99, 104, 112, 111, 109, 111, 114] => lookup_935_172(acc),
            [122, 97, 103, 97, 110] => lookup_935_173(acc),
            [122, 97, 107, 111, 112, 97, 110, 101] => lookup_935_174(acc),
            [122, 97, 114, 111, 119] => lookup_935_175(acc),
            [122, 103, 111, 114, 97] => lookup_935_176(acc),
            [122, 103, 111, 114, 122, 101, 108, 101, 99] => lookup_935_177(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_936_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_936<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_936_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_937() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_938() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_940() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_941<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 119, 110] => lookup_941_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_942_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_942_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_942_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_942_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_942_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_942<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_942_0(acc),
            [101, 100, 117] => lookup_942_1(acc),
            [103, 111, 118] => lookup_942_2(acc),
            [110, 101, 116] => lookup_942_3(acc),
            [111, 114, 103] => lookup_942_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_943() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_945() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_947_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_947<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 100, 105, 101] => lookup_947_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_948() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_949_0(acc),
            [98, 105, 122] => lookup_949_1(acc),
            [99, 111, 109] => lookup_949_2(acc),
            [101, 100, 117] => lookup_949_3(acc),
            [101, 115, 116] => lookup_949_4(acc),
            [103, 111, 118] => lookup_949_5(acc),
            [105, 110, 102, 111] => lookup_949_6(acc),
            [105, 115, 108, 97] => lookup_949_7(acc),
            [110, 97, 109, 101] => lookup_949_8(acc),
            [110, 101, 116] => lookup_949_9(acc),
            [111, 114, 103] => lookup_949_10(acc),
            [112, 114, 111] => lookup_949_11(acc),
            [112, 114, 111, 102] => lookup_949_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_950() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_951() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_952() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_953() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_954_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_954_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_954_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 99, 105] => lookup_954_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_954_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 97, 97] => lookup_954_0(acc),
            [97, 99, 97] => lookup_954_1(acc),
            [97, 99, 99, 116] => lookup_954_2(acc),
            [97, 118, 111, 99, 97, 116] => lookup_954_3(acc),
            [98, 97, 114] => lookup_954_4(acc),
            [98, 97, 114, 115, 121] => lookup_954_5(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_954_6(acc),
            [99, 112, 97] => lookup_954_7(acc),
            [100, 110, 115, 116, 114, 97, 99, 101] => lookup_954_8(info, labels, acc),
            [101, 110, 103] => lookup_954_9(acc),
            [106, 117, 114] => lookup_954_10(acc),
            [108, 97, 119] => lookup_954_11(acc),
            [109, 101, 100] => lookup_954_12(acc),
            [114, 101, 99, 104, 116] => lookup_954_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_955() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_956() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_958() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_959() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_961() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_964() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_965_0(acc),
            [101, 100, 117] => lookup_965_1(acc),
            [103, 111, 118] => lookup_965_2(acc),
            [110, 101, 116] => lookup_965_3(acc),
            [111, 114, 103] => lookup_965_4(acc),
            [112, 108, 111] => lookup_965_5(acc),
            [115, 101, 99] => lookup_965_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_966_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_966_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_966_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_966_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_966_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_966_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_966_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_966_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_966_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_966<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_966_0(acc),
            [99, 111, 109] => lookup_966_1(acc),
            [101, 100, 117] => lookup_966_2(acc),
            [103, 111, 118] => lookup_966_3(acc),
            [105, 110, 116] => lookup_966_4(acc),
            [110, 101, 116] => lookup_966_5(acc),
            [110, 111, 109, 101] => lookup_966_6(acc),
            [111, 114, 103] => lookup_966_7(acc),
            [112, 117, 98, 108] => lookup_966_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_967_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_967<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_967_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_968_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_968_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_968_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_968_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_968_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_968_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_968_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_968_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_968<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 108, 97, 117] => lookup_968_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_968_1(acc),
            [99, 111] => lookup_968_2(acc),
            [101, 100] => lookup_968_3(acc),
            [103, 111] => lookup_968_4(acc),
            [110, 101] => lookup_968_5(acc),
            [111, 114] => lookup_968_6(acc),
            [120, 52, 52, 51] => lookup_968_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_969() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_970_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_970_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_970_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_970_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_970_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_970_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_970_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_970<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_970_0(acc),
            [99, 111, 111, 112] => lookup_970_1(acc),
            [101, 100, 117] => lookup_970_2(acc),
            [103, 111, 118] => lookup_970_3(acc),
            [109, 105, 108] => lookup_970_4(acc),
            [110, 101, 116] => lookup_970_5(acc),
            [111, 114, 103] => lookup_970_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_971_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_971_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_971_0(acc),
            [99, 111, 109] => lookup_971_1(acc),
            [101, 100, 117] => lookup_971_2(acc),
            [103, 111, 118] => lookup_971_3(acc),
            [109, 105, 108] => lookup_971_4(acc),
            [110, 97, 109, 101] => lookup_971_5(acc),
            [110, 101, 116] => lookup_971_6(acc),
            [111, 114, 103] => lookup_971_7(acc),
            [115, 99, 104] => lookup_971_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_972() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_973() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_974() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_976() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_977_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_977_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_977_1(acc),
            [99, 111, 109] => lookup_977_2(acc),
            [110, 111, 109] => lookup_977_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_978() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_980() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_982() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_984() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_985() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_986() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_988() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_990() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_993() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_996() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_997() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_998() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_999_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_999<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_999_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1000() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1001() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1002() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1003() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1004() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1005() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1006() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1007_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1007<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 97, 110] => lookup_1007_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1008_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_1008_0(acc),
            [98, 97, 114, 115, 121] => lookup_1008_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1008_2(acc),
            [99, 111] => lookup_1008_3(acc),
            [99, 111, 109] => lookup_1008_4(acc),
            [102, 105, 114, 109] => lookup_1008_5(acc),
            [105, 110, 102, 111] => lookup_1008_6(acc),
            [110, 111, 109] => lookup_1008_7(acc),
            [110, 116] => lookup_1008_8(acc),
            [111, 114, 103] => lookup_1008_9(acc),
            [114, 101, 99] => lookup_1008_10(acc),
            [115, 104, 111, 112] => lookup_1008_11(acc),
            [115, 116, 111, 114, 101] => lookup_1008_12(acc),
            [116, 109] => lookup_1008_13(acc),
            [119, 119, 119] => lookup_1008_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1009() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1010_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1010_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1010_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1010<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_1010_0(acc),
            [109, 121, 100, 100, 110, 115] => lookup_1010_1(acc),
            [119, 101, 98, 115, 112, 97, 99, 101] => lookup_1010_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1011() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1013() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1014_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1014_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 104, 111, 112] => lookup_1014_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1014_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1014_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1014<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1014_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1014_1(acc),
            [98, 114, 101, 110, 100, 108, 121] => lookup_1014_2(info, labels, acc),
            [99, 111] => lookup_1014_3(acc),
            [101, 100, 117] => lookup_1014_4(acc),
            [103, 111, 118] => lookup_1014_5(acc),
            [105, 110] => lookup_1014_6(acc),
            [111, 114, 103] => lookup_1014_7(acc),
            [111, 120] => lookup_1014_8(acc),
            [117, 97] => lookup_1014_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1015() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1016_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [104, 98] => lookup_1016_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1016_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_18<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 112, 115] => lookup_1016_18_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1016_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_24_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_24_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1016_24_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1016_24_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_24_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1016_24_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1016_24_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_24_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1016_24_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1016_24_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_24_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1016_24_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1016_24<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 115, 116, 105, 110, 103] => lookup_1016_24_0(info, labels, acc),
            [108, 97, 110, 100, 105, 110, 103] => lookup_1016_24_1(info, labels, acc),
            [115, 112, 101, 99, 116, 114, 117, 109] => lookup_1016_24_2(info, labels, acc),
            [118, 112, 115] => lookup_1016_24_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1016_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_34_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_34<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1016_34_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1016_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1016<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1016_0(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_1016_1(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_1016_2(acc),
            [98, 105, 114] => lookup_1016_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1016_4(acc),
            [99, 98, 103] => lookup_1016_5(acc),
            [99, 108, 100, 109, 97, 105, 108] => lookup_1016_6(info, labels, acc),
            [99, 111, 109] => lookup_1016_7(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_1016_8(acc),
            [101, 100, 117] => lookup_1016_9(acc),
            [101, 117, 114, 111, 100, 105, 114] => lookup_1016_10(acc),
            [103, 111, 118] => lookup_1016_11(acc),
            [103, 114, 111, 122, 110, 121] => lookup_1016_12(acc),
            [105, 110, 116] => lookup_1016_13(acc),
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_1016_14(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_1016_15(acc),
            [108, 107, 51] => lookup_1016_16(acc),
            [109, 97, 114, 105, 110, 101] => lookup_1016_17(acc),
            [109, 99, 100, 105, 114] => lookup_1016_18(labels, acc),
            [109, 99, 112, 114, 101] => lookup_1016_19(acc),
            [109, 105, 108] => lookup_1016_20(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_1016_21(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_1016_22(acc),
            [109, 115, 107] => lookup_1016_23(acc),
            [109, 121, 106, 105, 110, 111] => lookup_1016_24(labels, acc),
            [109, 121, 116, 105, 115] => lookup_1016_25(acc),
            [110, 97, 52, 117] => lookup_1016_26(acc),
            [110, 97, 108, 99, 104, 105, 107] => lookup_1016_27(acc),
            [110, 101, 116] => lookup_1016_28(acc),
            [110, 111, 118] => lookup_1016_29(acc),
            [111, 114, 103] => lookup_1016_30(acc),
            [112, 112] => lookup_1016_31(acc),
            [112, 121, 97, 116, 105, 103, 111, 114, 115, 107] => lookup_1016_32(acc),
            [114, 97, 115] => lookup_1016_33(acc),
            [114, 101, 103, 114, 117, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_1016_34(info, labels, acc)
            }
            [115, 112, 98] => lookup_1016_35(acc),
            [116, 101, 115, 116] => lookup_1016_36(acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_1016_37(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_1016_38(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1017() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1018() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1019_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1019_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1019_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1019_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1019_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1019_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1019_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1019_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1019<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 100, 101] => lookup_1019_0(info, labels, acc),
            [100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116] => lookup_1019_1(acc),
            [104, 115] => lookup_1019_2(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_1019_3(acc),
            [114, 101, 112, 108] => lookup_1019_4(acc),
            [115, 101, 114, 118, 101, 114, 115] => lookup_1019_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1020_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1020_0(acc),
            [99, 111] => lookup_1020_1(acc),
            [99, 111, 111, 112] => lookup_1020_2(acc),
            [103, 111, 118] => lookup_1020_3(acc),
            [109, 105, 108] => lookup_1020_4(acc),
            [110, 101, 116] => lookup_1020_5(acc),
            [111, 114, 103] => lookup_1020_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1021() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1023_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1023_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1023_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1023_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1023_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1023_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1023_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1023_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1023<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1023_0(acc),
            [101, 100, 117] => lookup_1023_1(acc),
            [103, 111, 118] => lookup_1023_2(acc),
            [109, 101, 100] => lookup_1023_3(acc),
            [110, 101, 116] => lookup_1023_4(acc),
            [111, 114, 103] => lookup_1023_5(acc),
            [112, 117, 98] => lookup_1023_6(acc),
            [115, 99, 104] => lookup_1023_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1024() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1027() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1028_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1028<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114] => lookup_1028_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1029() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1030() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1031() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1032() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1033() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1035() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1036() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1037() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1038() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1039() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1040_0(acc),
            [101, 100, 117] => lookup_1040_1(acc),
            [103, 111, 118] => lookup_1040_2(acc),
            [110, 101, 116] => lookup_1040_3(acc),
            [111, 114, 103] => lookup_1040_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1041() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1043_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1043_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1043_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1043_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1043_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1043<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1043_0(acc),
            [101, 100, 117] => lookup_1043_1(acc),
            [103, 111, 118] => lookup_1043_2(acc),
            [110, 101, 116] => lookup_1043_3(acc),
            [111, 114, 103] => lookup_1043_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1044() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1045() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1048() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1049() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1050() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1051() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1052_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1052<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1052_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1053_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1053_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1053_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118, 105, 99, 101] => lookup_1053_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1053<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1053_0(acc),
            [103, 111, 118] => lookup_1053_1(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1054_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1054_0(acc),
            [101, 100, 117] => lookup_1054_1(acc),
            [103, 111, 118] => lookup_1054_2(acc),
            [105, 110, 102, 111] => lookup_1054_3(acc),
            [109, 101, 100] => lookup_1054_4(acc),
            [110, 101, 116] => lookup_1054_5(acc),
            [111, 114, 103] => lookup_1054_6(acc),
            [116, 118] => lookup_1054_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1055_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1055_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1055_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1055_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1055_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1055_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1055_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_33_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1055_33<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [115, 117] => lookup_1055_33_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1055_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_1055_0(acc),
            [97, 99] => lookup_1055_1(acc),
            [98] => lookup_1055_2(acc),
            [98, 100] => lookup_1055_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1055_4(acc),
            [98, 114, 97, 110, 100] => lookup_1055_5(acc),
            [99] => lookup_1055_6(acc),
            [99, 111, 109] => lookup_1055_7(acc),
            [99, 111, 110, 102] => lookup_1055_8(acc),
            [100] => lookup_1055_9(acc),
            [101] => lookup_1055_10(acc),
            [102] => lookup_1055_11(acc),
            [102, 104] => lookup_1055_12(acc),
            [102, 104, 115, 107] => lookup_1055_13(acc),
            [102, 104, 118] => lookup_1055_14(acc),
            [103] => lookup_1055_15(acc),
            [104] => lookup_1055_16(acc),
            [105] => lookup_1055_17(acc),
            [105, 111, 112, 115, 121, 115] => lookup_1055_18(acc),
            [105, 116, 99, 111, 117, 108, 100, 98, 101, 119, 111, 114] => lookup_1055_19(acc),
            [107] => lookup_1055_20(acc),
            [107, 111, 109, 102, 111, 114, 98] => lookup_1055_21(acc),
            [107, 111, 109, 109, 117, 110, 97, 108, 102, 111, 114, 98, 117, 110, 100] => {
                lookup_1055_22(acc)
            }
            [107, 111, 109, 118, 117, 120] => lookup_1055_23(acc),
            [108] => lookup_1055_24(acc),
            [108, 97, 110, 98, 105, 98] => lookup_1055_25(acc),
            [109] => lookup_1055_26(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_1055_27(acc),
            [110] => lookup_1055_28(acc),
            [110, 97, 116, 117, 114, 98, 114, 117, 107, 115, 103, 121, 109, 110] => {
                lookup_1055_29(acc)
            }
            [111] => lookup_1055_30(acc),
            [111, 114, 103] => lookup_1055_31(acc),
            [112] => lookup_1055_32(acc),
            [112, 97, 98, 97] => lookup_1055_33(info, labels, acc),
            [112, 97, 114, 116, 105] => lookup_1055_34(acc),
            [112, 112] => lookup_1055_35(acc),
            [112, 114, 101, 115, 115] => lookup_1055_36(acc),
            [114] => lookup_1055_37(acc),
            [115] => lookup_1055_38(acc),
            [116] => lookup_1055_39(acc),
            [116, 109] => lookup_1055_40(acc),
            [117] => lookup_1055_41(acc),
            [119] => lookup_1055_42(acc),
            [120] => lookup_1055_43(acc),
            [121] => lookup_1055_44(acc),
            [122] => lookup_1055_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1056() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1057() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1058() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1060() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1062() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1063_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1063<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1063_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1064() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1065() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1066() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1067() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1068() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1070_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1070_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1070_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1070_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1070_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1070_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1070_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1070_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1070<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1070_0(acc),
            [99, 111, 109] => lookup_1070_1(acc),
            [101, 100, 117] => lookup_1070_2(acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_1070_3(acc),
            [103, 111, 118] => lookup_1070_4(acc),
            [110, 101, 116] => lookup_1070_5(acc),
            [111, 114, 103] => lookup_1070_6(acc),
            [112, 101, 114] => lookup_1070_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1071_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1071_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1071_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1071_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1071_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1071_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1071_8_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1071_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 99] => lookup_1071_8_0(acc),
            [101, 110, 116] => lookup_1071_8_1(acc),
            [101, 117] => lookup_1071_8_2(acc),
            [117, 115] => lookup_1071_8_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1071_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1071_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1071<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 112] => lookup_1071_0(acc),
            [99, 111, 109] => lookup_1071_1(acc),
            [103, 111, 118] => lookup_1071_2(acc),
            [104, 97, 115, 104, 98, 97, 110, 103] => lookup_1071_3(acc),
            [109, 105, 108] => lookup_1071_4(acc),
            [110, 101, 116] => lookup_1071_5(acc),
            [110, 111, 119] => lookup_1071_6(acc),
            [111, 114, 103] => lookup_1071_7(acc),
            [112, 108, 97, 116, 102, 111, 114, 109] => lookup_1071_8(info, labels, acc),
            [118, 120, 108] => lookup_1071_9(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_1071_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1072() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1073() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1074() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1075() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1076() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1077() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1078() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1079_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1079_0(acc),
            [98, 97, 115, 101] => lookup_1079_1(acc),
            [104, 111, 112, 108, 105, 120] => lookup_1079_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1080() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1081() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1082() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1084_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1084_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1084<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1084_0(acc),
            [103, 105, 116, 97, 112, 112] => lookup_1084_1(acc),
            [103, 105, 116, 112, 97, 103, 101] => lookup_1084_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1085() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1086() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1087() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1088_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1088_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_14_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1088_14_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1088_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_16_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1088_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1088_16_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1088<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1088_0(acc),
            [98, 121, 101, 110] => lookup_1088_1(acc),
            [99, 108, 111, 117, 100, 101, 114, 97] => lookup_1088_2(info, labels, acc),
            [99, 121, 111, 110] => lookup_1088_3(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_1088_4(acc),
            [102, 110, 119, 107] => lookup_1088_5(acc),
            [102, 111, 108, 105, 111, 110, 101, 116, 119, 111, 114, 107] => lookup_1088_6(acc),
            [106, 101, 108, 101] => lookup_1088_7(acc),
            [108, 101, 108, 117, 120] => lookup_1088_8(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1088_9(acc),
            [109, 105, 110, 116, 101, 114, 101] => lookup_1088_10(acc),
            [110, 111, 118, 101, 99, 111, 114, 101] => lookup_1088_11(acc),
            [111, 109, 110, 105, 119, 101] => lookup_1088_12(acc),
            [111, 112, 101, 110, 115, 111, 99, 105, 97, 108] => lookup_1088_13(acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 115, 104] => lookup_1088_14(info, labels, acc),
            [115, 114, 104, 116] => lookup_1088_15(acc),
            [116, 115, 116] => lookup_1088_16(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1089() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1090_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1090<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1090_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1091() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1093() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1094() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1095_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1095_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1095_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1095_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1095_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1095<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1095_0(acc),
            [101, 100, 117] => lookup_1095_1(acc),
            [103, 111, 118] => lookup_1095_2(acc),
            [110, 101, 116] => lookup_1095_3(acc),
            [111, 114, 103] => lookup_1095_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1096() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1099() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1100_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1100_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1100_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1100_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1100_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1100_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1100_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1100_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1100<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_1100_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1100_1(acc),
            [99, 111, 109] => lookup_1100_2(acc),
            [101, 100, 117] => lookup_1100_3(acc),
            [103, 111, 117, 118] => lookup_1100_4(acc),
            [111, 114, 103] => lookup_1100_5(acc),
            [112, 101, 114, 115, 111] => lookup_1100_6(acc),
            [117, 110, 105, 118] => lookup_1100_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1101() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1102_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1102_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1102_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1102_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1102_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1102_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1102_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1102<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1102_0(acc),
            [101, 100, 117] => lookup_1102_1(acc),
            [103, 111, 118] => lookup_1102_2(acc),
            [109, 101] => lookup_1102_3(acc),
            [110, 101, 116] => lookup_1102_4(acc),
            [111, 114, 103] => lookup_1102_5(acc),
            [115, 99, 104] => lookup_1102_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1103() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1104() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1105() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1106() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1107() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1108() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1109_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1109_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1109_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1109<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 104, 101, 114] => lookup_1109_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1110() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1113() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1114_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1114_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1114_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1114<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 102, 97, 115, 116] => lookup_1114_0(acc),
            [117, 98, 101, 114] => lookup_1114_1(acc),
            [120, 115, 52, 97, 108, 108] => lookup_1114_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1115() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1116() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1118() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1119_0(acc),
            [99, 111, 109] => lookup_1119_1(acc),
            [101, 100, 117] => lookup_1119_2(acc),
            [103, 111, 118] => lookup_1119_3(acc),
            [109, 101] => lookup_1119_4(acc),
            [110, 101, 116] => lookup_1119_5(acc),
            [111, 114, 103] => lookup_1119_6(acc),
            [115, 99, 104] => lookup_1119_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1120_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1120_0(acc),
            [99, 111, 109] => lookup_1120_1(acc),
            [99, 111, 110, 115, 117, 108, 97, 100, 111] => lookup_1120_2(acc),
            [101, 100, 117] => lookup_1120_3(acc),
            [101, 109, 98, 97, 105, 120, 97, 100, 97] => lookup_1120_4(acc),
            [109, 105, 108] => lookup_1120_5(acc),
            [110, 101, 116] => lookup_1120_6(acc),
            [110, 111, 104, 111] => lookup_1120_7(acc),
            [111, 114, 103] => lookup_1120_8(acc),
            [112, 114, 105, 110, 99, 105, 112, 101] => lookup_1120_9(acc),
            [115, 97, 111, 116, 111, 109, 101] => lookup_1120_10(acc),
            [115, 116, 111, 114, 101] => lookup_1120_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1121() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1122() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1123() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1124() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1126() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1127() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1128() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1129() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1130_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1130_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1130<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 108, 108, 102, 121] => lookup_1130_0(acc),
            [115, 104, 111, 112, 119, 97, 114, 101] => lookup_1130_1(acc),
            [115, 116, 111, 114, 101, 98, 97, 115, 101] => lookup_1130_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1131() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1132() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1133() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1134() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1135_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1135<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 107, 104, 97, 122, 105, 97] => lookup_1135_0(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_1135_1(acc),
            [97, 107, 116, 121, 117, 98, 105, 110, 115, 107] => lookup_1135_2(acc),
            [97, 114, 107, 104, 97, 110, 103, 101, 108, 115, 107] => lookup_1135_3(acc),
            [97, 114, 109, 101, 110, 105, 97] => lookup_1135_4(acc),
            [97, 115, 104, 103, 97, 98, 97, 100] => lookup_1135_5(acc),
            [97, 122, 101, 114, 98, 97, 105, 106, 97, 110] => lookup_1135_6(acc),
            [98, 97, 108, 97, 115, 104, 111, 118] => lookup_1135_7(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_1135_8(acc),
            [98, 114, 121, 97, 110, 115, 107] => lookup_1135_9(acc),
            [98, 117, 107, 104, 97, 114, 97] => lookup_1135_10(acc),
            [99, 104, 105, 109, 107, 101, 110, 116] => lookup_1135_11(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_1135_12(acc),
            [101, 97, 115, 116, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1135_13(acc)
            }
            [101, 120, 110, 101, 116] => lookup_1135_14(acc),
            [103, 101, 111, 114, 103, 105, 97] => lookup_1135_15(acc),
            [103, 114, 111, 122, 110, 121] => lookup_1135_16(acc),
            [105, 118, 97, 110, 111, 118, 111] => lookup_1135_17(acc),
            [106, 97, 109, 98, 121, 108] => lookup_1135_18(acc),
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_1135_19(acc),
            [107, 97, 108, 117, 103, 97] => lookup_1135_20(acc),
            [107, 97, 114, 97, 99, 111, 108] => lookup_1135_21(acc),
            [107, 97, 114, 97, 103, 97, 110, 100, 97] => lookup_1135_22(acc),
            [107, 97, 114, 101, 108, 105, 97] => lookup_1135_23(acc),
            [107, 104, 97, 107, 97, 115, 115, 105, 97] => lookup_1135_24(acc),
            [107, 114, 97, 115, 110, 111, 100, 97, 114] => lookup_1135_25(acc),
            [107, 117, 114, 103, 97, 110] => lookup_1135_26(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_1135_27(acc),
            [108, 101, 110, 117, 103] => lookup_1135_28(acc),
            [109, 97, 110, 103, 121, 115, 104, 108, 97, 107] => lookup_1135_29(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_1135_30(acc),
            [109, 115, 107] => lookup_1135_31(acc),
            [109, 117, 114, 109, 97, 110, 115, 107] => lookup_1135_32(acc),
            [110, 97, 108, 99, 104, 105, 107] => lookup_1135_33(acc),
            [110, 97, 118, 111, 105] => lookup_1135_34(acc),
            [110, 111, 114, 116, 104, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1135_35(acc)
            }
            [110, 111, 118] => lookup_1135_36(acc),
            [111, 98, 110, 105, 110, 115, 107] => lookup_1135_37(acc),
            [112, 101, 110, 122, 97] => lookup_1135_38(acc),
            [112, 111, 107, 114, 111, 118, 115, 107] => lookup_1135_39(acc),
            [115, 111, 99, 104, 105] => lookup_1135_40(acc),
            [115, 112, 98] => lookup_1135_41(acc),
            [116, 97, 115, 104, 107, 101, 110, 116] => lookup_1135_42(acc),
            [116, 101, 114, 109, 101, 122] => lookup_1135_43(acc),
            [116, 111, 103, 108, 105, 97, 116, 116, 105] => lookup_1135_44(acc),
            [116, 114, 111, 105, 116, 115, 107] => lookup_1135_45(acc),
            [116, 115, 101, 108, 105, 110, 111, 103, 114, 97, 100] => lookup_1135_46(acc),
            [116, 117, 108, 97] => lookup_1135_47(acc),
            [116, 117, 118, 97] => lookup_1135_48(acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_1135_49(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_1135_50(acc),
            [118, 111, 108, 111, 103, 100, 97] => lookup_1135_51(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1136() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1137() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1139_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1139<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1139_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1140() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1141() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1142() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1143_0(acc),
            [101, 100, 117] => lookup_1143_1(acc),
            [103, 111, 98] => lookup_1143_2(acc),
            [111, 114, 103] => lookup_1143_3(acc),
            [114, 101, 100] => lookup_1143_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1144() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1145() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1146_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1146<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1146_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1147_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1147_0(acc),
            [101, 100, 117] => lookup_1147_1(acc),
            [103, 111, 118] => lookup_1147_2(acc),
            [109, 105, 108] => lookup_1147_3(acc),
            [110, 101, 116] => lookup_1147_4(acc),
            [111, 114, 103] => lookup_1147_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1148() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1149<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 110, 105, 103, 104, 116, 112, 111, 105, 110, 116] => lookup_1149_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1150_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1150_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1150_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1150<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1150_0(acc),
            [99, 111] => lookup_1150_1(acc),
            [111, 114, 103] => lookup_1150_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1151() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1152() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1154() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1155() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1157() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1158() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1159() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1160() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1161_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1161_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1161<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104] => lookup_1161_0(acc),
            [109, 101] => lookup_1161_1(acc),
            [119, 101] => lookup_1161_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1162() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1163_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1163<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1163_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1164() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1165_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1165<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_1165_0(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1165_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1166() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1167<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1167_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1168() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1170() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1171() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1172() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1174_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1174<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1174_0(acc),
            [99, 111] => lookup_1174_1(acc),
            [103, 111] => lookup_1174_2(acc),
            [105, 110] => lookup_1174_3(acc),
            [109, 105] => lookup_1174_4(acc),
            [110, 101, 116] => lookup_1174_5(acc),
            [111, 110, 108, 105, 110, 101] => lookup_1174_6(acc),
            [111, 114] => lookup_1174_7(acc),
            [115, 104, 111, 112] => lookup_1174_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1175() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1177() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1179() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1181() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1185_0(acc),
            [98, 105, 122] => lookup_1185_1(acc),
            [99, 111] => lookup_1185_2(acc),
            [99, 111, 109] => lookup_1185_3(acc),
            [101, 100, 117] => lookup_1185_4(acc),
            [103, 111] => lookup_1185_5(acc),
            [103, 111, 118] => lookup_1185_6(acc),
            [105, 110, 116] => lookup_1185_7(acc),
            [109, 105, 108] => lookup_1185_8(acc),
            [110, 97, 109, 101] => lookup_1185_9(acc),
            [110, 101, 116] => lookup_1185_10(acc),
            [110, 105, 99] => lookup_1185_11(acc),
            [111, 114, 103] => lookup_1185_12(acc),
            [116, 101, 115, 116] => lookup_1185_13(acc),
            [119, 101, 98] => lookup_1185_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1186() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1188() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1189() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1190_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1191_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1191_0(acc),
            [99, 111, 109] => lookup_1191_1(acc),
            [101, 100, 117] => lookup_1191_2(acc),
            [103, 111, 118] => lookup_1191_3(acc),
            [109, 105, 108] => lookup_1191_4(acc),
            [110, 101, 116] => lookup_1191_5(acc),
            [110, 111, 109] => lookup_1191_6(acc),
            [111, 114, 103] => lookup_1191_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1192() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1193_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1193_0(acc),
            [101, 110, 115] => lookup_1193_1(acc),
            [102, 105, 110] => lookup_1193_2(acc),
            [103, 111, 118] => lookup_1193_3(acc),
            [105, 110, 100] => lookup_1193_4(acc),
            [105, 110, 102, 111] => lookup_1193_5(acc),
            [105, 110, 116, 108] => lookup_1193_6(acc),
            [109, 105, 110, 99, 111, 109] => lookup_1193_7(acc),
            [110, 97, 116] => lookup_1193_8(acc),
            [110, 101, 116] => lookup_1193_9(acc),
            [111, 114, 97, 110, 103, 101, 99, 108, 111, 117, 100] => lookup_1193_10(acc),
            [111, 114, 103] => lookup_1193_11(acc),
            [112, 101, 114, 115, 111] => lookup_1193_12(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_1193_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1194_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1194_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1194_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1194_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1194_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1194_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1194_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1194_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1194_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1194_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1194_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 105, 114, 101, 99, 116] => lookup_1194_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1194_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1194_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1194<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [54, 49, 49] => lookup_1194_0(acc),
            [99, 111, 109] => lookup_1194_1(acc),
            [101, 100, 117] => lookup_1194_2(acc),
            [103, 111, 118] => lookup_1194_3(acc),
            [109, 105, 108] => lookup_1194_4(acc),
            [110, 101, 116] => lookup_1194_5(acc),
            [110, 121, 97, 110] => lookup_1194_6(acc),
            [111, 114, 103] => lookup_1194_7(acc),
            [111, 121, 97] => lookup_1194_8(acc),
            [113, 117, 105, 99, 107, 99, 111, 110, 110, 101, 99, 116] => {
                lookup_1194_9(info, labels, acc)
            }
            [114, 100, 118] => lookup_1194_10(acc),
            [118, 112, 110, 112, 108, 117, 115] => lookup_1194_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1195_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1195<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 101, 113, 117, 97, 108, 105, 102, 121, 109, 101] => lookup_1195_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1196() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1198_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1198_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1198<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 119, 45, 100, 110, 115] => lookup_1198_0(acc),
            [110, 116, 100, 108, 108] => lookup_1198_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1199() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1200() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1201() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1203() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1206_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1206_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1206_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1206_14_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1206_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 118] => lookup_1206_0(acc),
            [98, 98, 115] => lookup_1206_1(acc),
            [98, 101, 108] => lookup_1206_2(acc),
            [98, 105, 122] => lookup_1206_3(acc),
            [99, 111, 109] => lookup_1206_4(labels, acc),
            [100, 114] => lookup_1206_5(acc),
            [101, 100, 117] => lookup_1206_6(acc),
            [103, 101, 110] => lookup_1206_7(acc),
            [103, 111, 118] => lookup_1206_8(acc),
            [105, 110, 102, 111] => lookup_1206_9(acc),
            [107, 49, 50] => lookup_1206_10(acc),
            [107, 101, 112] => lookup_1206_11(acc),
            [109, 105, 108] => lookup_1206_12(acc),
            [110, 97, 109, 101] => lookup_1206_13(acc),
            [110, 99] => lookup_1206_14(labels, acc),
            [110, 101, 116] => lookup_1206_15(acc),
            [111, 114, 103] => lookup_1206_16(acc),
            [112, 111, 108] => lookup_1206_17(acc),
            [116, 101, 108] => lookup_1206_18(acc),
            [116, 115, 107] => lookup_1206_19(acc),
            [116, 118] => lookup_1206_20(acc),
            [119, 101, 98] => lookup_1206_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1207_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1207<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1207_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1208() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1209() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1211() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1212() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1213() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 101, 114, 111] => lookup_1216_0(acc),
            [98, 105, 122] => lookup_1216_1(acc),
            [99, 111] => lookup_1216_2(acc),
            [99, 111, 109] => lookup_1216_3(acc),
            [99, 111, 111, 112] => lookup_1216_4(acc),
            [101, 100, 117] => lookup_1216_5(acc),
            [103, 111, 118] => lookup_1216_6(acc),
            [105, 110, 102, 111] => lookup_1216_7(acc),
            [105, 110, 116] => lookup_1216_8(acc),
            [106, 111, 98, 115] => lookup_1216_9(acc),
            [109, 111, 98, 105] => lookup_1216_10(acc),
            [109, 117, 115, 101, 117, 109] => lookup_1216_11(acc),
            [110, 97, 109, 101] => lookup_1216_12(acc),
            [110, 101, 116] => lookup_1216_13(acc),
            [111, 114, 103] => lookup_1216_14(acc),
            [112, 114, 111] => lookup_1216_15(acc),
            [116, 114, 97, 118, 101, 108] => lookup_1216_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1217() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1218() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1220() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1221_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1221_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1221_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1221_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1221<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116, 116, 101, 114, 45, 116, 104, 97, 110] => lookup_1221_0(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1221_1(acc),
            [111, 110, 45, 116, 104, 101, 45, 119, 101, 98] => lookup_1221_2(acc),
            [119, 111, 114, 115, 101, 45, 116, 104, 97, 110] => lookup_1221_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1222() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1223_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1223_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 109, 97, 105, 108, 101, 114] => lookup_1223_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1223_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1223_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1223_0(acc),
            [99, 108, 117, 98] => lookup_1223_1(acc),
            [99, 111, 109] => lookup_1223_2(labels, acc),
            [101, 98, 105, 122] => lookup_1223_3(acc),
            [101, 100, 117] => lookup_1223_4(acc),
            [103, 97, 109, 101] => lookup_1223_5(acc),
            [103, 111, 118] => lookup_1223_6(acc),
            [105, 100, 118] => lookup_1223_7(acc),
            [109, 105, 108] => lookup_1223_8(acc),
            [110, 101, 116] => lookup_1223_9(acc),
            [111, 114, 103] => lookup_1223_10(acc),
            [117, 114, 108] => lookup_1223_11(acc),
            [120, 110, 45, 45, 99, 122, 114, 119, 50, 56, 98] => lookup_1223_12(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_1223_13(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 111, 54, 52, 97] => lookup_1223_14(acc),
            [229, 149, 134, 230, 165, 173] => lookup_1223_15(acc),
            [231, 181, 132, 231, 185, 148] => lookup_1223_16(acc),
            [231, 182, 178, 232, 183, 175] => lookup_1223_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1224_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1224_0(acc),
            [99, 111] => lookup_1224_1(acc),
            [103, 111] => lookup_1224_2(acc),
            [104, 111, 116, 101, 108] => lookup_1224_3(acc),
            [105, 110, 102, 111] => lookup_1224_4(acc),
            [109, 101] => lookup_1224_5(acc),
            [109, 105, 108] => lookup_1224_6(acc),
            [109, 111, 98, 105] => lookup_1224_7(acc),
            [110, 101] => lookup_1224_8(acc),
            [111, 114] => lookup_1224_9(acc),
            [115, 99] => lookup_1224_10(acc),
            [116, 118] => lookup_1224_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1225_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1225_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1225_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1225_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1225_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1225_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1225_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1225_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1225_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1225_0(acc),
            [99, 99] => lookup_1225_1(acc),
            [99, 104, 101, 114, 107, 97, 115, 115, 121] => lookup_1225_2(acc),
            [99, 104, 101, 114, 107, 97, 115, 121] => lookup_1225_3(acc),
            [99, 104, 101, 114, 110, 105, 103, 111, 118] => lookup_1225_4(acc),
            [99, 104, 101, 114, 110, 105, 104, 105, 118] => lookup_1225_5(acc),
            [99, 104, 101, 114, 110, 105, 118, 116, 115, 105] => lookup_1225_6(acc),
            [99, 104, 101, 114, 110, 111, 118, 116, 115, 121] => lookup_1225_7(acc),
            [99, 107] => lookup_1225_8(acc),
            [99, 110] => lookup_1225_9(acc),
            [99, 111] => lookup_1225_10(acc),
            [99, 111, 109] => lookup_1225_11(acc),
            [99, 114] => lookup_1225_12(acc),
            [99, 114, 105, 109, 101, 97] => lookup_1225_13(acc),
            [99, 118] => lookup_1225_14(acc),
            [99, 120] => lookup_1225_15(acc),
            [100, 110] => lookup_1225_16(acc),
            [100, 110, 101, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_1225_17(acc)
            }
            [100, 110, 105, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_1225_18(acc)
            }
            [100, 111, 110, 101, 116, 115, 107] => lookup_1225_19(acc),
            [100, 112] => lookup_1225_20(acc),
            [101, 100, 117] => lookup_1225_21(acc),
            [103, 111, 118] => lookup_1225_22(acc),
            [105, 102] => lookup_1225_23(acc),
            [105, 110] => lookup_1225_24(acc),
            [105, 110, 102] => lookup_1225_25(acc),
            [105, 118, 97, 110, 111, 45, 102, 114, 97, 110, 107, 105, 118, 115, 107] => {
                lookup_1225_26(acc)
            }
            [107, 104] => lookup_1225_27(acc),
            [107, 104, 97, 114, 107, 105, 118] => lookup_1225_28(acc),
            [107, 104, 97, 114, 107, 111, 118] => lookup_1225_29(acc),
            [107, 104, 101, 114, 115, 111, 110] => lookup_1225_30(acc),
            [107, 104, 109, 101, 108, 110, 105, 116, 115, 107, 105, 121] => lookup_1225_31(acc),
            [107, 104, 109, 101, 108, 110, 121, 116, 115, 107, 121, 105] => lookup_1225_32(acc),
            [107, 105, 101, 118] => lookup_1225_33(acc),
            [107, 105, 114, 111, 118, 111, 103, 114, 97, 100] => lookup_1225_34(acc),
            [107, 109] => lookup_1225_35(acc),
            [107, 114] => lookup_1225_36(acc),
            [107, 114, 121, 109] => lookup_1225_37(acc),
            [107, 115] => lookup_1225_38(acc),
            [107, 118] => lookup_1225_39(acc),
            [107, 121, 105, 118] => lookup_1225_40(acc),
            [108, 103] => lookup_1225_41(acc),
            [108, 116] => lookup_1225_42(acc),
            [108, 116, 100] => lookup_1225_43(acc),
            [108, 117, 103, 97, 110, 115, 107] => lookup_1225_44(acc),
            [108, 117, 116, 115, 107] => lookup_1225_45(acc),
            [108, 118] => lookup_1225_46(acc),
            [108, 118, 105, 118] => lookup_1225_47(acc),
            [109, 107] => lookup_1225_48(acc),
            [109, 121, 107, 111, 108, 97, 105, 118] => lookup_1225_49(acc),
            [110, 101, 116] => lookup_1225_50(acc),
            [110, 105, 107, 111, 108, 97, 101, 118] => lookup_1225_51(acc),
            [111, 100] => lookup_1225_52(acc),
            [111, 100, 101, 115, 97] => lookup_1225_53(acc),
            [111, 100, 101, 115, 115, 97] => lookup_1225_54(acc),
            [111, 114, 103] => lookup_1225_55(acc),
            [112, 108] => lookup_1225_56(acc),
            [112, 111, 108, 116, 97, 118, 97] => lookup_1225_57(acc),
            [112, 112] => lookup_1225_58(acc),
            [114, 105, 118, 110, 101] => lookup_1225_59(acc),
            [114, 111, 118, 110, 111] => lookup_1225_60(acc),
            [114, 118] => lookup_1225_61(acc),
            [115, 98] => lookup_1225_62(acc),
            [115, 101, 98, 97, 115, 116, 111, 112, 111, 108] => lookup_1225_63(acc),
            [115, 101, 118, 97, 115, 116, 111, 112, 111, 108] => lookup_1225_64(acc),
            [115, 109] => lookup_1225_65(acc),
            [115, 117, 109, 121] => lookup_1225_66(acc),
            [116, 101] => lookup_1225_67(acc),
            [116, 101, 114, 110, 111, 112, 105, 108] => lookup_1225_68(acc),
            [117, 122] => lookup_1225_69(acc),
            [117, 122, 104, 103, 111, 114, 111, 100] => lookup_1225_70(acc),
            [118] => lookup_1225_71(acc),
            [118, 105, 110, 110, 105, 99, 97] => lookup_1225_72(acc),
            [118, 105, 110, 110, 121, 116, 115, 105, 97] => lookup_1225_73(acc),
            [118, 110] => lookup_1225_74(acc),
            [118, 111, 108, 121, 110] => lookup_1225_75(acc),
            [121, 97, 108, 116, 97] => lookup_1225_76(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 101] => lookup_1225_77(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 105, 97] => lookup_1225_78(acc),
            [122, 104, 105, 116, 111, 109, 105, 114] => lookup_1225_79(acc),
            [122, 104, 121, 116, 111, 109, 121, 114] => lookup_1225_80(acc),
            [122, 112] => lookup_1225_81(acc),
            [122, 116] => lookup_1225_82(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1227() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1228_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1228_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1228_1(acc),
            [99, 111] => lookup_1228_2(acc),
            [99, 111, 109] => lookup_1228_3(acc),
            [103, 111] => lookup_1228_4(acc),
            [110, 101] => lookup_1228_5(acc),
            [111, 114] => lookup_1228_6(acc),
            [111, 114, 103] => lookup_1228_7(acc),
            [115, 99] => lookup_1228_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1229_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1229_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_2_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_2_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_2_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 104] => lookup_1229_2_4_0(acc),
            [118, 109] => lookup_1229_2_4_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1229_2_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_2_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_2_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_1229_2_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1229_2_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_2_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_2_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_2_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_2_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1229_2_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1229_2_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 105, 109, 111] => lookup_1229_2_0(acc),
            [98, 97, 114, 115, 121] => lookup_1229_2_1(acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_1229_2_2(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1229_2_3(acc),
            [98, 121, 116, 101, 109, 97, 114, 107] => lookup_1229_2_4(info, labels, acc),
            [103, 119, 105, 100, 100, 108, 101] => lookup_1229_2_5(acc),
            [108, 97, 121, 101, 114, 115, 104, 105, 102, 116] => lookup_1229_2_6(info, labels, acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_1229_2_7(acc),
            [110, 104, 45, 115, 101, 114, 118] => lookup_1229_2_8(acc),
            [110, 111, 45, 105, 112] => lookup_1229_2_9(acc),
            [114, 101, 116, 114, 111, 115, 110, 117, 98] => lookup_1229_2_10(info, labels, acc),
            [119, 101, 108, 108, 98, 101, 105, 110, 103, 122, 111, 110, 101] => {
                lookup_1229_2_11(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1229_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112, 105] => lookup_1229_5_0(acc),
            [104, 111, 109, 101, 111, 102, 102, 105, 99, 101] => lookup_1229_5_1(acc),
            [115, 101, 114, 118, 105, 99, 101] => lookup_1229_5_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1229_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1229_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1229_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1229_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1229_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_11_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_11_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_11_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_11_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_11<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 102, 102, 105, 110, 105, 116, 121, 108, 111, 116, 116, 101, 114, 121] => {
                lookup_1229_11_0(acc)
            }
            [103, 108, 117, 103] => lookup_1229_11_1(acc),
            [108, 117, 103] => lookup_1229_11_2(acc),
            [108, 117, 103, 115] => lookup_1229_11_3(acc),
            [114, 97, 102, 102, 108, 101, 101, 110, 116, 114, 121] => lookup_1229_11_4(acc),
            [119, 101, 101, 107, 108, 121, 108, 111, 116, 116, 101, 114, 121] => {
                lookup_1229_11_5(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1229_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1229_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1229_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1229_15_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1229_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1229_15_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1229<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1229_0(acc),
            [98, 97, 114, 115, 121] => lookup_1229_1(acc),
            [99, 111] => lookup_1229_2(labels, acc),
            [99, 111, 110, 110] => lookup_1229_3(acc),
            [99, 111, 112, 114, 111] => lookup_1229_4(acc),
            [103, 111, 118] => lookup_1229_5(labels, acc),
            [104, 111, 115, 112] => lookup_1229_6(acc),
            [108, 116, 100] => lookup_1229_7(acc),
            [109, 101] => lookup_1229_8(acc),
            [110, 101, 116] => lookup_1229_9(acc),
            [110, 104, 115] => lookup_1229_10(acc),
            [111, 114, 103] => lookup_1229_11(labels, acc),
            [112, 108, 99] => lookup_1229_12(acc),
            [112, 111, 108, 105, 99, 101] => lookup_1229_13(acc),
            [112, 121, 109, 110, 116] => lookup_1229_14(acc),
            [115, 99, 104] => lookup_1229_15(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1230() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1231() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1232() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_0_0(acc),
            [107, 49, 50] => lookup_1235_0_1(acc),
            [108, 105, 98] => lookup_1235_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_1_0(acc),
            [107, 49, 50] => lookup_1235_1_1(acc),
            [108, 105, 98] => lookup_1235_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_2_0(acc),
            [107, 49, 50] => lookup_1235_2_1(acc),
            [108, 105, 98] => lookup_1235_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_3_0(acc),
            [107, 49, 50] => lookup_1235_3_1(acc),
            [108, 105, 98] => lookup_1235_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_4_0(acc),
            [107, 49, 50] => lookup_1235_4_1(acc),
            [108, 105, 98] => lookup_1235_4_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_5_0(acc),
            [107, 49, 50] => lookup_1235_5_1(acc),
            [108, 105, 98] => lookup_1235_5_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1235_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_7_0(acc),
            [107, 49, 50] => lookup_1235_7_1(acc),
            [108, 105, 98] => lookup_1235_7_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_8_0(acc),
            [107, 49, 50] => lookup_1235_8_1(acc),
            [108, 105, 98] => lookup_1235_8_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_9_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_9_0(acc),
            [107, 49, 50] => lookup_1235_9_1(acc),
            [108, 105, 98] => lookup_1235_9_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1235_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_10_0(acc),
            [107, 49, 50] => lookup_1235_10_1(acc),
            [108, 105, 98] => lookup_1235_10_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1235_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1235_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 104, 120] => lookup_1235_13_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_15_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_15<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_15_0(acc),
            [107, 49, 50] => lookup_1235_15_1(acc),
            [108, 105, 98] => lookup_1235_15_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1235_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_17_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_17_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_17_0(acc),
            [107, 49, 50] => lookup_1235_17_1(acc),
            [108, 105, 98] => lookup_1235_17_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1235_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1235_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_20_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_20_0(acc),
            [107, 49, 50] => lookup_1235_20_1(acc),
            [108, 105, 98] => lookup_1235_20_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_21<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_21_0(acc),
            [108, 105, 98] => lookup_1235_21_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_22_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_22<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_22_0(acc),
            [107, 49, 50] => lookup_1235_22_1(acc),
            [108, 105, 98] => lookup_1235_22_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_23_0(acc),
            [107, 49, 50] => lookup_1235_23_1(acc),
            [108, 105, 98] => lookup_1235_23_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_24_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_24_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_24<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_24_0(acc),
            [107, 49, 50] => lookup_1235_24_1(acc),
            [108, 105, 98] => lookup_1235_24_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_25_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_25<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_25_0(acc),
            [107, 49, 50] => lookup_1235_25_1(acc),
            [108, 105, 98] => lookup_1235_25_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1235_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_29_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_29_0(acc),
            [107, 49, 50] => lookup_1235_29_1(acc),
            [108, 105, 98] => lookup_1235_29_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_30_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_30_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_30_0(acc),
            [107, 49, 50] => lookup_1235_30_1(acc),
            [108, 105, 98] => lookup_1235_30_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_31_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_31_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_31_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_31<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_31_0(acc),
            [107, 49, 50] => lookup_1235_31_1(acc),
            [108, 105, 98] => lookup_1235_31_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1235_33_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_33_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_33_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_33_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_33_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 116, 114] => lookup_1235_33_1_0(acc),
            [112, 97, 114, 111, 99, 104] => lookup_1235_33_1_1(acc),
            [112, 118, 116] => lookup_1235_33_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_33_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_33<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_33_0(acc),
            [107, 49, 50] => lookup_1235_33_1(labels, acc),
            [108, 105, 98] => lookup_1235_33_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_34_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_34_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_34_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_34<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_34_0(acc),
            [107, 49, 50] => lookup_1235_34_1(acc),
            [108, 105, 98] => lookup_1235_34_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_35_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_35_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_35<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_35_0(acc),
            [107, 49, 50] => lookup_1235_35_1(acc),
            [108, 105, 98] => lookup_1235_35_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_36_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_36_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_36_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_36_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_36_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_36_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_36_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_36_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_36_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_36_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_36<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 110, 45, 97, 114, 98, 111, 114] => lookup_1235_36_0(acc),
            [99, 99] => lookup_1235_36_1(acc),
            [99, 111, 103] => lookup_1235_36_2(acc),
            [100, 115, 116] => lookup_1235_36_3(acc),
            [101, 97, 116, 111, 110] => lookup_1235_36_4(acc),
            [103, 101, 110] => lookup_1235_36_5(acc),
            [107, 49, 50] => lookup_1235_36_6(acc),
            [108, 105, 98] => lookup_1235_36_7(acc),
            [109, 117, 115] => lookup_1235_36_8(acc),
            [116, 101, 99] => lookup_1235_36_9(acc),
            [119, 97, 115, 104, 116, 101, 110, 97, 119] => lookup_1235_36_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1235_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_38_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_38_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_38<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_38_0(acc),
            [107, 49, 50] => lookup_1235_38_1(acc),
            [108, 105, 98] => lookup_1235_38_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_39_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_39_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_39_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_39<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_39_0(acc),
            [107, 49, 50] => lookup_1235_39_1(acc),
            [108, 105, 98] => lookup_1235_39_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_40_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_40_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_40_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_40<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_40_0(acc),
            [107, 49, 50] => lookup_1235_40_1(acc),
            [108, 105, 98] => lookup_1235_40_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_41_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_41_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_41_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_41<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_41_0(acc),
            [107, 49, 50] => lookup_1235_41_1(acc),
            [108, 105, 98] => lookup_1235_41_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_42_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_42_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_42_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_42<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_42_0(acc),
            [107, 49, 50] => lookup_1235_42_1(acc),
            [108, 105, 98] => lookup_1235_42_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_43_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_43_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_43<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_43_0(acc),
            [108, 105, 98] => lookup_1235_43_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_44_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_44<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_44_0(acc),
            [107, 49, 50] => lookup_1235_44_1(acc),
            [108, 105, 98] => lookup_1235_44_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_45_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_45_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_45<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_45_0(acc),
            [107, 49, 50] => lookup_1235_45_1(acc),
            [108, 105, 98] => lookup_1235_45_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_46_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_46_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_46_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_46<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_46_0(acc),
            [107, 49, 50] => lookup_1235_46_1(acc),
            [108, 105, 98] => lookup_1235_46_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_47_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_47_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_47_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_47<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_47_0(acc),
            [107, 49, 50] => lookup_1235_47_1(acc),
            [108, 105, 98] => lookup_1235_47_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1235_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_50_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_50_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_50<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_50_0(acc),
            [107, 49, 50] => lookup_1235_50_1(acc),
            [108, 105, 98] => lookup_1235_50_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_51_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_51_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_51_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_51<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_51_0(acc),
            [107, 49, 50] => lookup_1235_51_1(acc),
            [108, 105, 98] => lookup_1235_51_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_52_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_52_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_52<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_52_0(acc),
            [107, 49, 50] => lookup_1235_52_1(acc),
            [108, 105, 98] => lookup_1235_52_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_53_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_53_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_53_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_53<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_53_0(acc),
            [107, 49, 50] => lookup_1235_53_1(acc),
            [108, 105, 98] => lookup_1235_53_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_54_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_54_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_54<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_54_0(acc),
            [107, 49, 50] => lookup_1235_54_1(acc),
            [108, 105, 98] => lookup_1235_54_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_55_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_55_0(acc),
            [107, 49, 50] => lookup_1235_55_1(acc),
            [108, 105, 98] => lookup_1235_55_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1235_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1235_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_58_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_58_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_58<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_58_0(acc),
            [107, 49, 50] => lookup_1235_58_1(acc),
            [108, 105, 98] => lookup_1235_58_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_59_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_59<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_59_0(acc),
            [108, 105, 98] => lookup_1235_59_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_60_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_60_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_60_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_60<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_60_0(acc),
            [107, 49, 50] => lookup_1235_60_1(acc),
            [108, 105, 98] => lookup_1235_60_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_61_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_61_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_61<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_61_0(acc),
            [108, 105, 98] => lookup_1235_61_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1235_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_63<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_63_0(acc),
            [107, 49, 50] => lookup_1235_63_1(acc),
            [108, 105, 98] => lookup_1235_63_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_64_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_64_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_64<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_64_0(acc),
            [107, 49, 50] => lookup_1235_64_1(acc),
            [108, 105, 98] => lookup_1235_64_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_65_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_65_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_65<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_65_0(acc),
            [107, 49, 50] => lookup_1235_65_1(acc),
            [108, 105, 98] => lookup_1235_65_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_66_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_66_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_66_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_66<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_66_0(acc),
            [107, 49, 50] => lookup_1235_66_1(acc),
            [108, 105, 98] => lookup_1235_66_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_67<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_67_0(acc),
            [107, 49, 50] => lookup_1235_67_1(acc),
            [108, 105, 98] => lookup_1235_67_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_68_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_68_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_68_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_68<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_68_0(acc),
            [107, 49, 50] => lookup_1235_68_1(acc),
            [108, 105, 98] => lookup_1235_68_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_69_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_69_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_69_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_69<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_69_0(acc),
            [107, 49, 50] => lookup_1235_69_1(acc),
            [108, 105, 98] => lookup_1235_69_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_70_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_70_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_70<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_70_0(acc),
            [107, 49, 50] => lookup_1235_70_1(acc),
            [108, 105, 98] => lookup_1235_70_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_71_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_71<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_71_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235_72_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_72_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_72_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235_72<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1235_72_0(acc),
            [107, 49, 50] => lookup_1235_72_1(acc),
            [108, 105, 98] => lookup_1235_72_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107] => lookup_1235_0(labels, acc),
            [97, 108] => lookup_1235_1(labels, acc),
            [97, 114] => lookup_1235_2(labels, acc),
            [97, 115] => lookup_1235_3(labels, acc),
            [97, 122] => lookup_1235_4(labels, acc),
            [99, 97] => lookup_1235_5(labels, acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1235_6(acc),
            [99, 111] => lookup_1235_7(labels, acc),
            [99, 116] => lookup_1235_8(labels, acc),
            [100, 99] => lookup_1235_9(labels, acc),
            [100, 101] => lookup_1235_10(labels, acc),
            [100, 110, 105] => lookup_1235_11(acc),
            [100, 114, 117, 100] => lookup_1235_12(acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_1235_13(info, labels, acc),
            [102, 101, 100] => lookup_1235_14(acc),
            [102, 108] => lookup_1235_15(labels, acc),
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_1235_16(acc),
            [103, 97] => lookup_1235_17(labels, acc),
            [103, 111, 108, 102, 102, 97, 110] => lookup_1235_18(acc),
            [103, 114, 97, 112, 104, 111, 120] => lookup_1235_19(acc),
            [103, 117] => lookup_1235_20(labels, acc),
            [104, 105] => lookup_1235_21(labels, acc),
            [105, 97] => lookup_1235_22(labels, acc),
            [105, 100] => lookup_1235_23(labels, acc),
            [105, 108] => lookup_1235_24(labels, acc),
            [105, 110] => lookup_1235_25(labels, acc),
            [105, 115, 45, 98, 121] => lookup_1235_26(acc),
            [105, 115, 97] => lookup_1235_27(acc),
            [107, 105, 100, 115] => lookup_1235_28(acc),
            [107, 115] => lookup_1235_29(labels, acc),
            [107, 121] => lookup_1235_30(labels, acc),
            [108, 97] => lookup_1235_31(labels, acc),
            [108, 97, 110, 100, 45, 52, 45, 115, 97, 108, 101] => lookup_1235_32(acc),
            [109, 97] => lookup_1235_33(labels, acc),
            [109, 100] => lookup_1235_34(labels, acc),
            [109, 101] => lookup_1235_35(labels, acc),
            [109, 105] => lookup_1235_36(labels, acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_1235_37(acc),
            [109, 110] => lookup_1235_38(labels, acc),
            [109, 111] => lookup_1235_39(labels, acc),
            [109, 115] => lookup_1235_40(labels, acc),
            [109, 116] => lookup_1235_41(labels, acc),
            [110, 99] => lookup_1235_42(labels, acc),
            [110, 100] => lookup_1235_43(labels, acc),
            [110, 101] => lookup_1235_44(labels, acc),
            [110, 104] => lookup_1235_45(labels, acc),
            [110, 106] => lookup_1235_46(labels, acc),
            [110, 109] => lookup_1235_47(labels, acc),
            [110, 111, 105, 112] => lookup_1235_48(acc),
            [110, 115, 110] => lookup_1235_49(acc),
            [110, 118] => lookup_1235_50(labels, acc),
            [110, 121] => lookup_1235_51(labels, acc),
            [111, 104] => lookup_1235_52(labels, acc),
            [111, 107] => lookup_1235_53(labels, acc),
            [111, 114] => lookup_1235_54(labels, acc),
            [112, 97] => lookup_1235_55(labels, acc),
            [112, 108, 97, 116, 116, 101, 114, 112] => lookup_1235_56(acc),
            [112, 111, 105, 110, 116, 116, 111] => lookup_1235_57(acc),
            [112, 114] => lookup_1235_58(labels, acc),
            [114, 105] => lookup_1235_59(labels, acc),
            [115, 99] => lookup_1235_60(labels, acc),
            [115, 100] => lookup_1235_61(labels, acc),
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_1235_62(acc),
            [116, 110] => lookup_1235_63(labels, acc),
            [116, 120] => lookup_1235_64(labels, acc),
            [117, 116] => lookup_1235_65(labels, acc),
            [118, 97] => lookup_1235_66(labels, acc),
            [118, 105] => lookup_1235_67(labels, acc),
            [118, 116] => lookup_1235_68(labels, acc),
            [119, 97] => lookup_1235_69(labels, acc),
            [119, 105] => lookup_1235_70(labels, acc),
            [119, 118] => lookup_1235_71(labels, acc),
            [119, 121] => lookup_1235_72(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1236_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1236_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1236_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1236_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1236_0(labels, acc),
            [101, 100, 117] => lookup_1236_1(acc),
            [103, 117, 98] => lookup_1236_2(acc),
            [109, 105, 108] => lookup_1236_3(acc),
            [110, 101, 116] => lookup_1236_4(acc),
            [111, 114, 103] => lookup_1236_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1237_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1237_0(acc),
            [99, 111, 109] => lookup_1237_1(acc),
            [110, 101, 116] => lookup_1237_2(acc),
            [111, 114, 103] => lookup_1237_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1238() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1239() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100] => lookup_1242_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1242_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48, 101] => lookup_1242_0(acc),
            [99, 111, 109] => lookup_1242_1(acc),
            [101, 100, 117] => lookup_1242_2(acc),
            [103, 111, 118] => lookup_1242_3(acc),
            [103, 118] => lookup_1242_4(labels, acc),
            [109, 105, 108] => lookup_1242_5(acc),
            [110, 101, 116] => lookup_1242_6(acc),
            [111, 114, 103] => lookup_1242_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1243_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_1243_0(acc),
            [98, 105, 98] => lookup_1243_1(acc),
            [99, 111] => lookup_1243_2(acc),
            [99, 111, 109] => lookup_1243_3(acc),
            [101, 49, 50] => lookup_1243_4(acc),
            [101, 100, 117] => lookup_1243_5(acc),
            [102, 105, 114, 109] => lookup_1243_6(acc),
            [103, 111, 98] => lookup_1243_7(acc),
            [103, 111, 118] => lookup_1243_8(acc),
            [105, 110, 102, 111] => lookup_1243_9(acc),
            [105, 110, 116] => lookup_1243_10(acc),
            [109, 105, 108] => lookup_1243_11(acc),
            [110, 101, 116] => lookup_1243_12(acc),
            [110, 111, 109] => lookup_1243_13(acc),
            [111, 114, 103] => lookup_1243_14(acc),
            [114, 97, 114] => lookup_1243_15(acc),
            [114, 101, 99] => lookup_1243_16(acc),
            [115, 116, 111, 114, 101] => lookup_1243_17(acc),
            [116, 101, 99] => lookup_1243_18(acc),
            [119, 101, 98] => lookup_1243_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1244() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1245() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1246() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1247() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1248() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1251_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1251<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116] => lookup_1251_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1252_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1252_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1252_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1252_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1252_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1252<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1252_0(acc),
            [99, 111, 109] => lookup_1252_1(acc),
            [107, 49, 50] => lookup_1252_2(acc),
            [110, 101, 116] => lookup_1252_3(acc),
            [111, 114, 103] => lookup_1252_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1253() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1254() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1255() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1256() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1258() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1259() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1260() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1261() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1262() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1263() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1266_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1266_0(acc),
            [98, 105, 122] => lookup_1266_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1266_2(acc),
            [99, 111, 109] => lookup_1266_3(acc),
            [101, 100, 117] => lookup_1266_4(acc),
            [103, 111, 118] => lookup_1266_5(acc),
            [104, 101, 97, 108, 116, 104] => lookup_1266_6(acc),
            [105, 110, 102, 111] => lookup_1266_7(acc),
            [105, 110, 116] => lookup_1266_8(acc),
            [110, 97, 109, 101] => lookup_1266_9(acc),
            [110, 101, 116] => lookup_1266_10(acc),
            [111, 114, 103] => lookup_1266_11(acc),
            [112, 114, 111] => lookup_1266_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1267() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1268() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1269() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1272() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1273() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1274_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1274_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1274_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1274_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1274_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1274_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1274_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1274_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1274<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103] => lookup_1274_0(acc),
            [99, 110] => lookup_1274_1(acc),
            [99, 111, 109] => lookup_1274_2(acc),
            [100, 101, 118] => lookup_1274_3(acc),
            [101, 100, 117] => lookup_1274_4(acc),
            [109, 101] => lookup_1274_5(acc),
            [110, 101, 116] => lookup_1274_6(acc),
            [111, 114, 103] => lookup_1274_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1275() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1276() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1277() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1278() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1279() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1280() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1282() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1283() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1284() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1287() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1288() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1289() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1291() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1294() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1295() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1296<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 104, 97, 116] => lookup_1296_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1297() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1298() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1299() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1300() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1302() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1303_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1303_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1303<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 111, 109] => lookup_1303_0(acc),
            [116, 111] => lookup_1303_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1304() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1305() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1307_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1307_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1307_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1307_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1307_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1307_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1307_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1307_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1307_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1307_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1307_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1307<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 118, 105, 115, 111, 114] => lookup_1307_0(info, labels, acc),
            [99, 108, 111, 117, 100, 54, 54] => lookup_1307_1(acc),
            [99, 111, 109] => lookup_1307_2(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1307_3(acc),
            [101, 100, 117] => lookup_1307_4(acc),
            [103, 111, 118] => lookup_1307_5(acc),
            [109, 121, 112, 101, 116, 115] => lookup_1307_6(acc),
            [110, 101, 116] => lookup_1307_7(acc),
            [111, 114, 103] => lookup_1307_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1308() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1312() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1313() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1315() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1317() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1318() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1320() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1321() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1322() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1324() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1325() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1326() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1327() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1328() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1329() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1330() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1331() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1332() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1333() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1334() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1336() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1337() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1338() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1339() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1340() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1341() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1342() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1343_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1343_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1343_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1343_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1343_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1343_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1343<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 56, 48, 97, 117] => lookup_1343_0(acc),
            [120, 110, 45, 45, 57, 48, 97, 122, 104] => lookup_1343_1(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1343_2(acc),
            [120, 110, 45, 45, 100, 49, 97, 116] => lookup_1343_3(acc),
            [120, 110, 45, 45, 111, 49, 97, 99] => lookup_1343_4(acc),
            [120, 110, 45, 45, 111, 49, 97, 99, 104] => lookup_1343_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1344() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1346() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1347() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1350() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1351() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1353() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1354() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1355() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1356() -> Info {
    Info {
        len: 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1357() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1358() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1359() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1360() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1362() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1363() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1365() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1368() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1369() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1370() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1371() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1372() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1373() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1374() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1375() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1377() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1379() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1380() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1382() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1384() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1385() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1386() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1387() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1389_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1389_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1389_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1389_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1389_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1389_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1389<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1389_0(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_1389_1(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_1389_2(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_1389_3(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_1389_4(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_1389_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1390() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1391() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1392() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1393() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1394() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1395() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1396() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1398() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1399() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1400() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1401() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1402() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1404() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1409() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1410() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1411() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1412() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1413() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1414() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1415() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1416() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1417() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1418() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1419() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1420() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1421() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1422() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1423() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1424() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1425() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1426() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1427() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1428() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1429() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1430() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1431() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1432() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1434() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1435() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1436() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1437() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1438() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1439() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1440_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1440_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1440_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1440_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1440_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1440_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1440<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 49, 50, 99, 49, 102, 101, 48, 98, 114] => lookup_1440_0(acc),
            [120, 110, 45, 45, 49, 50, 99, 102, 105, 56, 105, 120, 98, 56, 108] => {
                lookup_1440_1(acc)
            }
            [120, 110, 45, 45, 49, 50, 99, 111, 48, 99, 51, 98, 52, 101, 118, 97] => {
                lookup_1440_2(acc)
            }
            [120, 110, 45, 45, 104, 51, 99, 117, 122, 107, 49, 100, 105] => lookup_1440_3(acc),
            [120, 110, 45, 45, 109, 51, 99, 104, 48, 106, 51, 97] => lookup_1440_4(acc),
            [120, 110, 45, 45, 111, 51, 99, 121, 120, 50, 97] => lookup_1440_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1441() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1442() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1443_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1443_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1443_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1443_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1443_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1443_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1443_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1443_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1443_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1443_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1443<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 52, 49, 97] => lookup_1443_0(acc),
            [120, 110, 45, 45, 56, 48, 97, 97, 97, 48, 99, 118, 97, 99] => lookup_1443_1(acc),
            [120, 110, 45, 45, 57, 48, 97, 49, 97, 102] => lookup_1443_2(acc),
            [120, 110, 45, 45, 57, 48, 97, 109, 99] => lookup_1443_3(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1443_4(acc),
            [120, 110, 45, 45, 104, 49, 97, 104, 110] => lookup_1443_5(acc),
            [120, 110, 45, 45, 104, 49, 97, 108, 105, 122] => lookup_1443_6(acc),
            [120, 110, 45, 45, 106, 49, 97, 100, 112] => lookup_1443_7(acc),
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_1443_8(acc),
            [120, 110, 45, 45, 106, 49, 97, 101, 108, 56, 98] => lookup_1443_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1444() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1445() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1447() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1450() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1452() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1453() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1458() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1459() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461() -> Info {
    Info {
        len: 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462() -> Info {
    Info {
        len: 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1464() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1465() -> Info {
    Info {
        len: 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1466() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1467() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1468() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1469() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1470() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1472() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1473() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1474() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1475() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1476() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1477_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1477_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1477_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_1477_0(acc),
            [99, 114, 97, 102, 116, 105, 110, 103] => lookup_1477_1(acc),
            [108, 111, 99, 97, 108, 122, 111, 110, 101] => lookup_1477_2(acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_1477_3(info, labels, acc),
            [122, 97, 112, 116, 111] => lookup_1477_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1478() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1479() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1482_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1482_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1482_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1482_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1482_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1482_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1482<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1482_0(acc),
            [101, 100, 117] => lookup_1482_1(acc),
            [103, 111, 118] => lookup_1482_2(acc),
            [109, 105, 108] => lookup_1482_3(acc),
            [110, 101, 116] => lookup_1482_4(acc),
            [111, 114, 103] => lookup_1482_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1483() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1484() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1485() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1487() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1488_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1488<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1488_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1489() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1490_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1490_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1490_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1490_0(acc),
            [97, 103, 114, 105, 99] => lookup_1490_1(acc),
            [97, 108, 116] => lookup_1490_2(acc),
            [99, 111] => lookup_1490_3(labels, acc),
            [101, 100, 117] => lookup_1490_4(acc),
            [103, 111, 118] => lookup_1490_5(acc),
            [103, 114, 111, 110, 100, 97, 114] => lookup_1490_6(acc),
            [108, 97, 119] => lookup_1490_7(acc),
            [109, 105, 108] => lookup_1490_8(acc),
            [110, 101, 116] => lookup_1490_9(acc),
            [110, 103, 111] => lookup_1490_10(acc),
            [110, 105, 99] => lookup_1490_11(acc),
            [110, 105, 115] => lookup_1490_12(acc),
            [110, 111, 109] => lookup_1490_13(acc),
            [111, 114, 103] => lookup_1490_14(acc),
            [115, 99, 104, 111, 111, 108] => lookup_1490_15(acc),
            [116, 109] => lookup_1490_16(acc),
            [119, 101, 98] => lookup_1490_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1491() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1492() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1493() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1494() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1495_0(acc),
            [98, 105, 122] => lookup_1495_1(acc),
            [99, 111] => lookup_1495_2(acc),
            [99, 111, 109] => lookup_1495_3(acc),
            [101, 100, 117] => lookup_1495_4(acc),
            [103, 111, 118] => lookup_1495_5(acc),
            [105, 110, 102, 111] => lookup_1495_6(acc),
            [109, 105, 108] => lookup_1495_7(acc),
            [110, 101, 116] => lookup_1495_8(acc),
            [111, 114, 103] => lookup_1495_9(acc),
            [115, 99, 104] => lookup_1495_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1496_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1496_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1496_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1496_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1496_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1496_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1496<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 54, 54] => lookup_1496_0(acc),
            [104, 115] => lookup_1496_1(acc),
            [108, 105, 109, 97] => lookup_1496_2(acc),
            [116, 114, 105, 116, 111, 110] => lookup_1496_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1497() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1498_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1498_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1498_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1498_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1498_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1498<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1498_0(acc),
            [99, 111] => lookup_1498_1(acc),
            [103, 111, 118] => lookup_1498_2(acc),
            [109, 105, 108] => lookup_1498_3(acc),
            [111, 114, 103] => lookup_1498_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1499() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1500() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1503() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1506() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1508() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1509() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1510() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1511() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1512_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1512_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1512_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1512_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1512_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1512_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1512_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1512_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1512_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1512_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1512<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [208, 177, 208, 184, 208, 183] => lookup_1512_0(acc),
            [208, 186, 208, 190, 208, 188] => lookup_1512_1(acc),
            [208, 186, 209, 128, 209, 139, 208, 188] => lookup_1512_2(acc),
            [208, 188, 208, 184, 209, 128] => lookup_1512_3(acc),
            [208, 188, 209, 129, 208, 186] => lookup_1512_4(acc),
            [208, 190, 209, 128, 208, 179] => lookup_1512_5(acc),
            [209, 129, 208, 176, 208, 188, 208, 176, 209, 128, 208, 176] => lookup_1512_6(acc),
            [209, 129, 208, 190, 209, 135, 208, 184] => lookup_1512_7(acc),
            [209, 129, 208, 191, 208, 177] => lookup_1512_8(acc),
            [209, 143] => lookup_1512_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1513() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1514() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [208, 176, 208, 186] => lookup_1515_0(acc),
            [208, 190, 208, 177, 209, 128] => lookup_1515_1(acc),
            [208, 190, 208, 180] => lookup_1515_2(acc),
            [208, 190, 209, 128, 208, 179] => lookup_1515_3(acc),
            [208, 191, 209, 128] => lookup_1515_4(acc),
            [209, 131, 208, 191, 209, 128] => lookup_1515_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1516() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1517() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1518() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1519() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1520() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1521() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1522() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1523() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1524() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1525() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1526() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1527() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1529() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1530() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1532() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1534() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1535() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1536() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1537() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1538() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1539() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1540() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1541() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1543() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1544() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1545() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1546() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1548() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1549() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1551() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1552() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1553() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1554() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1556() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1557() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1558() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1560() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1561() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1562() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1563() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1564() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1565() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1567() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1569() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1570() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572() -> Info {
    Info {
        len: 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1573() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1574() -> Info {
    Info {
        len: 33usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1575() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1576() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1577() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1578() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [224, 184, 151, 224, 184, 171, 224, 184, 178, 224, 184, 163] => lookup_1580_0(acc),
            [224, 184, 152, 224, 184, 184, 224, 184, 163, 224, 184, 129, 224, 184, 180, 224, 184, 136] => {
                lookup_1580_1(acc)
            }
            [224, 184, 163, 224, 184, 177, 224, 184, 144, 224, 184, 154, 224, 184, 178, 224, 184, 165] => {
                lookup_1580_2(acc)
            }
            [224, 184, 168, 224, 184, 182, 224, 184, 129, 224, 184, 169, 224, 184, 178] => {
                lookup_1580_3(acc)
            }
            [224, 184, 173, 224, 184, 135, 224, 184, 132, 224, 185, 140, 224, 184, 129, 224, 184, 163] => {
                lookup_1580_4(acc)
            }
            [224, 185, 128, 224, 184, 153, 224, 185, 135, 224, 184, 149] => lookup_1580_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1581() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1583() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1584() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1585() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1586() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1587() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1588() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1589() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1590() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1591() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1592() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1593() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1594() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1595() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1596() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1597() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1598() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1599() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1600() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1603() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1604() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1605() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1606() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1607() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1608() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1610() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1611() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1612() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1613() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1614() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1615() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1616() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1618() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1619() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1621() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1622() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1624() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1625() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1626() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1627() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1629() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1630() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1631() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1632() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1633() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1634() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1636() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1637() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1638() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1639() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1640() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1641() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1642() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1645() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1646() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1647() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1648() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1649() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1650() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1651() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1652() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1653_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1653_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1653_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1653_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1653_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1653_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1653<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [229, 128, 139, 228, 186, 186] => lookup_1653_0(acc),
            [229, 133, 172, 229, 143, 184] => lookup_1653_1(acc),
            [230, 148, 191, 229, 186, 156] => lookup_1653_2(acc),
            [230, 149, 153, 232, 130, 178] => lookup_1653_3(acc),
            [231, 181, 132, 231, 185, 148] => lookup_1653_4(acc),
            [231, 182, 178, 231, 181, 161] => lookup_1653_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1654() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1655() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1656() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1657() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
