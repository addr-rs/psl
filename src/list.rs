//! This file is automatically @generated by cargo-make.
//! It is not intended for manual editing.

#![allow(clippy::all)] // TODO lint this code?

use crate::{Info, Type};
#[inline]
pub(super) fn lookup<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let mut info = Info { len: 0, typ: None };
    match labels.next() {
        Some(label) => match label {
            [97, 97, 97] => lookup_0(),
            [97, 97, 114, 112] => lookup_1(),
            [97, 98, 98] => lookup_2(),
            [97, 98, 98, 111, 116, 116] => lookup_3(),
            [97, 98, 98, 118, 105, 101] => lookup_4(),
            [97, 98, 99] => lookup_5(),
            [97, 98, 108, 101] => lookup_6(),
            [97, 98, 111, 103, 97, 100, 111] => lookup_7(),
            [97, 98, 117, 100, 104, 97, 98, 105] => lookup_8(),
            [97, 99] => lookup_9(labels),
            [97, 99, 97, 100, 101, 109, 121] => lookup_10(labels),
            [97, 99, 99, 101, 110, 116, 117, 114, 101] => lookup_11(),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => lookup_12(),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116, 115] => lookup_13(),
            [97, 99, 111] => lookup_14(),
            [97, 99, 116, 111, 114] => lookup_15(),
            [97, 100] => lookup_16(labels),
            [97, 100, 115] => lookup_17(),
            [97, 100, 117, 108, 116] => lookup_18(),
            [97, 101] => lookup_19(labels),
            [97, 101, 103] => lookup_20(),
            [97, 101, 114, 111] => lookup_21(labels),
            [97, 101, 116, 110, 97] => lookup_22(),
            [97, 102] => lookup_23(labels),
            [97, 102, 108] => lookup_24(),
            [97, 102, 114, 105, 99, 97] => lookup_25(),
            [97, 103] => lookup_26(labels),
            [97, 103, 97, 107, 104, 97, 110] => lookup_27(),
            [97, 103, 101, 110, 99, 121] => lookup_28(),
            [97, 105] => lookup_29(labels),
            [97, 105, 103] => lookup_30(),
            [97, 105, 114, 98, 117, 115] => lookup_31(),
            [97, 105, 114, 102, 111, 114, 99, 101] => lookup_32(),
            [97, 105, 114, 116, 101, 108] => lookup_33(),
            [97, 107, 100, 110] => lookup_34(),
            [97, 108] => lookup_35(labels),
            [97, 108, 105, 98, 97, 98, 97] => lookup_36(),
            [97, 108, 105, 112, 97, 121] => lookup_37(),
            [97, 108, 108, 102, 105, 110, 97, 110, 122] => lookup_38(),
            [97, 108, 108, 115, 116, 97, 116, 101] => lookup_39(),
            [97, 108, 108, 121] => lookup_40(),
            [97, 108, 115, 97, 99, 101] => lookup_41(),
            [97, 108, 115, 116, 111, 109] => lookup_42(),
            [97, 109] => lookup_43(labels),
            [97, 109, 97, 122, 111, 110] => lookup_44(),
            [97, 109, 101, 114, 105, 99, 97, 110, 101, 120, 112, 114, 101, 115, 115] => lookup_45(),
            [97, 109, 101, 114, 105, 99, 97, 110, 102, 97, 109, 105, 108, 121] => lookup_46(),
            [97, 109, 101, 120] => lookup_47(),
            [97, 109, 102, 97, 109] => lookup_48(),
            [97, 109, 105, 99, 97] => lookup_49(),
            [97, 109, 115, 116, 101, 114, 100, 97, 109] => lookup_50(),
            [97, 110, 97, 108, 121, 116, 105, 99, 115] => lookup_51(),
            [97, 110, 100, 114, 111, 105, 100] => lookup_52(),
            [97, 110, 113, 117, 97, 110] => lookup_53(),
            [97, 110, 122] => lookup_54(),
            [97, 111] => lookup_55(labels),
            [97, 111, 108] => lookup_56(),
            [97, 112, 97, 114, 116, 109, 101, 110, 116, 115] => lookup_57(),
            [97, 112, 112] => lookup_58(labels),
            [97, 112, 112, 108, 101] => lookup_59(),
            [97, 113] => lookup_60(),
            [97, 113, 117, 97, 114, 101, 108, 108, 101] => lookup_61(),
            [97, 114] => lookup_62(labels),
            [97, 114, 97, 98] => lookup_63(),
            [97, 114, 97, 109, 99, 111] => lookup_64(),
            [97, 114, 99, 104, 105] => lookup_65(),
            [97, 114, 109, 121] => lookup_66(),
            [97, 114, 112, 97] => lookup_67(labels),
            [97, 114, 116] => lookup_68(),
            [97, 114, 116, 101] => lookup_69(),
            [97, 115] => lookup_70(labels),
            [97, 115, 100, 97] => lookup_71(),
            [97, 115, 105, 97] => lookup_72(labels),
            [97, 115, 115, 111, 99, 105, 97, 116, 101, 115] => lookup_73(),
            [97, 116] => lookup_74(labels),
            [97, 116, 104, 108, 101, 116, 97] => lookup_75(),
            [97, 116, 116, 111, 114, 110, 101, 121] => lookup_76(),
            [97, 117] => lookup_77(labels),
            [97, 117, 99, 116, 105, 111, 110] => lookup_78(),
            [97, 117, 100, 105] => lookup_79(),
            [97, 117, 100, 105, 98, 108, 101] => lookup_80(),
            [97, 117, 100, 105, 111] => lookup_81(),
            [97, 117, 115, 112, 111, 115, 116] => lookup_82(),
            [97, 117, 116, 104, 111, 114] => lookup_83(),
            [97, 117, 116, 111] => lookup_84(),
            [97, 117, 116, 111, 115] => lookup_85(),
            [97, 118, 105, 97, 110, 99, 97] => lookup_86(),
            [97, 119] => lookup_87(labels),
            [97, 119, 115] => lookup_88(labels),
            [97, 120] => lookup_89(labels),
            [97, 120, 97] => lookup_90(),
            [97, 122] => lookup_91(labels),
            [97, 122, 117, 114, 101] => lookup_92(),
            [98, 97] => lookup_93(labels),
            [98, 97, 98, 121] => lookup_94(),
            [98, 97, 105, 100, 117] => lookup_95(),
            [98, 97, 110, 97, 109, 101, 120] => lookup_96(),
            [98, 97, 110, 100] => lookup_97(),
            [98, 97, 110, 107] => lookup_98(),
            [98, 97, 114] => lookup_99(),
            [98, 97, 114, 99, 101, 108, 111, 110, 97] => lookup_100(),
            [98, 97, 114, 99, 108, 97, 121, 99, 97, 114, 100] => lookup_101(),
            [98, 97, 114, 99, 108, 97, 121, 115] => lookup_102(),
            [98, 97, 114, 101, 102, 111, 111, 116] => lookup_103(),
            [98, 97, 114, 103, 97, 105, 110, 115] => lookup_104(),
            [98, 97, 115, 101, 98, 97, 108, 108] => lookup_105(),
            [98, 97, 115, 107, 101, 116, 98, 97, 108, 108] => lookup_106(labels),
            [98, 97, 117, 104, 97, 117, 115] => lookup_107(),
            [98, 97, 121, 101, 114, 110] => lookup_108(),
            [98, 98] => lookup_109(labels),
            [98, 98, 99] => lookup_110(),
            [98, 98, 116] => lookup_111(),
            [98, 98, 118, 97] => lookup_112(),
            [98, 99, 103] => lookup_113(),
            [98, 99, 110] => lookup_114(),
            [98, 100] => lookup_115(info, labels),
            [98, 101] => lookup_116(labels),
            [98, 101, 97, 116, 115] => lookup_117(),
            [98, 101, 97, 117, 116, 121] => lookup_118(),
            [98, 101, 101, 114] => lookup_119(),
            [98, 101, 110, 116, 108, 101, 121] => lookup_120(),
            [98, 101, 114, 108, 105, 110] => lookup_121(),
            [98, 101, 115, 116] => lookup_122(),
            [98, 101, 115, 116, 98, 117, 121] => lookup_123(),
            [98, 101, 116] => lookup_124(),
            [98, 102] => lookup_125(labels),
            [98, 103] => lookup_126(labels),
            [98, 104] => lookup_127(labels),
            [98, 104, 97, 114, 116, 105] => lookup_128(),
            [98, 105] => lookup_129(labels),
            [98, 105, 98, 108, 101] => lookup_130(),
            [98, 105, 100] => lookup_131(),
            [98, 105, 107, 101] => lookup_132(),
            [98, 105, 110, 103] => lookup_133(),
            [98, 105, 110, 103, 111] => lookup_134(),
            [98, 105, 111] => lookup_135(),
            [98, 105, 122] => lookup_136(labels),
            [98, 106] => lookup_137(labels),
            [98, 108, 97, 99, 107] => lookup_138(),
            [98, 108, 97, 99, 107, 102, 114, 105, 100, 97, 121] => lookup_139(),
            [98, 108, 111, 99, 107, 98, 117, 115, 116, 101, 114] => lookup_140(),
            [98, 108, 111, 103] => lookup_141(),
            [98, 108, 111, 111, 109, 98, 101, 114, 103] => lookup_142(),
            [98, 108, 117, 101] => lookup_143(),
            [98, 109] => lookup_144(labels),
            [98, 109, 115] => lookup_145(),
            [98, 109, 119] => lookup_146(),
            [98, 110] => lookup_147(labels),
            [98, 110, 112, 112, 97, 114, 105, 98, 97, 115] => lookup_148(),
            [98, 111] => lookup_149(labels),
            [98, 111, 97, 116, 115] => lookup_150(),
            [98, 111, 101, 104, 114, 105, 110, 103, 101, 114] => lookup_151(),
            [98, 111, 102, 97] => lookup_152(),
            [98, 111, 109] => lookup_153(),
            [98, 111, 110, 100] => lookup_154(),
            [98, 111, 111] => lookup_155(),
            [98, 111, 111, 107] => lookup_156(),
            [98, 111, 111, 107, 105, 110, 103] => lookup_157(),
            [98, 111, 115, 99, 104] => lookup_158(),
            [98, 111, 115, 116, 105, 107] => lookup_159(),
            [98, 111, 115, 116, 111, 110] => lookup_160(),
            [98, 111, 116] => lookup_161(),
            [98, 111, 117, 116, 105, 113, 117, 101] => lookup_162(),
            [98, 111, 120] => lookup_163(),
            [98, 114] => lookup_164(labels),
            [98, 114, 97, 100, 101, 115, 99, 111] => lookup_165(),
            [98, 114, 105, 100, 103, 101, 115, 116, 111, 110, 101] => lookup_166(),
            [98, 114, 111, 97, 100, 119, 97, 121] => lookup_167(),
            [98, 114, 111, 107, 101, 114] => lookup_168(),
            [98, 114, 111, 116, 104, 101, 114] => lookup_169(),
            [98, 114, 117, 115, 115, 101, 108, 115] => lookup_170(),
            [98, 115] => lookup_171(labels),
            [98, 116] => lookup_172(labels),
            [98, 117, 105, 108, 100] => lookup_173(),
            [98, 117, 105, 108, 100, 101, 114, 115] => lookup_174(labels),
            [98, 117, 115, 105, 110, 101, 115, 115] => lookup_175(labels),
            [98, 117, 121] => lookup_176(),
            [98, 117, 122, 122] => lookup_177(),
            [98, 118] => lookup_178(),
            [98, 119] => lookup_179(labels),
            [98, 121] => lookup_180(labels),
            [98, 122] => lookup_181(labels),
            [98, 122, 104] => lookup_182(),
            [99, 97] => lookup_183(labels),
            [99, 97, 98] => lookup_184(),
            [99, 97, 102, 101] => lookup_185(),
            [99, 97, 108] => lookup_186(),
            [99, 97, 108, 108] => lookup_187(),
            [99, 97, 108, 118, 105, 110, 107, 108, 101, 105, 110] => lookup_188(),
            [99, 97, 109] => lookup_189(),
            [99, 97, 109, 101, 114, 97] => lookup_190(),
            [99, 97, 109, 112] => lookup_191(),
            [99, 97, 110, 111, 110] => lookup_192(),
            [99, 97, 112, 101, 116, 111, 119, 110] => lookup_193(),
            [99, 97, 112, 105, 116, 97, 108] => lookup_194(),
            [99, 97, 112, 105, 116, 97, 108, 111, 110, 101] => lookup_195(),
            [99, 97, 114] => lookup_196(),
            [99, 97, 114, 97, 118, 97, 110] => lookup_197(),
            [99, 97, 114, 100, 115] => lookup_198(),
            [99, 97, 114, 101] => lookup_199(),
            [99, 97, 114, 101, 101, 114] => lookup_200(),
            [99, 97, 114, 101, 101, 114, 115] => lookup_201(),
            [99, 97, 114, 115] => lookup_202(),
            [99, 97, 115, 97] => lookup_203(labels),
            [99, 97, 115, 101] => lookup_204(),
            [99, 97, 115, 104] => lookup_205(),
            [99, 97, 115, 105, 110, 111] => lookup_206(),
            [99, 97, 116] => lookup_207(),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_208(),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_209(),
            [99, 98, 97] => lookup_210(),
            [99, 98, 110] => lookup_211(),
            [99, 98, 114, 101] => lookup_212(),
            [99, 99] => lookup_213(labels),
            [99, 100] => lookup_214(labels),
            [99, 101, 110, 116, 101, 114] => lookup_215(),
            [99, 101, 111] => lookup_216(),
            [99, 101, 114, 110] => lookup_217(),
            [99, 102] => lookup_218(labels),
            [99, 102, 97] => lookup_219(),
            [99, 102, 100] => lookup_220(),
            [99, 103] => lookup_221(),
            [99, 104] => lookup_222(labels),
            [99, 104, 97, 110, 101, 108] => lookup_223(),
            [99, 104, 97, 110, 110, 101, 108] => lookup_224(),
            [99, 104, 97, 114, 105, 116, 121] => lookup_225(),
            [99, 104, 97, 115, 101] => lookup_226(),
            [99, 104, 97, 116] => lookup_227(),
            [99, 104, 101, 97, 112] => lookup_228(),
            [99, 104, 105, 110, 116, 97, 105] => lookup_229(),
            [99, 104, 114, 105, 115, 116, 109, 97, 115] => lookup_230(),
            [99, 104, 114, 111, 109, 101] => lookup_231(),
            [99, 104, 117, 114, 99, 104] => lookup_232(),
            [99, 105] => lookup_233(labels),
            [99, 105, 112, 114, 105, 97, 110, 105] => lookup_234(),
            [99, 105, 114, 99, 108, 101] => lookup_235(),
            [99, 105, 115, 99, 111] => lookup_236(),
            [99, 105, 116, 97, 100, 101, 108] => lookup_237(),
            [99, 105, 116, 105] => lookup_238(),
            [99, 105, 116, 105, 99] => lookup_239(),
            [99, 105, 116, 121] => lookup_240(),
            [99, 107] => lookup_241(info, labels),
            [99, 108] => lookup_242(labels),
            [99, 108, 97, 105, 109, 115] => lookup_243(),
            [99, 108, 101, 97, 110, 105, 110, 103] => lookup_244(),
            [99, 108, 105, 99, 107] => lookup_245(),
            [99, 108, 105, 110, 105, 99] => lookup_246(),
            [99, 108, 105, 110, 105, 113, 117, 101] => lookup_247(),
            [99, 108, 111, 116, 104, 105, 110, 103] => lookup_248(),
            [99, 108, 111, 117, 100] => lookup_249(labels),
            [99, 108, 117, 98] => lookup_250(labels),
            [99, 108, 117, 98, 109, 101, 100] => lookup_251(),
            [99, 109] => lookup_252(labels),
            [99, 110] => lookup_253(labels),
            [99, 111] => lookup_254(labels),
            [99, 111, 97, 99, 104] => lookup_255(),
            [99, 111, 100, 101, 115] => lookup_256(labels),
            [99, 111, 102, 102, 101, 101] => lookup_257(),
            [99, 111, 108, 108, 101, 103, 101] => lookup_258(),
            [99, 111, 108, 111, 103, 110, 101] => lookup_259(),
            [99, 111, 109] => lookup_260(labels),
            [99, 111, 109, 99, 97, 115, 116] => lookup_261(),
            [99, 111, 109, 109, 98, 97, 110, 107] => lookup_262(),
            [99, 111, 109, 109, 117, 110, 105, 116, 121] => lookup_263(labels),
            [99, 111, 109, 112, 97, 110, 121] => lookup_264(),
            [99, 111, 109, 112, 97, 114, 101] => lookup_265(),
            [99, 111, 109, 112, 117, 116, 101, 114] => lookup_266(),
            [99, 111, 109, 115, 101, 99] => lookup_267(),
            [99, 111, 110, 100, 111, 115] => lookup_268(),
            [99, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110] => lookup_269(),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_270(),
            [99, 111, 110, 116, 97, 99, 116] => lookup_271(),
            [99, 111, 110, 116, 114, 97, 99, 116, 111, 114, 115] => lookup_272(),
            [99, 111, 111, 107, 105, 110, 103] => lookup_273(),
            [99, 111, 111, 108] => lookup_274(labels),
            [99, 111, 111, 112] => lookup_275(),
            [99, 111, 114, 115, 105, 99, 97] => lookup_276(),
            [99, 111, 117, 110, 116, 114, 121] => lookup_277(),
            [99, 111, 117, 112, 111, 110] => lookup_278(),
            [99, 111, 117, 112, 111, 110, 115] => lookup_279(),
            [99, 111, 117, 114, 115, 101, 115] => lookup_280(),
            [99, 112, 97] => lookup_281(),
            [99, 114] => lookup_282(labels),
            [99, 114, 101, 100, 105, 116] => lookup_283(),
            [99, 114, 101, 100, 105, 116, 99, 97, 114, 100] => lookup_284(),
            [99, 114, 101, 100, 105, 116, 117, 110, 105, 111, 110] => lookup_285(),
            [99, 114, 105, 99, 107, 101, 116] => lookup_286(),
            [99, 114, 111, 119, 110] => lookup_287(),
            [99, 114, 115] => lookup_288(),
            [99, 114, 117, 105, 115, 101] => lookup_289(),
            [99, 114, 117, 105, 115, 101, 115] => lookup_290(),
            [99, 117] => lookup_291(labels),
            [99, 117, 105, 115, 105, 110, 101, 108, 108, 97] => lookup_292(),
            [99, 118] => lookup_293(labels),
            [99, 119] => lookup_294(labels),
            [99, 120] => lookup_295(labels),
            [99, 121] => lookup_296(labels),
            [99, 121, 109, 114, 117] => lookup_297(),
            [99, 121, 111, 117] => lookup_298(),
            [99, 122] => lookup_299(labels),
            [100, 97, 98, 117, 114] => lookup_300(),
            [100, 97, 100] => lookup_301(),
            [100, 97, 110, 99, 101] => lookup_302(),
            [100, 97, 116, 97] => lookup_303(),
            [100, 97, 116, 101] => lookup_304(),
            [100, 97, 116, 105, 110, 103] => lookup_305(),
            [100, 97, 116, 115, 117, 110] => lookup_306(),
            [100, 97, 121] => lookup_307(),
            [100, 99, 108, 107] => lookup_308(),
            [100, 100, 115] => lookup_309(),
            [100, 101] => lookup_310(labels),
            [100, 101, 97, 108] => lookup_311(),
            [100, 101, 97, 108, 101, 114] => lookup_312(),
            [100, 101, 97, 108, 115] => lookup_313(),
            [100, 101, 103, 114, 101, 101] => lookup_314(),
            [100, 101, 108, 105, 118, 101, 114, 121] => lookup_315(),
            [100, 101, 108, 108] => lookup_316(),
            [100, 101, 108, 111, 105, 116, 116, 101] => lookup_317(),
            [100, 101, 108, 116, 97] => lookup_318(),
            [100, 101, 109, 111, 99, 114, 97, 116] => lookup_319(),
            [100, 101, 110, 116, 97, 108] => lookup_320(),
            [100, 101, 110, 116, 105, 115, 116] => lookup_321(),
            [100, 101, 115, 105] => lookup_322(),
            [100, 101, 115, 105, 103, 110] => lookup_323(labels),
            [100, 101, 118] => lookup_324(labels),
            [100, 104, 108] => lookup_325(),
            [100, 105, 97, 109, 111, 110, 100, 115] => lookup_326(),
            [100, 105, 101, 116] => lookup_327(),
            [100, 105, 103, 105, 116, 97, 108] => lookup_328(labels),
            [100, 105, 114, 101, 99, 116] => lookup_329(),
            [100, 105, 114, 101, 99, 116, 111, 114, 121] => lookup_330(),
            [100, 105, 115, 99, 111, 117, 110, 116] => lookup_331(),
            [100, 105, 115, 99, 111, 118, 101, 114] => lookup_332(),
            [100, 105, 115, 104] => lookup_333(),
            [100, 105, 121] => lookup_334(),
            [100, 106] => lookup_335(),
            [100, 107] => lookup_336(labels),
            [100, 109] => lookup_337(labels),
            [100, 110, 112] => lookup_338(),
            [100, 111] => lookup_339(labels),
            [100, 111, 99, 115] => lookup_340(),
            [100, 111, 99, 116, 111, 114] => lookup_341(),
            [100, 111, 103] => lookup_342(),
            [100, 111, 109, 97, 105, 110, 115] => lookup_343(),
            [100, 111, 116] => lookup_344(),
            [100, 111, 119, 110, 108, 111, 97, 100] => lookup_345(),
            [100, 114, 105, 118, 101] => lookup_346(),
            [100, 116, 118] => lookup_347(),
            [100, 117, 98, 97, 105] => lookup_348(),
            [100, 117, 110, 108, 111, 112] => lookup_349(),
            [100, 117, 112, 111, 110, 116] => lookup_350(),
            [100, 117, 114, 98, 97, 110] => lookup_351(),
            [100, 118, 97, 103] => lookup_352(),
            [100, 118, 114] => lookup_353(),
            [100, 122] => lookup_354(labels),
            [101, 97, 114, 116, 104] => lookup_355(labels),
            [101, 97, 116] => lookup_356(),
            [101, 99] => lookup_357(labels),
            [101, 99, 111] => lookup_358(),
            [101, 100, 101, 107, 97] => lookup_359(),
            [101, 100, 117] => lookup_360(labels),
            [101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_361(labels),
            [101, 101] => lookup_362(labels),
            [101, 103] => lookup_363(labels),
            [101, 109, 97, 105, 108] => lookup_364(),
            [101, 109, 101, 114, 99, 107] => lookup_365(),
            [101, 110, 101, 114, 103, 121] => lookup_366(),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_367(),
            [101, 110, 103, 105, 110, 101, 101, 114, 105, 110, 103] => lookup_368(),
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 115] => lookup_369(),
            [101, 112, 115, 111, 110] => lookup_370(),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_371(),
            [101, 114] => lookup_372(info, labels),
            [101, 114, 105, 99, 115, 115, 111, 110] => lookup_373(),
            [101, 114, 110, 105] => lookup_374(),
            [101, 115] => lookup_375(labels),
            [101, 115, 113] => lookup_376(),
            [101, 115, 116, 97, 116, 101] => lookup_377(labels),
            [101, 116] => lookup_378(labels),
            [101, 117] => lookup_379(labels),
            [101, 117, 114, 111, 118, 105, 115, 105, 111, 110] => lookup_380(),
            [101, 117, 115] => lookup_381(labels),
            [101, 118, 101, 110, 116, 115] => lookup_382(labels),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_383(),
            [101, 120, 112, 101, 114, 116] => lookup_384(),
            [101, 120, 112, 111, 115, 101, 100] => lookup_385(),
            [101, 120, 112, 114, 101, 115, 115] => lookup_386(),
            [101, 120, 116, 114, 97, 115, 112, 97, 99, 101] => lookup_387(),
            [102, 97, 103, 101] => lookup_388(),
            [102, 97, 105, 108] => lookup_389(),
            [102, 97, 105, 114, 119, 105, 110, 100, 115] => lookup_390(),
            [102, 97, 105, 116, 104] => lookup_391(labels),
            [102, 97, 109, 105, 108, 121] => lookup_392(),
            [102, 97, 110] => lookup_393(),
            [102, 97, 110, 115] => lookup_394(),
            [102, 97, 114, 109] => lookup_395(labels),
            [102, 97, 114, 109, 101, 114, 115] => lookup_396(),
            [102, 97, 115, 104, 105, 111, 110] => lookup_397(),
            [102, 97, 115, 116] => lookup_398(),
            [102, 101, 100, 101, 120] => lookup_399(),
            [102, 101, 101, 100, 98, 97, 99, 107] => lookup_400(),
            [102, 101, 114, 114, 97, 114, 105] => lookup_401(),
            [102, 101, 114, 114, 101, 114, 111] => lookup_402(),
            [102, 105] => lookup_403(labels),
            [102, 105, 100, 101, 108, 105, 116, 121] => lookup_404(),
            [102, 105, 100, 111] => lookup_405(),
            [102, 105, 108, 109] => lookup_406(),
            [102, 105, 110, 97, 108] => lookup_407(),
            [102, 105, 110, 97, 110, 99, 101] => lookup_408(),
            [102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_409(labels),
            [102, 105, 114, 101] => lookup_410(),
            [102, 105, 114, 101, 115, 116, 111, 110, 101] => lookup_411(),
            [102, 105, 114, 109, 100, 97, 108, 101] => lookup_412(),
            [102, 105, 115, 104] => lookup_413(),
            [102, 105, 115, 104, 105, 110, 103] => lookup_414(),
            [102, 105, 116] => lookup_415(),
            [102, 105, 116, 110, 101, 115, 115] => lookup_416(),
            [102, 106] => lookup_417(labels),
            [102, 107] => lookup_418(info, labels),
            [102, 108, 105, 99, 107, 114] => lookup_419(),
            [102, 108, 105, 103, 104, 116, 115] => lookup_420(),
            [102, 108, 105, 114] => lookup_421(),
            [102, 108, 111, 114, 105, 115, 116] => lookup_422(),
            [102, 108, 111, 119, 101, 114, 115] => lookup_423(),
            [102, 108, 121] => lookup_424(),
            [102, 109] => lookup_425(labels),
            [102, 111] => lookup_426(),
            [102, 111, 111] => lookup_427(),
            [102, 111, 111, 100] => lookup_428(),
            [102, 111, 111, 116, 98, 97, 108, 108] => lookup_429(),
            [102, 111, 114, 100] => lookup_430(),
            [102, 111, 114, 101, 120] => lookup_431(),
            [102, 111, 114, 115, 97, 108, 101] => lookup_432(),
            [102, 111, 114, 117, 109] => lookup_433(),
            [102, 111, 117, 110, 100, 97, 116, 105, 111, 110] => lookup_434(),
            [102, 111, 120] => lookup_435(),
            [102, 114] => lookup_436(labels),
            [102, 114, 101, 101] => lookup_437(),
            [102, 114, 101, 115, 101, 110, 105, 117, 115] => lookup_438(),
            [102, 114, 108] => lookup_439(),
            [102, 114, 111, 103, 97, 110, 115] => lookup_440(),
            [102, 114, 111, 110, 116, 105, 101, 114] => lookup_441(),
            [102, 116, 114] => lookup_442(),
            [102, 117, 106, 105, 116, 115, 117] => lookup_443(),
            [102, 117, 110] => lookup_444(),
            [102, 117, 110, 100] => lookup_445(),
            [102, 117, 114, 110, 105, 116, 117, 114, 101] => lookup_446(),
            [102, 117, 116, 98, 111, 108] => lookup_447(),
            [102, 121, 105] => lookup_448(),
            [103, 97] => lookup_449(),
            [103, 97, 108] => lookup_450(),
            [103, 97, 108, 108, 101, 114, 121] => lookup_451(),
            [103, 97, 108, 108, 111] => lookup_452(),
            [103, 97, 108, 108, 117, 112] => lookup_453(),
            [103, 97, 109, 101] => lookup_454(),
            [103, 97, 109, 101, 115] => lookup_455(labels),
            [103, 97, 112] => lookup_456(),
            [103, 97, 114, 100, 101, 110] => lookup_457(),
            [103, 97, 121] => lookup_458(labels),
            [103, 98] => lookup_459(),
            [103, 98, 105, 122] => lookup_460(),
            [103, 100] => lookup_461(labels),
            [103, 100, 110] => lookup_462(labels),
            [103, 101] => lookup_463(labels),
            [103, 101, 97] => lookup_464(),
            [103, 101, 110, 116] => lookup_465(),
            [103, 101, 110, 116, 105, 110, 103] => lookup_466(),
            [103, 101, 111, 114, 103, 101] => lookup_467(),
            [103, 102] => lookup_468(),
            [103, 103] => lookup_469(labels),
            [103, 103, 101, 101] => lookup_470(),
            [103, 104] => lookup_471(labels),
            [103, 105] => lookup_472(labels),
            [103, 105, 102, 116] => lookup_473(),
            [103, 105, 102, 116, 115] => lookup_474(),
            [103, 105, 118, 101, 115] => lookup_475(),
            [103, 105, 118, 105, 110, 103] => lookup_476(),
            [103, 108] => lookup_477(labels),
            [103, 108, 97, 115, 115] => lookup_478(),
            [103, 108, 101] => lookup_479(),
            [103, 108, 111, 98, 97, 108] => lookup_480(),
            [103, 108, 111, 98, 111] => lookup_481(),
            [103, 109] => lookup_482(),
            [103, 109, 97, 105, 108] => lookup_483(),
            [103, 109, 98, 104] => lookup_484(),
            [103, 109, 111] => lookup_485(),
            [103, 109, 120] => lookup_486(),
            [103, 110] => lookup_487(labels),
            [103, 111, 100, 97, 100, 100, 121] => lookup_488(),
            [103, 111, 108, 100] => lookup_489(),
            [103, 111, 108, 100, 112, 111, 105, 110, 116] => lookup_490(),
            [103, 111, 108, 102] => lookup_491(),
            [103, 111, 111] => lookup_492(),
            [103, 111, 111, 100, 121, 101, 97, 114] => lookup_493(),
            [103, 111, 111, 103] => lookup_494(labels),
            [103, 111, 111, 103, 108, 101] => lookup_495(),
            [103, 111, 112] => lookup_496(),
            [103, 111, 116] => lookup_497(),
            [103, 111, 118] => lookup_498(),
            [103, 112] => lookup_499(labels),
            [103, 113] => lookup_500(),
            [103, 114] => lookup_501(labels),
            [103, 114, 97, 105, 110, 103, 101, 114] => lookup_502(),
            [103, 114, 97, 112, 104, 105, 99, 115] => lookup_503(),
            [103, 114, 97, 116, 105, 115] => lookup_504(),
            [103, 114, 101, 101, 110] => lookup_505(),
            [103, 114, 105, 112, 101] => lookup_506(),
            [103, 114, 111, 99, 101, 114, 121] => lookup_507(),
            [103, 114, 111, 117, 112] => lookup_508(labels),
            [103, 115] => lookup_509(),
            [103, 116] => lookup_510(labels),
            [103, 117] => lookup_511(labels),
            [103, 117, 97, 114, 100, 105, 97, 110] => lookup_512(),
            [103, 117, 99, 99, 105] => lookup_513(),
            [103, 117, 103, 101] => lookup_514(),
            [103, 117, 105, 100, 101] => lookup_515(),
            [103, 117, 105, 116, 97, 114, 115] => lookup_516(),
            [103, 117, 114, 117] => lookup_517(),
            [103, 119] => lookup_518(),
            [103, 121] => lookup_519(labels),
            [104, 97, 105, 114] => lookup_520(),
            [104, 97, 109, 98, 117, 114, 103] => lookup_521(),
            [104, 97, 110, 103, 111, 117, 116] => lookup_522(),
            [104, 97, 117, 115] => lookup_523(),
            [104, 98, 111] => lookup_524(),
            [104, 100, 102, 99] => lookup_525(),
            [104, 100, 102, 99, 98, 97, 110, 107] => lookup_526(),
            [104, 101, 97, 108, 116, 104] => lookup_527(labels),
            [104, 101, 97, 108, 116, 104, 99, 97, 114, 101] => lookup_528(),
            [104, 101, 108, 112] => lookup_529(),
            [104, 101, 108, 115, 105, 110, 107, 105] => lookup_530(),
            [104, 101, 114, 101] => lookup_531(),
            [104, 101, 114, 109, 101, 115] => lookup_532(),
            [104, 105, 112, 104, 111, 112] => lookup_533(),
            [104, 105, 115, 97, 109, 105, 116, 115, 117] => lookup_534(),
            [104, 105, 116, 97, 99, 104, 105] => lookup_535(),
            [104, 105, 118] => lookup_536(),
            [104, 107] => lookup_537(labels),
            [104, 107, 116] => lookup_538(),
            [104, 109] => lookup_539(),
            [104, 110] => lookup_540(labels),
            [104, 111, 99, 107, 101, 121] => lookup_541(),
            [104, 111, 108, 100, 105, 110, 103, 115] => lookup_542(),
            [104, 111, 108, 105, 100, 97, 121] => lookup_543(),
            [104, 111, 109, 101, 100, 101, 112, 111, 116] => lookup_544(),
            [104, 111, 109, 101, 103, 111, 111, 100, 115] => lookup_545(),
            [104, 111, 109, 101, 115] => lookup_546(),
            [104, 111, 109, 101, 115, 101, 110, 115, 101] => lookup_547(),
            [104, 111, 110, 100, 97] => lookup_548(),
            [104, 111, 114, 115, 101] => lookup_549(),
            [104, 111, 115, 112, 105, 116, 97, 108] => lookup_550(),
            [104, 111, 115, 116] => lookup_551(labels),
            [104, 111, 115, 116, 105, 110, 103] => lookup_552(labels),
            [104, 111, 116] => lookup_553(),
            [104, 111, 116, 101, 108, 115] => lookup_554(),
            [104, 111, 116, 109, 97, 105, 108] => lookup_555(),
            [104, 111, 117, 115, 101] => lookup_556(),
            [104, 111, 119] => lookup_557(),
            [104, 114] => lookup_558(labels),
            [104, 115, 98, 99] => lookup_559(),
            [104, 116] => lookup_560(labels),
            [104, 117] => lookup_561(labels),
            [104, 117, 103, 104, 101, 115] => lookup_562(),
            [104, 121, 97, 116, 116] => lookup_563(),
            [104, 121, 117, 110, 100, 97, 105] => lookup_564(),
            [105, 98, 109] => lookup_565(),
            [105, 99, 98, 99] => lookup_566(),
            [105, 99, 101] => lookup_567(),
            [105, 99, 117] => lookup_568(),
            [105, 100] => lookup_569(labels),
            [105, 101] => lookup_570(labels),
            [105, 101, 101, 101] => lookup_571(),
            [105, 102, 109] => lookup_572(),
            [105, 107, 97, 110, 111] => lookup_573(),
            [105, 108] => lookup_574(labels),
            [105, 109] => lookup_575(labels),
            [105, 109, 97, 109, 97, 116] => lookup_576(),
            [105, 109, 100, 98] => lookup_577(),
            [105, 109, 109, 111] => lookup_578(),
            [105, 109, 109, 111, 98, 105, 108, 105, 101, 110] => lookup_579(),
            [105, 110] => lookup_580(labels),
            [105, 110, 99] => lookup_581(),
            [105, 110, 100, 117, 115, 116, 114, 105, 101, 115] => lookup_582(),
            [105, 110, 102, 105, 110, 105, 116, 105] => lookup_583(),
            [105, 110, 102, 111] => lookup_584(labels),
            [105, 110, 103] => lookup_585(),
            [105, 110, 107] => lookup_586(),
            [105, 110, 115, 116, 105, 116, 117, 116, 101] => lookup_587(),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_588(),
            [105, 110, 115, 117, 114, 101] => lookup_589(),
            [105, 110, 116] => lookup_590(labels),
            [105, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97, 108] => lookup_591(),
            [105, 110, 116, 117, 105, 116] => lookup_592(),
            [105, 110, 118, 101, 115, 116, 109, 101, 110, 116, 115] => lookup_593(),
            [105, 111] => lookup_594(labels),
            [105, 112, 105, 114, 97, 110, 103, 97] => lookup_595(),
            [105, 113] => lookup_596(labels),
            [105, 114] => lookup_597(labels),
            [105, 114, 105, 115, 104] => lookup_598(),
            [105, 115] => lookup_599(labels),
            [105, 115, 109, 97, 105, 108, 105] => lookup_600(),
            [105, 115, 116] => lookup_601(),
            [105, 115, 116, 97, 110, 98, 117, 108] => lookup_602(),
            [105, 116] => lookup_603(labels),
            [105, 116, 97, 117] => lookup_604(),
            [105, 116, 118] => lookup_605(),
            [106, 97, 103, 117, 97, 114] => lookup_606(),
            [106, 97, 118, 97] => lookup_607(),
            [106, 99, 98] => lookup_608(),
            [106, 101] => lookup_609(labels),
            [106, 101, 101, 112] => lookup_610(),
            [106, 101, 116, 122, 116] => lookup_611(),
            [106, 101, 119, 101, 108, 114, 121] => lookup_612(),
            [106, 105, 111] => lookup_613(),
            [106, 108, 108] => lookup_614(),
            [106, 109] => lookup_615(info, labels),
            [106, 109, 112] => lookup_616(),
            [106, 110, 106] => lookup_617(),
            [106, 111] => lookup_618(labels),
            [106, 111, 98, 115] => lookup_619(),
            [106, 111, 98, 117, 114, 103] => lookup_620(),
            [106, 111, 116] => lookup_621(),
            [106, 111, 121] => lookup_622(),
            [106, 112] => lookup_623(labels),
            [106, 112, 109, 111, 114, 103, 97, 110] => lookup_624(),
            [106, 112, 114, 115] => lookup_625(),
            [106, 117, 101, 103, 111, 115] => lookup_626(),
            [106, 117, 110, 105, 112, 101, 114] => lookup_627(),
            [107, 97, 117, 102, 101, 110] => lookup_628(),
            [107, 100, 100, 105] => lookup_629(),
            [107, 101] => lookup_630(labels),
            [107, 101, 114, 114, 121, 104, 111, 116, 101, 108, 115] => lookup_631(),
            [107, 101, 114, 114, 121, 108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_632(),
            [107, 101, 114, 114, 121, 112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => {
                lookup_633()
            }
            [107, 102, 104] => lookup_634(),
            [107, 103] => lookup_635(labels),
            [107, 104] => lookup_636(info, labels),
            [107, 105] => lookup_637(labels),
            [107, 105, 97] => lookup_638(),
            [107, 105, 100, 115] => lookup_639(),
            [107, 105, 109] => lookup_640(),
            [107, 105, 110, 100, 108, 101] => lookup_641(),
            [107, 105, 116, 99, 104, 101, 110] => lookup_642(),
            [107, 105, 119, 105] => lookup_643(),
            [107, 109] => lookup_644(labels),
            [107, 110] => lookup_645(labels),
            [107, 111, 101, 108, 110] => lookup_646(),
            [107, 111, 109, 97, 116, 115, 117] => lookup_647(),
            [107, 111, 115, 104, 101, 114] => lookup_648(),
            [107, 112] => lookup_649(labels),
            [107, 112, 109, 103] => lookup_650(),
            [107, 112, 110] => lookup_651(),
            [107, 114] => lookup_652(labels),
            [107, 114, 100] => lookup_653(labels),
            [107, 114, 101, 100] => lookup_654(),
            [107, 117, 111, 107, 103, 114, 111, 117, 112] => lookup_655(),
            [107, 119] => lookup_656(labels),
            [107, 121] => lookup_657(labels),
            [107, 121, 111, 116, 111] => lookup_658(),
            [107, 122] => lookup_659(labels),
            [108, 97] => lookup_660(labels),
            [108, 97, 99, 97, 105, 120, 97] => lookup_661(),
            [108, 97, 109, 98, 111, 114, 103, 104, 105, 110, 105] => lookup_662(),
            [108, 97, 109, 101, 114] => lookup_663(),
            [108, 97, 110, 99, 97, 115, 116, 101, 114] => lookup_664(),
            [108, 97, 110, 100] => lookup_665(labels),
            [108, 97, 110, 100, 114, 111, 118, 101, 114] => lookup_666(),
            [108, 97, 110, 120, 101, 115, 115] => lookup_667(),
            [108, 97, 115, 97, 108, 108, 101] => lookup_668(),
            [108, 97, 116] => lookup_669(),
            [108, 97, 116, 105, 110, 111] => lookup_670(),
            [108, 97, 116, 114, 111, 98, 101] => lookup_671(),
            [108, 97, 119] => lookup_672(),
            [108, 97, 119, 121, 101, 114] => lookup_673(),
            [108, 98] => lookup_674(labels),
            [108, 99] => lookup_675(labels),
            [108, 100, 115] => lookup_676(),
            [108, 101, 97, 115, 101] => lookup_677(),
            [108, 101, 99, 108, 101, 114, 99] => lookup_678(),
            [108, 101, 102, 114, 97, 107] => lookup_679(),
            [108, 101, 103, 97, 108] => lookup_680(),
            [108, 101, 103, 111] => lookup_681(),
            [108, 101, 120, 117, 115] => lookup_682(),
            [108, 103, 98, 116] => lookup_683(),
            [108, 105] => lookup_684(labels),
            [108, 105, 100, 108] => lookup_685(),
            [108, 105, 102, 101] => lookup_686(),
            [108, 105, 102, 101, 105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_687(),
            [108, 105, 102, 101, 115, 116, 121, 108, 101] => lookup_688(),
            [108, 105, 103, 104, 116, 105, 110, 103] => lookup_689(),
            [108, 105, 107, 101] => lookup_690(),
            [108, 105, 108, 108, 121] => lookup_691(),
            [108, 105, 109, 105, 116, 101, 100] => lookup_692(),
            [108, 105, 109, 111] => lookup_693(),
            [108, 105, 110, 99, 111, 108, 110] => lookup_694(),
            [108, 105, 110, 107] => lookup_695(labels),
            [108, 105, 112, 115, 121] => lookup_696(),
            [108, 105, 118, 101] => lookup_697(labels),
            [108, 105, 118, 105, 110, 103] => lookup_698(),
            [108, 107] => lookup_699(labels),
            [108, 108, 99] => lookup_700(),
            [108, 108, 112] => lookup_701(),
            [108, 111, 97, 110] => lookup_702(),
            [108, 111, 97, 110, 115] => lookup_703(),
            [108, 111, 99, 107, 101, 114] => lookup_704(),
            [108, 111, 99, 117, 115] => lookup_705(),
            [108, 111, 108] => lookup_706(labels),
            [108, 111, 110, 100, 111, 110] => lookup_707(),
            [108, 111, 116, 116, 101] => lookup_708(),
            [108, 111, 116, 116, 111] => lookup_709(),
            [108, 111, 118, 101] => lookup_710(),
            [108, 112, 108] => lookup_711(),
            [108, 112, 108, 102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_712(),
            [108, 114] => lookup_713(labels),
            [108, 115] => lookup_714(labels),
            [108, 116] => lookup_715(labels),
            [108, 116, 100] => lookup_716(),
            [108, 116, 100, 97] => lookup_717(),
            [108, 117] => lookup_718(labels),
            [108, 117, 110, 100, 98, 101, 99, 107] => lookup_719(),
            [108, 117, 120, 101] => lookup_720(),
            [108, 117, 120, 117, 114, 121] => lookup_721(),
            [108, 118] => lookup_722(labels),
            [108, 121] => lookup_723(labels),
            [109, 97] => lookup_724(labels),
            [109, 97, 100, 114, 105, 100] => lookup_725(),
            [109, 97, 105, 102] => lookup_726(),
            [109, 97, 105, 115, 111, 110] => lookup_727(),
            [109, 97, 107, 101, 117, 112] => lookup_728(),
            [109, 97, 110] => lookup_729(),
            [109, 97, 110, 97, 103, 101, 109, 101, 110, 116] => lookup_730(labels),
            [109, 97, 110, 103, 111] => lookup_731(),
            [109, 97, 112] => lookup_732(),
            [109, 97, 114, 107, 101, 116] => lookup_733(),
            [109, 97, 114, 107, 101, 116, 105, 110, 103] => lookup_734(),
            [109, 97, 114, 107, 101, 116, 115] => lookup_735(),
            [109, 97, 114, 114, 105, 111, 116, 116] => lookup_736(),
            [109, 97, 114, 115, 104, 97, 108, 108, 115] => lookup_737(),
            [109, 97, 116, 116, 101, 108] => lookup_738(),
            [109, 98, 97] => lookup_739(),
            [109, 99] => lookup_740(labels),
            [109, 99, 107, 105, 110, 115, 101, 121] => lookup_741(),
            [109, 100] => lookup_742(labels),
            [109, 101] => lookup_743(labels),
            [109, 101, 100] => lookup_744(),
            [109, 101, 100, 105, 97] => lookup_745(labels),
            [109, 101, 101, 116] => lookup_746(),
            [109, 101, 108, 98, 111, 117, 114, 110, 101] => lookup_747(),
            [109, 101, 109, 101] => lookup_748(),
            [109, 101, 109, 111, 114, 105, 97, 108] => lookup_749(),
            [109, 101, 110] => lookup_750(),
            [109, 101, 110, 117] => lookup_751(labels),
            [109, 101, 114, 99, 107, 109, 115, 100] => lookup_752(),
            [109, 103] => lookup_753(labels),
            [109, 104] => lookup_754(),
            [109, 105, 97, 109, 105] => lookup_755(),
            [109, 105, 99, 114, 111, 115, 111, 102, 116] => lookup_756(),
            [109, 105, 108] => lookup_757(),
            [109, 105, 110, 105] => lookup_758(),
            [109, 105, 110, 116] => lookup_759(),
            [109, 105, 116] => lookup_760(),
            [109, 105, 116, 115, 117, 98, 105, 115, 104, 105] => lookup_761(),
            [109, 107] => lookup_762(labels),
            [109, 108] => lookup_763(labels),
            [109, 108, 98] => lookup_764(),
            [109, 108, 115] => lookup_765(),
            [109, 109] => lookup_766(info, labels),
            [109, 109, 97] => lookup_767(),
            [109, 110] => lookup_768(labels),
            [109, 111] => lookup_769(labels),
            [109, 111, 98, 105] => lookup_770(labels),
            [109, 111, 98, 105, 108, 101] => lookup_771(),
            [109, 111, 100, 97] => lookup_772(),
            [109, 111, 101] => lookup_773(),
            [109, 111, 105] => lookup_774(),
            [109, 111, 109] => lookup_775(),
            [109, 111, 110, 97, 115, 104] => lookup_776(),
            [109, 111, 110, 101, 121] => lookup_777(),
            [109, 111, 110, 115, 116, 101, 114] => lookup_778(),
            [109, 111, 114, 109, 111, 110] => lookup_779(),
            [109, 111, 114, 116, 103, 97, 103, 101] => lookup_780(),
            [109, 111, 115, 99, 111, 119] => lookup_781(),
            [109, 111, 116, 111] => lookup_782(),
            [109, 111, 116, 111, 114, 99, 121, 99, 108, 101, 115] => lookup_783(),
            [109, 111, 118] => lookup_784(),
            [109, 111, 118, 105, 101] => lookup_785(),
            [109, 112] => lookup_786(labels),
            [109, 113] => lookup_787(),
            [109, 114] => lookup_788(labels),
            [109, 115] => lookup_789(labels),
            [109, 115, 100] => lookup_790(),
            [109, 116] => lookup_791(labels),
            [109, 116, 110] => lookup_792(),
            [109, 116, 114] => lookup_793(),
            [109, 117] => lookup_794(labels),
            [109, 117, 115, 101, 117, 109] => lookup_795(),
            [109, 117, 115, 105, 99] => lookup_796(),
            [109, 118] => lookup_797(labels),
            [109, 119] => lookup_798(labels),
            [109, 120] => lookup_799(labels),
            [109, 121] => lookup_800(labels),
            [109, 122] => lookup_801(labels),
            [110, 97] => lookup_802(labels),
            [110, 97, 98] => lookup_803(),
            [110, 97, 103, 111, 121, 97] => lookup_804(),
            [110, 97, 109, 101] => lookup_805(labels),
            [110, 97, 116, 117, 114, 97] => lookup_806(),
            [110, 97, 118, 121] => lookup_807(),
            [110, 98, 97] => lookup_808(),
            [110, 99] => lookup_809(labels),
            [110, 101] => lookup_810(),
            [110, 101, 99] => lookup_811(),
            [110, 101, 116] => lookup_812(labels),
            [110, 101, 116, 98, 97, 110, 107] => lookup_813(),
            [110, 101, 116, 102, 108, 105, 120] => lookup_814(),
            [110, 101, 116, 119, 111, 114, 107] => lookup_815(labels),
            [110, 101, 117, 115, 116, 97, 114] => lookup_816(),
            [110, 101, 119] => lookup_817(),
            [110, 101, 119, 115] => lookup_818(labels),
            [110, 101, 120, 116] => lookup_819(),
            [110, 101, 120, 116, 100, 105, 114, 101, 99, 116] => lookup_820(),
            [110, 101, 120, 117, 115] => lookup_821(),
            [110, 102] => lookup_822(labels),
            [110, 102, 108] => lookup_823(),
            [110, 103] => lookup_824(labels),
            [110, 103, 111] => lookup_825(),
            [110, 104, 107] => lookup_826(),
            [110, 105] => lookup_827(labels),
            [110, 105, 99, 111] => lookup_828(),
            [110, 105, 107, 101] => lookup_829(),
            [110, 105, 107, 111, 110] => lookup_830(),
            [110, 105, 110, 106, 97] => lookup_831(),
            [110, 105, 115, 115, 97, 110] => lookup_832(),
            [110, 105, 115, 115, 97, 121] => lookup_833(),
            [110, 108] => lookup_834(labels),
            [110, 111] => lookup_835(labels),
            [110, 111, 107, 105, 97] => lookup_836(),
            [110, 111, 114, 116, 111, 110] => lookup_837(),
            [110, 111, 119] => lookup_838(),
            [110, 111, 119, 114, 117, 122] => lookup_839(),
            [110, 111, 119, 116, 118] => lookup_840(),
            [110, 112] => lookup_841(info, labels),
            [110, 114] => lookup_842(labels),
            [110, 114, 97] => lookup_843(),
            [110, 114, 119] => lookup_844(),
            [110, 116, 116] => lookup_845(),
            [110, 117] => lookup_846(labels),
            [110, 121, 99] => lookup_847(),
            [110, 122] => lookup_848(labels),
            [111, 98, 105] => lookup_849(),
            [111, 98, 115, 101, 114, 118, 101, 114] => lookup_850(),
            [111, 102, 102, 105, 99, 101] => lookup_851(),
            [111, 107, 105, 110, 97, 119, 97] => lookup_852(),
            [111, 108, 97, 121, 97, 110] => lookup_853(),
            [111, 108, 97, 121, 97, 110, 103, 114, 111, 117, 112] => lookup_854(),
            [111, 108, 108, 111] => lookup_855(),
            [111, 109] => lookup_856(labels),
            [111, 109, 101, 103, 97] => lookup_857(),
            [111, 110, 101] => lookup_858(labels),
            [111, 110, 103] => lookup_859(),
            [111, 110, 105, 111, 110] => lookup_860(),
            [111, 110, 108] => lookup_861(),
            [111, 110, 108, 105, 110, 101] => lookup_862(labels),
            [111, 111, 111] => lookup_863(),
            [111, 112, 101, 110] => lookup_864(),
            [111, 114, 97, 99, 108, 101] => lookup_865(),
            [111, 114, 97, 110, 103, 101] => lookup_866(labels),
            [111, 114, 103] => lookup_867(labels),
            [111, 114, 103, 97, 110, 105, 99] => lookup_868(),
            [111, 114, 105, 103, 105, 110, 115] => lookup_869(),
            [111, 115, 97, 107, 97] => lookup_870(),
            [111, 116, 115, 117, 107, 97] => lookup_871(),
            [111, 116, 116] => lookup_872(),
            [111, 118, 104] => lookup_873(labels),
            [112, 97] => lookup_874(labels),
            [112, 97, 103, 101] => lookup_875(labels),
            [112, 97, 110, 97, 115, 111, 110, 105, 99] => lookup_876(),
            [112, 97, 114, 105, 115] => lookup_877(),
            [112, 97, 114, 115] => lookup_878(),
            [112, 97, 114, 116, 110, 101, 114, 115] => lookup_879(),
            [112, 97, 114, 116, 115] => lookup_880(),
            [112, 97, 114, 116, 121] => lookup_881(labels),
            [112, 97, 121] => lookup_882(),
            [112, 99, 99, 119] => lookup_883(),
            [112, 101] => lookup_884(labels),
            [112, 101, 116] => lookup_885(),
            [112, 102] => lookup_886(labels),
            [112, 102, 105, 122, 101, 114] => lookup_887(),
            [112, 103] => lookup_888(info, labels),
            [112, 104] => lookup_889(labels),
            [112, 104, 97, 114, 109, 97, 99, 121] => lookup_890(),
            [112, 104, 100] => lookup_891(),
            [112, 104, 105, 108, 105, 112, 115] => lookup_892(),
            [112, 104, 111, 110, 101] => lookup_893(),
            [112, 104, 111, 116, 111] => lookup_894(),
            [112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 121] => lookup_895(),
            [112, 104, 111, 116, 111, 115] => lookup_896(labels),
            [112, 104, 121, 115, 105, 111] => lookup_897(),
            [112, 105, 99, 115] => lookup_898(),
            [112, 105, 99, 116, 101, 116] => lookup_899(),
            [112, 105, 99, 116, 117, 114, 101, 115] => lookup_900(labels),
            [112, 105, 100] => lookup_901(),
            [112, 105, 110] => lookup_902(),
            [112, 105, 110, 103] => lookup_903(),
            [112, 105, 110, 107] => lookup_904(),
            [112, 105, 111, 110, 101, 101, 114] => lookup_905(),
            [112, 105, 122, 122, 97] => lookup_906(labels),
            [112, 107] => lookup_907(labels),
            [112, 108] => lookup_908(labels),
            [112, 108, 97, 99, 101] => lookup_909(labels),
            [112, 108, 97, 121] => lookup_910(),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110] => lookup_911(),
            [112, 108, 117, 109, 98, 105, 110, 103] => lookup_912(),
            [112, 108, 117, 115] => lookup_913(),
            [112, 109] => lookup_914(labels),
            [112, 110] => lookup_915(labels),
            [112, 110, 99] => lookup_916(),
            [112, 111, 104, 108] => lookup_917(),
            [112, 111, 107, 101, 114] => lookup_918(),
            [112, 111, 108, 105, 116, 105, 101] => lookup_919(),
            [112, 111, 114, 110] => lookup_920(labels),
            [112, 111, 115, 116] => lookup_921(),
            [112, 114] => lookup_922(labels),
            [112, 114, 97, 109, 101, 114, 105, 99, 97] => lookup_923(),
            [112, 114, 97, 120, 105] => lookup_924(),
            [112, 114, 101, 115, 115] => lookup_925(),
            [112, 114, 105, 109, 101] => lookup_926(),
            [112, 114, 111] => lookup_927(labels),
            [112, 114, 111, 100] => lookup_928(),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110, 115] => lookup_929(),
            [112, 114, 111, 102] => lookup_930(),
            [112, 114, 111, 103, 114, 101, 115, 115, 105, 118, 101] => lookup_931(),
            [112, 114, 111, 109, 111] => lookup_932(),
            [112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => lookup_933(),
            [112, 114, 111, 112, 101, 114, 116, 121] => lookup_934(),
            [112, 114, 111, 116, 101, 99, 116, 105, 111, 110] => lookup_935(),
            [112, 114, 117] => lookup_936(),
            [112, 114, 117, 100, 101, 110, 116, 105, 97, 108] => lookup_937(),
            [112, 115] => lookup_938(labels),
            [112, 116] => lookup_939(labels),
            [112, 117, 98] => lookup_940(labels),
            [112, 119] => lookup_941(labels),
            [112, 119, 99] => lookup_942(),
            [112, 121] => lookup_943(labels),
            [113, 97] => lookup_944(labels),
            [113, 112, 111, 110] => lookup_945(),
            [113, 117, 101, 98, 101, 99] => lookup_946(),
            [113, 117, 101, 115, 116] => lookup_947(),
            [114, 97, 99, 105, 110, 103] => lookup_948(),
            [114, 97, 100, 105, 111] => lookup_949(),
            [114, 101] => lookup_950(labels),
            [114, 101, 97, 100] => lookup_951(),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_952(),
            [114, 101, 97, 108, 116, 111, 114] => lookup_953(),
            [114, 101, 97, 108, 116, 121] => lookup_954(),
            [114, 101, 99, 105, 112, 101, 115] => lookup_955(),
            [114, 101, 100] => lookup_956(),
            [114, 101, 100, 115, 116, 111, 110, 101] => lookup_957(),
            [114, 101, 100, 117, 109, 98, 114, 101, 108, 108, 97] => lookup_958(),
            [114, 101, 104, 97, 98] => lookup_959(),
            [114, 101, 105, 115, 101] => lookup_960(),
            [114, 101, 105, 115, 101, 110] => lookup_961(),
            [114, 101, 105, 116] => lookup_962(),
            [114, 101, 108, 105, 97, 110, 99, 101] => lookup_963(),
            [114, 101, 110] => lookup_964(),
            [114, 101, 110, 116] => lookup_965(),
            [114, 101, 110, 116, 97, 108, 115] => lookup_966(),
            [114, 101, 112, 97, 105, 114] => lookup_967(),
            [114, 101, 112, 111, 114, 116] => lookup_968(),
            [114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => lookup_969(),
            [114, 101, 115, 116] => lookup_970(),
            [114, 101, 115, 116, 97, 117, 114, 97, 110, 116] => lookup_971(),
            [114, 101, 118, 105, 101, 119] => lookup_972(labels),
            [114, 101, 118, 105, 101, 119, 115] => lookup_973(),
            [114, 101, 120, 114, 111, 116, 104] => lookup_974(),
            [114, 105, 99, 104] => lookup_975(),
            [114, 105, 99, 104, 97, 114, 100, 108, 105] => lookup_976(),
            [114, 105, 99, 111, 104] => lookup_977(),
            [114, 105, 108] => lookup_978(),
            [114, 105, 111] => lookup_979(),
            [114, 105, 112] => lookup_980(labels),
            [114, 111] => lookup_981(labels),
            [114, 111, 99, 107, 115] => lookup_982(labels),
            [114, 111, 100, 101, 111] => lookup_983(),
            [114, 111, 103, 101, 114, 115] => lookup_984(),
            [114, 111, 111, 109] => lookup_985(),
            [114, 115] => lookup_986(labels),
            [114, 115, 118, 112] => lookup_987(),
            [114, 117] => lookup_988(labels),
            [114, 117, 103, 98, 121] => lookup_989(),
            [114, 117, 104, 114] => lookup_990(),
            [114, 117, 110] => lookup_991(labels),
            [114, 119] => lookup_992(labels),
            [114, 119, 101] => lookup_993(),
            [114, 121, 117, 107, 121, 117] => lookup_994(),
            [115, 97] => lookup_995(labels),
            [115, 97, 97, 114, 108, 97, 110, 100] => lookup_996(),
            [115, 97, 102, 101] => lookup_997(),
            [115, 97, 102, 101, 116, 121] => lookup_998(),
            [115, 97, 107, 117, 114, 97] => lookup_999(),
            [115, 97, 108, 101] => lookup_1000(),
            [115, 97, 108, 111, 110] => lookup_1001(),
            [115, 97, 109, 115, 99, 108, 117, 98] => lookup_1002(),
            [115, 97, 109, 115, 117, 110, 103] => lookup_1003(),
            [115, 97, 110, 100, 118, 105, 107] => lookup_1004(),
            [115, 97, 110, 100, 118, 105, 107, 99, 111, 114, 111, 109, 97, 110, 116] => {
                lookup_1005()
            }
            [115, 97, 110, 111, 102, 105] => lookup_1006(),
            [115, 97, 112] => lookup_1007(),
            [115, 97, 114, 108] => lookup_1008(),
            [115, 97, 115] => lookup_1009(),
            [115, 97, 118, 101] => lookup_1010(),
            [115, 97, 120, 111] => lookup_1011(),
            [115, 98] => lookup_1012(labels),
            [115, 98, 105] => lookup_1013(),
            [115, 98, 115] => lookup_1014(),
            [115, 99] => lookup_1015(labels),
            [115, 99, 98] => lookup_1016(),
            [115, 99, 104, 97, 101, 102, 102, 108, 101, 114] => lookup_1017(),
            [115, 99, 104, 109, 105, 100, 116] => lookup_1018(),
            [115, 99, 104, 111, 108, 97, 114, 115, 104, 105, 112, 115] => lookup_1019(),
            [115, 99, 104, 111, 111, 108] => lookup_1020(),
            [115, 99, 104, 117, 108, 101] => lookup_1021(),
            [115, 99, 104, 119, 97, 114, 122] => lookup_1022(),
            [115, 99, 105, 101, 110, 99, 101] => lookup_1023(labels),
            [115, 99, 111, 116] => lookup_1024(labels),
            [115, 100] => lookup_1025(labels),
            [115, 101] => lookup_1026(labels),
            [115, 101, 97, 114, 99, 104] => lookup_1027(),
            [115, 101, 97, 116] => lookup_1028(),
            [115, 101, 99, 117, 114, 101] => lookup_1029(),
            [115, 101, 99, 117, 114, 105, 116, 121] => lookup_1030(),
            [115, 101, 101, 107] => lookup_1031(),
            [115, 101, 108, 101, 99, 116] => lookup_1032(),
            [115, 101, 110, 101, 114] => lookup_1033(),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_1034(labels),
            [115, 101, 118, 101, 110] => lookup_1035(),
            [115, 101, 119] => lookup_1036(),
            [115, 101, 120] => lookup_1037(),
            [115, 101, 120, 121] => lookup_1038(),
            [115, 102, 114] => lookup_1039(),
            [115, 103] => lookup_1040(labels),
            [115, 104] => lookup_1041(labels),
            [115, 104, 97, 110, 103, 114, 105, 108, 97] => lookup_1042(),
            [115, 104, 97, 114, 112] => lookup_1043(),
            [115, 104, 97, 119] => lookup_1044(),
            [115, 104, 101, 108, 108] => lookup_1045(),
            [115, 104, 105, 97] => lookup_1046(),
            [115, 104, 105, 107, 115, 104, 97] => lookup_1047(),
            [115, 104, 111, 101, 115] => lookup_1048(),
            [115, 104, 111, 112] => lookup_1049(labels),
            [115, 104, 111, 112, 112, 105, 110, 103] => lookup_1050(),
            [115, 104, 111, 117, 106, 105] => lookup_1051(),
            [115, 104, 111, 119] => lookup_1052(),
            [115, 105] => lookup_1053(labels),
            [115, 105, 108, 107] => lookup_1054(),
            [115, 105, 110, 97] => lookup_1055(),
            [115, 105, 110, 103, 108, 101, 115] => lookup_1056(),
            [115, 105, 116, 101] => lookup_1057(labels),
            [115, 106] => lookup_1058(),
            [115, 107] => lookup_1059(labels),
            [115, 107, 105] => lookup_1060(),
            [115, 107, 105, 110] => lookup_1061(),
            [115, 107, 121] => lookup_1062(),
            [115, 107, 121, 112, 101] => lookup_1063(),
            [115, 108] => lookup_1064(labels),
            [115, 108, 105, 110, 103] => lookup_1065(),
            [115, 109] => lookup_1066(),
            [115, 109, 97, 114, 116] => lookup_1067(),
            [115, 109, 105, 108, 101] => lookup_1068(),
            [115, 110] => lookup_1069(labels),
            [115, 110, 99, 102] => lookup_1070(),
            [115, 111] => lookup_1071(labels),
            [115, 111, 99, 99, 101, 114] => lookup_1072(),
            [115, 111, 99, 105, 97, 108] => lookup_1073(),
            [115, 111, 102, 116, 98, 97, 110, 107] => lookup_1074(),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_1075(),
            [115, 111, 104, 117] => lookup_1076(),
            [115, 111, 108, 97, 114] => lookup_1077(),
            [115, 111, 108, 117, 116, 105, 111, 110, 115] => lookup_1078(labels),
            [115, 111, 110, 103] => lookup_1079(),
            [115, 111, 110, 121] => lookup_1080(),
            [115, 111, 121] => lookup_1081(),
            [115, 112, 97] => lookup_1082(),
            [115, 112, 97, 99, 101] => lookup_1083(labels),
            [115, 112, 111, 114, 116] => lookup_1084(),
            [115, 112, 111, 116] => lookup_1085(),
            [115, 114] => lookup_1086(),
            [115, 114, 108] => lookup_1087(),
            [115, 115] => lookup_1088(labels),
            [115, 116] => lookup_1089(labels),
            [115, 116, 97, 100, 97] => lookup_1090(),
            [115, 116, 97, 112, 108, 101, 115] => lookup_1091(),
            [115, 116, 97, 114] => lookup_1092(),
            [115, 116, 97, 116, 101, 98, 97, 110, 107] => lookup_1093(),
            [115, 116, 97, 116, 101, 102, 97, 114, 109] => lookup_1094(),
            [115, 116, 99] => lookup_1095(),
            [115, 116, 99, 103, 114, 111, 117, 112] => lookup_1096(),
            [115, 116, 111, 99, 107, 104, 111, 108, 109] => lookup_1097(),
            [115, 116, 111, 114, 97, 103, 101] => lookup_1098(),
            [115, 116, 111, 114, 101] => lookup_1099(labels),
            [115, 116, 114, 101, 97, 109] => lookup_1100(),
            [115, 116, 117, 100, 105, 111] => lookup_1101(),
            [115, 116, 117, 100, 121] => lookup_1102(),
            [115, 116, 121, 108, 101] => lookup_1103(),
            [115, 117] => lookup_1104(labels),
            [115, 117, 99, 107, 115] => lookup_1105(),
            [115, 117, 112, 112, 108, 105, 101, 115] => lookup_1106(),
            [115, 117, 112, 112, 108, 121] => lookup_1107(),
            [115, 117, 112, 112, 111, 114, 116] => lookup_1108(labels),
            [115, 117, 114, 102] => lookup_1109(),
            [115, 117, 114, 103, 101, 114, 121] => lookup_1110(),
            [115, 117, 122, 117, 107, 105] => lookup_1111(),
            [115, 118] => lookup_1112(labels),
            [115, 119, 97, 116, 99, 104] => lookup_1113(),
            [115, 119, 105, 115, 115] => lookup_1114(),
            [115, 120] => lookup_1115(labels),
            [115, 121] => lookup_1116(labels),
            [115, 121, 100, 110, 101, 121] => lookup_1117(),
            [115, 121, 115, 116, 101, 109, 115] => lookup_1118(labels),
            [115, 122] => lookup_1119(labels),
            [116, 97, 98] => lookup_1120(),
            [116, 97, 105, 112, 101, 105] => lookup_1121(),
            [116, 97, 108, 107] => lookup_1122(),
            [116, 97, 111, 98, 97, 111] => lookup_1123(),
            [116, 97, 114, 103, 101, 116] => lookup_1124(),
            [116, 97, 116, 97, 109, 111, 116, 111, 114, 115] => lookup_1125(),
            [116, 97, 116, 97, 114] => lookup_1126(),
            [116, 97, 116, 116, 111, 111] => lookup_1127(),
            [116, 97, 120] => lookup_1128(),
            [116, 97, 120, 105] => lookup_1129(),
            [116, 99] => lookup_1130(labels),
            [116, 99, 105] => lookup_1131(),
            [116, 100] => lookup_1132(labels),
            [116, 100, 107] => lookup_1133(),
            [116, 101, 97, 109] => lookup_1134(labels),
            [116, 101, 99, 104] => lookup_1135(),
            [116, 101, 99, 104, 110, 111, 108, 111, 103, 121] => lookup_1136(labels),
            [116, 101, 108] => lookup_1137(),
            [116, 101, 109, 97, 115, 101, 107] => lookup_1138(),
            [116, 101, 110, 110, 105, 115] => lookup_1139(),
            [116, 101, 118, 97] => lookup_1140(),
            [116, 102] => lookup_1141(labels),
            [116, 103] => lookup_1142(),
            [116, 104] => lookup_1143(labels),
            [116, 104, 100] => lookup_1144(),
            [116, 104, 101, 97, 116, 101, 114] => lookup_1145(),
            [116, 104, 101, 97, 116, 114, 101] => lookup_1146(),
            [116, 105, 97, 97] => lookup_1147(),
            [116, 105, 99, 107, 101, 116, 115] => lookup_1148(),
            [116, 105, 101, 110, 100, 97] => lookup_1149(),
            [116, 105, 112, 115] => lookup_1150(),
            [116, 105, 114, 101, 115] => lookup_1151(),
            [116, 105, 114, 111, 108] => lookup_1152(),
            [116, 106] => lookup_1153(labels),
            [116, 106, 109, 97, 120, 120] => lookup_1154(),
            [116, 106, 120] => lookup_1155(),
            [116, 107] => lookup_1156(),
            [116, 107, 109, 97, 120, 120] => lookup_1157(),
            [116, 108] => lookup_1158(labels),
            [116, 109] => lookup_1159(labels),
            [116, 109, 97, 108, 108] => lookup_1160(),
            [116, 110] => lookup_1161(labels),
            [116, 111] => lookup_1162(labels),
            [116, 111, 100, 97, 121] => lookup_1163(labels),
            [116, 111, 107, 121, 111] => lookup_1164(),
            [116, 111, 111, 108, 115] => lookup_1165(),
            [116, 111, 112] => lookup_1166(labels),
            [116, 111, 114, 97, 121] => lookup_1167(),
            [116, 111, 115, 104, 105, 98, 97] => lookup_1168(),
            [116, 111, 116, 97, 108] => lookup_1169(),
            [116, 111, 117, 114, 115] => lookup_1170(),
            [116, 111, 119, 110] => lookup_1171(),
            [116, 111, 121, 111, 116, 97] => lookup_1172(),
            [116, 111, 121, 115] => lookup_1173(),
            [116, 114] => lookup_1174(labels),
            [116, 114, 97, 100, 101] => lookup_1175(labels),
            [116, 114, 97, 100, 105, 110, 103] => lookup_1176(),
            [116, 114, 97, 105, 110, 105, 110, 103] => lookup_1177(),
            [116, 114, 97, 118, 101, 108] => lookup_1178(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115] => lookup_1179(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_1180()
            }
            [116, 114, 117, 115, 116] => lookup_1181(),
            [116, 114, 118] => lookup_1182(),
            [116, 116] => lookup_1183(labels),
            [116, 117, 98, 101] => lookup_1184(),
            [116, 117, 105] => lookup_1185(),
            [116, 117, 110, 101, 115] => lookup_1186(),
            [116, 117, 115, 104, 117] => lookup_1187(),
            [116, 118] => lookup_1188(labels),
            [116, 118, 115] => lookup_1189(),
            [116, 119] => lookup_1190(labels),
            [116, 122] => lookup_1191(labels),
            [117, 97] => lookup_1192(labels),
            [117, 98, 97, 110, 107] => lookup_1193(),
            [117, 98, 115] => lookup_1194(),
            [117, 103] => lookup_1195(labels),
            [117, 107] => lookup_1196(labels),
            [117, 110, 105, 99, 111, 109] => lookup_1197(),
            [117, 110, 105, 118, 101, 114, 115, 105, 116, 121] => lookup_1198(),
            [117, 110, 111] => lookup_1199(),
            [117, 111, 108] => lookup_1200(),
            [117, 112, 115] => lookup_1201(),
            [117, 115] => lookup_1202(labels),
            [117, 121] => lookup_1203(labels),
            [117, 122] => lookup_1204(labels),
            [118, 97] => lookup_1205(),
            [118, 97, 99, 97, 116, 105, 111, 110, 115] => lookup_1206(),
            [118, 97, 110, 97] => lookup_1207(),
            [118, 97, 110, 103, 117, 97, 114, 100] => lookup_1208(),
            [118, 99] => lookup_1209(labels),
            [118, 101] => lookup_1210(labels),
            [118, 101, 103, 97, 115] => lookup_1211(),
            [118, 101, 110, 116, 117, 114, 101, 115] => lookup_1212(),
            [118, 101, 114, 105, 115, 105, 103, 110] => lookup_1213(),
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114] => {
                lookup_1214()
            }
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103] => {
                lookup_1215()
            }
            [118, 101, 114, 115, 105, 99, 104, 101, 114, 117, 110, 103] => lookup_1216(),
            [118, 101, 116] => lookup_1217(),
            [118, 103] => lookup_1218(labels),
            [118, 105] => lookup_1219(labels),
            [118, 105, 97, 106, 101, 115] => lookup_1220(),
            [118, 105, 100, 101, 111] => lookup_1221(),
            [118, 105, 103] => lookup_1222(),
            [118, 105, 107, 105, 110, 103] => lookup_1223(),
            [118, 105, 108, 108, 97, 115] => lookup_1224(),
            [118, 105, 110] => lookup_1225(),
            [118, 105, 112] => lookup_1226(),
            [118, 105, 114, 103, 105, 110] => lookup_1227(),
            [118, 105, 115, 97] => lookup_1228(),
            [118, 105, 115, 105, 111, 110] => lookup_1229(),
            [118, 105, 118, 97] => lookup_1230(),
            [118, 105, 118, 111] => lookup_1231(),
            [118, 108, 97, 97, 110, 100, 101, 114, 101, 110] => lookup_1232(),
            [118, 110] => lookup_1233(labels),
            [118, 111, 100, 107, 97] => lookup_1234(),
            [118, 111, 108, 118, 111] => lookup_1235(),
            [118, 111, 116, 101] => lookup_1236(),
            [118, 111, 116, 105, 110, 103] => lookup_1237(),
            [118, 111, 116, 111] => lookup_1238(),
            [118, 111, 121, 97, 103, 101] => lookup_1239(),
            [118, 117] => lookup_1240(labels),
            [119, 97, 108, 101, 115] => lookup_1241(),
            [119, 97, 108, 109, 97, 114, 116] => lookup_1242(),
            [119, 97, 108, 116, 101, 114] => lookup_1243(),
            [119, 97, 110, 103] => lookup_1244(),
            [119, 97, 110, 103, 103, 111, 117] => lookup_1245(),
            [119, 97, 116, 99, 104] => lookup_1246(),
            [119, 97, 116, 99, 104, 101, 115] => lookup_1247(),
            [119, 101, 97, 116, 104, 101, 114] => lookup_1248(),
            [119, 101, 97, 116, 104, 101, 114, 99, 104, 97, 110, 110, 101, 108] => lookup_1249(),
            [119, 101, 98, 99, 97, 109] => lookup_1250(),
            [119, 101, 98, 101, 114] => lookup_1251(),
            [119, 101, 98, 115, 105, 116, 101] => lookup_1252(labels),
            [119, 101, 100] => lookup_1253(),
            [119, 101, 100, 100, 105, 110, 103] => lookup_1254(),
            [119, 101, 105, 98, 111] => lookup_1255(),
            [119, 101, 105, 114] => lookup_1256(),
            [119, 102] => lookup_1257(labels),
            [119, 104, 111, 115, 119, 104, 111] => lookup_1258(),
            [119, 105, 101, 110] => lookup_1259(),
            [119, 105, 107, 105] => lookup_1260(labels),
            [119, 105, 108, 108, 105, 97, 109, 104, 105, 108, 108] => lookup_1261(),
            [119, 105, 110] => lookup_1262(),
            [119, 105, 110, 100, 111, 119, 115] => lookup_1263(),
            [119, 105, 110, 101] => lookup_1264(),
            [119, 105, 110, 110, 101, 114, 115] => lookup_1265(),
            [119, 109, 101] => lookup_1266(),
            [119, 111, 108, 116, 101, 114, 115, 107, 108, 117, 119, 101, 114] => lookup_1267(),
            [119, 111, 111, 100, 115, 105, 100, 101] => lookup_1268(),
            [119, 111, 114, 107] => lookup_1269(),
            [119, 111, 114, 107, 115] => lookup_1270(),
            [119, 111, 114, 108, 100] => lookup_1271(),
            [119, 111, 119] => lookup_1272(),
            [119, 115] => lookup_1273(labels),
            [119, 116, 99] => lookup_1274(),
            [119, 116, 102] => lookup_1275(),
            [120, 98, 111, 120] => lookup_1276(),
            [120, 101, 114, 111, 120] => lookup_1277(),
            [120, 102, 105, 110, 105, 116, 121] => lookup_1278(),
            [120, 105, 104, 117, 97, 110] => lookup_1279(),
            [120, 105, 110] => lookup_1280(),
            [120, 110, 45, 45, 49, 49, 98, 52, 99, 51, 100] => lookup_1281(),
            [120, 110, 45, 45, 49, 99, 107, 50, 101, 49, 98] => lookup_1282(),
            [120, 110, 45, 45, 49, 113, 113, 119, 50, 51, 97] => lookup_1283(),
            [120, 110, 45, 45, 50, 115, 99, 114, 106, 57, 99] => lookup_1284(),
            [120, 110, 45, 45, 51, 48, 114, 114, 55, 121] => lookup_1285(),
            [120, 110, 45, 45, 51, 98, 115, 116, 48, 48, 109] => lookup_1286(),
            [120, 110, 45, 45, 51, 100, 115, 52, 52, 51, 103] => lookup_1287(),
            [120, 110, 45, 45, 51, 101, 48, 98, 55, 48, 55, 101] => lookup_1288(),
            [120, 110, 45, 45, 51, 104, 99, 114, 106, 57, 99] => lookup_1289(),
            [120, 110, 45, 45, 51, 112, 120, 117, 56, 107] => lookup_1290(),
            [120, 110, 45, 45, 52, 50, 99, 50, 100, 57, 97] => lookup_1291(),
            [120, 110, 45, 45, 52, 53, 98, 114, 53, 99, 121, 108] => lookup_1292(),
            [120, 110, 45, 45, 52, 53, 98, 114, 106, 57, 99] => lookup_1293(),
            [120, 110, 45, 45, 52, 53, 113, 49, 49, 99] => lookup_1294(),
            [120, 110, 45, 45, 52, 100, 98, 114, 107, 48, 99, 101] => lookup_1295(labels),
            [120, 110, 45, 45, 52, 103, 98, 114, 105, 109] => lookup_1296(),
            [120, 110, 45, 45, 53, 52, 98, 55, 102, 116, 97, 48, 99, 99] => lookup_1297(),
            [120, 110, 45, 45, 53, 53, 113, 119, 52, 50, 103] => lookup_1298(),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1299(),
            [120, 110, 45, 45, 53, 115, 117, 51, 52, 106, 57, 51, 54, 98, 103, 115, 103] => {
                lookup_1300()
            }
            [120, 110, 45, 45, 53, 116, 122, 109, 53, 103] => lookup_1301(),
            [120, 110, 45, 45, 54, 102, 114, 122, 56, 50, 103] => lookup_1302(),
            [120, 110, 45, 45, 54, 113, 113, 57, 56, 54, 98, 51, 120, 108] => lookup_1303(),
            [120, 110, 45, 45, 56, 48, 97, 100, 120, 104, 107, 115] => lookup_1304(),
            [120, 110, 45, 45, 56, 48, 97, 111, 50, 49, 97] => lookup_1305(),
            [120, 110, 45, 45, 56, 48, 97, 113, 101, 99, 100, 114, 49, 97] => lookup_1306(),
            [120, 110, 45, 45, 56, 48, 97, 115, 101, 104, 100, 98] => lookup_1307(),
            [120, 110, 45, 45, 56, 48, 97, 115, 119, 103] => lookup_1308(),
            [120, 110, 45, 45, 56, 121, 48, 97, 48, 54, 51, 97] => lookup_1309(),
            [120, 110, 45, 45, 57, 48, 97, 51, 97, 99] => lookup_1310(labels),
            [120, 110, 45, 45, 57, 48, 97, 101] => lookup_1311(),
            [120, 110, 45, 45, 57, 48, 97, 105, 115] => lookup_1312(),
            [120, 110, 45, 45, 57, 100, 98, 113, 50, 97] => lookup_1313(),
            [120, 110, 45, 45, 57, 101, 116, 53, 50, 117] => lookup_1314(),
            [120, 110, 45, 45, 57, 107, 114, 116, 48, 48, 97] => lookup_1315(),
            [120, 110, 45, 45, 98, 52, 119, 54, 48, 53, 102, 101, 114, 100] => lookup_1316(),
            [120, 110, 45, 45, 98, 99, 107, 49, 98, 57, 97, 53, 100, 114, 101, 52, 99] => {
                lookup_1317()
            }
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1318(),
            [120, 110, 45, 45, 99, 50, 98, 114, 55, 103] => lookup_1319(),
            [120, 110, 45, 45, 99, 99, 107, 50, 98, 51, 98] => lookup_1320(),
            [120, 110, 45, 45, 99, 99, 107, 119, 99, 120, 101, 116, 100] => lookup_1321(),
            [120, 110, 45, 45, 99, 103, 52, 98, 107, 105] => lookup_1322(),
            [120, 110, 45, 45, 99, 108, 99, 104, 99, 48, 101, 97, 48, 98, 50, 103, 50, 97, 57, 103, 99, 100] => {
                lookup_1323()
            }
            [120, 110, 45, 45, 99, 122, 114, 54, 57, 52, 98] => lookup_1324(),
            [120, 110, 45, 45, 99, 122, 114, 115, 48, 116] => lookup_1325(),
            [120, 110, 45, 45, 99, 122, 114, 117, 50, 100] => lookup_1326(),
            [120, 110, 45, 45, 100, 49, 97, 99, 106, 51, 98] => lookup_1327(),
            [120, 110, 45, 45, 100, 49, 97, 108, 102] => lookup_1328(),
            [120, 110, 45, 45, 101, 49, 97, 52, 99] => lookup_1329(),
            [120, 110, 45, 45, 101, 99, 107, 118, 100, 116, 99, 57, 100] => lookup_1330(),
            [120, 110, 45, 45, 101, 102, 118, 121, 56, 56, 104] => lookup_1331(),
            [120, 110, 45, 45, 102, 99, 116, 52, 50, 57, 107] => lookup_1332(),
            [120, 110, 45, 45, 102, 104, 98, 101, 105] => lookup_1333(),
            [120, 110, 45, 45, 102, 105, 113, 50, 50, 56, 99, 53, 104, 115] => lookup_1334(),
            [120, 110, 45, 45, 102, 105, 113, 54, 52, 98] => lookup_1335(),
            [120, 110, 45, 45, 102, 105, 113, 115, 56, 115] => lookup_1336(),
            [120, 110, 45, 45, 102, 105, 113, 122, 57, 115] => lookup_1337(),
            [120, 110, 45, 45, 102, 106, 113, 55, 50, 48, 97] => lookup_1338(),
            [120, 110, 45, 45, 102, 108, 119, 51, 53, 49, 101] => lookup_1339(),
            [120, 110, 45, 45, 102, 112, 99, 114, 106, 57, 99, 51, 100] => lookup_1340(),
            [120, 110, 45, 45, 102, 122, 99, 50, 99, 57, 101, 50, 99] => lookup_1341(),
            [120, 110, 45, 45, 102, 122, 121, 115, 56, 100, 54, 57, 117, 118, 103, 109] => {
                lookup_1342()
            }
            [120, 110, 45, 45, 103, 50, 120, 120, 52, 56, 99] => lookup_1343(),
            [120, 110, 45, 45, 103, 99, 107, 114, 51, 102, 48, 102] => lookup_1344(),
            [120, 110, 45, 45, 103, 101, 99, 114, 106, 57, 99] => lookup_1345(),
            [120, 110, 45, 45, 103, 107, 51, 97, 116, 49, 101] => lookup_1346(),
            [120, 110, 45, 45, 104, 50, 98, 114, 101, 103, 51, 101, 118, 101] => lookup_1347(),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99] => lookup_1348(),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99, 56, 99] => lookup_1349(),
            [120, 110, 45, 45, 104, 120, 116, 56, 49, 52, 101] => lookup_1350(),
            [120, 110, 45, 45, 105, 49, 98, 54, 98, 49, 97, 54, 97, 50, 101] => lookup_1351(),
            [120, 110, 45, 45, 105, 109, 114, 53, 49, 51, 110] => lookup_1352(),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_1353(),
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_1354(),
            [120, 110, 45, 45, 106, 49, 97, 109, 104] => lookup_1355(),
            [120, 110, 45, 45, 106, 54, 119, 49, 57, 51, 103] => lookup_1356(labels),
            [120, 110, 45, 45, 106, 108, 113, 52, 56, 48, 110, 50, 114, 103] => lookup_1357(),
            [120, 110, 45, 45, 106, 118, 114, 49, 56, 57, 109] => lookup_1358(),
            [120, 110, 45, 45, 107, 99, 114, 120, 55, 55, 100, 49, 120, 52, 97] => lookup_1359(),
            [120, 110, 45, 45, 107, 112, 114, 119, 49, 51, 100] => lookup_1360(),
            [120, 110, 45, 45, 107, 112, 114, 121, 53, 55, 100] => lookup_1361(),
            [120, 110, 45, 45, 107, 112, 117, 116, 51, 105] => lookup_1362(),
            [120, 110, 45, 45, 108, 49, 97, 99, 99] => lookup_1363(),
            [120, 110, 45, 45, 108, 103, 98, 98, 97, 116, 49, 97, 100, 56, 106] => lookup_1364(),
            [120, 110, 45, 45, 109, 103, 98, 50, 100, 100, 101, 115] => lookup_1365(),
            [120, 110, 45, 45, 109, 103, 98, 57, 97, 119, 98, 102] => lookup_1366(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 51, 101, 106, 116] => lookup_1367(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_1368(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_1369(),
            [120, 110, 45, 45, 109, 103, 98, 97, 55, 99, 48, 98, 98, 110, 48, 97] => lookup_1370(),
            [120, 110, 45, 45, 109, 103, 98, 97, 97, 109, 55, 97, 56, 104] => lookup_1371(),
            [120, 110, 45, 45, 109, 103, 98, 97, 98, 50, 98, 100] => lookup_1372(),
            [120, 110, 45, 45, 109, 103, 98, 97, 104, 49, 97, 51, 104, 106, 107, 114, 100] => {
                lookup_1373()
            }
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 53, 101, 118, 97, 48, 48, 98] => {
                lookup_1374()
            }
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 122, 103, 113, 112, 54, 106] => {
                lookup_1375()
            }
            [120, 110, 45, 45, 109, 103, 98, 97, 121, 104, 55, 103, 112, 97] => lookup_1376(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97] => lookup_1377(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97, 55, 49, 101] => lookup_1378(),
            [120, 110, 45, 45, 109, 103, 98, 99, 48, 97, 57, 97, 122, 99, 103] => lookup_1379(),
            [120, 110, 45, 45, 109, 103, 98, 99, 97, 55, 100, 122, 100, 111] => lookup_1380(),
            [120, 110, 45, 45, 109, 103, 98, 99, 112, 113, 54, 103, 112, 97, 49, 97] => {
                lookup_1381()
            }
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 56, 55, 103] => {
                lookup_1382()
            }
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 114] => {
                lookup_1383()
            }
            [120, 110, 45, 45, 109, 103, 98, 103, 117, 56, 50, 97] => lookup_1384(),
            [120, 110, 45, 45, 109, 103, 98, 105, 52, 101, 99, 101, 120, 112] => lookup_1385(),
            [120, 110, 45, 45, 109, 103, 98, 112, 108, 50, 102, 104] => lookup_1386(),
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 48, 97, 54, 55, 102, 98, 99] => {
                lookup_1387()
            }
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 118, 97, 102, 114] => {
                lookup_1388()
            }
            [120, 110, 45, 45, 109, 103, 98, 116, 51, 100, 104, 100] => lookup_1389(),
            [120, 110, 45, 45, 109, 103, 98, 116, 102, 56, 102, 108] => lookup_1390(),
            [120, 110, 45, 45, 109, 103, 98, 116, 120, 50, 98] => lookup_1391(),
            [120, 110, 45, 45, 109, 103, 98, 120, 52, 99, 100, 48, 97, 98] => lookup_1392(),
            [120, 110, 45, 45, 109, 105, 120, 48, 56, 50, 102] => lookup_1393(),
            [120, 110, 45, 45, 109, 105, 120, 56, 57, 49, 102] => lookup_1394(),
            [120, 110, 45, 45, 109, 107, 49, 98, 117, 52, 52, 99] => lookup_1395(),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_1396(),
            [120, 110, 45, 45, 110, 103, 98, 99, 53, 97, 122, 100] => lookup_1397(),
            [120, 110, 45, 45, 110, 103, 98, 101, 57, 101, 48, 97] => lookup_1398(),
            [120, 110, 45, 45, 110, 103, 98, 114, 120] => lookup_1399(),
            [120, 110, 45, 45, 110, 110, 120, 51, 56, 56, 97] => lookup_1400(),
            [120, 110, 45, 45, 110, 111, 100, 101] => lookup_1401(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102] => lookup_1402(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102, 115, 48, 48, 101, 109, 97] => lookup_1403(),
            [120, 110, 45, 45, 110, 121, 113, 121, 50, 54, 97] => lookup_1404(),
            [120, 110, 45, 45, 111, 51, 99, 119, 52, 104] => lookup_1405(labels),
            [120, 110, 45, 45, 111, 103, 98, 112, 102, 56, 102, 108] => lookup_1406(),
            [120, 110, 45, 45, 111, 116, 117, 55, 57, 54, 100] => lookup_1407(),
            [120, 110, 45, 45, 112, 49, 97, 99, 102] => lookup_1408(labels),
            [120, 110, 45, 45, 112, 49, 97, 105] => lookup_1409(),
            [120, 110, 45, 45, 112, 103, 98, 115, 48, 100, 104] => lookup_1410(),
            [120, 110, 45, 45, 112, 115, 115, 121, 50, 117] => lookup_1411(),
            [120, 110, 45, 45, 113, 55, 99, 101, 54, 97] => lookup_1412(),
            [120, 110, 45, 45, 113, 57, 106, 121, 98, 52, 99] => lookup_1413(),
            [120, 110, 45, 45, 113, 99, 107, 97, 49, 112, 109, 99] => lookup_1414(),
            [120, 110, 45, 45, 113, 120, 97, 54, 97] => lookup_1415(),
            [120, 110, 45, 45, 113, 120, 97, 109] => lookup_1416(),
            [120, 110, 45, 45, 114, 104, 113, 118, 57, 54, 103] => lookup_1417(),
            [120, 110, 45, 45, 114, 111, 118, 117, 56, 56, 98] => lookup_1418(),
            [120, 110, 45, 45, 114, 118, 99, 49, 101, 48, 97, 109, 51, 101] => lookup_1419(),
            [120, 110, 45, 45, 115, 57, 98, 114, 106, 57, 99] => lookup_1420(),
            [120, 110, 45, 45, 115, 101, 115, 53, 53, 52, 103] => lookup_1421(),
            [120, 110, 45, 45, 116, 54, 48, 98, 53, 54, 97] => lookup_1422(),
            [120, 110, 45, 45, 116, 99, 107, 119, 101] => lookup_1423(),
            [120, 110, 45, 45, 116, 105, 113, 52, 57, 120, 113, 121, 106] => lookup_1424(),
            [120, 110, 45, 45, 117, 110, 117, 112, 52, 121] => lookup_1425(),
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114, 45, 99, 116, 98] => {
                lookup_1426()
            }
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103, 45, 112, 119, 98] => {
                lookup_1427()
            }
            [120, 110, 45, 45, 118, 104, 113, 117, 118] => lookup_1428(),
            [120, 110, 45, 45, 118, 117, 113, 56, 54, 49, 98] => lookup_1429(),
            [120, 110, 45, 45, 119, 52, 114, 56, 53, 101, 108, 56, 102, 104, 117, 53, 100, 110, 114, 97] => {
                lookup_1430()
            }
            [120, 110, 45, 45, 119, 52, 114, 115, 52, 48, 108] => lookup_1431(),
            [120, 110, 45, 45, 119, 103, 98, 104, 49, 99] => lookup_1432(),
            [120, 110, 45, 45, 119, 103, 98, 108, 54, 97] => lookup_1433(),
            [120, 110, 45, 45, 120, 104, 113, 53, 50, 49, 98] => lookup_1434(),
            [120, 110, 45, 45, 120, 107, 99, 50, 97, 108, 51, 104, 121, 101, 50, 97] => {
                lookup_1435()
            }
            [120, 110, 45, 45, 120, 107, 99, 50, 100, 108, 51, 97, 53, 101, 101, 48, 104] => {
                lookup_1436()
            }
            [120, 110, 45, 45, 121, 57, 97, 51, 97, 113] => lookup_1437(),
            [120, 110, 45, 45, 121, 102, 114, 111, 52, 105, 54, 55, 111] => lookup_1438(),
            [120, 110, 45, 45, 121, 103, 98, 105, 50, 97, 109, 109, 120] => lookup_1439(),
            [120, 110, 45, 45, 122, 102, 114, 49, 54, 52, 98] => lookup_1440(),
            [120, 120, 120] => lookup_1441(),
            [120, 121, 122] => lookup_1442(labels),
            [121, 97, 99, 104, 116, 115] => lookup_1443(),
            [121, 97, 104, 111, 111] => lookup_1444(),
            [121, 97, 109, 97, 120, 117, 110] => lookup_1445(),
            [121, 97, 110, 100, 101, 120] => lookup_1446(),
            [121, 101] => lookup_1447(labels),
            [121, 111, 100, 111, 98, 97, 115, 104, 105] => lookup_1448(),
            [121, 111, 103, 97] => lookup_1449(),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_1450(),
            [121, 111, 117] => lookup_1451(),
            [121, 111, 117, 116, 117, 98, 101] => lookup_1452(),
            [121, 116] => lookup_1453(labels),
            [121, 117, 110] => lookup_1454(),
            [122, 97] => lookup_1455(info, labels),
            [122, 97, 112, 112, 111, 115] => lookup_1456(),
            [122, 97, 114, 97] => lookup_1457(),
            [122, 101, 114, 111] => lookup_1458(),
            [122, 105, 112] => lookup_1459(),
            [122, 109] => lookup_1460(labels),
            [122, 111, 110, 101] => lookup_1461(labels),
            [122, 117, 101, 114, 105, 99, 104] => lookup_1462(),
            [122, 119] => lookup_1463(labels),
            [206, 181, 206, 187] => lookup_1464(),
            [206, 181, 207, 133] => lookup_1465(),
            [208, 177, 208, 179] => lookup_1466(),
            [208, 177, 208, 181, 208, 187] => lookup_1467(),
            [208, 180, 208, 181, 209, 130, 208, 184] => lookup_1468(),
            [208, 181, 209, 142] => lookup_1469(),
            [208, 186, 208, 176, 209, 130, 208, 190, 208, 187, 208, 184, 208, 186] => lookup_1470(),
            [208, 186, 208, 190, 208, 188] => lookup_1471(),
            [208, 188, 208, 186, 208, 180] => lookup_1472(),
            [208, 188, 208, 190, 208, 189] => lookup_1473(),
            [208, 188, 208, 190, 209, 129, 208, 186, 208, 178, 208, 176] => lookup_1474(),
            [208, 190, 208, 189, 208, 187, 208, 176, 208, 185, 208, 189] => lookup_1475(),
            [208, 190, 209, 128, 208, 179] => lookup_1476(),
            [209, 128, 209, 131, 209, 129] => lookup_1477(labels),
            [209, 128, 209, 132] => lookup_1478(),
            [209, 129, 208, 176, 208, 185, 209, 130] => lookup_1479(),
            [209, 129, 209, 128, 208, 177] => lookup_1480(labels),
            [209, 131, 208, 186, 209, 128] => lookup_1481(),
            [210, 155, 208, 176, 208, 183] => lookup_1482(),
            [213, 176, 213, 161, 213, 181] => lookup_1483(),
            [215, 153, 215, 169, 215, 168, 215, 144, 215, 156] => lookup_1484(labels),
            [215, 167, 215, 149, 215, 157] => lookup_1485(),
            [216, 167, 216, 168, 217, 136, 216, 184, 216, 168, 217, 138] => lookup_1486(),
            [216, 167, 216, 177, 216, 167, 217, 133, 217, 131, 217, 136] => lookup_1487(),
            [216, 167, 217, 132, 216, 167, 216, 177, 216, 175, 217, 134] => lookup_1488(),
            [216, 167, 217, 132, 216, 168, 216, 173, 216, 177, 217, 138, 217, 134] => lookup_1489(),
            [216, 167, 217, 132, 216, 172, 216, 178, 216, 167, 216, 166, 216, 177] => lookup_1490(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 216, 169] => {
                lookup_1491()
            }
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 217, 135] => {
                lookup_1492()
            }
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 216, 169] => {
                lookup_1493()
            }
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 219, 131] => {
                lookup_1494()
            }
            [216, 167, 217, 132, 216, 185, 217, 132, 217, 138, 216, 167, 217, 134] => lookup_1495(),
            [216, 167, 217, 132, 217, 133, 216, 186, 216, 177, 216, 168] => lookup_1496(),
            [216, 167, 217, 132, 217, 138, 217, 133, 217, 134] => lookup_1497(),
            [216, 167, 217, 133, 216, 167, 216, 177, 216, 167, 216, 170] => lookup_1498(),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_1499(),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_1500(),
            [216, 168, 216, 167, 216, 177, 216, 170] => lookup_1501(),
            [216, 168, 216, 167, 216, 178, 216, 167, 216, 177] => lookup_1502(),
            [216, 168, 217, 138, 216, 170, 217, 131] => lookup_1503(),
            [216, 168, 218, 190, 216, 167, 216, 177, 216, 170] => lookup_1504(),
            [216, 170, 217, 136, 217, 134, 216, 179] => lookup_1505(),
            [216, 179, 217, 136, 216, 175, 216, 167, 217, 134] => lookup_1506(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 167] => lookup_1507(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 169] => lookup_1508(),
            [216, 180, 216, 168, 217, 131, 216, 169] => lookup_1509(),
            [216, 185, 216, 177, 216, 167, 217, 130] => lookup_1510(),
            [216, 185, 216, 177, 216, 168] => lookup_1511(),
            [216, 185, 217, 133, 216, 167, 217, 134] => lookup_1512(),
            [217, 129, 217, 132, 216, 179, 216, 183, 217, 138, 217, 134] => lookup_1513(),
            [217, 130, 216, 183, 216, 177] => lookup_1514(),
            [217, 131, 216, 167, 216, 171, 217, 136, 217, 132, 217, 138, 217, 131] => lookup_1515(),
            [217, 131, 217, 136, 217, 133] => lookup_1516(),
            [217, 133, 216, 181, 216, 177] => lookup_1517(),
            [217, 133, 217, 132, 217, 138, 216, 179, 217, 138, 216, 167] => lookup_1518(),
            [217, 133, 217, 136, 216, 177, 217, 138, 216, 170, 216, 167, 217, 134, 217, 138, 216, 167] => {
                lookup_1519()
            }
            [217, 133, 217, 136, 217, 130, 216, 185] => lookup_1520(),
            [217, 135, 217, 133, 216, 177, 216, 167, 217, 135] => lookup_1521(),
            [217, 190, 216, 167, 217, 131, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_1522(),
            [217, 190, 216, 167, 218, 169, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_1523(),
            [218, 128, 216, 167, 216, 177, 216, 170] => lookup_1524(),
            [224, 164, 149, 224, 165, 137, 224, 164, 174] => lookup_1525(),
            [224, 164, 168, 224, 165, 135, 224, 164, 159] => lookup_1526(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164] => lookup_1527(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164, 224, 164, 174, 224, 165, 141] => {
                lookup_1528()
            }
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 165, 139, 224, 164, 164] => {
                lookup_1529()
            }
            [224, 164, 184, 224, 164, 130, 224, 164, 151, 224, 164, 160, 224, 164, 168] => {
                lookup_1530()
            }
            [224, 166, 172, 224, 166, 190, 224, 166, 130, 224, 166, 178, 224, 166, 190] => {
                lookup_1531()
            }
            [224, 166, 173, 224, 166, 190, 224, 166, 176, 224, 166, 164] => lookup_1532(),
            [224, 166, 173, 224, 166, 190, 224, 167, 176, 224, 166, 164] => lookup_1533(),
            [224, 168, 173, 224, 168, 190, 224, 168, 176, 224, 168, 164] => lookup_1534(),
            [224, 170, 173, 224, 170, 190, 224, 170, 176, 224, 170, 164] => lookup_1535(),
            [224, 172, 173, 224, 172, 190, 224, 172, 176, 224, 172, 164] => lookup_1536(),
            [224, 174, 135, 224, 174, 168, 224, 175, 141, 224, 174, 164, 224, 174, 191, 224, 174, 175, 224, 174, 190] => {
                lookup_1537()
            }
            [224, 174, 135, 224, 174, 178, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 175, 136] => {
                lookup_1538()
            }
            [224, 174, 154, 224, 174, 191, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 174, 170, 224, 175, 141, 224, 174, 170, 224, 175, 130, 224, 174, 176, 224, 175, 141] => {
                lookup_1539()
            }
            [224, 176, 173, 224, 176, 190, 224, 176, 176, 224, 176, 164, 224, 177, 141] => {
                lookup_1540()
            }
            [224, 178, 173, 224, 178, 190, 224, 178, 176, 224, 178, 164] => lookup_1541(),
            [224, 180, 173, 224, 180, 190, 224, 180, 176, 224, 180, 164, 224, 180, 130] => {
                lookup_1542()
            }
            [224, 182, 189, 224, 182, 130, 224, 182, 154, 224, 183, 143] => lookup_1543(),
            [224, 184, 132, 224, 184, 173, 224, 184, 161] => lookup_1544(),
            [224, 185, 132, 224, 184, 151, 224, 184, 162] => lookup_1545(labels),
            [224, 186, 165, 224, 186, 178, 224, 186, 167] => lookup_1546(),
            [225, 131, 146, 225, 131, 148] => lookup_1547(),
            [227, 129, 191, 227, 130, 147, 227, 129, 170] => lookup_1548(),
            [227, 130, 162, 227, 131, 158, 227, 130, 190, 227, 131, 179] => lookup_1549(),
            [227, 130, 175, 227, 131, 169, 227, 130, 166, 227, 131, 137] => lookup_1550(),
            [227, 130, 176, 227, 131, 188, 227, 130, 176, 227, 131, 171] => lookup_1551(),
            [227, 130, 179, 227, 131, 160] => lookup_1552(),
            [227, 130, 185, 227, 131, 136, 227, 130, 162] => lookup_1553(),
            [227, 130, 187, 227, 131, 188, 227, 131, 171] => lookup_1554(),
            [227, 131, 149, 227, 130, 161, 227, 131, 131, 227, 130, 183, 227, 131, 167, 227, 131, 179] => {
                lookup_1555()
            }
            [227, 131, 157, 227, 130, 164, 227, 131, 179, 227, 131, 136] => lookup_1556(),
            [228, 184, 150, 231, 149, 140] => lookup_1557(),
            [228, 184, 173, 228, 191, 161] => lookup_1558(),
            [228, 184, 173, 229, 155, 189] => lookup_1559(),
            [228, 184, 173, 229, 156, 139] => lookup_1560(),
            [228, 184, 173, 230, 150, 135, 231, 189, 145] => lookup_1561(),
            [228, 186, 154, 233, 169, 172, 233, 128, 138] => lookup_1562(),
            [228, 188, 129, 228, 184, 154] => lookup_1563(),
            [228, 189, 155, 229, 177, 177] => lookup_1564(),
            [228, 191, 161, 230, 129, 175] => lookup_1565(),
            [229, 129, 165, 229, 186, 183] => lookup_1566(),
            [229, 133, 171, 229, 141, 166] => lookup_1567(),
            [229, 133, 172, 229, 143, 184] => lookup_1568(),
            [229, 133, 172, 231, 155, 138] => lookup_1569(),
            [229, 143, 176, 230, 185, 190] => lookup_1570(),
            [229, 143, 176, 231, 129, 163] => lookup_1571(),
            [229, 149, 134, 229, 159, 142] => lookup_1572(),
            [229, 149, 134, 229, 186, 151] => lookup_1573(),
            [229, 149, 134, 230, 160, 135] => lookup_1574(),
            [229, 152, 137, 233, 135, 140] => lookup_1575(),
            [229, 152, 137, 233, 135, 140, 229, 164, 167, 233, 133, 146, 229, 186, 151] => {
                lookup_1576()
            }
            [229, 156, 168, 231, 186, 191] => lookup_1577(),
            [229, 164, 167, 230, 139, 191] => lookup_1578(),
            [229, 164, 169, 228, 184, 187, 230, 149, 153] => lookup_1579(),
            [229, 168, 177, 228, 185, 144] => lookup_1580(),
            [229, 174, 182, 233, 155, 187] => lookup_1581(),
            [229, 185, 191, 228, 184, 156] => lookup_1582(),
            [229, 190, 174, 229, 141, 154] => lookup_1583(),
            [230, 133, 136, 229, 150, 132] => lookup_1584(),
            [230, 136, 145, 231, 136, 177, 228, 189, 160] => lookup_1585(),
            [230, 137, 139, 230, 156, 186] => lookup_1586(),
            [230, 139, 155, 232, 129, 152] => lookup_1587(),
            [230, 148, 191, 229, 138, 161] => lookup_1588(),
            [230, 148, 191, 229, 186, 156] => lookup_1589(),
            [230, 150, 176, 229, 138, 160, 229, 157, 161] => lookup_1590(),
            [230, 150, 176, 233, 151, 187] => lookup_1591(),
            [230, 151, 182, 229, 176, 154] => lookup_1592(),
            [230, 155, 184, 231, 177, 141] => lookup_1593(),
            [230, 156, 186, 230, 158, 132] => lookup_1594(),
            [230, 183, 161, 233, 169, 172, 233, 148, 161] => lookup_1595(),
            [230, 184, 184, 230, 136, 143] => lookup_1596(),
            [230, 190, 179, 233, 150, 128] => lookup_1597(),
            [230, 190, 179, 233, 151, 168] => lookup_1598(),
            [231, 130, 185, 231, 156, 139] => lookup_1599(),
            [231, 167, 187, 229, 138, 168] => lookup_1600(),
            [231, 187, 132, 231, 187, 135, 230, 156, 186, 230, 158, 132] => lookup_1601(),
            [231, 189, 145, 229, 157, 128] => lookup_1602(),
            [231, 189, 145, 229, 186, 151] => lookup_1603(),
            [231, 189, 145, 231, 171, 153] => lookup_1604(),
            [231, 189, 145, 231, 187, 156] => lookup_1605(),
            [232, 129, 148, 233, 128, 154] => lookup_1606(),
            [232, 135, 186, 231, 129, 163] => lookup_1607(),
            [232, 176, 183, 230, 173, 140] => lookup_1608(),
            [232, 180, 173, 231, 137, 169] => lookup_1609(),
            [233, 128, 154, 232, 178, 169] => lookup_1610(),
            [233, 155, 134, 229, 155, 162] => lookup_1611(),
            [233, 155, 187, 232, 168, 138, 231, 155, 136, 231, 167, 145] => lookup_1612(),
            [233, 163, 158, 229, 136, 169, 230, 181, 166] => lookup_1613(),
            [233, 163, 159, 229, 147, 129] => lookup_1614(),
            [233, 164, 144, 229, 142, 133] => lookup_1615(),
            [233, 166, 153, 230, 160, 188, 233, 135, 140, 230, 139, 137] => lookup_1616(),
            [233, 166, 153, 230, 184, 175] => lookup_1617(labels),
            [235, 139, 183, 235, 132, 183] => lookup_1618(),
            [235, 139, 183, 236, 187, 180] => lookup_1619(),
            [236, 130, 188, 236, 132, 177] => lookup_1620(),
            [237, 149, 156, 234, 181, 173] => lookup_1621(),
            wild => {
                info.len = wild.len();
                info
            }
        },
        None => info,
    }
}
#[inline]
fn lookup_0() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_2() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_3() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_6() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_7() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_8() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_9_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_9_0(acc),
            [100, 114, 114] => lookup_9_1(acc),
            [101, 100, 117] => lookup_9_2(acc),
            [103, 111, 118] => lookup_9_3(acc),
            [109, 105, 108] => lookup_9_4(acc),
            [110, 101, 116] => lookup_9_5(acc),
            [111, 114, 103] => lookup_9_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_10<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102, 102, 105, 99, 105, 97, 108] => lookup_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_11() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_12() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_13() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_14() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_16<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_16_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_17() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_18() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_19_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_19_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_19_1(acc),
            [99, 111] => lookup_19_2(acc),
            [103, 111, 118] => lookup_19_3(acc),
            [109, 105, 108] => lookup_19_4(acc),
            [110, 101, 116] => lookup_19_5(acc),
            [111, 114, 103] => lookup_19_6(acc),
            [115, 99, 104] => lookup_19_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_20() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_21<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 105, 110, 118, 101, 115, 116, 105, 103, 97, 116, 105, 111, 110] => {
                lookup_21_0(acc)
            }
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 112, 114, 101, 118, 101, 110, 116, 105, 111, 110] => {
                lookup_21_1(acc)
            }
            [97, 101, 114, 111, 98, 97, 116, 105, 99] => lookup_21_2(acc),
            [97, 101, 114, 111, 99, 108, 117, 98] => lookup_21_3(acc),
            [97, 101, 114, 111, 100, 114, 111, 109, 101] => lookup_21_4(acc),
            [97, 103, 101, 110, 116, 115] => lookup_21_5(acc),
            [97, 105, 114, 45, 115, 117, 114, 118, 101, 105, 108, 108, 97, 110, 99, 101] => {
                lookup_21_6(acc)
            }
            [97, 105, 114, 45, 116, 114, 97, 102, 102, 105, 99, 45, 99, 111, 110, 116, 114, 111, 108] => {
                lookup_21_7(acc)
            }
            [97, 105, 114, 99, 114, 97, 102, 116] => lookup_21_8(acc),
            [97, 105, 114, 108, 105, 110, 101] => lookup_21_9(acc),
            [97, 105, 114, 112, 111, 114, 116] => lookup_21_10(acc),
            [97, 105, 114, 116, 114, 97, 102, 102, 105, 99] => lookup_21_11(acc),
            [97, 109, 98, 117, 108, 97, 110, 99, 101] => lookup_21_12(acc),
            [97, 109, 117, 115, 101, 109, 101, 110, 116] => lookup_21_13(acc),
            [97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => lookup_21_14(acc),
            [97, 117, 116, 104, 111, 114] => lookup_21_15(acc),
            [98, 97, 108, 108, 111, 111, 110, 105, 110, 103] => lookup_21_16(acc),
            [98, 114, 111, 107, 101, 114] => lookup_21_17(acc),
            [99, 97, 97] => lookup_21_18(acc),
            [99, 97, 114, 103, 111] => lookup_21_19(acc),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_21_20(acc),
            [99, 101, 114, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110] => lookup_21_21(acc),
            [99, 104, 97, 109, 112, 105, 111, 110, 115, 104, 105, 112] => lookup_21_22(acc),
            [99, 104, 97, 114, 116, 101, 114] => lookup_21_23(acc),
            [99, 105, 118, 105, 108, 97, 118, 105, 97, 116, 105, 111, 110] => lookup_21_24(acc),
            [99, 108, 117, 98] => lookup_21_25(acc),
            [99, 111, 110, 102, 101, 114, 101, 110, 99, 101] => lookup_21_26(acc),
            [99, 111, 110, 115, 117, 108, 116, 97, 110, 116] => lookup_21_27(acc),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_21_28(acc),
            [99, 111, 110, 116, 114, 111, 108] => lookup_21_29(acc),
            [99, 111, 117, 110, 99, 105, 108] => lookup_21_30(acc),
            [99, 114, 101, 119] => lookup_21_31(acc),
            [100, 101, 115, 105, 103, 110] => lookup_21_32(acc),
            [100, 103, 99, 97] => lookup_21_33(acc),
            [101, 100, 117, 99, 97, 116, 111, 114] => lookup_21_34(acc),
            [101, 109, 101, 114, 103, 101, 110, 99, 121] => lookup_21_35(acc),
            [101, 110, 103, 105, 110, 101] => lookup_21_36(acc),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_21_37(acc),
            [101, 110, 116, 101, 114, 116, 97, 105, 110, 109, 101, 110, 116] => lookup_21_38(acc),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_21_39(acc),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_21_40(acc),
            [101, 120, 112, 114, 101, 115, 115] => lookup_21_41(acc),
            [102, 101, 100, 101, 114, 97, 116, 105, 111, 110] => lookup_21_42(acc),
            [102, 108, 105, 103, 104, 116] => lookup_21_43(acc),
            [102, 117, 101, 108] => lookup_21_44(acc),
            [103, 108, 105, 100, 105, 110, 103] => lookup_21_45(acc),
            [103, 111, 118, 101, 114, 110, 109, 101, 110, 116] => lookup_21_46(acc),
            [103, 114, 111, 117, 110, 100, 104, 97, 110, 100, 108, 105, 110, 103] => {
                lookup_21_47(acc)
            }
            [103, 114, 111, 117, 112] => lookup_21_48(acc),
            [104, 97, 110, 103, 103, 108, 105, 100, 105, 110, 103] => lookup_21_49(acc),
            [104, 111, 109, 101, 98, 117, 105, 108, 116] => lookup_21_50(acc),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_21_51(acc),
            [106, 111, 117, 114, 110, 97, 108] => lookup_21_52(acc),
            [106, 111, 117, 114, 110, 97, 108, 105, 115, 116] => lookup_21_53(acc),
            [108, 101, 97, 115, 105, 110, 103] => lookup_21_54(acc),
            [108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_21_55(acc),
            [109, 97, 103, 97, 122, 105, 110, 101] => lookup_21_56(acc),
            [109, 97, 105, 110, 116, 101, 110, 97, 110, 99, 101] => lookup_21_57(acc),
            [109, 101, 100, 105, 97] => lookup_21_58(acc),
            [109, 105, 99, 114, 111, 108, 105, 103, 104, 116] => lookup_21_59(acc),
            [109, 111, 100, 101, 108, 108, 105, 110, 103] => lookup_21_60(acc),
            [110, 97, 118, 105, 103, 97, 116, 105, 111, 110] => lookup_21_61(acc),
            [112, 97, 114, 97, 99, 104, 117, 116, 105, 110, 103] => lookup_21_62(acc),
            [112, 97, 114, 97, 103, 108, 105, 100, 105, 110, 103] => lookup_21_63(acc),
            [112, 97, 115, 115, 101, 110, 103, 101, 114, 45, 97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => {
                lookup_21_64(acc)
            }
            [112, 105, 108, 111, 116] => lookup_21_65(acc),
            [112, 114, 101, 115, 115] => lookup_21_66(acc),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110] => lookup_21_67(acc),
            [114, 101, 99, 114, 101, 97, 116, 105, 111, 110] => lookup_21_68(acc),
            [114, 101, 112, 98, 111, 100, 121] => lookup_21_69(acc),
            [114, 101, 115] => lookup_21_70(acc),
            [114, 101, 115, 101, 97, 114, 99, 104] => lookup_21_71(acc),
            [114, 111, 116, 111, 114, 99, 114, 97, 102, 116] => lookup_21_72(acc),
            [115, 97, 102, 101, 116, 121] => lookup_21_73(acc),
            [115, 99, 105, 101, 110, 116, 105, 115, 116] => lookup_21_74(acc),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_21_75(acc),
            [115, 104, 111, 119] => lookup_21_76(acc),
            [115, 107, 121, 100, 105, 118, 105, 110, 103] => lookup_21_77(acc),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_21_78(acc),
            [115, 116, 117, 100, 101, 110, 116] => lookup_21_79(acc),
            [116, 114, 97, 100, 101, 114] => lookup_21_80(acc),
            [116, 114, 97, 100, 105, 110, 103] => lookup_21_81(acc),
            [116, 114, 97, 105, 110, 101, 114] => lookup_21_82(acc),
            [117, 110, 105, 111, 110] => lookup_21_83(acc),
            [119, 111, 114, 107, 105, 110, 103, 103, 114, 111, 117, 112] => lookup_21_84(acc),
            [119, 111, 114, 107, 115] => lookup_21_85(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_22() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_23<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_23_0(acc),
            [101, 100, 117] => lookup_23_1(acc),
            [103, 111, 118] => lookup_23_2(acc),
            [110, 101, 116] => lookup_23_3(acc),
            [111, 114, 103] => lookup_23_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_24() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_25() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_26_0(acc),
            [99, 111, 109] => lookup_26_1(acc),
            [110, 101, 116] => lookup_26_2(acc),
            [110, 111, 109] => lookup_26_3(acc),
            [111, 114, 103] => lookup_26_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_27() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_28() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_29<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_29_0(acc),
            [110, 101, 116] => lookup_29_1(acc),
            [111, 102, 102] => lookup_29_2(acc),
            [111, 114, 103] => lookup_29_3(acc),
            [117, 119, 117] => lookup_29_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_30() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_31() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_32() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_33() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_34() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_35_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_35_0(acc),
            [99, 111, 109] => lookup_35_1(acc),
            [101, 100, 117] => lookup_35_2(acc),
            [103, 111, 118] => lookup_35_3(acc),
            [109, 105, 108] => lookup_35_4(acc),
            [110, 101, 116] => lookup_35_5(acc),
            [111, 114, 103] => lookup_35_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_36() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_37() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_39() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_40() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_41() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_42() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_43_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_43_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_43_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_43<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_43_0(acc),
            [99, 111] => lookup_43_1(acc),
            [99, 111, 109] => lookup_43_2(acc),
            [99, 111, 109, 109, 117, 110, 101] => lookup_43_3(acc),
            [110, 101, 107, 111] => lookup_43_4(acc),
            [110, 101, 116] => lookup_43_5(acc),
            [110, 121, 97, 97] => lookup_43_6(acc),
            [111, 114, 103] => lookup_43_7(acc),
            [114, 97, 100, 105, 111] => lookup_43_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_44() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_45() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_46() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_47() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_48() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_49() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_50() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_52() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_54() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_55_0(acc),
            [101, 100] => lookup_55_1(acc),
            [103, 118] => lookup_55_2(acc),
            [105, 116] => lookup_55_3(acc),
            [111, 103] => lookup_55_4(acc),
            [112, 98] => lookup_55_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_56() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_58_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_58_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_58_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_58_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_58_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_19_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_58_19_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_58_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_23_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_58_23_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_58_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_24<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 105, 118, 97, 116, 101, 108, 105, 110, 107] => lookup_58_24_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_58_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_29_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_29<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_58_29_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_58_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_58<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 103, 101, 116] => lookup_58_0(info, labels, acc),
            [98, 111, 111, 107, 111, 110, 108, 105, 110, 101] => lookup_58_1(acc),
            [99, 108, 101, 114, 107] => lookup_58_2(acc),
            [99, 108, 101, 114, 107, 115, 116, 97, 103, 101] => lookup_58_3(acc),
            [100, 101, 116, 97] => lookup_58_4(acc),
            [100, 101, 118, 101, 108, 111, 112, 101, 114] => lookup_58_5(info, labels, acc),
            [101, 97, 115, 121, 112, 97, 110, 101, 108] => lookup_58_6(acc),
            [101, 100, 103, 101, 99, 111, 109, 112, 117, 116, 101] => lookup_58_7(acc),
            [101, 110, 99, 114] => lookup_58_8(acc),
            [102, 105, 114, 101, 119, 101, 98] => lookup_58_9(acc),
            [102, 108, 117, 116, 116, 101, 114, 102, 108, 111, 119] => lookup_58_10(acc),
            [102, 114, 97, 109, 101, 114] => lookup_58_11(acc),
            [104, 97, 115, 117, 114, 97] => lookup_58_12(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_58_13(acc),
            [109, 101, 115, 115, 101, 114, 108, 105] => lookup_58_14(acc),
            [110, 101, 116, 108, 105, 102, 121] => lookup_58_15(acc),
            [110, 103, 114, 111, 107] => lookup_58_16(acc),
            [110, 103, 114, 111, 107, 45, 102, 114, 101, 101] => lookup_58_17(acc),
            [110, 111, 111, 112] => lookup_58_18(acc),
            [110, 111, 114, 116, 104, 102, 108, 97, 110, 107] => lookup_58_19(info, labels, acc),
            [111, 110, 100, 105, 103, 105, 116, 97, 108, 111, 99, 101, 97, 110] => {
                lookup_58_20(acc)
            }
            [111, 110, 102, 108, 97, 115, 104, 100, 114, 105, 118, 101] => lookup_58_21(acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 48] => lookup_58_22(acc),
            [114, 117, 110] => lookup_58_23(info, labels, acc),
            [115, 110, 111, 119, 102, 108, 97, 107, 101] => lookup_58_24(labels, acc),
            [115, 116, 111, 114, 105, 112, 114, 101, 115, 115] => lookup_58_25(acc),
            [115, 116, 114, 101, 97, 109, 108, 105, 116] => lookup_58_26(acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_58_27(acc),
            [116, 121, 112, 101, 100, 114, 101, 97, 109] => lookup_58_28(acc),
            [117, 112, 115, 117, 110] => lookup_58_29(info, labels, acc),
            [118, 101, 114, 99, 101, 108] => lookup_58_30(acc),
            [119, 101, 98] => lookup_58_31(acc),
            [119, 110, 101, 120, 116] => lookup_58_32(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_59() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_60() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_61() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_62_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_62_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_62_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116] => lookup_62_0(acc),
            [99, 111, 109] => lookup_62_1(labels, acc),
            [99, 111, 111, 112] => lookup_62_2(acc),
            [101, 100, 117] => lookup_62_3(acc),
            [103, 111, 98] => lookup_62_4(acc),
            [103, 111, 118] => lookup_62_5(acc),
            [105, 110, 116] => lookup_62_6(acc),
            [109, 105, 108] => lookup_62_7(acc),
            [109, 117, 115, 105, 99, 97] => lookup_62_8(acc),
            [109, 117, 116, 117, 97, 108] => lookup_62_9(acc),
            [110, 101, 116] => lookup_62_10(acc),
            [111, 114, 103] => lookup_62_11(acc),
            [115, 101, 110, 97, 115, 97] => lookup_62_12(acc),
            [116, 117, 114] => lookup_62_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_63() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_65() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_66() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 49, 54, 52] => lookup_67_0(acc),
            [105, 110, 45, 97, 100, 100, 114] => lookup_67_1(acc),
            [105, 112, 54] => lookup_67_2(acc),
            [105, 114, 105, 115] => lookup_67_3(acc),
            [117, 114, 105] => lookup_67_4(acc),
            [117, 114, 110] => lookup_67_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_68() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_69() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_70<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_70_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_71() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_72_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_72<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_72_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_73() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_74_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_74_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 104] => lookup_74_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_74_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_74_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_74_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [119, 105, 101, 110] => lookup_74_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_74_8_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_8_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_8_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_74_8_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_74_8_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_8_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_74_8_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_74_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [101, 120] => lookup_74_8_1(info, labels, acc),
            [105, 110] => lookup_74_8_2(info, labels, acc),
            wild => lookup_74_8_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_74_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_74_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_74_16_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_16_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_74_16_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_74_16_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74_16_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_74_16_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_74_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 120] => lookup_74_16_0(info, labels, acc),
            [107, 117, 110, 100, 101, 110] => lookup_74_16_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_74_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 101, 105, 116, 101] => lookup_74_0(acc),
            [49, 50, 104, 112] => lookup_74_1(acc),
            [50, 105, 120] => lookup_74_2(acc),
            [52, 108, 105, 109, 97] => lookup_74_3(acc),
            [97, 99] => lookup_74_4(labels, acc),
            [98, 105, 122] => lookup_74_5(acc),
            [99, 111] => lookup_74_6(labels, acc),
            [102, 117, 110, 107, 102, 101, 117, 101, 114] => lookup_74_7(info, labels, acc),
            [102, 117, 116, 117, 114, 101, 99, 109, 115] => lookup_74_8(info, labels, acc),
            [102, 117, 116, 117, 114, 101, 104, 111, 115, 116, 105, 110, 103] => lookup_74_9(acc),
            [102, 117, 116, 117, 114, 101, 109, 97, 105, 108, 105, 110, 103] => lookup_74_10(acc),
            [103, 118] => lookup_74_11(acc),
            [105, 110, 102, 111] => lookup_74_12(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_74_13(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_74_14(acc),
            [111, 114] => lookup_74_15(acc),
            [111, 114, 116, 115, 105, 110, 102, 111] => lookup_74_16(info, labels, acc),
            [112, 114, 105, 118] => lookup_74_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_75() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_76() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_2_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_2_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 108] => lookup_77_2_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_77_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_77_2_0(acc),
            [99, 108, 111, 117, 100, 108, 101, 116, 115] => lookup_77_2_1(info, labels, acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_77_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104, 111, 111, 108, 115] => lookup_77_4_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77_4_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 116] => lookup_77_4_0(acc),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_77_4_1(acc),
            [110, 115, 119] => lookup_77_4_2(labels, acc),
            [110, 116] => lookup_77_4_3(acc),
            [113, 108, 100] => lookup_77_4_4(acc),
            [115, 97] => lookup_77_4_5(acc),
            [116, 97, 115] => lookup_77_4_6(acc),
            [118, 105, 99] => lookup_77_4_7(acc),
            [119, 97] => lookup_77_4_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_5_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_5_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [113, 108, 100] => lookup_77_5_0(acc),
            [115, 97] => lookup_77_5_1(acc),
            [116, 97, 115] => lookup_77_5_2(acc),
            [118, 105, 99] => lookup_77_5_3(acc),
            [119, 97] => lookup_77_5_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_77<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 116] => lookup_77_0(acc),
            [97, 115, 110] => lookup_77_1(acc),
            [99, 111, 109] => lookup_77_2(labels, acc),
            [99, 111, 110, 102] => lookup_77_3(acc),
            [101, 100, 117] => lookup_77_4(labels, acc),
            [103, 111, 118] => lookup_77_5(labels, acc),
            [105, 100] => lookup_77_6(acc),
            [105, 110, 102, 111] => lookup_77_7(acc),
            [110, 101, 116] => lookup_77_8(acc),
            [110, 115, 119] => lookup_77_9(acc),
            [110, 116] => lookup_77_10(acc),
            [111, 114, 103] => lookup_77_11(acc),
            [111, 122] => lookup_77_12(acc),
            [113, 108, 100] => lookup_77_13(acc),
            [115, 97] => lookup_77_14(acc),
            [116, 97, 115] => lookup_77_15(acc),
            [118, 105, 99] => lookup_77_16(acc),
            [119, 97] => lookup_77_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_78() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_80() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_81() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_83() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_84() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_85() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_86() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_87_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_87<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_87_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_0_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_88_0_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_88_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 105, 118, 97, 116, 101] => lookup_88_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_0_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_1_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_2_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_2_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_3_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_4_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_4_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_5_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_5_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_7_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_7_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_8_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_8_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_9_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_9_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_11_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_11_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_88_1_11_1(acc)
            }
            [115, 116, 117, 100, 105, 111] => lookup_88_1_11_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_12_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_12_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_88_1_12_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_13_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_13_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_14_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_15_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_15_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_16_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_16_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_16_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_17_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_18_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_18_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_18_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_19_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_19_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_20_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_20_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_21_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_21_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_22_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_22_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_23_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_23_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_24_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_24<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_24_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_24_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_25_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_25<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_25_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_88_1_25_1(acc)
            }
            [115, 116, 117, 100, 105, 111] => lookup_88_1_25_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_26_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_26_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_26_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_26<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_26_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_88_1_26_1(acc)
            }
            [115, 116, 117, 100, 105, 111] => lookup_88_1_26_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_27_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_27_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_27_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_27<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_27_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_88_1_27_1(acc)
            }
            [115, 116, 117, 100, 105, 111] => lookup_88_1_27_2(acc),
            [115, 116, 117, 100, 105, 111, 45, 102, 105, 112, 115] => lookup_88_1_27_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_28_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_28_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_28_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_28<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_28_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_88_1_28_1(acc)
            }
            [115, 116, 117, 100, 105, 111] => lookup_88_1_28_2(acc),
            [115, 116, 117, 100, 105, 111, 45, 102, 105, 112, 115] => lookup_88_1_28_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_29<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_29_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_88_1_29_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_30_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_30_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_88_1_30<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_88_1_30_0(acc),
            [110, 111, 116, 101, 98, 111, 111, 107, 45, 102, 105, 112, 115] => {
                lookup_88_1_30_1(acc)
            }
            [115, 116, 117, 100, 105, 111] => lookup_88_1_30_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 102, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_88_1_0(info, labels, acc),
            [97, 112, 45, 101, 97, 115, 116, 45, 49] => lookup_88_1_1(info, labels, acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_88_1_2(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_88_1_3(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_88_1_4(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_88_1_5(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 50] => lookup_88_1_6(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_88_1_7(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_88_1_8(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_88_1_9(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 52] => {
                lookup_88_1_10(info, labels, acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_88_1_11(info, labels, acc)
            }
            [99, 97, 45, 119, 101, 115, 116, 45, 49] => lookup_88_1_12(info, labels, acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_88_1_13(info, labels, acc)
            }
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 50] => {
                lookup_88_1_14(info, labels, acc)
            }
            [101, 117, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_88_1_15(info, labels, acc),
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_88_1_16(info, labels, acc),
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 50] => lookup_88_1_17(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_88_1_18(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_88_1_19(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_88_1_20(info, labels, acc),
            [105, 108, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_88_1_21(info, labels, acc)
            }
            [109, 101, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_88_1_22(info, labels, acc)
            }
            [109, 101, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_88_1_23(info, labels, acc),
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_88_1_24(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_88_1_25(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_88_1_26(info, labels, acc),
            [117, 115, 45, 103, 111, 118, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_88_1_27(info, labels, acc)
            }
            [117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_88_1_28(info, labels, acc)
            }
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_88_1_29(info, labels, acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_88_1_30(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_88<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 101, 112, 111, 115, 116] => lookup_88_0(info, labels, acc),
            [115, 97, 103, 101, 109, 97, 107, 101, 114] => lookup_88_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_89_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_89<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101] => lookup_89_0(acc),
            [99, 97, 116] => lookup_89_1(acc),
            [101, 115] => lookup_89_2(acc),
            [101, 117] => lookup_89_3(acc),
            [103, 103] => lookup_89_4(acc),
            [109, 99] => lookup_89_5(acc),
            [117, 115] => lookup_89_6(acc),
            [120, 121] => lookup_89_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_90() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_91_0(acc),
            [99, 111, 109] => lookup_91_1(acc),
            [101, 100, 117] => lookup_91_2(acc),
            [103, 111, 118] => lookup_91_3(acc),
            [105, 110, 102, 111] => lookup_91_4(acc),
            [105, 110, 116] => lookup_91_5(acc),
            [109, 105, 108] => lookup_91_6(acc),
            [110, 97, 109, 101] => lookup_91_7(acc),
            [110, 101, 116] => lookup_91_8(acc),
            [111, 114, 103] => lookup_91_9(acc),
            [112, 112] => lookup_91_10(acc),
            [112, 114, 111] => lookup_91_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_92() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_93_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_93<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_93_0(acc),
            [99, 111, 109] => lookup_93_1(acc),
            [101, 100, 117] => lookup_93_2(acc),
            [103, 111, 118] => lookup_93_3(acc),
            [109, 105, 108] => lookup_93_4(acc),
            [110, 101, 116] => lookup_93_5(acc),
            [111, 114, 103] => lookup_93_6(acc),
            [114, 115] => lookup_93_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_94() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_95() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_96() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_97() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_99() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_100() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_101() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_102() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_103() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_104() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_106_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_106<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 117, 115] => lookup_106_0(acc),
            [110, 122] => lookup_106_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_107() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_109_0(acc),
            [99, 111] => lookup_109_1(acc),
            [99, 111, 109] => lookup_109_2(acc),
            [101, 100, 117] => lookup_109_3(acc),
            [103, 111, 118] => lookup_109_4(acc),
            [105, 110, 102, 111] => lookup_109_5(acc),
            [110, 101, 116] => lookup_109_6(acc),
            [111, 114, 103] => lookup_109_7(acc),
            [115, 116, 111, 114, 101] => lookup_109_8(acc),
            [116, 118] => lookup_109_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_110() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_111() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_113() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_114() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_115_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_115<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_115_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_116_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_116_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_116_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_116_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_116_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_116_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_116_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_116_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 122, 112, 114, 111, 120, 121] => lookup_116_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_116_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_116_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_116_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_116_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_116_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_116<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 105, 116, 101] => lookup_116_0(acc),
            [97, 99] => lookup_116_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_116_2(acc),
            [105, 110, 116, 101, 114, 104, 111, 115, 116, 115, 111, 108, 117, 116, 105, 111, 110, 115] => {
                lookup_116_3(info, labels, acc)
            }
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_116_4(info, labels, acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_116_5(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_116_6(info, labels, acc),
            [119, 101, 98, 104, 111, 115, 116, 105, 110, 103] => lookup_116_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_117() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_118() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_119() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_120() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_121() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_123() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_125_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_126_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_126_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_126_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48] => lookup_126_0(acc),
            [49] => lookup_126_1(acc),
            [50] => lookup_126_2(acc),
            [51] => lookup_126_3(acc),
            [52] => lookup_126_4(acc),
            [53] => lookup_126_5(acc),
            [54] => lookup_126_6(acc),
            [55] => lookup_126_7(acc),
            [56] => lookup_126_8(acc),
            [57] => lookup_126_9(acc),
            [97] => lookup_126_10(acc),
            [98] => lookup_126_11(acc),
            [98, 97, 114, 115, 121] => lookup_126_12(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_126_13(acc),
            [99] => lookup_126_14(acc),
            [100] => lookup_126_15(acc),
            [101] => lookup_126_16(acc),
            [102] => lookup_126_17(acc),
            [103] => lookup_126_18(acc),
            [104] => lookup_126_19(acc),
            [105] => lookup_126_20(acc),
            [106] => lookup_126_21(acc),
            [107] => lookup_126_22(acc),
            [108] => lookup_126_23(acc),
            [109] => lookup_126_24(acc),
            [110] => lookup_126_25(acc),
            [111] => lookup_126_26(acc),
            [112] => lookup_126_27(acc),
            [113] => lookup_126_28(acc),
            [114] => lookup_126_29(acc),
            [115] => lookup_126_30(acc),
            [116] => lookup_126_31(acc),
            [117] => lookup_126_32(acc),
            [118] => lookup_126_33(acc),
            [119] => lookup_126_34(acc),
            [120] => lookup_126_35(acc),
            [121] => lookup_126_36(acc),
            [122] => lookup_126_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_127_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_127_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_127_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_127_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_127_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_127<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_127_0(acc),
            [101, 100, 117] => lookup_127_1(acc),
            [103, 111, 118] => lookup_127_2(acc),
            [110, 101, 116] => lookup_127_3(acc),
            [111, 114, 103] => lookup_127_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_128() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_129_0(acc),
            [99, 111, 109] => lookup_129_1(acc),
            [101, 100, 117] => lookup_129_2(acc),
            [111, 114] => lookup_129_3(acc),
            [111, 114, 103] => lookup_129_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_130() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_131() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_133() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_134() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_135() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_136<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 116, 105, 118, 101, 116, 114, 97, 105, 108] => lookup_136_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_136_1(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_136_2(acc),
            [100, 121, 110, 100, 110, 115] => lookup_136_3(acc),
            [102, 111, 114, 45, 98, 101, 116, 116, 101, 114] => lookup_136_4(acc),
            [102, 111, 114, 45, 109, 111, 114, 101] => lookup_136_5(acc),
            [102, 111, 114, 45, 115, 111, 109, 101] => lookup_136_6(acc),
            [102, 111, 114, 45, 116, 104, 101] => lookup_136_7(acc),
            [106, 111, 122, 105] => lookup_136_8(acc),
            [109, 109, 97, 102, 97, 110] => lookup_136_9(acc),
            [109, 121, 102, 116, 112] => lookup_136_10(acc),
            [110, 111, 45, 105, 112] => lookup_136_11(acc),
            [111, 114, 120] => lookup_136_12(acc),
            [115, 101, 108, 102, 105, 112] => lookup_136_13(acc),
            [119, 101, 98, 104, 111, 112] => lookup_136_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_137_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_137_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 102, 114, 105, 99, 97] => lookup_137_0(acc),
            [97, 103, 114, 111] => lookup_137_1(acc),
            [97, 114, 99, 104, 105, 116, 101, 99, 116, 101, 115] => lookup_137_2(acc),
            [97, 115, 115, 117, 114] => lookup_137_3(acc),
            [97, 118, 111, 99, 97, 116, 115] => lookup_137_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_137_5(acc),
            [99, 111] => lookup_137_6(acc),
            [99, 111, 109] => lookup_137_7(acc),
            [101, 99, 111] => lookup_137_8(acc),
            [101, 99, 111, 110, 111] => lookup_137_9(acc),
            [101, 100, 117] => lookup_137_10(acc),
            [105, 110, 102, 111] => lookup_137_11(acc),
            [108, 111, 105, 115, 105, 114, 115] => lookup_137_12(acc),
            [109, 111, 110, 101, 121] => lookup_137_13(acc),
            [110, 101, 116] => lookup_137_14(acc),
            [111, 114, 103] => lookup_137_15(acc),
            [111, 116, 101] => lookup_137_16(acc),
            [114, 101, 115, 116, 97, 117, 114, 97, 110, 116] => lookup_137_17(acc),
            [114, 101, 115, 116, 111] => lookup_137_18(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_137_19(acc),
            [117, 110, 105, 118] => lookup_137_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_138() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_139() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_141() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_142() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_143() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_144_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_144_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_144_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_144_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_144_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_144<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_144_0(acc),
            [101, 100, 117] => lookup_144_1(acc),
            [103, 111, 118] => lookup_144_2(acc),
            [110, 101, 116] => lookup_144_3(acc),
            [111, 114, 103] => lookup_144_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_145() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_146() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_147_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_147_0(acc),
            [99, 111, 109] => lookup_147_1(acc),
            [101, 100, 117] => lookup_147_2(acc),
            [103, 111, 118] => lookup_147_3(acc),
            [110, 101, 116] => lookup_147_4(acc),
            [111, 114, 103] => lookup_147_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_148() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 97, 100, 101, 109, 105, 97] => lookup_149_0(acc),
            [97, 103, 114, 111] => lookup_149_1(acc),
            [97, 114, 116, 101] => lookup_149_2(acc),
            [98, 108, 111, 103] => lookup_149_3(acc),
            [98, 111, 108, 105, 118, 105, 97] => lookup_149_4(acc),
            [99, 105, 101, 110, 99, 105, 97] => lookup_149_5(acc),
            [99, 111, 109] => lookup_149_6(acc),
            [99, 111, 111, 112, 101, 114, 97, 116, 105, 118, 97] => lookup_149_7(acc),
            [100, 101, 109, 111, 99, 114, 97, 99, 105, 97] => lookup_149_8(acc),
            [100, 101, 112, 111, 114, 116, 101] => lookup_149_9(acc),
            [101, 99, 111, 108, 111, 103, 105, 97] => lookup_149_10(acc),
            [101, 99, 111, 110, 111, 109, 105, 97] => lookup_149_11(acc),
            [101, 100, 117] => lookup_149_12(acc),
            [101, 109, 112, 114, 101, 115, 97] => lookup_149_13(acc),
            [103, 111, 98] => lookup_149_14(acc),
            [105, 110, 100, 105, 103, 101, 110, 97] => lookup_149_15(acc),
            [105, 110, 100, 117, 115, 116, 114, 105, 97] => lookup_149_16(acc),
            [105, 110, 102, 111] => lookup_149_17(acc),
            [105, 110, 116] => lookup_149_18(acc),
            [109, 101, 100, 105, 99, 105, 110, 97] => lookup_149_19(acc),
            [109, 105, 108] => lookup_149_20(acc),
            [109, 111, 118, 105, 109, 105, 101, 110, 116, 111] => lookup_149_21(acc),
            [109, 117, 115, 105, 99, 97] => lookup_149_22(acc),
            [110, 97, 116, 117, 114, 97, 108] => lookup_149_23(acc),
            [110, 101, 116] => lookup_149_24(acc),
            [110, 111, 109, 98, 114, 101] => lookup_149_25(acc),
            [110, 111, 116, 105, 99, 105, 97, 115] => lookup_149_26(acc),
            [111, 114, 103] => lookup_149_27(acc),
            [112, 97, 116, 114, 105, 97] => lookup_149_28(acc),
            [112, 108, 117, 114, 105, 110, 97, 99, 105, 111, 110, 97, 108] => lookup_149_29(acc),
            [112, 111, 108, 105, 116, 105, 99, 97] => lookup_149_30(acc),
            [112, 114, 111, 102, 101, 115, 105, 111, 110, 97, 108] => lookup_149_31(acc),
            [112, 117, 101, 98, 108, 111] => lookup_149_32(acc),
            [114, 101, 118, 105, 115, 116, 97] => lookup_149_33(acc),
            [115, 97, 108, 117, 100] => lookup_149_34(acc),
            [116, 101, 99, 110, 111, 108, 111, 103, 105, 97] => lookup_149_35(acc),
            [116, 107, 115, 97, 116] => lookup_149_36(acc),
            [116, 114, 97, 110, 115, 112, 111, 114, 116, 101] => lookup_149_37(acc),
            [116, 118] => lookup_149_38(acc),
            [119, 101, 98] => lookup_149_39(acc),
            [119, 105, 107, 105] => lookup_149_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_150() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_151() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_153() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_154() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_155() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_156() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_157() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_160() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_161() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_162() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_164_29_0(acc),
            [115, 105, 109, 112, 108, 101, 115, 105, 116, 101] => lookup_164_29_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_164_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_63<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_164_63_0(acc),
            [97, 108] => lookup_164_63_1(acc),
            [97, 109] => lookup_164_63_2(acc),
            [97, 112] => lookup_164_63_3(acc),
            [98, 97] => lookup_164_63_4(acc),
            [99, 101] => lookup_164_63_5(acc),
            [100, 102] => lookup_164_63_6(acc),
            [101, 115] => lookup_164_63_7(acc),
            [103, 111] => lookup_164_63_8(acc),
            [109, 97] => lookup_164_63_9(acc),
            [109, 103] => lookup_164_63_10(acc),
            [109, 115] => lookup_164_63_11(acc),
            [109, 116] => lookup_164_63_12(acc),
            [112, 97] => lookup_164_63_13(acc),
            [112, 98] => lookup_164_63_14(acc),
            [112, 101] => lookup_164_63_15(acc),
            [112, 105] => lookup_164_63_16(acc),
            [112, 114] => lookup_164_63_17(acc),
            [114, 106] => lookup_164_63_18(acc),
            [114, 110] => lookup_164_63_19(acc),
            [114, 111] => lookup_164_63_20(acc),
            [114, 114] => lookup_164_63_21(acc),
            [114, 115] => lookup_164_63_22(acc),
            [115, 99] => lookup_164_63_23(acc),
            [115, 101] => lookup_164_63_24(acc),
            [115, 112] => lookup_164_63_25(acc),
            [116, 111] => lookup_164_63_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_164_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_74_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_164_74<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_164_74_0(acc),
            [97, 108] => lookup_164_74_1(acc),
            [97, 109] => lookup_164_74_2(acc),
            [97, 112] => lookup_164_74_3(acc),
            [98, 97] => lookup_164_74_4(acc),
            [99, 101] => lookup_164_74_5(acc),
            [100, 102] => lookup_164_74_6(acc),
            [101, 115] => lookup_164_74_7(acc),
            [103, 111] => lookup_164_74_8(acc),
            [109, 97] => lookup_164_74_9(acc),
            [109, 103] => lookup_164_74_10(acc),
            [109, 115] => lookup_164_74_11(acc),
            [109, 116] => lookup_164_74_12(acc),
            [112, 97] => lookup_164_74_13(acc),
            [112, 98] => lookup_164_74_14(acc),
            [112, 101] => lookup_164_74_15(acc),
            [112, 105] => lookup_164_74_16(acc),
            [112, 114] => lookup_164_74_17(acc),
            [114, 106] => lookup_164_74_18(acc),
            [114, 110] => lookup_164_74_19(acc),
            [114, 111] => lookup_164_74_20(acc),
            [114, 114] => lookup_164_74_21(acc),
            [114, 115] => lookup_164_74_22(acc),
            [115, 99] => lookup_164_74_23(acc),
            [115, 101] => lookup_164_74_24(acc),
            [115, 112] => lookup_164_74_25(acc),
            [116, 111] => lookup_164_74_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_164_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_91_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_91<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_164_91_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_164_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [57, 103, 117, 97, 99, 117] => lookup_164_0(acc),
            [97, 98, 99] => lookup_164_1(acc),
            [97, 100, 109] => lookup_164_2(acc),
            [97, 100, 118] => lookup_164_3(acc),
            [97, 103, 114] => lookup_164_4(acc),
            [97, 106, 117] => lookup_164_5(acc),
            [97, 109] => lookup_164_6(acc),
            [97, 110, 97, 110, 105] => lookup_164_7(acc),
            [97, 112, 97, 114, 101, 99, 105, 100, 97] => lookup_164_8(acc),
            [97, 112, 112] => lookup_164_9(acc),
            [97, 114, 113] => lookup_164_10(acc),
            [97, 114, 116] => lookup_164_11(acc),
            [97, 116, 111] => lookup_164_12(acc),
            [98] => lookup_164_13(acc),
            [98, 97, 114, 117, 101, 114, 105] => lookup_164_14(acc),
            [98, 101, 108, 101, 109] => lookup_164_15(acc),
            [98, 104, 122] => lookup_164_16(acc),
            [98, 105, 98] => lookup_164_17(acc),
            [98, 105, 111] => lookup_164_18(acc),
            [98, 108, 111, 103] => lookup_164_19(acc),
            [98, 109, 100] => lookup_164_20(acc),
            [98, 111, 97, 118, 105, 115, 116, 97] => lookup_164_21(acc),
            [98, 115, 98] => lookup_164_22(acc),
            [99, 97, 109, 112, 105, 110, 97, 103, 114, 97, 110, 100, 101] => lookup_164_23(acc),
            [99, 97, 109, 112, 105, 110, 97, 115] => lookup_164_24(acc),
            [99, 97, 120, 105, 97, 115] => lookup_164_25(acc),
            [99, 105, 109] => lookup_164_26(acc),
            [99, 110, 103] => lookup_164_27(acc),
            [99, 110, 116] => lookup_164_28(acc),
            [99, 111, 109] => lookup_164_29(labels, acc),
            [99, 111, 110, 116, 97, 103, 101, 109] => lookup_164_30(acc),
            [99, 111, 111, 112] => lookup_164_31(acc),
            [99, 111, 122] => lookup_164_32(acc),
            [99, 114, 105] => lookup_164_33(acc),
            [99, 117, 105, 97, 98, 97] => lookup_164_34(acc),
            [99, 117, 114, 105, 116, 105, 98, 97] => lookup_164_35(acc),
            [100, 101, 102] => lookup_164_36(acc),
            [100, 101, 115] => lookup_164_37(acc),
            [100, 101, 116] => lookup_164_38(acc),
            [100, 101, 118] => lookup_164_39(acc),
            [101, 99, 110] => lookup_164_40(acc),
            [101, 99, 111] => lookup_164_41(acc),
            [101, 100, 117] => lookup_164_42(acc),
            [101, 109, 112] => lookup_164_43(acc),
            [101, 110, 102] => lookup_164_44(acc),
            [101, 110, 103] => lookup_164_45(acc),
            [101, 115, 112] => lookup_164_46(acc),
            [101, 116, 99] => lookup_164_47(acc),
            [101, 116, 105] => lookup_164_48(acc),
            [102, 97, 114] => lookup_164_49(acc),
            [102, 101, 105, 114, 97] => lookup_164_50(acc),
            [102, 108, 111, 103] => lookup_164_51(acc),
            [102, 108, 111, 114, 105, 112, 97] => lookup_164_52(acc),
            [102, 109] => lookup_164_53(acc),
            [102, 110, 100] => lookup_164_54(acc),
            [102, 111, 114, 116, 97, 108] => lookup_164_55(acc),
            [102, 111, 116] => lookup_164_56(acc),
            [102, 111, 122] => lookup_164_57(acc),
            [102, 115, 116] => lookup_164_58(acc),
            [103, 49, 50] => lookup_164_59(acc),
            [103, 101, 111] => lookup_164_60(acc),
            [103, 103, 102] => lookup_164_61(acc),
            [103, 111, 105, 97, 110, 105, 97] => lookup_164_62(acc),
            [103, 111, 118] => lookup_164_63(labels, acc),
            [103, 114, 117] => lookup_164_64(acc),
            [105, 109, 98] => lookup_164_65(acc),
            [105, 110, 100] => lookup_164_66(acc),
            [105, 110, 102] => lookup_164_67(acc),
            [106, 97, 98] => lookup_164_68(acc),
            [106, 97, 109, 112, 97] => lookup_164_69(acc),
            [106, 100, 102] => lookup_164_70(acc),
            [106, 111, 105, 110, 118, 105, 108, 108, 101] => lookup_164_71(acc),
            [106, 111, 114] => lookup_164_72(acc),
            [106, 117, 115] => lookup_164_73(acc),
            [108, 101, 103] => lookup_164_74(labels, acc),
            [108, 101, 108] => lookup_164_75(acc),
            [108, 111, 103] => lookup_164_76(acc),
            [108, 111, 110, 100, 114, 105, 110, 97] => lookup_164_77(acc),
            [109, 97, 99, 97, 112, 97] => lookup_164_78(acc),
            [109, 97, 99, 101, 105, 111] => lookup_164_79(acc),
            [109, 97, 110, 97, 117, 115] => lookup_164_80(acc),
            [109, 97, 114, 105, 110, 103, 97] => lookup_164_81(acc),
            [109, 97, 116] => lookup_164_82(acc),
            [109, 101, 100] => lookup_164_83(acc),
            [109, 105, 108] => lookup_164_84(acc),
            [109, 111, 114, 101, 110, 97] => lookup_164_85(acc),
            [109, 112] => lookup_164_86(acc),
            [109, 117, 115] => lookup_164_87(acc),
            [110, 97, 116, 97, 108] => lookup_164_88(acc),
            [110, 101, 116] => lookup_164_89(acc),
            [110, 105, 116, 101, 114, 111, 105] => lookup_164_90(acc),
            [110, 111, 109] => lookup_164_91(info, labels, acc),
            [110, 111, 116] => lookup_164_92(acc),
            [110, 116, 114] => lookup_164_93(acc),
            [111, 100, 111] => lookup_164_94(acc),
            [111, 110, 103] => lookup_164_95(acc),
            [111, 114, 103] => lookup_164_96(acc),
            [111, 115, 97, 115, 99, 111] => lookup_164_97(acc),
            [112, 97, 108, 109, 97, 115] => lookup_164_98(acc),
            [112, 111, 97] => lookup_164_99(acc),
            [112, 112, 103] => lookup_164_100(acc),
            [112, 114, 111] => lookup_164_101(acc),
            [112, 115, 99] => lookup_164_102(acc),
            [112, 115, 105] => lookup_164_103(acc),
            [112, 118, 104] => lookup_164_104(acc),
            [113, 115, 108] => lookup_164_105(acc),
            [114, 97, 100, 105, 111] => lookup_164_106(acc),
            [114, 101, 99] => lookup_164_107(acc),
            [114, 101, 99, 105, 102, 101] => lookup_164_108(acc),
            [114, 101, 112] => lookup_164_109(acc),
            [114, 105, 98, 101, 105, 114, 97, 111] => lookup_164_110(acc),
            [114, 105, 111] => lookup_164_111(acc),
            [114, 105, 111, 98, 114, 97, 110, 99, 111] => lookup_164_112(acc),
            [114, 105, 111, 112, 114, 101, 116, 111] => lookup_164_113(acc),
            [115, 97, 108, 118, 97, 100, 111, 114] => lookup_164_114(acc),
            [115, 97, 109, 112, 97] => lookup_164_115(acc),
            [115, 97, 110, 116, 97, 109, 97, 114, 105, 97] => lookup_164_116(acc),
            [115, 97, 110, 116, 111, 97, 110, 100, 114, 101] => lookup_164_117(acc),
            [115, 97, 111, 98, 101, 114, 110, 97, 114, 100, 111] => lookup_164_118(acc),
            [115, 97, 111, 103, 111, 110, 99, 97] => lookup_164_119(acc),
            [115, 101, 103] => lookup_164_120(acc),
            [115, 106, 99] => lookup_164_121(acc),
            [115, 108, 103] => lookup_164_122(acc),
            [115, 108, 122] => lookup_164_123(acc),
            [115, 111, 114, 111, 99, 97, 98, 97] => lookup_164_124(acc),
            [115, 114, 118] => lookup_164_125(acc),
            [116, 97, 120, 105] => lookup_164_126(acc),
            [116, 99] => lookup_164_127(acc),
            [116, 101, 99] => lookup_164_128(acc),
            [116, 101, 111] => lookup_164_129(acc),
            [116, 104, 101] => lookup_164_130(acc),
            [116, 109, 112] => lookup_164_131(acc),
            [116, 114, 100] => lookup_164_132(acc),
            [116, 117, 114] => lookup_164_133(acc),
            [116, 118] => lookup_164_134(acc),
            [117, 100, 105] => lookup_164_135(acc),
            [118, 101, 116] => lookup_164_136(acc),
            [118, 105, 120] => lookup_164_137(acc),
            [118, 108, 111, 103] => lookup_164_138(acc),
            [119, 105, 107, 105] => lookup_164_139(acc),
            [122, 108, 103] => lookup_164_140(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_165() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_166() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_168() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_169() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_170() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_171<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_171_0(acc),
            [101, 100, 117] => lookup_171_1(acc),
            [103, 111, 118] => lookup_171_2(acc),
            [110, 101, 116] => lookup_171_3(acc),
            [111, 114, 103] => lookup_171_4(acc),
            [119, 101] => lookup_171_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_172_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_172_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_172_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_172_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_172_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_172<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_172_0(acc),
            [101, 100, 117] => lookup_172_1(acc),
            [103, 111, 118] => lookup_172_2(acc),
            [110, 101, 116] => lookup_172_3(acc),
            [111, 114, 103] => lookup_172_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_173() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_174_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_174<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 115, 105, 116, 101] => lookup_174_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_175_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_175<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_175_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_176() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_177() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_178() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_179_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_179_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_179<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_179_0(acc),
            [111, 114, 103] => lookup_179_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_180_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_180_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_180_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_180_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_180_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_180_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_180_0(labels, acc),
            [103, 111, 118] => lookup_180_1(acc),
            [109, 101, 100, 105, 97, 116, 101, 99, 104] => lookup_180_2(acc),
            [109, 105, 108] => lookup_180_3(acc),
            [109, 121, 99, 108, 111, 117, 100] => lookup_180_4(acc),
            [111, 102] => lookup_180_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_181_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_181_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_181_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_181_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_181_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_181_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_181_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_181<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_181_0(acc),
            [101, 100, 117] => lookup_181_1(acc),
            [103, 111, 118] => lookup_181_2(acc),
            [103, 115, 106] => lookup_181_3(acc),
            [110, 101, 116] => lookup_181_4(acc),
            [111, 114, 103] => lookup_181_5(acc),
            [122, 97] => lookup_181_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_182() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_183_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_183_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_183_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_183_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_183_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_183_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_183_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_183_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98] => lookup_183_0(acc),
            [97, 119, 100, 101, 118] => lookup_183_1(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_183_2(acc),
            [98, 99] => lookup_183_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_183_4(acc),
            [99, 111] => lookup_183_5(acc),
            [103, 99] => lookup_183_6(acc),
            [109, 98] => lookup_183_7(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_183_8(acc),
            [110, 98] => lookup_183_9(acc),
            [110, 102] => lookup_183_10(acc),
            [110, 108] => lookup_183_11(acc),
            [110, 111, 45, 105, 112] => lookup_183_12(acc),
            [110, 115] => lookup_183_13(acc),
            [110, 116] => lookup_183_14(acc),
            [110, 117] => lookup_183_15(acc),
            [111, 110] => lookup_183_16(acc),
            [112, 101] => lookup_183_17(acc),
            [113, 99] => lookup_183_18(acc),
            [115, 107] => lookup_183_19(acc),
            [121, 107] => lookup_183_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_184() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_185() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_187() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_188() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_193() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_194() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_196() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_197() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_198() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_199() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_200() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_201() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_202() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_203_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_203_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 105] => lookup_203_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_203<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 98, 117] => lookup_203_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_204() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_205() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_206() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_207() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_208() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_210() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_211() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_212() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_213_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_213_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_213_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_213_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_213_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_213_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_213_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_213_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_213_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [105, 110, 115, 116, 97, 110, 99, 101, 115] => lookup_213_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_213_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_213<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_213_0(acc),
            [99, 115, 120] => lookup_213_1(acc),
            [102, 97, 110, 116, 97, 115, 121, 108, 101, 97, 103, 117, 101] => lookup_213_2(acc),
            [102, 116, 112, 97, 99, 99, 101, 115, 115] => lookup_213_3(acc),
            [103, 97, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_213_4(acc),
            [109, 121, 112, 104, 111, 116, 111, 115] => lookup_213_5(acc),
            [115, 99, 114, 97, 112, 112, 105, 110, 103] => lookup_213_6(acc),
            [115, 112, 97, 119, 110] => lookup_213_7(info, labels, acc),
            [116, 119, 109, 97, 105, 108] => lookup_213_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_214_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_214<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_214_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_215() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_216() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_217() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_218<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_218_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_219() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_221() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_222_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_6_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_6_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_222_6_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_222_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 118, 99] => lookup_222_6_1(info, labels, acc),
            wild => lookup_222_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_222_7_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_7_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 108, 112, 49] => lookup_222_7_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_222_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 101] => lookup_222_7_0(info, labels, acc),
            [97, 112, 112, 101, 110, 103, 105, 110, 101] => lookup_222_7_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_222_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 105, 116, 101] => lookup_222_0(acc),
            [49, 50, 104, 112] => lookup_222_1(acc),
            [50, 105, 120] => lookup_222_2(acc),
            [52, 108, 105, 109, 97] => lookup_222_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_222_4(acc),
            [100, 110, 115, 107, 105, 110, 103] => lookup_222_5(acc),
            [102, 105, 114, 101, 110, 101, 116] => lookup_222_6(info, labels, acc),
            [102, 108, 111, 119] => lookup_222_7(info, labels, acc),
            [103, 111, 116, 100, 110, 115] => lookup_222_8(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_222_9(acc),
            [108, 105, 110, 107, 121, 97, 114, 100, 45, 99, 108, 111, 117, 100] => {
                lookup_222_10(acc)
            }
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_222_11(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_222_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_223() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_225() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_226() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_227() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_229() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_230() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_231() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_233_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_233_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_233_0(acc),
            [97, 115, 115, 111] => lookup_233_1(acc),
            [97, 195, 169, 114, 111, 112, 111, 114, 116] => lookup_233_2(acc),
            [99, 111] => lookup_233_3(acc),
            [99, 111, 109] => lookup_233_4(acc),
            [101, 100] => lookup_233_5(acc),
            [101, 100, 117] => lookup_233_6(acc),
            [102, 105, 110] => lookup_233_7(acc),
            [103, 111] => lookup_233_8(acc),
            [103, 111, 117, 118] => lookup_233_9(acc),
            [105, 110, 116] => lookup_233_10(acc),
            [109, 100] => lookup_233_11(acc),
            [110, 101, 116] => lookup_233_12(acc),
            [110, 108] => lookup_233_13(acc),
            [111, 114] => lookup_233_14(acc),
            [111, 114, 103] => lookup_233_15(acc),
            [112, 114, 101, 115, 115, 101] => lookup_233_16(acc),
            [120, 110, 45, 45, 97, 114, 111, 112, 111, 114, 116, 45, 98, 121, 97] => {
                lookup_233_17(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_234() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_235() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_236() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_238() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_239() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_240() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [119, 119, 119] => lookup_241_0(acc),
            wild => lookup_241_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_242_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_242_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_242_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_242_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_242_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_242<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_242_0(acc),
            [99, 111] => lookup_242_1(acc),
            [103, 111, 98] => lookup_242_2(acc),
            [103, 111, 118] => lookup_242_3(acc),
            [109, 105, 108] => lookup_242_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_243() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_245() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_246() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_248() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_249_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [101, 115, 45, 49] => lookup_249_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_249_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_249_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_249_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 105, 112] => lookup_249_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_7_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_7_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49] => lookup_249_7_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_7_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117, 114] => lookup_249_7_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 114, 117, 98, 97] => lookup_249_7_0(info, labels, acc),
            [105, 116, 49] => lookup_249_7_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 115] => lookup_249_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_12_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_249_12_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_249_13_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_249_13_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_249_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_14_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 110] => lookup_249_14_0(acc),
            [117, 107] => lookup_249_14_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_16<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 107] => lookup_249_16_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_18_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_18_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 97] => lookup_249_18_0(acc),
            [117, 107] => lookup_249_18_1(acc),
            [117, 115] => lookup_249_18_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_19_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [102, 114, 45, 112, 97, 114, 45, 49] => lookup_249_19_0_0(acc),
            [102, 114, 45, 112, 97, 114, 45, 50] => lookup_249_19_0_1(acc),
            [110, 108, 45, 97, 109, 115, 45, 49] => lookup_249_19_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_19_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_1_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_1_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 110, 99, 116, 105, 111, 110, 115] => lookup_249_19_1_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_19_1_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_1_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 100, 101, 115] => lookup_249_19_1_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_19_1_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_1_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_1_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 111, 99, 107, 112, 105, 116] => lookup_249_19_1_0(acc),
            [102, 110, 99] => lookup_249_19_1_1(labels, acc),
            [107, 56, 115] => lookup_249_19_1_2(labels, acc),
            [115, 51] => lookup_249_19_1_3(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_249_19_1_4(acc),
            [119, 104, 109] => lookup_249_19_1_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_19_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 105, 118] => lookup_249_19_2_0(acc),
            [112, 117, 98] => lookup_249_19_2_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_19_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_4_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_4_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 100, 101, 115] => lookup_249_19_4_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_19_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_4_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_4_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 111, 99, 107, 112, 105, 116] => lookup_249_19_4_0(acc),
            [107, 56, 115] => lookup_249_19_4_1(labels, acc),
            [115, 51] => lookup_249_19_4_2(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_249_19_4_3(acc),
            [119, 104, 109] => lookup_249_19_4_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_19_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_5_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_5_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 100, 101, 115] => lookup_249_19_5_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_19_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_5_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 111, 99, 107, 112, 105, 116] => lookup_249_19_5_0(acc),
            [107, 56, 115] => lookup_249_19_5_1(labels, acc),
            [115, 51] => lookup_249_19_5_2(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_249_19_5_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_19_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 101, 109, 101, 116, 97, 108] => lookup_249_19_0(info, labels, acc),
            [102, 114, 45, 112, 97, 114] => lookup_249_19_1(info, labels, acc),
            [105, 110, 115, 116, 97, 110, 99, 101, 115] => lookup_249_19_2(info, labels, acc),
            [107, 56, 115] => lookup_249_19_3(acc),
            [110, 108, 45, 97, 109, 115] => lookup_249_19_4(info, labels, acc),
            [112, 108, 45, 119, 97, 119] => lookup_249_19_5(info, labels, acc),
            [115, 99, 97, 108, 101, 98, 111, 111, 107] => lookup_249_19_6(acc),
            [115, 109, 97, 114, 116, 108, 97, 98, 101, 108, 105, 110, 103] => lookup_249_19_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_20_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_249_20_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_249_21_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_249_21_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_249_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 104] => lookup_249_23_0(acc),
            [100, 101] => lookup_249_23_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_249_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_249<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 120, 97, 114, 110, 101, 116] => lookup_249_0(info, labels, acc),
            [98, 97, 110, 122, 97, 105] => lookup_249_1(info, labels, acc),
            [100, 105, 97, 100, 101, 109] => lookup_249_2(acc),
            [101, 108, 101, 109, 101, 110, 116, 111, 114] => lookup_249_3(acc),
            [101, 110, 99, 111, 119, 97, 121] => lookup_249_4(info, labels, acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_249_5(info, labels, acc),
            [106, 101, 108, 101] => lookup_249_6(acc),
            [106, 101, 110, 118, 45, 97, 114, 117, 98, 97] => lookup_249_7(info, labels, acc),
            [106, 111, 116, 101, 108, 117, 108, 117] => lookup_249_8(acc),
            [107, 101, 108, 105, 119, 101, 98] => lookup_249_9(labels, acc),
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_249_10(acc),
            [108, 105, 110, 107, 121, 97, 114, 100] => lookup_249_11(acc),
            [109, 97, 103, 101, 110, 116, 111, 115, 105, 116, 101] => {
                lookup_249_12(info, labels, acc)
            }
            [111, 110, 45, 114, 97, 110, 99, 104, 101, 114] => lookup_249_13(info, labels, acc),
            [111, 120, 97] => lookup_249_14(labels, acc),
            [112, 101, 114, 115, 112, 101, 99, 116, 97] => lookup_249_15(acc),
            [112, 114, 105, 109, 101, 116, 101, 108] => lookup_249_16(labels, acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_249_17(acc),
            [114, 101, 99, 108, 97, 105, 109] => lookup_249_18(info, labels, acc),
            [115, 99, 119] => lookup_249_19(info, labels, acc),
            [115, 101, 110, 115, 105, 111, 115, 105, 116, 101] => lookup_249_20(info, labels, acc),
            [115, 116, 97, 116, 105, 99, 115] => lookup_249_21(info, labels, acc),
            [116, 114, 97, 102, 102, 105, 99, 112, 108, 101, 120] => lookup_249_22(acc),
            [116, 114, 101, 110, 100, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_249_23(info, labels, acc)
            }
            [117, 114, 111, 119, 110] => lookup_249_24(acc),
            [118, 97, 112, 111, 114] => lookup_249_25(acc),
            [118, 111, 111, 114, 108, 111, 112, 101, 114] => lookup_249_26(acc),
            [122, 97, 112] => lookup_249_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_250_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_250_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_250_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_250<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_250_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_250_1(acc),
            [106, 101, 108, 101] => lookup_250_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_251() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_252_0(acc),
            [99, 111, 109] => lookup_252_1(acc),
            [103, 111, 118] => lookup_252_2(acc),
            [110, 101, 116] => lookup_252_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_0_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_253_4_0_0_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_253_4_0_0_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_253_4_0_0_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_253_4_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_253_4_0_0_0(info, labels, acc),
            [99, 110, 45, 110, 111, 114, 116, 104, 119, 101, 115, 116, 45, 49] => {
                lookup_253_4_0_0_1(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_4_0_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_1_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_1_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_253_4_0_1_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_253_4_0_1_0_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_253_4_0_1_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_4_0_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_1_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_1_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_1_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_1_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_1_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_1_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_1_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_253_4_0_1_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_253_4_0_1_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_253_4_0_1_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_253_4_0_1_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_253_4_0_1_4(acc),
            [115, 51] => lookup_253_4_0_1_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_253_4_0_1_6(acc)
            }
            [115, 51, 45, 100, 101, 112, 114, 101, 99, 97, 116, 101, 100] => {
                lookup_253_4_0_1_7(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_253_4_0_1_8(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_253_4_0_1_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_4_0_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_2_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_253_4_0_2_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_253_4_0_2_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_4_0_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_2_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_2_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_2_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_2_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_2_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_253_4_0_2_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_253_4_0_2_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_253_4_0_2_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_253_4_0_2_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_253_4_0_2_4(acc),
            [115, 51] => lookup_253_4_0_2_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_253_4_0_2_6(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_253_4_0_2_7(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_253_4_0_2_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_4_0_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_253_4_0_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_253_4_0_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_253_4_0_4_0(acc),
            [99, 110, 45, 110, 111, 114, 116, 104, 119, 101, 115, 116, 45, 49] => {
                lookup_253_4_0_4_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_4_0_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_0_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_253_4_0_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_253_4_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 105, 114, 102, 108, 111, 119] => lookup_253_4_0_0(info, labels, acc),
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_253_4_0_1(info, labels, acc),
            [99, 110, 45, 110, 111, 114, 116, 104, 119, 101, 115, 116, 45, 49] => {
                lookup_253_4_0_2(info, labels, acc)
            }
            [99, 111, 109, 112, 117, 116, 101] => lookup_253_4_0_3(info, labels, acc),
            [101, 98] => lookup_253_4_0_4(info, labels, acc),
            [101, 108, 98] => lookup_253_4_0_5(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_4_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_1_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_253_4_1_0_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_253_4_1_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_4_1_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_1_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_4_1_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 101, 98, 111, 111, 107] => lookup_253_4_1_1_0(acc),
            [115, 116, 117, 100, 105, 111] => lookup_253_4_1_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_4_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_253_4_1_0(info, labels, acc),
            [99, 110, 45, 110, 111, 114, 116, 104, 119, 101, 115, 116, 45, 49] => {
                lookup_253_4_1_1(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_253_4_0(info, labels, acc),
            [115, 97, 103, 101, 109, 97, 107, 101, 114] => lookup_253_4_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_253_32<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 105, 114, 101, 99, 116] => lookup_253_32_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_253_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_253_0(acc),
            [97, 104] => lookup_253_1(acc),
            [98, 106] => lookup_253_2(acc),
            [99, 97, 110, 118, 97, 45, 97, 112, 112, 115] => lookup_253_3(acc),
            [99, 111, 109] => lookup_253_4(labels, acc),
            [99, 113] => lookup_253_5(acc),
            [101, 100, 117] => lookup_253_6(acc),
            [102, 106] => lookup_253_7(acc),
            [103, 100] => lookup_253_8(acc),
            [103, 111, 118] => lookup_253_9(acc),
            [103, 115] => lookup_253_10(acc),
            [103, 120] => lookup_253_11(acc),
            [103, 122] => lookup_253_12(acc),
            [104, 97] => lookup_253_13(acc),
            [104, 98] => lookup_253_14(acc),
            [104, 101] => lookup_253_15(acc),
            [104, 105] => lookup_253_16(acc),
            [104, 107] => lookup_253_17(acc),
            [104, 108] => lookup_253_18(acc),
            [104, 110] => lookup_253_19(acc),
            [105, 110, 115, 116, 97, 110, 116, 99, 108, 111, 117, 100] => lookup_253_20(acc),
            [106, 108] => lookup_253_21(acc),
            [106, 115] => lookup_253_22(acc),
            [106, 120] => lookup_253_23(acc),
            [108, 110] => lookup_253_24(acc),
            [109, 105, 108] => lookup_253_25(acc),
            [109, 111] => lookup_253_26(acc),
            [110, 101, 116] => lookup_253_27(acc),
            [110, 109] => lookup_253_28(acc),
            [110, 120] => lookup_253_29(acc),
            [111, 114, 103] => lookup_253_30(acc),
            [113, 104] => lookup_253_31(acc),
            [113, 117, 105, 99, 107, 99, 111, 110, 110, 101, 99, 116] => {
                lookup_253_32(info, labels, acc)
            }
            [115, 99] => lookup_253_33(acc),
            [115, 100] => lookup_253_34(acc),
            [115, 104] => lookup_253_35(acc),
            [115, 110] => lookup_253_36(acc),
            [115, 120] => lookup_253_37(acc),
            [116, 106] => lookup_253_38(acc),
            [116, 119] => lookup_253_39(acc),
            [120, 106] => lookup_253_40(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_253_41(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_253_42(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_253_43(acc),
            [120, 122] => lookup_253_44(acc),
            [121, 110] => lookup_253_45(acc),
            [122, 106] => lookup_253_46(acc),
            [229, 133, 172, 229, 143, 184] => lookup_253_47(acc),
            [231, 182, 178, 231, 181, 161] => lookup_253_48(acc),
            [231, 189, 145, 231, 187, 156] => lookup_253_49(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_254_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_254_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_18_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_254_18_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_254_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_254_20_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_254_0(acc),
            [99, 97, 114, 114, 100] => lookup_254_1(acc),
            [99, 111, 109] => lookup_254_2(labels, acc),
            [99, 114, 100] => lookup_254_3(acc),
            [101, 100, 117] => lookup_254_4(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 101, 100, 114, 101, 112, 108, 105, 116] => {
                lookup_254_5(labels, acc)
            }
            [102, 105, 114, 109] => lookup_254_6(acc),
            [103, 111, 118] => lookup_254_7(acc),
            [105, 110, 102, 111] => lookup_254_8(acc),
            [105, 110, 116] => lookup_254_9(acc),
            [108, 101, 97, 100, 112, 97, 103, 101, 115] => lookup_254_10(acc),
            [108, 112, 97, 103, 101, 115] => lookup_254_11(acc),
            [109, 105, 108] => lookup_254_12(acc),
            [109, 121, 112, 105] => lookup_254_13(acc),
            [110, 52, 116] => lookup_254_14(acc),
            [110, 101, 116] => lookup_254_15(acc),
            [110, 111, 109] => lookup_254_16(acc),
            [111, 114, 103] => lookup_254_17(acc),
            [111, 116, 97, 112] => lookup_254_18(info, labels, acc),
            [114, 101, 99] => lookup_254_19(acc),
            [114, 101, 112, 108] => lookup_254_20(labels, acc),
            [115, 117, 112, 97, 98, 97, 115, 101] => lookup_254_21(acc),
            [119, 101, 98] => lookup_254_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_255() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_256_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_256_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_256_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_256<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 119, 111] => lookup_256_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_257() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_260_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_7_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_7_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_7_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_260_7_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_0_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_0_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_0_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_0_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_0_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_0_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_0_2_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_0_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_0_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_0_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_0_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_0_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_0_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_0_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_0_6(acc),
            [115, 51] => lookup_260_14_0_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_0_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_0_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_0_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_4_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_4_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_8_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_8_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_9_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_9_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_10_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_10_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_11_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_11_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_12_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_12_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_13_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_13_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1_14_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_1_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_1_14_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_260_14_1_0(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_260_14_1_1(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_14_1_2(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_260_14_1_3(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_260_14_1_4(info, labels, acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_260_14_1_5(info, labels, acc)
            }
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_260_14_1_6(info, labels, acc)
            }
            [101, 117, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_260_14_1_7(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_260_14_1_8(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_260_14_1_9(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_260_14_1_10(info, labels, acc),
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_260_14_1_11(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_260_14_1_12(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_260_14_1_13(info, labels, acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_260_14_1_14(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_2_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_2_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_2_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_2_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_2_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_2_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_2_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_2_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_2_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_2_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_2_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_2_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_2_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_2_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_2_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_2_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_2_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_2_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_2_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_2_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_2_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_2_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_2_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_2_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_2_6(acc),
            [115, 51] => lookup_260_14_2_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_2_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_2_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_2_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_3_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_3_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_3_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_3_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_3_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_3_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_3_3_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_3_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_3_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_260_14_3_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_3_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_3_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_3_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_3_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_3_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_3_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_3_7(acc),
            [115, 51] => lookup_260_14_3_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_3_9(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_3_10(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_3_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_4_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_4_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_4_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_4_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_4_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_4_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_4_3_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_4_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_4_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_260_14_4_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_4_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_4_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_4_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_4_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_4_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_4_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_4_7(acc),
            [115, 51] => lookup_260_14_4_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_4_9(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_4_10(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_4_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_5_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_5_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_5_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_5_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_5_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_5_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_5_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_5_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_5_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_5_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_5_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_5_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_5_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_5_2_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_5_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_5_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_5_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_5_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_5_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_5_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_5_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_5_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_5_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_5_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_5_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_5_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_5_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_5_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_5_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_5_6(acc),
            [115, 51] => lookup_260_14_5_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_5_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_5_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_5_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_6_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_6_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_6_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_6_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_6_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_6_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_6_3_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_6_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_6_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_260_14_6_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_6_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_6_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_6_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_6_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_6_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_6_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_6_7(acc),
            [115, 51] => lookup_260_14_6_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_6_9(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_6_10(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_6_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_7_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_7_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_7_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_7_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_7_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_7_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_7_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_7_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_7_0(info, labels, acc),
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_7_1(acc),
            [115, 51] => lookup_260_14_7_2(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_7_3(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_7_4(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_7_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_8_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_8_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_8_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_8_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_8_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_8_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_8_3_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_8_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_8_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_260_14_8_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_8_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_8_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_8_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_8_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_8_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_8_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_8_7(acc),
            [115, 51] => lookup_260_14_8_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_8_9(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_8_10(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_8_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_9_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_9_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_9_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_9_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_9_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_9_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_9_3_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_9_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_9_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_260_14_9_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_9_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_9_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_9_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_9_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_9_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_9_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_9_7(acc),
            [115, 51] => lookup_260_14_9_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_9_9(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_9_10(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_9_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_10_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_10_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_10_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_10_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_10_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_10_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_10_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_10_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_10_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_10_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_10_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_10_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_10_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_10_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_10_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_10_4(acc),
            [115, 51] => lookup_260_14_10_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_10_6(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_10_7(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_10_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_11_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_11_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_11_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_11_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_11_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_11_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_11_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_11_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_11_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_11_0(info, labels, acc),
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_11_1(acc),
            [115, 51] => lookup_260_14_11_2(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_11_3(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_11_4(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_11_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_12_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_12_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_12_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_12_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_12_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_12_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_2_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_12_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_12_2_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_12_2_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_12_2_3(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_12_2_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_12_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_12_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_12_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_12_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_12_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_12_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_12_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_12_6(acc),
            [115, 51] => lookup_260_14_12_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_12_8(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_12_9(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_12_10(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_12_11(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_12_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_13_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_13_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_13_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_13_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_13_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_13_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_13_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_13_0_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_13_0_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_13_0_3(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_13_0_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_13_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_13_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_13_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_13_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_13_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_13_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_13_0(info, labels, acc),
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_13_1(acc),
            [115, 51] => lookup_260_14_13_2(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_13_3(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_13_4(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_13_5(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_13_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_14_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_14_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_15_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_15_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_16_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_14_16_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_17_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_17_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_17_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_17_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_17_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_17_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_17_3_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_17_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_17_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_260_14_17_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_17_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_17_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_17_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_17_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_17_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_17_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_17_7(acc),
            [115, 51] => lookup_260_14_17_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_17_9(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_17_10(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_17_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_18_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_18_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_18_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_18_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_18_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_18_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_18_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_18_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_18_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_18_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_18_0(info, labels, acc),
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_18_1(acc),
            [115, 51] => lookup_260_14_18_2(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_18_3(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_18_4(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_18_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_19_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_19_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_19_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_19_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_19_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_19_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_19_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_19_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_19_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_19_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_19_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_19_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_19_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_19_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_19_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_19_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_19_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_19_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_19_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_19_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_19_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_19_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_19_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_19_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_19_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_19_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_19_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_19_6(acc),
            [115, 51] => lookup_260_14_19_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_19_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_19_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_19_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_20_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_20_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_20_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_20_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_20_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_20_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_20_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_20_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_20_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_20_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_20_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_20_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_20_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_20_2_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_20_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_20_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_20_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_20_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_20_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_20_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_20_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_20_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_20_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_20_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_20_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_20_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_20_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_20_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_20_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_20_6(acc),
            [115, 51] => lookup_260_14_20_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_20_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_20_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_20_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_21_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_21_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_21_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_21_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_21_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_21_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_21_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_21_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_21_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_21_0(info, labels, acc),
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_21_1(acc),
            [115, 51] => lookup_260_14_21_2(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_21_3(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_21_4(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_21_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_22_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_22_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_22_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_22_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_22_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_22_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_22_3_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_22_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_22_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_260_14_22_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_22_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_22_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_22_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_22_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_22_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_22_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_22_7(acc),
            [115, 51] => lookup_260_14_22_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_22_9(acc)
            }
            [115, 51, 45, 100, 101, 112, 114, 101, 99, 97, 116, 101, 100] => {
                lookup_260_14_22_10(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_22_11(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_22_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_23_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_23_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_23_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_23_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_23_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_23_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_23_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_23_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_23_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_23_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_23_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_23_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_23_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_23_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_23_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_23_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_23_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_23_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_23_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_23_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_23_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_23_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_23_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_23_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_23_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_23_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_23_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_23_6(acc),
            [115, 51] => lookup_260_14_23_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_23_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_23_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_23_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_24_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_24_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_24_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_24_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_24_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_24_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_24_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_24_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_24_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_24_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_24_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_24_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_24_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_24_2_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_24_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_24_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_24_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_24_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_24_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_24_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_24_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_24_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_24_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_24<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_24_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_24_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_24_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_24_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_24_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_24_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_24_6(acc),
            [115, 51] => lookup_260_14_24_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_24_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_24_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_24_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_25_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_25_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_25_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_25_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_25_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_25_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_25_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_25_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_25_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_25_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_25_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_25_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_25_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_25_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_25_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_25_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_25<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_25_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_25_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_25_2(info, labels, acc),
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_25_3(acc),
            [115, 51] => lookup_260_14_25_4(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_25_5(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_25_6(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_25_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_26_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_26_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_26_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_26_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_26_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_26_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_26_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_26_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_26_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_26_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_26_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_26_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_26_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_26<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_26_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_26_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_26_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_26_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_26_4(acc),
            [115, 51] => lookup_260_14_26_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_26_6(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_26_7(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_26_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_27_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_27_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_27_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_27_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_27_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_27_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_27_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_27_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_27_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_27_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_27_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_27_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_27_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_27_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_27_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_27_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_27_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_27_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_27_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_27_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_27_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_27<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_27_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_27_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_27_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_27_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_27_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_27_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_27_6(acc),
            [115, 51] => lookup_260_14_27_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_27_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_27_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_27_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_46_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_46_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [109, 114, 97, 112] => lookup_260_14_46_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_46<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_46_0(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_63_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_63_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_63_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_63_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_63_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_63_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_63_2_1(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_63_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_63_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_63<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_63_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_63_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_63_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_63_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_63_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_63_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_63_6(acc),
            [115, 51] => lookup_260_14_63_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_63_8(acc)
            }
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_63_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_63_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_64_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_64_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_64_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_64_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_64_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_3_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_3_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_64_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_64_3_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_64_3_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_64_3_3(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_64_3_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_64_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_64<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_260_14_64_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_64_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_64_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_64_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_64_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_64_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_64_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_64_7(acc),
            [115, 51] => lookup_260_14_64_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_64_9(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_64_10(acc)
            }
            [115, 51, 45, 100, 101, 112, 114, 101, 99, 97, 116, 101, 100] => {
                lookup_260_14_64_11(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_64_12(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_64_13(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_64_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_65_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_65_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_65_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_65_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_65_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_3_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_65_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_65_3_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_65_3_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_65_3_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_65_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_65<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_260_14_65_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_65_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_65_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_65_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_65_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_65_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_65_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_65_7(acc),
            [115, 51] => lookup_260_14_65_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_65_9(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_65_10(acc)
            }
            [115, 51, 45, 100, 101, 112, 114, 101, 99, 97, 116, 101, 100] => {
                lookup_260_14_65_11(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_65_12(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_65_13(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_65_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_66_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_66_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_66_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_66_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_66_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_66_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_66_0_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_66_0_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_66_0_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_66_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_66_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_66_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_66_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_66_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_66_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_66_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_66_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_66_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_66_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_66<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_66_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_66_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_66_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_66_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_66_4(acc),
            [115, 51] => lookup_260_14_66_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_66_6(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_66_7(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_66_8(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_66_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_66_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_67_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_67_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_67_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_67_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_67_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_67_0_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_67_0_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_67_0_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_67_0_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_67_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_67_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_67_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_67_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_67_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_67_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_67_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_67_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_67<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_67_0(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_67_1(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_67_2(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_67_3(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_67_4(acc),
            [115, 51] => lookup_260_14_67_5(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_67_6(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_67_7(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_67_8(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_67_9(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_67_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_68_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_68_0_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_68_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_68_1_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_68_1_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_68_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_2_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_68_2_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_68_2_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_68_2_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_68_2_3(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_68_2_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_68_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_68<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_68_0(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_68_1(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_68_2(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_68_3(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_68_4(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_68_5(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_68_6(acc),
            [115, 51] => lookup_260_14_68_7(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_68_8(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_68_9(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_68_10(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_68_11(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_68_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_69_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_69_1_0(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_69_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_260_14_69_2_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_260_14_69_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_69_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_3_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_3_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_260_14_69_3_0(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_69_3_1(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_69_3_2(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_69_3_3(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_69_3_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14_69_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_14_69<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 108, 121, 116, 105, 99, 115, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_260_14_69_0(acc)
            }
            [97, 119, 115, 45, 99, 108, 111, 117, 100, 57] => lookup_260_14_69_1(info, labels, acc),
            [99, 108, 111, 117, 100, 57] => lookup_260_14_69_2(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_260_14_69_3(info, labels, acc),
            [101, 109, 114, 97, 112, 112, 117, 105, 45, 112, 114, 111, 100] => {
                lookup_260_14_69_4(acc)
            }
            [101, 109, 114, 110, 111, 116, 101, 98, 111, 111, 107, 115, 45, 112, 114, 111, 100] => {
                lookup_260_14_69_5(acc)
            }
            [101, 109, 114, 115, 116, 117, 100, 105, 111, 45, 112, 114, 111, 100] => {
                lookup_260_14_69_6(acc)
            }
            [101, 120, 101, 99, 117, 116, 101, 45, 97, 112, 105] => lookup_260_14_69_7(acc),
            [115, 51] => lookup_260_14_69_8(acc),
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116] => {
                lookup_260_14_69_9(acc)
            }
            [115, 51, 45, 97, 99, 99, 101, 115, 115, 112, 111, 105, 110, 116, 45, 102, 105, 112, 115] => {
                lookup_260_14_69_10(acc)
            }
            [115, 51, 45, 100, 101, 112, 114, 101, 99, 97, 116, 101, 100] => {
                lookup_260_14_69_11(acc)
            }
            [115, 51, 45, 102, 105, 112, 115] => lookup_260_14_69_12(acc),
            [115, 51, 45, 111, 98, 106, 101, 99, 116, 45, 108, 97, 109, 98, 100, 97] => {
                lookup_260_14_69_13(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_260_14_69_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 102, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_14_0(info, labels, acc),
            [97, 105, 114, 102, 108, 111, 119] => lookup_260_14_1(info, labels, acc),
            [97, 112, 45, 101, 97, 115, 116, 45, 49] => lookup_260_14_2(info, labels, acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_260_14_3(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_260_14_4(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_260_14_5(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_14_6(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 50] => lookup_260_14_7(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_260_14_8(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_260_14_9(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_260_14_10(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 52] => {
                lookup_260_14_11(info, labels, acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_260_14_12(info, labels, acc)
            }
            [99, 97, 45, 119, 101, 115, 116, 45, 49] => lookup_260_14_13(info, labels, acc),
            [99, 111, 109, 112, 117, 116, 101] => lookup_260_14_14(info, labels, acc),
            [99, 111, 109, 112, 117, 116, 101, 45, 49] => lookup_260_14_15(info, labels, acc),
            [101, 108, 98] => lookup_260_14_16(info, labels, acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_260_14_17(info, labels, acc)
            }
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 50] => {
                lookup_260_14_18(info, labels, acc)
            }
            [101, 117, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_260_14_19(info, labels, acc),
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_14_20(info, labels, acc),
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 50] => lookup_260_14_21(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_260_14_22(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_260_14_23(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_260_14_24(info, labels, acc),
            [105, 108, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_260_14_25(info, labels, acc)
            }
            [109, 101, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_260_14_26(info, labels, acc)
            }
            [109, 101, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_14_27(info, labels, acc),
            [115, 51] => lookup_260_14_28(acc),
            [115, 51, 45, 49] => lookup_260_14_29(acc),
            [115, 51, 45, 97, 112, 45, 101, 97, 115, 116, 45, 49] => lookup_260_14_30(acc),
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_260_14_31(acc)
            }
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_260_14_32(acc)
            }
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_260_14_33(acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_14_34(acc),
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_260_14_35(acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_260_14_36(acc)
            }
            [115, 51, 45, 99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_260_14_37(acc)
            }
            [115, 51, 45, 101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_260_14_38(acc)
            }
            [115, 51, 45, 101, 117, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_260_14_39(acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_260_14_40(acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_260_14_41(acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_260_14_42(acc),
            [115, 51, 45, 101, 120, 116, 101, 114, 110, 97, 108, 45, 49] => lookup_260_14_43(acc),
            [115, 51, 45, 102, 105, 112, 115, 45, 117, 115, 45, 103, 111, 118, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_260_14_44(acc)
            }
            [115, 51, 45, 102, 105, 112, 115, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_260_14_45(acc)
            }
            [115, 51, 45, 103, 108, 111, 98, 97, 108] => lookup_260_14_46(info, labels, acc),
            [115, 51, 45, 109, 101, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_14_47(acc),
            [115, 51, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_260_14_48(acc),
            [115, 51, 45, 117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_260_14_49(acc),
            [115, 51, 45, 117, 115, 45, 103, 111, 118, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_260_14_50(acc)
            }
            [115, 51, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_260_14_51(acc)
            }
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_260_14_52(acc),
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_260_14_53(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_260_14_54(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_260_14_55(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_260_14_56(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_260_14_57(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_260_14_58(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_260_14_59(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_260_14_60(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_260_14_61(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => {
                lookup_260_14_62(acc)
            }
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_260_14_63(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_260_14_64(labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_260_14_65(info, labels, acc),
            [117, 115, 45, 103, 111, 118, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_260_14_66(info, labels, acc)
            }
            [117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_260_14_67(info, labels, acc)
            }
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_260_14_68(info, labels, acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_260_14_69(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_11_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_12_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_12_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_13_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_14_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_15_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_16_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_17_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_18_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_18_0(acc),
            [97, 117, 116, 104, 45, 102, 105, 112, 115] => lookup_260_15_18_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_19_0(acc),
            [97, 117, 116, 104, 45, 102, 105, 112, 115] => lookup_260_15_19_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104, 45, 102, 105, 112, 115] => lookup_260_15_20_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_21_0(acc),
            [97, 117, 116, 104, 45, 102, 105, 112, 115] => lookup_260_15_21_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_15_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 104] => lookup_260_15_22_0(acc),
            [97, 117, 116, 104, 45, 102, 105, 112, 115] => lookup_260_15_22_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [97, 102, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_15_0(info, labels, acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_260_15_1(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_260_15_2(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_260_15_3(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_15_4(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_260_15_5(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_260_15_6(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_260_15_7(info, labels, acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_260_15_8(info, labels, acc)
            }
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_260_15_9(info, labels, acc)
            }
            [101, 117, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_260_15_10(info, labels, acc),
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_15_11(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_260_15_12(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_260_15_13(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_260_15_14(info, labels, acc),
            [105, 108, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_260_15_15(info, labels, acc)
            }
            [109, 101, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_15_16(info, labels, acc),
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_260_15_17(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_260_15_18(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_260_15_19(info, labels, acc),
            [117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_260_15_20(info, labels, acc)
            }
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_260_15_21(info, labels, acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_260_15_22(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_16_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_16_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_22_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_22_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 1usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_22_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_22<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_260_22_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_27_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_27<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_27_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_30_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_30_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_30_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_30<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 97, 112, 112] => lookup_260_30_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_39_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_39_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_39<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108, 112, 104, 97] => lookup_260_39_0(acc),
            [98, 101, 116, 97] => lookup_260_39_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_54_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_54_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_54_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_54_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_54_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_54_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_54_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_54_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_54_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_54<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [98, 117, 105, 108, 100, 101, 114] => lookup_260_54_0(info, labels, acc),
            [100, 101, 118, 45, 98, 117, 105, 108, 100, 101, 114] => {
                lookup_260_54_1(info, labels, acc)
            }
            [115, 116, 103, 45, 98, 117, 105, 108, 100, 101, 114] => {
                lookup_260_54_2(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_57_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_57_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_57_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_57_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_57_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_57_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_57_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_57_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_57_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_57_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_57<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 99, 105] => lookup_260_57_1(info, labels, acc),
            [111, 99, 112] => lookup_260_57_2(info, labels, acc),
            [111, 99, 115] => lookup_260_57_3(info, labels, acc),
            wild => lookup_260_57_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_59_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_59<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_260_59_0(acc),
            [105, 110, 115, 116, 97, 110, 99, 101] => lookup_260_59_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_70_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_70<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_70_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_71_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_71<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_71_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_103<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 102, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_103_0(acc),
            [97, 112, 45, 101, 97, 115, 116, 45, 49] => lookup_260_103_1(acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_260_103_2(acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_260_103_3(acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_260_103_4(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_103_5(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_260_103_6(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_260_103_7(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_260_103_8(acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_260_103_9(acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_260_103_10(acc),
            [101, 117, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_260_103_11(acc),
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_103_12(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_260_103_13(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_260_103_14(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_260_103_15(acc),
            [105, 108, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_260_103_16(acc),
            [109, 101, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_260_103_17(acc),
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_260_103_18(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_260_103_19(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_260_103_20(acc),
            [117, 115, 45, 103, 111, 118, 45, 101, 97, 115, 116, 45, 49] => lookup_260_103_21(acc),
            [117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => lookup_260_103_22(acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_260_103_23(acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_260_103_24(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_110_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_110_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_110_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_110_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_110_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_110_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_110_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_110_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_110<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117, 45, 49] => lookup_260_110_0(acc),
            [101, 117, 45, 50] => lookup_260_110_1(acc),
            [101, 117, 45, 51] => lookup_260_110_2(acc),
            [101, 117, 45, 52] => lookup_260_110_3(acc),
            [117, 115, 45, 49] => lookup_260_110_4(acc),
            [117, 115, 45, 50] => lookup_260_110_5(acc),
            [117, 115, 45, 51] => lookup_260_110_6(acc),
            [117, 115, 45, 52] => lookup_260_110_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_115_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_115<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_260_115_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_192_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_192<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_260_192_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_194_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_194_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_194<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [114, 97, 103, 45, 99, 108, 111, 117, 100] => lookup_260_194_0(acc),
            [114, 97, 103, 45, 99, 108, 111, 117, 100, 45, 99, 104] => lookup_260_194_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_198_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_198_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_198<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99, 108, 111, 117, 100] => lookup_260_198_0(acc),
            [106, 99, 108, 111, 117, 100, 45, 118, 101, 114, 45, 106, 112, 99] => {
                lookup_260_198_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_261_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_261<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_260_261_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_262_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_262_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_262_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_262<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 115] => lookup_260_262_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_272_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_272_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_272_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_272_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_272<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 109, 98, 101, 114, 115] => lookup_260_272_0(acc),
            [110, 111, 100, 101, 98, 97, 108, 97, 110, 99, 101, 114] => {
                lookup_260_272_1(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_273_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_273<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_273_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_274_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_274<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 17usize;
    match labels.next() {
        Some(label) => match label {
            [105, 112] => lookup_260_274_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_275_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_275<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_260_275_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_279_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_279<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_260_279_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_282_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_282<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_260_282_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_297_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_297_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_297_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_297_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_297_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_297_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_297_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_297_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_297_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_297_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_297_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_297<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [99, 97, 114, 97, 99, 97, 108] => lookup_260_297_0(acc),
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_260_297_1(acc),
            [102, 101, 110, 116, 105, 103, 101, 114] => lookup_260_297_2(acc),
            [108, 121, 110, 120] => lookup_260_297_3(acc),
            [111, 99, 101, 108, 111, 116] => lookup_260_297_4(acc),
            [111, 110, 99, 105, 108, 108, 97] => lookup_260_297_5(acc),
            [111, 110, 122, 97] => lookup_260_297_6(acc),
            [115, 112, 104, 105, 110, 120] => lookup_260_297_7(acc),
            [118, 115] => lookup_260_297_8(acc),
            [120] => lookup_260_297_9(acc),
            [121, 97, 108, 105] => lookup_260_297_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_304_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_304<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_260_304_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_305_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_305<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 21usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_260_305_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_318_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_318<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_318_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_326_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_326<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [120, 101, 110] => lookup_260_326_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_328_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_328<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_260_328_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_334_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_334<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_334_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_337_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_337<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_260_337_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_345_0_0_0_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_345_0_0_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_345_0_0_0_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_345_0_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [48, 48, 49] => lookup_260_345_0_0_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_345_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    match labels.next() {
        Some(label) => match label {
            [116, 101, 115, 116] => lookup_260_345_0_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_345_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 111, 100, 101, 45, 98, 117, 105, 108, 100, 101, 114, 45, 115, 116, 103] => {
                lookup_260_345_0_0(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_345<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [112, 108, 97, 116, 102, 111, 114, 109] => lookup_260_345_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_376_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_376<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 105] => lookup_260_376_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_379_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_379<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 105, 116, 101] => lookup_260_379_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_388_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_388<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111] => lookup_260_388_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_395_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_395<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_260_395_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_260_396_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_396_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_396_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_396<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 100] => lookup_260_396_0(acc),
            [108, 111, 110] => lookup_260_396_1(acc),
            [114, 121, 100] => lookup_260_396_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_398_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_398<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_260_398_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_405_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_405<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 115] => lookup_260_405_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_410_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_410_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_410<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 50] => lookup_260_410_0(acc),
            [117, 50, 45, 108, 111, 99, 97, 108] => lookup_260_410_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_260<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48, 48, 49, 119, 119, 119] => lookup_260_0(acc),
            [48, 101, 109, 109] => lookup_260_1(info, labels, acc),
            [49, 56, 48, 114] => lookup_260_2(acc),
            [49, 107, 97, 112, 112] => lookup_260_3(acc),
            [51, 117, 116, 105, 108, 105, 116, 105, 101, 115] => lookup_260_4(acc),
            [52, 117] => lookup_260_5(acc),
            [97, 50, 104, 111, 115, 116, 101, 100] => lookup_260_6(acc),
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => {
                lookup_260_7(labels, acc)
            }
            [97, 102, 114, 105, 99, 97] => lookup_260_8(acc),
            [97, 105, 114, 107, 105, 116, 97, 112, 112, 115] => lookup_260_9(acc),
            [97, 105, 114, 107, 105, 116, 97, 112, 112, 115, 45, 97, 117] => lookup_260_10(acc),
            [97, 105, 118, 101, 110, 99, 108, 111, 117, 100] => lookup_260_11(acc),
            [97, 108, 105, 97, 115, 101, 115, 49, 50, 49] => lookup_260_12(acc),
            [97, 108, 112, 104, 97, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_260_13(acc)
            }
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_260_14(info, labels, acc),
            [97, 109, 97, 122, 111, 110, 99, 111, 103, 110, 105, 116, 111] => {
                lookup_260_15(info, labels, acc)
            }
            [97, 109, 112, 108, 105, 102, 121, 97, 112, 112] => lookup_260_16(info, labels, acc),
            [97, 109, 115, 99, 111, 109, 112, 117, 116, 101] => lookup_260_17(acc),
            [97, 112, 112, 99, 104, 105, 122, 105] => lookup_260_18(acc),
            [97, 112, 112, 108, 105, 110, 122, 105] => lookup_260_19(acc),
            [97, 112, 112, 115, 112, 97, 99, 101, 104, 111, 115, 116, 101, 100] => {
                lookup_260_20(acc)
            }
            [97, 112, 112, 115, 112, 97, 99, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_260_21(acc)
            }
            [97, 112, 112, 115, 112, 111, 116] => lookup_260_22(labels, acc),
            [97, 114] => lookup_260_23(acc),
            [97, 116, 109, 101, 116, 97] => lookup_260_24(acc),
            [97, 117, 116, 104, 103, 101, 97, 114, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_260_25(acc)
            }
            [97, 117, 116, 104, 103, 101, 97, 114, 97, 112, 112, 115] => lookup_260_26(acc),
            [97, 119, 115, 97, 112, 112, 114, 117, 110, 110, 101, 114] => {
                lookup_260_27(info, labels, acc)
            }
            [97, 119, 115, 103, 108, 111, 98, 97, 108, 97, 99, 99, 101, 108, 101, 114, 97, 116, 111, 114] => {
                lookup_260_28(acc)
            }
            [97, 119, 115, 109, 112, 112, 108] => lookup_260_29(acc),
            [97, 122, 117, 114, 101] => lookup_260_30(info, labels, acc),
            [98, 97, 108, 101, 110, 97, 45, 100, 101, 118, 105, 99, 101, 115] => lookup_260_31(acc),
            [98, 97, 114, 115, 121, 99, 101, 110, 116, 101, 114] => lookup_260_32(acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_260_33(acc),
            [98, 101, 116, 97, 105, 110, 97, 98, 111, 120] => lookup_260_34(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_260_35(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_260_36(acc),
            [98, 108, 111, 103, 115, 121, 116, 101] => lookup_260_37(acc),
            [98, 108, 111, 120, 99, 109, 115] => lookup_260_38(acc),
            [98, 111, 117, 110, 116, 121, 45, 102, 117, 108, 108] => lookup_260_39(labels, acc),
            [98, 111, 117, 116, 105, 114] => lookup_260_40(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_260_41(acc),
            [98, 114] => lookup_260_42(acc),
            [98, 117, 105, 108, 116, 119, 105, 116, 104, 100, 97, 114, 107] => lookup_260_43(acc),
            [99, 97, 102, 106, 115] => lookup_260_44(acc),
            [99, 97, 110, 118, 97, 45, 97, 112, 112, 115] => lookup_260_45(acc),
            [99, 101, 99, 104, 105, 114, 101] => lookup_260_46(acc),
            [99, 102, 45, 105, 112, 102, 115] => lookup_260_47(acc),
            [99, 105, 115, 99, 111, 102, 114, 101, 97, 107] => lookup_260_48(acc),
            [99, 108, 111, 117, 100, 99, 111, 110, 116, 114, 111, 108, 97, 112, 112] => {
                lookup_260_49(acc)
            }
            [99, 108, 111, 117, 100, 99, 111, 110, 116, 114, 111, 108, 108, 101, 100] => {
                lookup_260_50(acc)
            }
            [99, 108, 111, 117, 100, 102, 108, 97, 114, 101, 45, 105, 112, 102, 115] => {
                lookup_260_51(acc)
            }
            [99, 110] => lookup_260_52(acc),
            [99, 111] => lookup_260_53(acc),
            [99, 111, 100, 101] => lookup_260_54(info, labels, acc),
            [99, 111, 100, 101, 115, 112, 111, 116] => lookup_260_55(acc),
            [99, 112, 115, 101, 114, 118, 101, 114] => lookup_260_56(acc),
            [99, 117, 115, 116, 111, 109, 101, 114, 45, 111, 99, 105] => {
                lookup_260_57(info, labels, acc)
            }
            [100, 97, 109, 110, 115, 101, 114, 118, 101, 114] => lookup_260_58(acc),
            [100, 97, 116, 97, 100, 101, 116, 101, 99, 116] => lookup_260_59(info, labels, acc),
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_260_60(acc),
            [100, 97, 116, 116, 111, 114, 101, 108, 97, 121] => lookup_260_61(acc),
            [100, 97, 116, 116, 111, 119, 101, 98] => lookup_260_62(acc),
            [100, 100, 110, 115, 53] => lookup_260_63(acc),
            [100, 100, 110, 115, 102, 114, 101, 101] => lookup_260_64(acc),
            [100, 100, 110, 115, 103, 101, 101, 107] => lookup_260_65(acc),
            [100, 100, 110, 115, 107, 105, 110, 103] => lookup_260_66(acc),
            [100, 100, 110, 115, 108, 105, 118, 101] => lookup_260_67(acc),
            [100, 101] => lookup_260_68(acc),
            [100, 101, 118, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_260_69(acc)
            }
            [100, 101, 118, 99, 100, 110, 97, 99, 99, 101, 115, 115, 111] => {
                lookup_260_70(info, labels, acc)
            }
            [100, 105, 103, 105, 116, 97, 108, 111, 99, 101, 97, 110, 115, 112, 97, 99, 101, 115] => {
                lookup_260_71(info, labels, acc)
            }
            [100, 105, 115, 99, 111, 114, 100, 115, 97, 121, 115] => lookup_260_72(acc),
            [100, 105, 115, 99, 111, 114, 100, 115, 101, 122] => lookup_260_73(acc),
            [100, 105, 116, 99, 104, 121, 111, 117, 114, 105, 112] => lookup_260_74(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_260_75(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_260_76(acc),
            [100, 110, 115, 105, 115, 107, 105, 110, 107, 121] => lookup_260_77(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_260_78(acc),
            [100, 111, 106, 105, 110] => lookup_260_79(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_260_80(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_260_81(acc),
            [100, 111, 112, 97, 97, 115] => lookup_260_82(acc),
            [100, 114, 97, 121, 100, 100, 110, 115] => lookup_260_83(acc),
            [100, 114, 101, 97, 109, 104, 111, 115, 116, 101, 114, 115] => lookup_260_84(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_260_85(acc),
            [100, 121, 110, 45, 111, 45, 115, 97, 117, 114] => lookup_260_86(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_260_87(acc),
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 104, 111, 109, 101] => {
                lookup_260_88(acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 119, 111, 114, 107] => {
                lookup_260_89(acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 98, 108, 111, 103] => lookup_260_90(acc),
            [100, 121, 110, 100, 110, 115, 45, 102, 114, 101, 101] => lookup_260_91(acc),
            [100, 121, 110, 100, 110, 115, 45, 104, 111, 109, 101] => lookup_260_92(acc),
            [100, 121, 110, 100, 110, 115, 45, 105, 112] => lookup_260_93(acc),
            [100, 121, 110, 100, 110, 115, 45, 109, 97, 105, 108] => lookup_260_94(acc),
            [100, 121, 110, 100, 110, 115, 45, 111, 102, 102, 105, 99, 101] => lookup_260_95(acc),
            [100, 121, 110, 100, 110, 115, 45, 112, 105, 99, 115] => lookup_260_96(acc),
            [100, 121, 110, 100, 110, 115, 45, 114, 101, 109, 111, 116, 101] => lookup_260_97(acc),
            [100, 121, 110, 100, 110, 115, 45, 115, 101, 114, 118, 101, 114] => lookup_260_98(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 101, 98] => lookup_260_99(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 105, 107, 105] => lookup_260_100(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 111, 114, 107] => lookup_260_101(acc),
            [100, 121, 110, 110, 115] => lookup_260_102(acc),
            [101, 108, 97, 115, 116, 105, 99, 98, 101, 97, 110, 115, 116, 97, 108, 107] => {
                lookup_260_103(labels, acc)
            }
            [101, 110, 99, 111, 114, 101, 97, 112, 105] => lookup_260_104(acc),
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 105, 115, 111, 110] => {
                lookup_260_105(acc)
            }
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 115, 105, 111, 110] => {
                lookup_260_106(acc)
            }
            [101, 115, 116, 45, 108, 101, 45, 112, 97, 116, 114, 111, 110] => lookup_260_107(acc),
            [101, 115, 116, 45, 109, 111, 110, 45, 98, 108, 111, 103, 117, 101, 117, 114] => {
                lookup_260_108(acc)
            }
            [101, 117] => lookup_260_109(acc),
            [101, 118, 101, 110, 110, 111, 100, 101] => lookup_260_110(info, labels, acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_260_111(acc),
            [102, 97, 115, 116, 108, 121, 45, 101, 100, 103, 101] => lookup_260_112(acc),
            [102, 97, 115, 116, 108, 121, 45, 116, 101, 114, 114, 97, 114, 105, 117, 109] => {
                lookup_260_113(acc)
            }
            [102, 97, 115, 116, 118, 112, 115, 45, 115, 101, 114, 118, 101, 114] => {
                lookup_260_114(acc)
            }
            [102, 98, 115, 98, 120] => lookup_260_115(info, labels, acc),
            [102, 105, 114, 101, 98, 97, 115, 101, 97, 112, 112] => lookup_260_116(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_260_117(acc)
            }
            [102, 108, 100, 114, 118] => lookup_260_118(acc),
            [102, 111, 114, 103, 101, 98, 108, 111, 99, 107, 115] => lookup_260_119(acc),
            [102, 114, 97, 109, 101, 114, 99, 97, 110, 118, 97, 115] => lookup_260_120(acc),
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_260_121(acc),
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_260_122(acc),
            [102, 114, 101, 101, 109, 121, 105, 112] => lookup_260_123(acc),
            [102, 114, 111, 109, 45, 97, 107] => lookup_260_124(acc),
            [102, 114, 111, 109, 45, 97, 108] => lookup_260_125(acc),
            [102, 114, 111, 109, 45, 97, 114] => lookup_260_126(acc),
            [102, 114, 111, 109, 45, 99, 97] => lookup_260_127(acc),
            [102, 114, 111, 109, 45, 99, 116] => lookup_260_128(acc),
            [102, 114, 111, 109, 45, 100, 99] => lookup_260_129(acc),
            [102, 114, 111, 109, 45, 100, 101] => lookup_260_130(acc),
            [102, 114, 111, 109, 45, 102, 108] => lookup_260_131(acc),
            [102, 114, 111, 109, 45, 103, 97] => lookup_260_132(acc),
            [102, 114, 111, 109, 45, 104, 105] => lookup_260_133(acc),
            [102, 114, 111, 109, 45, 105, 97] => lookup_260_134(acc),
            [102, 114, 111, 109, 45, 105, 100] => lookup_260_135(acc),
            [102, 114, 111, 109, 45, 105, 108] => lookup_260_136(acc),
            [102, 114, 111, 109, 45, 105, 110] => lookup_260_137(acc),
            [102, 114, 111, 109, 45, 107, 115] => lookup_260_138(acc),
            [102, 114, 111, 109, 45, 107, 121] => lookup_260_139(acc),
            [102, 114, 111, 109, 45, 109, 97] => lookup_260_140(acc),
            [102, 114, 111, 109, 45, 109, 100] => lookup_260_141(acc),
            [102, 114, 111, 109, 45, 109, 105] => lookup_260_142(acc),
            [102, 114, 111, 109, 45, 109, 110] => lookup_260_143(acc),
            [102, 114, 111, 109, 45, 109, 111] => lookup_260_144(acc),
            [102, 114, 111, 109, 45, 109, 115] => lookup_260_145(acc),
            [102, 114, 111, 109, 45, 109, 116] => lookup_260_146(acc),
            [102, 114, 111, 109, 45, 110, 99] => lookup_260_147(acc),
            [102, 114, 111, 109, 45, 110, 100] => lookup_260_148(acc),
            [102, 114, 111, 109, 45, 110, 101] => lookup_260_149(acc),
            [102, 114, 111, 109, 45, 110, 104] => lookup_260_150(acc),
            [102, 114, 111, 109, 45, 110, 106] => lookup_260_151(acc),
            [102, 114, 111, 109, 45, 110, 109] => lookup_260_152(acc),
            [102, 114, 111, 109, 45, 110, 118] => lookup_260_153(acc),
            [102, 114, 111, 109, 45, 111, 104] => lookup_260_154(acc),
            [102, 114, 111, 109, 45, 111, 107] => lookup_260_155(acc),
            [102, 114, 111, 109, 45, 111, 114] => lookup_260_156(acc),
            [102, 114, 111, 109, 45, 112, 97] => lookup_260_157(acc),
            [102, 114, 111, 109, 45, 112, 114] => lookup_260_158(acc),
            [102, 114, 111, 109, 45, 114, 105] => lookup_260_159(acc),
            [102, 114, 111, 109, 45, 115, 99] => lookup_260_160(acc),
            [102, 114, 111, 109, 45, 115, 100] => lookup_260_161(acc),
            [102, 114, 111, 109, 45, 116, 110] => lookup_260_162(acc),
            [102, 114, 111, 109, 45, 116, 120] => lookup_260_163(acc),
            [102, 114, 111, 109, 45, 117, 116] => lookup_260_164(acc),
            [102, 114, 111, 109, 45, 118, 97] => lookup_260_165(acc),
            [102, 114, 111, 109, 45, 118, 116] => lookup_260_166(acc),
            [102, 114, 111, 109, 45, 119, 97] => lookup_260_167(acc),
            [102, 114, 111, 109, 45, 119, 105] => lookup_260_168(acc),
            [102, 114, 111, 109, 45, 119, 118] => lookup_260_169(acc),
            [102, 114, 111, 109, 45, 119, 121] => lookup_260_170(acc),
            [103, 101, 101, 107, 103, 97, 108, 97, 120, 121] => lookup_260_171(acc),
            [103, 101, 110, 116, 97, 112, 112, 115] => lookup_260_172(acc),
            [103, 101, 110, 116, 108, 101, 110, 116, 97, 112, 105, 115] => lookup_260_173(acc),
            [103, 101, 116, 109, 121, 105, 112] => lookup_260_174(acc),
            [103, 105, 105, 122, 101] => lookup_260_175(acc),
            [103, 105, 116, 104, 117, 98, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_260_176(acc)
            }
            [103, 108, 101, 101, 122, 101] => lookup_260_177(acc),
            [103, 111, 111, 103, 108, 101, 97, 112, 105, 115] => lookup_260_178(acc),
            [103, 111, 111, 103, 108, 101, 99, 111, 100, 101] => lookup_260_179(acc),
            [103, 111, 116, 100, 110, 115] => lookup_260_180(acc),
            [103, 111, 116, 112, 97, 110, 116, 104, 101, 111, 110] => lookup_260_181(acc),
            [103, 114] => lookup_260_182(acc),
            [104, 101, 97, 108, 116, 104, 45, 99, 97, 114, 101, 114, 101, 102, 111, 114, 109] => {
                lookup_260_183(acc)
            }
            [104, 101, 114, 111, 107, 117, 97, 112, 112] => lookup_260_184(acc),
            [104, 101, 114, 111, 107, 117, 115, 115, 108] => lookup_260_185(acc),
            [104, 107] => lookup_260_186(acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_260_187(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_260_188(acc),
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 109, 97, 99] => {
                lookup_260_189(acc)
            }
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 112, 99] => {
                lookup_260_190(acc)
            }
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_260_191(acc),
            [104, 111, 115, 116, 101, 100, 45, 98, 121, 45, 112, 114, 101, 118, 105, 100, 101, 114] => {
                lookup_260_192(info, labels, acc)
            }
            [104, 111, 115, 116, 101, 100, 112, 105] => lookup_260_193(acc),
            [104, 111, 115, 116, 101, 117, 114] => lookup_260_194(info, labels, acc),
            [104, 111, 116, 101, 108, 119, 105, 116, 104, 102, 108, 105, 103, 104, 116] => {
                lookup_260_195(acc)
            }
            [104, 117] => lookup_260_196(acc),
            [105, 97, 109, 97, 108, 108, 97, 109, 97] => lookup_260_197(acc),
            [105, 107, 45, 115, 101, 114, 118, 101, 114] => lookup_260_198(info, labels, acc),
            [105, 109, 112, 101, 114, 116, 114, 105, 120] => lookup_260_199(acc),
            [105, 109, 112, 101, 114, 116, 114, 105, 120, 99, 100, 110] => lookup_260_200(acc),
            [105, 115, 45, 97, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => lookup_260_201(acc),
            [105, 115, 45, 97, 45, 98, 108, 111, 103, 103, 101, 114] => lookup_260_202(acc),
            [105, 115, 45, 97, 45, 98, 111, 111, 107, 107, 101, 101, 112, 101, 114] => {
                lookup_260_203(acc)
            }
            [105, 115, 45, 97, 45, 98, 117, 108, 108, 115, 45, 102, 97, 110] => lookup_260_204(acc),
            [105, 115, 45, 97, 45, 99, 97, 116, 101, 114, 101, 114] => lookup_260_205(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_260_206(acc),
            [105, 115, 45, 97, 45, 99, 111, 110, 115, 101, 114, 118, 97, 116, 105, 118, 101] => {
                lookup_260_207(acc)
            }
            [105, 115, 45, 97, 45, 99, 112, 97] => lookup_260_208(acc),
            [105, 115, 45, 97, 45, 99, 117, 98, 105, 99, 108, 101, 45, 115, 108, 97, 118, 101] => {
                lookup_260_209(acc)
            }
            [105, 115, 45, 97, 45, 100, 101, 109, 111, 99, 114, 97, 116] => lookup_260_210(acc),
            [105, 115, 45, 97, 45, 100, 101, 115, 105, 103, 110, 101, 114] => lookup_260_211(acc),
            [105, 115, 45, 97, 45, 100, 111, 99, 116, 111, 114] => lookup_260_212(acc),
            [105, 115, 45, 97, 45, 102, 105, 110, 97, 110, 99, 105, 97, 108, 97, 100, 118, 105, 115, 111, 114] => {
                lookup_260_213(acc)
            }
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_260_214(acc),
            [105, 115, 45, 97, 45, 103, 114, 101, 101, 110] => lookup_260_215(acc),
            [105, 115, 45, 97, 45, 103, 117, 114, 117] => lookup_260_216(acc),
            [105, 115, 45, 97, 45, 104, 97, 114, 100, 45, 119, 111, 114, 107, 101, 114] => {
                lookup_260_217(acc)
            }
            [105, 115, 45, 97, 45, 104, 117, 110, 116, 101, 114] => lookup_260_218(acc),
            [105, 115, 45, 97, 45, 108, 97, 110, 100, 115, 99, 97, 112, 101, 114] => {
                lookup_260_219(acc)
            }
            [105, 115, 45, 97, 45, 108, 97, 119, 121, 101, 114] => lookup_260_220(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 97, 108] => lookup_260_221(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 116, 97, 114, 105, 97, 110] => {
                lookup_260_222(acc)
            }
            [105, 115, 45, 97, 45, 108, 108, 97, 109, 97] => lookup_260_223(acc),
            [105, 115, 45, 97, 45, 109, 117, 115, 105, 99, 105, 97, 110] => lookup_260_224(acc),
            [105, 115, 45, 97, 45, 110, 97, 115, 99, 97, 114, 102, 97, 110] => lookup_260_225(acc),
            [105, 115, 45, 97, 45, 110, 117, 114, 115, 101] => lookup_260_226(acc),
            [105, 115, 45, 97, 45, 112, 97, 105, 110, 116, 101, 114] => lookup_260_227(acc),
            [105, 115, 45, 97, 45, 112, 101, 114, 115, 111, 110, 97, 108, 116, 114, 97, 105, 110, 101, 114] => {
                lookup_260_228(acc)
            }
            [105, 115, 45, 97, 45, 112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 101, 114] => {
                lookup_260_229(acc)
            }
            [105, 115, 45, 97, 45, 112, 108, 97, 121, 101, 114] => lookup_260_230(acc),
            [105, 115, 45, 97, 45, 114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => {
                lookup_260_231(acc)
            }
            [105, 115, 45, 97, 45, 114, 111, 99, 107, 115, 116, 97, 114] => lookup_260_232(acc),
            [105, 115, 45, 97, 45, 115, 111, 99, 105, 97, 108, 105, 115, 116] => {
                lookup_260_233(acc)
            }
            [105, 115, 45, 97, 45, 115, 116, 117, 100, 101, 110, 116] => lookup_260_234(acc),
            [105, 115, 45, 97, 45, 116, 101, 97, 99, 104, 101, 114] => lookup_260_235(acc),
            [105, 115, 45, 97, 45, 116, 101, 99, 104, 105, 101] => lookup_260_236(acc),
            [105, 115, 45, 97, 45, 116, 104, 101, 114, 97, 112, 105, 115, 116] => {
                lookup_260_237(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => {
                lookup_260_238(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 111, 114] => lookup_260_239(acc),
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 114, 101, 115, 115] => lookup_260_240(acc),
            [105, 115, 45, 97, 110, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => {
                lookup_260_241(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 114, 116, 105, 115, 116] => lookup_260_242(acc),
            [105, 115, 45, 97, 110, 45, 101, 110, 103, 105, 110, 101, 101, 114] => {
                lookup_260_243(acc)
            }
            [105, 115, 45, 97, 110, 45, 101, 110, 116, 101, 114, 116, 97, 105, 110, 101, 114] => {
                lookup_260_244(acc)
            }
            [105, 115, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => lookup_260_245(acc),
            [105, 115, 45, 103, 111, 110, 101] => lookup_260_246(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 97, 110, 105, 109, 101] => lookup_260_247(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 115] => lookup_260_248(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 116, 111, 111, 110, 115] => {
                lookup_260_249(acc)
            }
            [105, 115, 45, 105, 110, 116, 111, 45, 103, 97, 109, 101, 115] => lookup_260_250(acc),
            [105, 115, 45, 108, 101, 101, 116] => lookup_260_251(acc),
            [105, 115, 45, 110, 111, 116, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => {
                lookup_260_252(acc)
            }
            [105, 115, 45, 115, 108, 105, 99, 107] => lookup_260_253(acc),
            [105, 115, 45, 117, 98, 101, 114, 108, 101, 101, 116] => lookup_260_254(acc),
            [105, 115, 45, 119, 105, 116, 104, 45, 116, 104, 101, 98, 97, 110, 100] => {
                lookup_260_255(acc)
            }
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_260_256(acc),
            [105, 115, 97, 45, 104, 111, 99, 107, 101, 121, 110, 117, 116] => lookup_260_257(acc),
            [105, 115, 115, 109, 97, 114, 116, 101, 114, 116, 104, 97, 110, 121, 111, 117] => {
                lookup_260_258(acc)
            }
            [105, 116] => lookup_260_259(acc),
            [106, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_260_260(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_260_261(info, labels, acc),
            [106, 111, 121, 101, 110, 116] => lookup_260_262(info, labels, acc),
            [106, 112, 110] => lookup_260_263(acc),
            [107, 97, 115, 115, 101, 114, 118, 101, 114] => lookup_260_264(acc),
            [107, 105, 108, 97, 116, 105, 114, 111, 110] => lookup_260_265(acc),
            [107, 111, 122, 111, 119] => lookup_260_266(acc),
            [107, 114] => lookup_260_267(acc),
            [107, 116, 105, 115, 116, 111, 114, 121] => lookup_260_268(acc),
            [108, 97, 100, 101, 115, 107] => lookup_260_269(acc),
            [108, 105, 107, 101, 115, 45, 112, 105, 101] => lookup_260_270(acc),
            [108, 105, 107, 101, 115, 99, 97, 110, 100, 121] => lookup_260_271(acc),
            [108, 105, 110, 111, 100, 101] => lookup_260_272(info, labels, acc),
            [108, 105, 110, 111, 100, 101, 111, 98, 106, 101, 99, 116, 115] => {
                lookup_260_273(info, labels, acc)
            }
            [108, 105, 110, 111, 100, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_260_274(info, labels, acc)
            }
            [108, 109, 112, 109] => lookup_260_275(info, labels, acc),
            [108, 111, 103, 111, 105, 112] => lookup_260_276(acc),
            [108, 111, 115, 101, 121, 111, 117, 114, 105, 112] => lookup_260_277(acc),
            [108, 112, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_260_278(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_260_279(info, labels, acc)
            }
            [109, 97, 122, 101, 112, 108, 97, 121] => lookup_260_280(acc),
            [109, 101, 115, 115, 119, 105, 116, 104, 100, 110, 115] => lookup_260_281(acc),
            [109, 101, 116, 101, 111, 114, 97, 112, 112] => lookup_260_282(labels, acc),
            [109, 101, 120] => lookup_260_283(acc),
            [109, 105, 110, 105, 115, 101, 114, 118, 101, 114] => lookup_260_284(acc),
            [109, 121, 97, 99, 116, 105, 118, 101, 100, 105, 114, 101, 99, 116, 111, 114, 121] => {
                lookup_260_285(acc)
            }
            [109, 121, 97, 115, 117, 115, 116, 111, 114] => lookup_260_286(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_260_287(acc),
            [109, 121, 100, 111, 98, 105, 115, 115] => lookup_260_288(acc),
            [109, 121, 100, 114, 111, 98, 111] => lookup_260_289(acc),
            [109, 121, 105, 112, 104, 111, 115, 116] => lookup_260_290(acc),
            [109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => lookup_260_291(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_260_292(acc)
            }
            [109, 121, 115, 104, 111, 112, 98, 108, 111, 99, 107, 115] => lookup_260_293(acc),
            [109, 121, 115, 104, 111, 112, 105, 102, 121] => lookup_260_294(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_260_295(acc),
            [109, 121, 116, 97, 98, 105, 116] => lookup_260_296(acc),
            [109, 121, 116, 104, 105, 99, 45, 98, 101, 97, 115, 116, 115] => {
                lookup_260_297(info, labels, acc)
            }
            [109, 121, 116, 117, 108, 101, 97, 112] => lookup_260_298(acc),
            [109, 121, 118, 110, 99] => lookup_260_299(acc),
            [110, 101, 97, 116, 45, 117, 114, 108] => lookup_260_300(acc),
            [110, 101, 116, 45, 102, 114, 101, 97, 107, 115] => lookup_260_301(acc),
            [110, 102, 115, 104, 111, 115, 116] => lookup_260_302(acc),
            [110, 111] => lookup_260_303(acc),
            [110, 111, 115, 112, 97, 109, 112, 114, 111, 120, 121] => {
                lookup_260_304(info, labels, acc)
            }
            [111, 98, 115, 101, 114, 118, 97, 98, 108, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_260_305(info, labels, acc)
            }
            [111, 110, 45, 97, 112, 116, 105, 98, 108, 101] => lookup_260_306(acc),
            [111, 110, 102, 97, 98, 114, 105, 99, 97] => lookup_260_307(acc),
            [111, 110, 114, 101, 110, 100, 101, 114] => lookup_260_308(acc),
            [111, 110, 116, 104, 101, 119, 105, 102, 105] => lookup_260_309(acc),
            [111, 111, 103, 117, 121] => lookup_260_310(acc),
            [111, 112, 101, 114, 97, 117, 110, 105, 116, 101] => lookup_260_311(acc),
            [111, 114, 115, 105, 116, 101, 115] => lookup_260_312(acc),
            [111, 117, 116, 115, 121, 115, 116, 101, 109, 115, 99, 108, 111, 117, 100] => {
                lookup_260_313(acc)
            }
            [111, 119, 110, 112, 114, 111, 118, 105, 100, 101, 114] => lookup_260_314(acc),
            [112, 97, 103, 101, 102, 114, 111, 110, 116, 97, 112, 112] => lookup_260_315(acc),
            [112, 97, 103, 101, 115, 112, 101, 101, 100, 109, 111, 98, 105, 108, 105, 122, 101, 114] => {
                lookup_260_316(acc)
            }
            [112, 97, 103, 101, 120, 108] => lookup_260_317(acc),
            [112, 97, 121, 119, 104, 105, 114, 108] => lookup_260_318(info, labels, acc),
            [112, 103, 102, 111, 103] => lookup_260_319(acc),
            [112, 105, 120, 111, 108, 105, 110, 111] => lookup_260_320(acc),
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_260_321(acc),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110, 45, 99, 108, 111, 117, 100] => {
                lookup_260_322(acc)
            }
            [112, 108, 101, 115, 107, 110, 115] => lookup_260_323(acc),
            [112, 111, 105, 110, 116, 50, 116, 104, 105, 115] => lookup_260_324(acc),
            [112, 111, 115, 116, 109, 97, 110, 45, 101, 99, 104, 111] => lookup_260_325(acc),
            [112, 114, 103, 109, 114] => lookup_260_326(info, labels, acc),
            [112, 117, 98, 108, 105, 115, 104, 112, 114, 111, 120, 121] => lookup_260_327(acc),
            [112, 121, 116, 104, 111, 110, 97, 110, 121, 119, 104, 101, 114, 101] => {
                lookup_260_328(labels, acc)
            }
            [113, 97, 50] => lookup_260_329(acc),
            [113, 98, 117, 115, 101, 114] => lookup_260_330(acc),
            [113, 99] => lookup_260_331(acc),
            [113, 117, 97, 108, 105, 102, 105, 111, 97, 112, 112] => lookup_260_332(acc),
            [113, 117, 105, 99, 107, 115, 121, 116, 101, 115] => lookup_260_333(acc),
            [113, 117, 105, 112, 101, 108, 101, 109, 101, 110, 116, 115] => {
                lookup_260_334(info, labels, acc)
            }
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_260_335(acc),
            [114, 101, 109, 111, 116, 101, 119, 100] => lookup_260_336(acc),
            [114, 101, 110, 100, 101, 114] => lookup_260_337(info, labels, acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_260_338(acc),
            [114, 101, 115, 101, 114, 118, 101, 45, 111, 110, 108, 105, 110, 101] => {
                lookup_260_339(acc)
            }
            [114, 104, 99, 108, 111, 117, 100] => lookup_260_340(acc),
            [114, 117] => lookup_260_341(acc),
            [115, 97] => lookup_260_342(acc),
            [115, 97, 107, 117, 114, 97, 116, 97, 110] => lookup_260_343(acc),
            [115, 97, 107, 117, 114, 97, 119, 101, 98] => lookup_260_344(acc),
            [115, 97, 108, 101, 115, 102, 111, 114, 99, 101] => lookup_260_345(info, labels, acc),
            [115, 97, 118, 101, 115, 45, 116, 104, 101, 45, 119, 104, 97, 108, 101, 115] => {
                lookup_260_346(acc)
            }
            [115, 99, 114, 121, 115, 101, 99] => lookup_260_347(acc),
            [115, 101, 99, 117, 114, 105, 116, 121, 116, 97, 99, 116, 105, 99, 115] => {
                lookup_260_348(acc)
            }
            [115, 101, 108, 102, 105, 112] => lookup_260_349(acc),
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 108, 101, 115, 115] => {
                lookup_260_350(acc)
            }
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 117] => lookup_260_351(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_260_352(acc),
            [115, 101, 114, 118, 101, 98, 101, 101, 114] => lookup_260_353(acc),
            [115, 101, 114, 118, 101, 99, 111, 117, 110, 116, 101, 114, 115, 116, 114, 105, 107, 101] => {
                lookup_260_354(acc)
            }
            [115, 101, 114, 118, 101, 101, 120, 99, 104, 97, 110, 103, 101] => lookup_260_355(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_260_356(acc),
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_260_357(acc),
            [115, 101, 114, 118, 101, 104, 97, 108, 102, 108, 105, 102, 101] => lookup_260_358(acc),
            [115, 101, 114, 118, 101, 104, 116, 116, 112] => lookup_260_359(acc),
            [115, 101, 114, 118, 101, 104, 117, 109, 111, 117, 114] => lookup_260_360(acc),
            [115, 101, 114, 118, 101, 105, 114, 99] => lookup_260_361(acc),
            [115, 101, 114, 118, 101, 109, 112, 51] => lookup_260_362(acc),
            [115, 101, 114, 118, 101, 112, 50, 112] => lookup_260_363(acc),
            [115, 101, 114, 118, 101, 112, 105, 99, 115] => lookup_260_364(acc),
            [115, 101, 114, 118, 101, 113, 117, 97, 107, 101] => lookup_260_365(acc),
            [115, 101, 114, 118, 101, 115, 97, 114, 99, 97, 115, 109] => lookup_260_366(acc),
            [115, 104, 111, 112, 105, 116, 115, 105, 116, 101] => lookup_260_367(acc),
            [115, 105, 105, 105, 116, 101, 115] => lookup_260_368(acc),
            [115, 105, 109, 112, 108, 101, 45, 117, 114, 108] => lookup_260_369(acc),
            [115, 105, 109, 112, 108, 101, 115, 105, 116, 101] => lookup_260_370(acc),
            [115, 105, 110, 97, 97, 112, 112] => lookup_260_371(acc),
            [115, 107, 121, 103, 101, 97, 114, 97, 112, 112] => lookup_260_372(acc),
            [115, 109, 117, 115, 104, 99, 100, 110] => lookup_260_373(acc),
            [115, 112, 97, 99, 101, 45, 116, 111, 45, 114, 101, 110, 116] => lookup_260_374(acc),
            [115, 116, 97, 99, 107, 104, 101, 114, 111, 45, 110, 101, 116, 119, 111, 114, 107] => {
                lookup_260_375(acc)
            }
            [115, 116, 100, 108, 105, 98] => lookup_260_376(info, labels, acc),
            [115, 116, 114, 101, 97, 109, 108, 105, 116, 97, 112, 112] => lookup_260_377(acc),
            [115, 116, 117, 102, 102, 116, 111, 114, 101, 97, 100] => lookup_260_378(acc),
            [116, 98, 45, 104, 111, 115, 116, 105, 110, 103] => lookup_260_379(info, labels, acc),
            [116, 101, 97, 99, 104, 101, 115, 45, 121, 111, 103, 97] => lookup_260_380(acc),
            [116, 101, 109, 112, 45, 100, 110, 115] => lookup_260_381(acc),
            [116, 104, 101, 119, 111, 114, 107, 112, 99] => lookup_260_382(acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116, 100, 97, 116, 97] => lookup_260_383(acc),
            [116, 111, 119, 110, 110, 101, 119, 115, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_260_384(acc)
            }
            [116, 114, 121, 45, 115, 110, 111, 119, 112, 108, 111, 119] => lookup_260_385(acc),
            [116, 114, 121, 99, 108, 111, 117, 100, 102, 108, 97, 114, 101] => lookup_260_386(acc),
            [116, 117, 108, 101, 97, 112, 45, 112, 97, 114, 116, 110, 101, 114, 115] => {
                lookup_260_387(acc)
            }
            [116, 121, 112, 101, 102, 111, 114, 109] => lookup_260_388(info, labels, acc),
            [117, 107] => lookup_260_389(acc),
            [117, 110, 117, 115, 117, 97, 108, 112, 101, 114, 115, 111, 110] => lookup_260_390(acc),
            [117, 112, 115, 117, 110, 97, 112, 112] => lookup_260_391(acc),
            [117, 115] => lookup_260_392(acc),
            [117, 121] => lookup_260_393(acc),
            [118, 105, 112, 115, 105, 110, 97, 97, 112, 112] => lookup_260_394(acc),
            [118, 117, 108, 116, 114, 111, 98, 106, 101, 99, 116, 115] => {
                lookup_260_395(info, labels, acc)
            }
            [119, 97, 102, 97, 105, 99, 108, 111, 117, 100] => lookup_260_396(info, labels, acc),
            [119, 97, 102, 102, 108, 101, 99, 101, 108, 108] => lookup_260_397(acc),
            [119, 105, 97, 114, 100, 119, 101, 98] => lookup_260_398(info, labels, acc),
            [119, 105, 116, 104, 103, 111, 111, 103, 108, 101] => lookup_260_399(acc),
            [119, 105, 116, 104, 121, 111, 117, 116, 117, 98, 101] => lookup_260_400(acc),
            [119, 105, 120, 115, 105, 116, 101] => lookup_260_401(acc),
            [119, 111, 108, 116, 108, 97, 98, 45, 100, 101, 109, 111] => lookup_260_402(acc),
            [119, 111, 114, 107, 105, 115, 98, 111, 114, 105, 110, 103] => lookup_260_403(acc),
            [119, 112, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_260_404(acc),
            [119, 112, 101, 110, 103, 105, 110, 101, 112, 111, 119, 101, 114, 101, 100] => {
                lookup_260_405(labels, acc)
            }
            [119, 112, 104, 111, 115, 116, 101, 100, 109, 97, 105, 108] => lookup_260_406(acc),
            [119, 112, 109, 117, 99, 100, 110] => lookup_260_407(acc),
            [119, 114, 105, 116, 101, 115, 116, 104, 105, 115, 98, 108, 111, 103] => {
                lookup_260_408(acc)
            }
            [120, 48] => lookup_260_409(acc),
            [120, 110, 98, 97, 121] => lookup_260_410(labels, acc),
            [121, 111, 108, 97, 115, 105, 116, 101] => lookup_260_411(acc),
            [122, 97] => lookup_260_412(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_261() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_262() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_263<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 102, 111, 114, 117, 109] => lookup_263_0(acc),
            [110, 111, 103] => lookup_263_1(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_263_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_264() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_265() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_266() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_267() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_268() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_269() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_271() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_273() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_274_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_274_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_274<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101] => lookup_274_0(acc),
            [101, 108, 101, 109, 101, 110, 116, 111, 114] => lookup_274_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_275() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_276() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_277() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_278() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_281() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_282_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_282_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_282_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_282_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_282_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_282_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_282_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_282<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_282_0(acc),
            [99, 111] => lookup_282_1(acc),
            [101, 100] => lookup_282_2(acc),
            [102, 105] => lookup_282_3(acc),
            [103, 111] => lookup_282_4(acc),
            [111, 114] => lookup_282_5(acc),
            [115, 97] => lookup_282_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_283() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_284() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_285() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_286() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_287() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_288() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_289() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_290() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_291_0(acc),
            [101, 100, 117] => lookup_291_1(acc),
            [103, 111, 118] => lookup_291_2(acc),
            [105, 110, 102] => lookup_291_3(acc),
            [110, 101, 116] => lookup_291_4(acc),
            [111, 114, 103] => lookup_291_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_292() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_293_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_293_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_293_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_293_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_293_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_293_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_293<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_293_0(acc),
            [99, 111, 109] => lookup_293_1(acc),
            [101, 100, 117] => lookup_293_2(acc),
            [105, 110, 116] => lookup_293_3(acc),
            [110, 111, 109, 101] => lookup_293_4(acc),
            [111, 114, 103] => lookup_293_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_294_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_294_0(acc),
            [101, 100, 117] => lookup_294_1(acc),
            [110, 101, 116] => lookup_294_2(acc),
            [111, 114, 103] => lookup_294_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_295_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_295<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116, 104] => lookup_295_0(acc),
            [103, 111, 118] => lookup_295_1(acc),
            [105, 110, 102, 111] => lookup_295_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_296_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_2_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_296_2_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_296_2_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_296_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_296_2_0(acc),
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_296_2_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_296_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_296_0(acc),
            [98, 105, 122] => lookup_296_1(acc),
            [99, 111, 109] => lookup_296_2(labels, acc),
            [101, 107, 108, 111, 103, 101, 115] => lookup_296_3(acc),
            [103, 111, 118] => lookup_296_4(acc),
            [108, 116, 100] => lookup_296_5(acc),
            [109, 105, 108] => lookup_296_6(acc),
            [110, 101, 116] => lookup_296_7(acc),
            [111, 114, 103] => lookup_296_8(acc),
            [112, 114, 101, 115, 115] => lookup_296_9(acc),
            [112, 114, 111] => lookup_296_10(acc),
            [116, 109] => lookup_296_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_297() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_298() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_299_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_299_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_299_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_299_3_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_299_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_299_3_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_299_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_299_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_299_3_0(info, labels, acc),
            [99, 117, 115, 116, 111, 109] => lookup_299_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_299_4_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_299_4_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_299_4_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [102, 108, 116] => lookup_299_4_0_0(acc),
            [117, 115, 114] => lookup_299_4_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_299_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_299_4_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_299_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_299<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_299_0(acc),
            [99, 111] => lookup_299_1(acc),
            [101, 52] => lookup_299_2(acc),
            [109, 101, 116, 97, 99, 101, 110, 116, 114, 117, 109] => {
                lookup_299_3(info, labels, acc)
            }
            [109, 117, 110, 105] => lookup_299_4(info, labels, acc),
            [114, 101, 97, 108, 109] => lookup_299_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_300() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_301() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_303() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_304() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_306() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_308() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_309() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_310_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_310_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_310_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_11<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_310_11_0(acc),
            [100, 121, 110, 100, 110, 115] => lookup_310_11_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_310_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_24_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_24<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_310_24_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_310_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_310_30_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_310_31_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_31_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_310_31_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_310_31<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116] => lookup_310_31_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_310_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_59<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_310_59_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_310_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_68_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_68<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_310_68_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_310_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_310<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 101, 105, 116, 101] => lookup_310_0(acc),
            [49, 50, 104, 112] => lookup_310_1(acc),
            [50, 105, 120] => lookup_310_2(acc),
            [52, 108, 105, 109, 97] => lookup_310_3(acc),
            [98, 97, 114, 115, 121] => lookup_310_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_310_5(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_310_6(acc),
            [99, 111, 109] => lookup_310_7(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_310_8(acc),
            [99, 111, 115, 105, 100, 110, 115] => lookup_310_9(info, labels, acc),
            [100, 100, 45, 100, 110, 115] => lookup_310_10(acc),
            [100, 100, 110, 115, 115] => lookup_310_11(labels, acc),
            [100, 105, 115, 107, 117, 115, 115, 105, 111, 110, 115, 98, 101, 114, 101, 105, 99, 104] => {
                lookup_310_12(acc)
            }
            [100, 110, 115, 104, 111, 109, 101] => lookup_310_13(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101, 114] => lookup_310_14(acc),
            [100, 114, 97, 121, 45, 100, 110, 115] => lookup_310_15(acc),
            [100, 114, 97, 121, 100, 110, 115] => lookup_310_16(acc),
            [100, 121, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_310_17(acc),
            [100, 121, 110, 45, 105, 112, 50, 52] => lookup_310_18(acc),
            [100, 121, 110, 45, 118, 112, 110] => lookup_310_19(acc),
            [100, 121, 110, 97, 109, 105, 115, 99, 104, 101, 115, 45, 100, 110, 115] => {
                lookup_310_20(acc)
            }
            [100, 121, 110, 100, 110, 115, 49] => lookup_310_21(acc),
            [100, 121, 110, 118, 112, 110] => lookup_310_22(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_310_23(acc)
            }
            [102, 114, 117, 115, 107, 121] => lookup_310_24(info, labels, acc),
            [102, 117, 101, 116, 116, 101, 114, 116, 100, 97, 115, 110, 101, 116, 122] => {
                lookup_310_25(acc)
            }
            [103, 105, 116, 45, 114, 101, 112, 111, 115] => lookup_310_26(acc),
            [103, 111, 105, 112] => lookup_310_27(acc),
            [103, 195, 188, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110] => {
                lookup_310_28(acc)
            }
            [103, 195, 188, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110] => {
                lookup_310_29(acc)
            }
            [104, 111, 109, 101, 45, 119, 101, 98, 115, 101, 114, 118, 101, 114] => {
                lookup_310_30(labels, acc)
            }
            [104, 115, 45, 104, 101, 105, 108, 98, 114, 111, 110, 110] => {
                lookup_310_31(info, labels, acc)
            }
            [105, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_310_32(acc),
            [105, 110, 45, 98, 114, 98] => lookup_310_33(acc),
            [105, 110, 45, 98, 117, 116, 116, 101, 114] => lookup_310_34(acc),
            [105, 110, 45, 100, 115, 108] => lookup_310_35(acc),
            [105, 110, 45, 118, 112, 110] => lookup_310_36(acc),
            [105, 110, 116, 101, 114, 110, 101, 116, 45, 100, 110, 115] => lookup_310_37(acc),
            [105, 115, 101, 114, 118, 115, 99, 104, 117, 108, 101] => lookup_310_38(acc),
            [105, 115, 116, 101, 105, 110, 103, 101, 101, 107] => lookup_310_39(acc),
            [105, 115, 116, 109, 101, 105, 110] => lookup_310_40(acc),
            [107, 101, 121, 109, 97, 99, 104, 105, 110, 101] => lookup_310_41(acc),
            [108, 45, 111, 45, 103, 45, 105, 45, 110] => lookup_310_42(acc),
            [108, 99, 117, 98, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_310_43(acc),
            [108, 101, 98, 116, 105, 109, 110, 101, 116, 122] => lookup_310_44(acc),
            [108, 101, 105, 116, 117, 110, 103, 115, 101, 110] => lookup_310_45(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_310_46(acc),
            [108, 111, 103, 111, 105, 112] => lookup_310_47(acc),
            [109, 101, 105, 110, 45, 105, 115, 101, 114, 118] => lookup_310_48(acc),
            [109, 101, 105, 110, 45, 118, 105, 103, 111, 114] => lookup_310_49(acc),
            [109, 121, 45, 103, 97, 116, 101, 119, 97, 121] => lookup_310_50(acc),
            [109, 121, 45, 114, 111, 117, 116, 101, 114] => lookup_310_51(acc),
            [109, 121, 45, 118, 105, 103, 111, 114] => lookup_310_52(acc),
            [109, 121, 45, 119, 97, 110] => lookup_310_53(acc),
            [109, 121, 104, 111, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_310_54(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_310_55(acc),
            [115, 99, 104, 117, 108, 112, 108, 97, 116, 116, 102, 111, 114, 109] => {
                lookup_310_56(acc)
            }
            [115, 99, 104, 117, 108, 115, 101, 114, 118, 101, 114] => lookup_310_57(acc),
            [115, 112, 100, 110, 115] => lookup_310_58(acc),
            [115, 112, 101, 101, 100, 112, 97, 114, 116, 110, 101, 114] => {
                lookup_310_59(info, labels, acc)
            }
            [115, 113, 117, 97, 114, 101, 55] => lookup_310_60(acc),
            [115, 118, 110, 45, 114, 101, 112, 111, 115] => lookup_310_61(acc),
            [115, 121, 110, 111, 45, 100, 115] => lookup_310_62(acc),
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => {
                lookup_310_63(acc)
            }
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 115] => lookup_310_64(acc),
            [116, 97, 105, 102, 117, 110, 45, 100, 110, 115] => lookup_310_65(acc),
            [116, 101, 115, 116, 45, 105, 115, 101, 114, 118] => lookup_310_66(acc),
            [116, 114, 97, 101, 117, 109, 116, 103, 101, 114, 97, 100, 101] => lookup_310_67(acc),
            [117, 98, 101, 114, 115, 112, 97, 99, 101] => lookup_310_68(info, labels, acc),
            [118, 105, 114, 116, 117, 97, 108, 45, 117, 115, 101, 114] => lookup_310_69(acc),
            [118, 105, 114, 116, 117, 97, 108, 117, 115, 101, 114] => lookup_310_70(acc),
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110, 45, 122, 118, 98] => {
                lookup_310_71(acc)
            }
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110, 45, 119, 111, 98] => {
                lookup_310_72(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_311() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_312() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_313() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_314() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_315() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_316() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_317() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_318() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_320() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_321() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_322() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_323_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_323<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 115, 115] => lookup_323_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_324_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_324_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_324_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_10_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_324_10_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_324_11_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_324_11_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_324_12_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_12_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_324_12_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_324_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_324_12_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_324_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_22_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_324_22_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_324_23_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_324_23_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_324_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_25_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324_25<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_324_25_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_324_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_324<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 99, 104, 97, 114, 115] => lookup_324_0(acc),
            [97, 117, 116, 111, 99, 111, 100, 101] => lookup_324_1(acc),
            [99, 117, 114, 118] => lookup_324_2(acc),
            [100, 101, 110, 111] => lookup_324_3(acc),
            [100, 101, 110, 111, 45, 115, 116, 97, 103, 105, 110, 103] => lookup_324_4(acc),
            [100, 101, 116, 97] => lookup_324_5(acc),
            [102, 108, 121] => lookup_324_6(acc),
            [103, 97, 116, 101, 119, 97, 121] => lookup_324_7(info, labels, acc),
            [103, 105, 116, 104, 117, 98, 112, 114, 101, 118, 105, 101, 119] => lookup_324_8(acc),
            [105, 115, 101, 114, 118] => lookup_324_9(acc),
            [108, 99, 108] => lookup_324_10(info, labels, acc),
            [108, 99, 108, 115, 116, 97, 103, 101] => lookup_324_11(info, labels, acc),
            [108, 111, 99, 97, 108, 99, 101, 114, 116] => lookup_324_12(info, labels, acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_324_13(acc),
            [109, 101, 100, 105, 97, 116, 101, 99, 104] => lookup_324_14(acc),
            [110, 103, 114, 111, 107] => lookup_324_15(acc),
            [110, 103, 114, 111, 107, 45, 102, 114, 101, 101] => lookup_324_16(acc),
            [112, 97, 103, 101, 115] => lookup_324_17(acc),
            [112, 97, 110, 101, 108] => lookup_324_18(acc),
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_324_19(acc),
            [114, 50] => lookup_324_20(acc),
            [115, 104, 105, 102, 116, 99, 114, 121, 112, 116, 111] => lookup_324_21(acc),
            [115, 116, 103] => lookup_324_22(info, labels, acc),
            [115, 116, 103, 115, 116, 97, 103, 101] => lookup_324_23(info, labels, acc),
            [118, 101, 114, 99, 101, 108] => lookup_324_24(acc),
            [119, 101, 98, 104, 97, 114, 101] => lookup_324_25(info, labels, acc),
            [119, 111, 114, 107, 101, 114, 115] => lookup_324_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_325() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_327() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_328_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_328_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 110, 100, 111, 110] => lookup_328_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_328<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 97, 112, 112, 115] => lookup_328_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_329() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_330() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_331() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_332() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_333() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_334() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_335() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_336_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_336_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_336_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_336_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_336_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_336_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_336_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_336<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 104, 106, 101, 109, 109, 101, 115, 105, 100, 101] => lookup_336_0(acc),
            [98, 105, 122] => lookup_336_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_336_2(acc),
            [99, 111] => lookup_336_3(acc),
            [102, 105, 114, 109] => lookup_336_4(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_336_5(acc),
            [114, 101, 103] => lookup_336_6(acc),
            [115, 116, 111, 114, 101] => lookup_336_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_337_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_337_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_337_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_337_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_337_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_337<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_337_0(acc),
            [101, 100, 117] => lookup_337_1(acc),
            [103, 111, 118] => lookup_337_2(acc),
            [110, 101, 116] => lookup_337_3(acc),
            [111, 114, 103] => lookup_337_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_338() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_339_0(acc),
            [99, 111, 109] => lookup_339_1(acc),
            [101, 100, 117] => lookup_339_2(acc),
            [103, 111, 98] => lookup_339_3(acc),
            [103, 111, 118] => lookup_339_4(acc),
            [109, 105, 108] => lookup_339_5(acc),
            [110, 101, 116] => lookup_339_6(acc),
            [111, 114, 103] => lookup_339_7(acc),
            [115, 108, 100] => lookup_339_8(acc),
            [119, 101, 98] => lookup_339_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_340() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_341() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_342() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_344() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_346() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_347() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_352() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_353() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_354_0(acc),
            [97, 115, 115, 111] => lookup_354_1(acc),
            [99, 111, 109] => lookup_354_2(acc),
            [101, 100, 117] => lookup_354_3(acc),
            [103, 111, 118] => lookup_354_4(acc),
            [110, 101, 116] => lookup_354_5(acc),
            [111, 114, 103] => lookup_354_6(acc),
            [112, 111, 108] => lookup_354_7(acc),
            [115, 111, 99] => lookup_354_8(acc),
            [116, 109] => lookup_354_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_355_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_355_0_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_355_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_355_0_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_355_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [98, 122, 122] => lookup_355_0_1(info, labels, acc),
            wild => lookup_355_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_355<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 112, 112, 115] => lookup_355_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_356() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_357_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_357_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 115, 101] => lookup_357_0(acc),
            [99, 111, 109] => lookup_357_1(acc),
            [101, 100, 117] => lookup_357_2(acc),
            [102, 105, 110] => lookup_357_3(acc),
            [103, 111, 98] => lookup_357_4(acc),
            [103, 111, 118] => lookup_357_5(acc),
            [105, 110, 102, 111] => lookup_357_6(acc),
            [107, 49, 50] => lookup_357_7(acc),
            [109, 101, 100] => lookup_357_8(acc),
            [109, 105, 108] => lookup_357_9(acc),
            [110, 101, 116] => lookup_357_10(acc),
            [111, 102, 102, 105, 99, 105, 97, 108] => lookup_357_11(acc),
            [111, 114, 103] => lookup_357_12(acc),
            [112, 114, 111] => lookup_357_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_358() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_360_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [103, 105, 116, 45, 112, 97, 103, 101, 115] => lookup_360_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_360<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 105, 116] => lookup_360_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_361_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_361<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_361_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_362_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_362_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_362_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_362_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_362_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_362_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_362_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_362_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_362_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_362_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_362_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_362_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_362<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 112] => lookup_362_0(acc),
            [99, 111, 109] => lookup_362_1(labels, acc),
            [101, 100, 117] => lookup_362_2(acc),
            [102, 105, 101] => lookup_362_3(acc),
            [103, 111, 118] => lookup_362_4(acc),
            [108, 105, 98] => lookup_362_5(acc),
            [109, 101, 100] => lookup_362_6(acc),
            [111, 114, 103] => lookup_362_7(acc),
            [112, 114, 105] => lookup_362_8(acc),
            [114, 105, 105, 107] => lookup_362_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_363_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_363_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_363_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_363_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_363_0(labels, acc),
            [101, 100, 117] => lookup_363_1(acc),
            [101, 117, 110] => lookup_363_2(acc),
            [103, 111, 118] => lookup_363_3(acc),
            [109, 105, 108] => lookup_363_4(acc),
            [110, 97, 109, 101] => lookup_363_5(acc),
            [110, 101, 116] => lookup_363_6(acc),
            [111, 114, 103] => lookup_363_7(acc),
            [115, 99, 105] => lookup_363_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_364() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_366() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_367() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_370() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_371() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_372_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_373() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_375_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_375_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_375_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_375_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_375_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 109, 105, 119, 101, 98] => lookup_375_0(acc),
            [99, 111, 109] => lookup_375_1(labels, acc),
            [101, 100, 117] => lookup_375_2(acc),
            [103, 111, 98] => lookup_375_3(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_375_4(acc),
            [110, 111, 109] => lookup_375_5(acc),
            [111, 114, 103] => lookup_375_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_376() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_377_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_377_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_377_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_377<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109, 112, 117, 116, 101] => lookup_377_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_378_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_378_0(acc),
            [99, 111, 109] => lookup_378_1(acc),
            [101, 100, 117] => lookup_378_2(acc),
            [103, 111, 118] => lookup_378_3(acc),
            [105, 110, 102, 111] => lookup_378_4(acc),
            [110, 97, 109, 101] => lookup_378_5(acc),
            [110, 101, 116] => lookup_378_6(acc),
            [111, 114, 103] => lookup_378_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_379_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_379_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_379_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_379_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_379_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_379_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_379_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_379_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_379_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_379_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_379_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_379_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_379_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_379<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 114, 107, 105, 116, 97, 112, 112, 115] => lookup_379_0(acc),
            [98, 97, 114, 115, 121] => lookup_379_1(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_379_2(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_379_3(acc),
            [100, 111, 103, 97, 100, 111] => lookup_379_4(info, labels, acc),
            [109, 121, 99, 100] => lookup_379_5(acc),
            [115, 112, 100, 110, 115] => lookup_379_6(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_379_7(info, labels, acc),
            [119, 101, 108, 108, 98, 101, 105, 110, 103, 122, 111, 110, 101] => lookup_379_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_380() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_381_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_381_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_381_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_381<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 114, 116, 121] => lookup_381_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_382_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_382_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_382<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_382_0(acc),
            [107, 111, 111, 98, 105, 110] => lookup_382_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_383() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_385() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_386() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_387() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_388() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_389() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_390() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_391_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_391<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_391_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_392() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_393() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_394() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_395_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_395<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 106] => lookup_395_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_396() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_397() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_398() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_399() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_400() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_403_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_403_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_403_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_403_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_403_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [102, 105] => lookup_403_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_403_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_403_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_403_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_403_4_0(acc),
            [112, 97, 97, 115] => lookup_403_4_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_403_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_403_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_403_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_403_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_403_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_403_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_403<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 107, 111, 116, 105, 115, 105, 118, 117] => lookup_403_0(acc),
            [97, 108, 97, 110, 100] => lookup_403_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_403_2(acc),
            [99, 108, 111, 117, 100, 112, 108, 97, 116, 102, 111, 114, 109] => {
                lookup_403_3(info, labels, acc)
            }
            [100, 97, 116, 97, 99, 101, 110, 116, 101, 114] => lookup_403_4(info, labels, acc),
            [100, 121] => lookup_403_5(acc),
            [104, 195, 164, 107, 107, 105, 110, 101, 110] => lookup_403_6(acc),
            [105, 107, 105] => lookup_403_7(acc),
            [107, 97, 112, 115, 105] => lookup_403_8(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_403_9(acc),
            [120, 110, 45, 45, 104, 107, 107, 105, 110, 101, 110, 45, 53, 119, 97] => {
                lookup_403_10(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_404() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_405() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_407() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_408() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_409_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_409<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_409_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_410() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_411() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_412() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_413() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_415() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_416() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_417_0(acc),
            [98, 105, 122] => lookup_417_1(acc),
            [99, 111, 109] => lookup_417_2(acc),
            [103, 111, 118] => lookup_417_3(acc),
            [105, 110, 102, 111] => lookup_417_4(acc),
            [109, 105, 108] => lookup_417_5(acc),
            [110, 97, 109, 101] => lookup_417_6(acc),
            [110, 101, 116] => lookup_417_7(acc),
            [111, 114, 103] => lookup_417_8(acc),
            [112, 114, 111] => lookup_417_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_418_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_418<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_418_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_419() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_420() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_424() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_425_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_425_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_425_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_425<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_425_0(acc),
            [101, 100, 117] => lookup_425_1(acc),
            [110, 101, 116] => lookup_425_2(acc),
            [111, 114, 103] => lookup_425_3(acc),
            [114, 97, 100, 105, 111] => lookup_425_4(acc),
            [117, 115, 101, 114] => lookup_425_5(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_426() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_427() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_428() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_429() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_431() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_432() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_434() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_435() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 31usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_436<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 115, 105, 116, 101, 119, 101, 98] => lookup_436_0(acc),
            [97, 101, 114, 111, 112, 111, 114, 116] => lookup_436_1(acc),
            [97, 115, 115, 111] => lookup_436_2(acc),
            [97, 118, 111, 99, 97, 116] => lookup_436_3(acc),
            [97, 118, 111, 117, 101, 115] => lookup_436_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_436_5(acc),
            [99, 99, 105] => lookup_436_6(acc),
            [99, 104, 97, 109, 98, 97, 103, 114, 105] => lookup_436_7(acc),
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115] => {
                lookup_436_8(acc)
            }
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115, 45, 101, 110, 45, 102, 114, 97, 110, 99, 101] => {
                lookup_436_9(acc)
            }
            [99, 111, 109] => lookup_436_10(acc),
            [100, 101, 100, 105, 98, 111, 120] => lookup_436_11(acc),
            [101, 110, 45, 114, 111, 111, 116] => lookup_436_12(acc),
            [101, 120, 112, 101, 114, 116, 115, 45, 99, 111, 109, 112, 116, 97, 98, 108, 101, 115] => {
                lookup_436_13(acc)
            }
            [102, 98, 120, 45, 111, 115] => lookup_436_14(acc),
            [102, 98, 120, 111, 115] => lookup_436_15(acc),
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_436_16(acc),
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_436_17(acc),
            [103, 111, 117, 112, 105, 108, 101] => lookup_436_18(acc),
            [103, 111, 117, 118] => lookup_436_19(acc),
            [103, 114, 101, 116, 97] => lookup_436_20(acc),
            [104, 117, 105, 115, 115, 105, 101, 114, 45, 106, 117, 115, 116, 105, 99, 101] => {
                lookup_436_21(acc)
            }
            [109, 101, 100, 101, 99, 105, 110] => lookup_436_22(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_436_23(acc),
            [110, 111, 109] => lookup_436_24(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_436_25(acc),
            [111, 110, 45, 119, 101, 98] => lookup_436_26(acc),
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110] => lookup_436_27(acc),
            [112, 111, 114, 116] => lookup_436_28(acc),
            [112, 114, 100] => lookup_436_29(acc),
            [116, 109] => lookup_436_30(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_436_31(acc),
            [121, 110, 104] => lookup_436_32(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_437() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_438() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_439() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_440() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_441() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_442() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_443() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_444() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_446() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_447() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_448() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_449() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_452() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_453() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_454() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_455<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 108, 101, 121] => lookup_455_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_456() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_457() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_458_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_458<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_458_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_459() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_460() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_461_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_461_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_461<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_461_0(acc),
            [103, 111, 118] => lookup_461_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_462_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_462<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 110, 112, 121] => lookup_462_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_463_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_463_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_463_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_463_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_463_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_463_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_463_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_463<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_463_0(acc),
            [101, 100, 117] => lookup_463_1(acc),
            [103, 111, 118] => lookup_463_2(acc),
            [109, 105, 108] => lookup_463_3(acc),
            [110, 101, 116] => lookup_463_4(acc),
            [111, 114, 103] => lookup_463_5(acc),
            [112, 118, 116] => lookup_463_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_464() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_466() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_467() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_469_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_469_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_469_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_469_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_469_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_469_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_469_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 101, 109, 111, 110] => lookup_469_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_469<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_469_0(acc),
            [99, 121, 97] => lookup_469_1(acc),
            [107, 97, 97, 115] => lookup_469_2(acc),
            [110, 101, 116] => lookup_469_3(acc),
            [111, 114, 103] => lookup_469_4(acc),
            [112, 97, 110, 101, 108] => lookup_469_5(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_470() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_471_0(acc),
            [101, 100, 117] => lookup_471_1(acc),
            [103, 111, 118] => lookup_471_2(acc),
            [109, 105, 108] => lookup_471_3(acc),
            [111, 114, 103] => lookup_471_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_472_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_472_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_472_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_472_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_472_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_472_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_472<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_472_0(acc),
            [101, 100, 117] => lookup_472_1(acc),
            [103, 111, 118] => lookup_472_2(acc),
            [108, 116, 100] => lookup_472_3(acc),
            [109, 111, 100] => lookup_472_4(acc),
            [111, 114, 103] => lookup_472_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_473() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_474() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_475() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_476() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_477_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_477_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_477_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_477_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_477_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_477_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_477_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_477<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_477_0(acc),
            [99, 111] => lookup_477_1(acc),
            [99, 111, 109] => lookup_477_2(acc),
            [101, 100, 117] => lookup_477_3(acc),
            [110, 101, 116] => lookup_477_4(acc),
            [111, 114, 103] => lookup_477_5(acc),
            [120, 120] => lookup_477_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_478() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_479() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_480() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_481() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_483() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_485() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_486() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_487_0(acc),
            [99, 111, 109] => lookup_487_1(acc),
            [101, 100, 117] => lookup_487_2(acc),
            [103, 111, 118] => lookup_487_3(acc),
            [110, 101, 116] => lookup_487_4(acc),
            [111, 114, 103] => lookup_487_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_488() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_489() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_490() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_491() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_492() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_493() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_494_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_494_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_494_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_494_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_494<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_494_0(acc),
            [116, 114, 97, 110, 115, 108, 97, 116, 101] => lookup_494_1(acc),
            [117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_494_2(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_495() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_496() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_498() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_499_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_499_0(acc),
            [97, 115, 115, 111] => lookup_499_1(acc),
            [99, 111, 109] => lookup_499_2(acc),
            [101, 100, 117] => lookup_499_3(acc),
            [109, 111, 98, 105] => lookup_499_4(acc),
            [110, 101, 116] => lookup_499_5(acc),
            [111, 114, 103] => lookup_499_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_500() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_501_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_501<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_501_0(acc),
            [99, 111, 109] => lookup_501_1(acc),
            [101, 100, 117] => lookup_501_2(acc),
            [103, 111, 118] => lookup_501_3(acc),
            [110, 101, 116] => lookup_501_4(acc),
            [111, 114, 103] => lookup_501_5(acc),
            [115, 105, 109, 112, 108, 101, 115, 105, 116, 101] => lookup_501_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_502() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_504() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_505() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_506() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_508_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_508<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_508_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_509() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_510_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_510_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_510_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_510_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_510_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_510_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_510_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_510_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_510_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_510_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_510<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103] => lookup_510_0(acc),
            [99, 111, 109] => lookup_510_1(acc),
            [100, 101] => lookup_510_2(acc),
            [101, 100, 117] => lookup_510_3(acc),
            [103, 111, 98] => lookup_510_4(acc),
            [105, 110, 100] => lookup_510_5(acc),
            [109, 105, 108] => lookup_510_6(acc),
            [110, 101, 116] => lookup_510_7(acc),
            [111, 114, 103] => lookup_510_8(acc),
            [116, 111] => lookup_510_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_511_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_511_0(acc),
            [101, 100, 117] => lookup_511_1(acc),
            [103, 111, 118] => lookup_511_2(acc),
            [103, 117, 97, 109] => lookup_511_3(acc),
            [105, 110, 102, 111] => lookup_511_4(acc),
            [110, 101, 116] => lookup_511_5(acc),
            [111, 114, 103] => lookup_511_6(acc),
            [119, 101, 98] => lookup_511_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_512() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_513() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_516() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_518() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_519_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_519_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_519_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_519_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_519_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_519_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_519_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_519<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101] => lookup_519_0(acc),
            [99, 111] => lookup_519_1(acc),
            [99, 111, 109] => lookup_519_2(acc),
            [101, 100, 117] => lookup_519_3(acc),
            [103, 111, 118] => lookup_519_4(acc),
            [110, 101, 116] => lookup_519_5(acc),
            [111, 114, 103] => lookup_519_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_520() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_521() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_522() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_523() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_525() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_527_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_527<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 114, 97] => lookup_527_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_528() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_529() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_530() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_531() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_532() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_534() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_535() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_536() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_537_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_537_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_537_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_537_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_537_0(acc),
            [99, 111, 109] => lookup_537_1(acc),
            [101, 100, 117] => lookup_537_2(acc),
            [103, 111, 118] => lookup_537_3(acc),
            [105, 100, 118] => lookup_537_4(acc),
            [105, 110, 99] => lookup_537_5(acc),
            [108, 116, 100] => lookup_537_6(acc),
            [110, 101, 116] => lookup_537_7(acc),
            [111, 114, 103] => lookup_537_8(acc),
            [115, 101, 99, 97, 97, 115] => lookup_537_9(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_537_10(acc),
            [120, 110, 45, 45, 99, 105, 113, 112, 110] => lookup_537_11(acc),
            [120, 110, 45, 45, 103, 109, 113, 48, 53, 48, 105] => lookup_537_12(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_537_13(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_537_14(acc),
            [120, 110, 45, 45, 108, 99, 118, 114, 51, 50, 100] => lookup_537_15(acc),
            [120, 110, 45, 45, 109, 107, 48, 97, 120, 105] => lookup_537_16(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_537_17(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_537_18(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 113, 51, 98] => lookup_537_19(acc),
            [120, 110, 45, 45, 116, 110, 48, 97, 103] => lookup_537_20(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_537_21(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 121, 52, 97] => lookup_537_22(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_537_23(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 118, 120] => lookup_537_24(acc),
            [228, 184, 170, 228, 186, 186] => lookup_537_25(acc),
            [229, 128, 139, 228, 186, 186] => lookup_537_26(acc),
            [229, 133, 172, 229, 143, 184] => lookup_537_27(acc),
            [230, 148, 191, 229, 186, 156] => lookup_537_28(acc),
            [230, 149, 142, 232, 130, 178] => lookup_537_29(acc),
            [230, 149, 153, 232, 130, 178] => lookup_537_30(acc),
            [231, 174, 135, 228, 186, 186] => lookup_537_31(acc),
            [231, 181, 132, 231, 185, 148] => lookup_537_32(acc),
            [231, 181, 132, 231, 187, 135] => lookup_537_33(acc),
            [231, 182, 178, 231, 181, 161] => lookup_537_34(acc),
            [231, 182, 178, 231, 187, 156] => lookup_537_35(acc),
            [231, 187, 132, 231, 185, 148] => lookup_537_36(acc),
            [231, 187, 132, 231, 187, 135] => lookup_537_37(acc),
            [231, 189, 145, 231, 181, 161] => lookup_537_38(acc),
            [231, 189, 145, 231, 187, 156] => lookup_537_39(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_538() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_540_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_540_0(acc),
            [99, 111, 109] => lookup_540_1(acc),
            [101, 100, 117] => lookup_540_2(acc),
            [103, 111, 98] => lookup_540_3(acc),
            [109, 105, 108] => lookup_540_4(acc),
            [110, 101, 116] => lookup_540_5(acc),
            [111, 114, 103] => lookup_540_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_541() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_542() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_545() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_547() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_549() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_551_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_551_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_551_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_551_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_551_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_551_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_551_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_551_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_551_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_551_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_551_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_551<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_551_0(acc),
            [101, 97, 115, 121, 112, 97, 110, 101, 108] => lookup_551_1(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_551_2(acc),
            [102, 114, 101, 101, 115, 105, 116, 101] => lookup_551_3(acc),
            [104, 97, 108, 102] => lookup_551_4(acc),
            [106, 101, 108, 101] => lookup_551_5(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_551_6(acc),
            [109, 121, 102, 97, 115, 116] => lookup_551_7(acc),
            [112, 99, 108, 111, 117, 100] => lookup_551_8(acc),
            [116, 101, 109, 112, 117, 114, 108] => lookup_551_9(acc),
            [119, 112, 109, 117, 100, 101, 118] => lookup_551_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_552_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_552<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110, 99, 114, 97, 102, 116] => lookup_552_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_553() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_555() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_558_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_558_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_558_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_558_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_558_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_558_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_558<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_558_0(acc),
            [99, 111, 109] => lookup_558_1(acc),
            [102, 114, 101, 101] => lookup_558_2(acc),
            [102, 114, 111, 109] => lookup_558_3(acc),
            [105, 122] => lookup_558_4(acc),
            [110, 97, 109, 101] => lookup_558_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_559() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 117, 108, 116] => lookup_560_0(acc),
            [97, 114, 116] => lookup_560_1(acc),
            [97, 115, 115, 111] => lookup_560_2(acc),
            [99, 111, 109] => lookup_560_3(acc),
            [99, 111, 111, 112] => lookup_560_4(acc),
            [101, 100, 117] => lookup_560_5(acc),
            [102, 105, 114, 109] => lookup_560_6(acc),
            [103, 111, 117, 118] => lookup_560_7(acc),
            [105, 110, 102, 111] => lookup_560_8(acc),
            [109, 101, 100] => lookup_560_9(acc),
            [110, 101, 116] => lookup_560_10(acc),
            [111, 114, 103] => lookup_560_11(acc),
            [112, 101, 114, 115, 111] => lookup_560_12(acc),
            [112, 111, 108] => lookup_560_13(acc),
            [112, 114, 111] => lookup_560_14(acc),
            [114, 101, 108] => lookup_560_15(acc),
            [115, 104, 111, 112] => lookup_560_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_561_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_561_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [50, 48, 48, 48] => lookup_561_0(acc),
            [97, 103, 114, 97, 114] => lookup_561_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_561_2(acc),
            [98, 111, 108, 116] => lookup_561_3(acc),
            [99, 97, 115, 105, 110, 111] => lookup_561_4(acc),
            [99, 105, 116, 121] => lookup_561_5(acc),
            [99, 111] => lookup_561_6(acc),
            [101, 114, 111, 116, 105, 99, 97] => lookup_561_7(acc),
            [101, 114, 111, 116, 105, 107, 97] => lookup_561_8(acc),
            [102, 105, 108, 109] => lookup_561_9(acc),
            [102, 111, 114, 117, 109] => lookup_561_10(acc),
            [103, 97, 109, 101, 115] => lookup_561_11(acc),
            [104, 111, 116, 101, 108] => lookup_561_12(acc),
            [105, 110, 102, 111] => lookup_561_13(acc),
            [105, 110, 103, 97, 116, 108, 97, 110] => lookup_561_14(acc),
            [106, 111, 103, 97, 115, 122] => lookup_561_15(acc),
            [107, 111, 110, 121, 118, 101, 108, 111] => lookup_561_16(acc),
            [108, 97, 107, 97, 115] => lookup_561_17(acc),
            [109, 101, 100, 105, 97] => lookup_561_18(acc),
            [110, 101, 119, 115] => lookup_561_19(acc),
            [111, 114, 103] => lookup_561_20(acc),
            [112, 114, 105, 118] => lookup_561_21(acc),
            [114, 101, 107, 108, 97, 109] => lookup_561_22(acc),
            [115, 101, 120] => lookup_561_23(acc),
            [115, 104, 111, 112] => lookup_561_24(acc),
            [115, 112, 111, 114, 116] => lookup_561_25(acc),
            [115, 117, 108, 105] => lookup_561_26(acc),
            [115, 122, 101, 120] => lookup_561_27(acc),
            [116, 109] => lookup_561_28(acc),
            [116, 111, 122, 115, 100, 101] => lookup_561_29(acc),
            [117, 116, 97, 122, 97, 115] => lookup_561_30(acc),
            [118, 105, 100, 101, 111] => lookup_561_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_562() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_563() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_564() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_566() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_567() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_569_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_569_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_569_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_569_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_569_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569_8_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_569_8_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_569_8_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_569_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 115, 115] => lookup_569_8_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_569_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_569_0(acc),
            [98, 105, 122] => lookup_569_1(acc),
            [99, 111] => lookup_569_2(labels, acc),
            [100, 101, 115, 97] => lookup_569_3(acc),
            [102, 108, 97, 112] => lookup_569_4(acc),
            [102, 111, 114, 116, 101] => lookup_569_5(acc),
            [103, 111] => lookup_569_6(acc),
            [109, 105, 108] => lookup_569_7(acc),
            [109, 121] => lookup_569_8(labels, acc),
            [110, 101, 116] => lookup_569_9(acc),
            [111, 114] => lookup_569_10(acc),
            [112, 111, 110, 112, 101, 115] => lookup_569_11(acc),
            [115, 99, 104] => lookup_569_12(acc),
            [119, 101, 98] => lookup_569_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_570_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_570_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_570<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_570_0(acc),
            [103, 111, 118] => lookup_570_1(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_570_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_571() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_574_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_574_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_574_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_574_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_574_1_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_574_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_574_1_0(acc),
            [109, 121, 116, 97, 98, 105, 116] => lookup_574_1_1(acc),
            [114, 97, 118, 112, 97, 103, 101] => lookup_574_1_2(acc),
            [116, 97, 98, 105, 116, 111, 114, 100, 101, 114] => lookup_574_1_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_574_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_574_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_574_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_574_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_574_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_574_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_574<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_574_0(acc),
            [99, 111] => lookup_574_1(labels, acc),
            [103, 111, 118] => lookup_574_2(acc),
            [105, 100, 102] => lookup_574_3(acc),
            [107, 49, 50] => lookup_574_4(acc),
            [109, 117, 110, 105] => lookup_574_5(acc),
            [110, 101, 116] => lookup_574_6(acc),
            [111, 114, 103] => lookup_574_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_575_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 116, 100] => lookup_575_1_0(acc),
            [112, 108, 99] => lookup_575_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_575_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_575_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_575_0(acc),
            [99, 111] => lookup_575_1(labels, acc),
            [99, 111, 109] => lookup_575_2(acc),
            [110, 101, 116] => lookup_575_3(acc),
            [111, 114, 103] => lookup_575_4(acc),
            [114, 111] => lookup_575_5(acc),
            [116, 116] => lookup_575_6(acc),
            [116, 118] => lookup_575_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_576() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_579() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_580<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [53, 103] => lookup_580_0(acc),
            [54, 103] => lookup_580_1(acc),
            [97, 99] => lookup_580_2(acc),
            [97, 105] => lookup_580_3(acc),
            [97, 109] => lookup_580_4(acc),
            [98, 97, 114, 115, 121] => lookup_580_5(acc),
            [98, 105, 104, 97, 114] => lookup_580_6(acc),
            [98, 105, 122] => lookup_580_7(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_580_8(acc),
            [98, 117, 115, 105, 110, 101, 115, 115] => lookup_580_9(acc),
            [99, 97] => lookup_580_10(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_580_11(acc),
            [99, 110] => lookup_580_12(acc),
            [99, 111] => lookup_580_13(acc),
            [99, 111, 109] => lookup_580_14(acc),
            [99, 111, 111, 112] => lookup_580_15(acc),
            [99, 115] => lookup_580_16(acc),
            [100, 101, 108, 104, 105] => lookup_580_17(acc),
            [100, 114] => lookup_580_18(acc),
            [101, 100, 117] => lookup_580_19(acc),
            [101, 114] => lookup_580_20(acc),
            [102, 105, 114, 109] => lookup_580_21(acc),
            [103, 101, 110] => lookup_580_22(acc),
            [103, 111, 118] => lookup_580_23(acc),
            [103, 117, 106, 97, 114, 97, 116] => lookup_580_24(acc),
            [105, 110, 100] => lookup_580_25(acc),
            [105, 110, 102, 111] => lookup_580_26(acc),
            [105, 110, 116] => lookup_580_27(acc),
            [105, 110, 116, 101, 114, 110, 101, 116] => lookup_580_28(acc),
            [105, 111] => lookup_580_29(acc),
            [109, 101] => lookup_580_30(acc),
            [109, 105, 108] => lookup_580_31(acc),
            [110, 101, 116] => lookup_580_32(acc),
            [110, 105, 99] => lookup_580_33(acc),
            [111, 114, 103] => lookup_580_34(acc),
            [112, 103] => lookup_580_35(acc),
            [112, 111, 115, 116] => lookup_580_36(acc),
            [112, 114, 111] => lookup_580_37(acc),
            [114, 101, 115] => lookup_580_38(acc),
            [115, 117, 112, 97, 98, 97, 115, 101] => lookup_580_39(acc),
            [116, 114, 97, 118, 101, 108] => lookup_580_40(acc),
            [116, 118] => lookup_580_41(acc),
            [117, 107] => lookup_580_42(acc),
            [117, 112] => lookup_580_43(acc),
            [117, 115] => lookup_580_44(acc),
            [119, 101, 98] => lookup_580_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_581() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_582() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_583() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_584_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_584<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 114, 101, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_584_0(acc)
            }
            [98, 97, 114, 114, 101, 108, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_584_1(acc)
            }
            [98, 97, 114, 115, 121] => lookup_584_2(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_584_3(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101] => lookup_584_4(acc),
            [100, 118, 114, 99, 97, 109] => lookup_584_5(acc),
            [100, 121, 110, 97, 109, 105, 99, 45, 100, 110, 115] => lookup_584_6(acc),
            [100, 121, 110, 100, 110, 115] => lookup_584_7(acc),
            [102, 111, 114, 45, 111, 117, 114] => lookup_584_8(acc),
            [102, 111, 114, 117, 109, 122] => lookup_584_9(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 101] => lookup_584_10(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 105, 115] => lookup_584_11(acc),
            [104, 101, 114, 101, 45, 102, 111, 114, 45, 109, 111, 114, 101] => lookup_584_12(acc),
            [105, 108, 111, 118, 101, 99, 111, 108, 108, 101, 103, 101] => lookup_584_13(acc),
            [107, 110, 111, 119, 115, 105, 116, 97, 108, 108] => lookup_584_14(acc),
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_584_15(acc),
            [110, 111, 45, 105, 112] => lookup_584_16(acc),
            [110, 115, 117, 112, 100, 97, 116, 101] => lookup_584_17(acc),
            [115, 101, 108, 102, 105, 112] => lookup_584_18(acc),
            [118, 45, 105, 110, 102, 111] => lookup_584_19(acc),
            [119, 101, 98, 104, 111, 112] => lookup_584_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_585() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_587() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_588() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_589() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_590_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_591() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_593() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_594_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_594_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_594_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_5_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_5_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_594_5_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_594_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_594_5_0(acc),
            [98, 97, 99, 107, 121, 97, 114, 100, 115] => lookup_594_5_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_594_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 101, 107, 100, 49] => lookup_594_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 107, 48] => lookup_594_11_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_15_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_15_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 1usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_594_15_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_594_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [115] => lookup_594_15_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_594_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110, 100, 110, 115] => lookup_594_19_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_27<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_594_27_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_35<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_594_35_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_39_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_39<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_594_39_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_594_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_41_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_41_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_41_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_41_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_41_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_41_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_41_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_41<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112] => lookup_594_41_0(acc),
            [97, 117] => lookup_594_41_1(acc),
            [101, 117] => lookup_594_41_2(acc),
            [105, 110] => lookup_594_41_3(acc),
            [106, 112] => lookup_594_41_4(acc),
            [115, 97] => lookup_594_41_5(acc),
            [117, 115] => lookup_594_41_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_43_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_43<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 101] => lookup_594_43_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_44_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_44<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_594_44_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_594_45_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_45<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_594_45_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_594_46_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_46<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_594_46_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_594_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_49_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_49<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 111, 99, 107] => lookup_594_49_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_50_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_50_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_594_50_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_594_50<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 121, 115] => lookup_594_50_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_54<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118, 105, 99, 101, 115] => lookup_594_54_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_55_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_55<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_594_55_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_594_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_61_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_61<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_594_61_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_594_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_63_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_63_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_63_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_594_63_0_0(acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_594_63_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_63_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_63_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_63_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_594_63_1_0(acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_594_63_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_63_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_63_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_594_63_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_63_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_63_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_63_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_594_63_3_0(acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_594_63_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_63<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_594_63_0(info, labels, acc),
            [100, 105, 115, 114, 101, 99] => lookup_594_63_1(info, labels, acc),
            [112, 114, 111, 100] => lookup_594_63_2(info, labels, acc),
            [116, 101, 115, 116, 105, 110, 103] => lookup_594_63_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_65<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 45, 102, 114, 49] => lookup_594_65_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_69_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_69<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [103] => lookup_594_69_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_594_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_594<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [50, 48, 51, 56] => lookup_594_0(acc),
            [97, 112, 105, 103, 101, 101] => lookup_594_1(acc),
            [97, 122, 117, 114, 101, 99, 111, 110, 116, 97, 105, 110, 101, 114] => {
                lookup_594_2(info, labels, acc)
            }
            [98, 45, 100, 97, 116, 97] => lookup_594_3(acc),
            [98, 97, 99, 107, 112, 108, 97, 110, 101, 97, 112, 112] => lookup_594_4(acc),
            [98, 97, 110, 122, 97, 105, 99, 108, 111, 117, 100] => lookup_594_5(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_594_6(acc),
            [98, 97, 115, 105, 99, 115, 101, 114, 118, 101, 114] => lookup_594_7(acc),
            [98, 101, 97, 103, 108, 101, 98, 111, 97, 114, 100] => lookup_594_8(acc),
            [98, 101, 101, 98, 121, 116, 101] => lookup_594_9(info, labels, acc),
            [98, 101, 101, 98, 121, 116, 101, 97, 112, 112] => lookup_594_10(info, labels, acc),
            [98, 105, 103, 118] => lookup_594_11(info, labels, acc),
            [98, 105, 116, 98, 117, 99, 107, 101, 116] => lookup_594_12(acc),
            [98, 108, 117, 101, 98, 105, 116, 101] => lookup_594_13(acc),
            [98, 111, 120, 102, 117, 115, 101] => lookup_594_14(acc),
            [98, 114, 97, 118, 101] => lookup_594_15(info, labels, acc),
            [98, 114, 111, 119, 115, 101, 114, 115, 97, 102, 101, 116, 121, 109, 97, 114, 107] => {
                lookup_594_16(acc)
            }
            [99, 108, 101, 118, 101, 114, 97, 112, 112, 115] => lookup_594_17(acc),
            [99, 111, 109] => lookup_594_18(acc),
            [100, 97, 112, 112, 110, 111, 100, 101] => lookup_594_19(info, labels, acc),
            [100, 101, 100, 121, 110] => lookup_594_20(acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_594_21(acc),
            [100, 114, 117, 100] => lookup_594_22(acc),
            [100, 121, 110, 53, 51] => lookup_594_23(acc),
            [101, 100, 105, 116, 111, 114, 120] => lookup_594_24(acc),
            [101, 100, 117, 103, 105, 116] => lookup_594_25(acc),
            [102, 104, 45, 109, 117, 101, 110, 115, 116, 101, 114] => lookup_594_26(acc),
            [102, 111, 114, 103, 101, 114, 111, 99, 107] => lookup_594_27(info, labels, acc),
            [103, 104, 111, 115, 116] => lookup_594_28(acc),
            [103, 105, 116, 104, 117, 98] => lookup_594_29(acc),
            [103, 105, 116, 108, 97, 98] => lookup_594_30(acc),
            [104, 97, 115, 117, 114, 97, 45, 97, 112, 112] => lookup_594_31(acc),
            [104, 111, 115, 116, 121, 104, 111, 115, 116, 105, 110, 103] => lookup_594_32(acc),
            [104, 122, 99] => lookup_594_33(acc),
            [106, 101, 108, 101] => lookup_594_34(acc),
            [108, 97, 105, 114] => lookup_594_35(info, labels, acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_594_36(acc),
            [108, 111, 108, 105, 112, 111, 112] => lookup_594_37(acc),
            [109, 111, 45, 115, 105, 101, 109, 101, 110, 115] => lookup_594_38(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_594_39(info, labels, acc),
            [109, 117, 115, 105, 99, 105, 97, 110] => lookup_594_40(acc),
            [110, 103, 114, 111, 107] => lookup_594_41(labels, acc),
            [110, 105, 100] => lookup_594_42(acc),
            [110, 111, 100, 101, 97, 114, 116] => lookup_594_43(info, labels, acc),
            [111, 110, 45, 97, 99, 111, 114, 110] => lookup_594_44(info, labels, acc),
            [111, 110, 45, 107, 51, 115] => lookup_594_45(info, labels, acc),
            [111, 110, 45, 114, 105, 111] => lookup_594_46(info, labels, acc),
            [112, 97, 110, 116, 104, 101, 111, 110, 115, 105, 116, 101] => lookup_594_47(acc),
            [112, 114, 111, 116, 111, 110, 101, 116] => lookup_594_48(acc),
            [112, 115, 116, 109, 110] => lookup_594_49(labels, acc),
            [113, 99, 120] => lookup_594_50(labels, acc),
            [113, 111, 116, 111] => lookup_594_51(acc),
            [114, 101, 97, 100, 116, 104, 101, 100, 111, 99, 115] => lookup_594_52(acc),
            [114, 101, 115, 105, 110, 100, 101, 118, 105, 99, 101] => lookup_594_53(acc),
            [114, 101, 115, 105, 110, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_594_54(info, labels, acc)
            }
            [115, 53, 121] => lookup_594_55(info, labels, acc),
            [115, 97, 110, 100, 99, 97, 116, 115] => lookup_594_56(acc),
            [115, 104, 105, 102, 116, 99, 114, 121, 112, 116, 111] => lookup_594_57(acc),
            [115, 104, 105, 102, 116, 101, 100, 105, 116] => lookup_594_58(acc),
            [115, 104, 119] => lookup_594_59(acc),
            [115, 112, 97, 99, 101, 107, 105, 116] => lookup_594_60(acc),
            [115, 116, 111, 108, 111, 115] => lookup_594_61(info, labels, acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_594_62(acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116] => lookup_594_63(info, labels, acc),
            [116, 105, 99, 107, 101, 116, 115] => lookup_594_64(acc),
            [117, 110, 105, 115, 112, 97, 99, 101] => lookup_594_65(info, labels, acc),
            [117, 112, 108, 105] => lookup_594_66(acc),
            [117, 116, 119, 101, 110, 116, 101] => lookup_594_67(acc),
            [118, 97, 112, 111, 114, 99, 108, 111, 117, 100] => lookup_594_68(acc),
            [118, 98, 114, 112, 108, 115, 98, 120] => lookup_594_69(info, labels, acc),
            [118, 105, 114, 116, 117, 97, 108, 115, 101, 114, 118, 101, 114] => lookup_594_70(acc),
            [119, 101, 98, 116, 104, 105, 110, 103, 115] => lookup_594_71(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_594_72(acc),
            [119, 105, 120, 115, 116, 117, 100, 105, 111] => lookup_594_73(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_595() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_596_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_596_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_596_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_596_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_596_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_596_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_596<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_596_0(acc),
            [101, 100, 117] => lookup_596_1(acc),
            [103, 111, 118] => lookup_596_2(acc),
            [109, 105, 108] => lookup_596_3(acc),
            [110, 101, 116] => lookup_596_4(acc),
            [111, 114, 103] => lookup_596_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_597_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_597<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_597_0(acc),
            [99, 111] => lookup_597_1(acc),
            [103, 111, 118] => lookup_597_2(acc),
            [105, 100] => lookup_597_3(acc),
            [110, 101, 116] => lookup_597_4(acc),
            [111, 114, 103] => lookup_597_5(acc),
            [115, 99, 104] => lookup_597_6(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_597_7(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_597_8(acc),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_597_9(acc),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_597_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_598() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_599_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_599_0(acc),
            [99, 111, 109] => lookup_599_1(acc),
            [99, 117, 112, 99, 97, 107, 101] => lookup_599_2(acc),
            [101, 100, 117] => lookup_599_3(acc),
            [103, 111, 118] => lookup_599_4(acc),
            [105, 110, 116] => lookup_599_5(acc),
            [110, 101, 116] => lookup_599_6(acc),
            [111, 114, 103] => lookup_599_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_600() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_601() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_602() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_603_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_603_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_603_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_603_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_603_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_603_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_603_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_603_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_603_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_220_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_603_220<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99] => lookup_603_220_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_603_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_603_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_314_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_603_314_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_603_314_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_603_314_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_603_314_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_603_314<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110] => lookup_603_314_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_603_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_434(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_435(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_436(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603_437(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_603<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 104, 111, 109, 101, 112, 97, 103, 101] => lookup_603_0(acc),
            [49, 50, 99, 104, 97, 114, 115] => lookup_603_1(acc),
            [49, 54, 45, 98] => lookup_603_2(acc),
            [51, 50, 45, 98] => lookup_603_3(acc),
            [54, 52, 45, 98] => lookup_603_4(acc),
            [97, 98, 114] => lookup_603_5(acc),
            [97, 98, 114, 117, 122, 122, 111] => lookup_603_6(acc),
            [97, 103] => lookup_603_7(acc),
            [97, 103, 114, 105, 103, 101, 110, 116, 111] => lookup_603_8(acc),
            [97, 108] => lookup_603_9(acc),
            [97, 108, 101, 115, 115, 97, 110, 100, 114, 105, 97] => lookup_603_10(acc),
            [97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => lookup_603_11(acc),
            [97, 108, 116, 111, 97, 100, 105, 103, 101] => lookup_603_12(acc),
            [97, 110] => lookup_603_13(acc),
            [97, 110, 99, 111, 110, 97] => lookup_603_14(acc),
            [97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105] => {
                lookup_603_15(acc)
            }
            [97, 110, 100, 114, 105, 97, 45, 116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_603_16(acc)
            }
            [97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105] => {
                lookup_603_17(acc)
            }
            [97, 110, 100, 114, 105, 97, 116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_603_18(acc)
            }
            [97, 111] => lookup_603_19(acc),
            [97, 111, 115, 116, 97] => lookup_603_20(acc),
            [97, 111, 115, 116, 97, 45, 118, 97, 108, 108, 101, 121] => lookup_603_21(acc),
            [97, 111, 115, 116, 97, 118, 97, 108, 108, 101, 121] => lookup_603_22(acc),
            [97, 111, 115, 116, 101] => lookup_603_23(acc),
            [97, 112] => lookup_603_24(acc),
            [97, 113] => lookup_603_25(acc),
            [97, 113, 117, 105, 108, 97] => lookup_603_26(acc),
            [97, 114] => lookup_603_27(acc),
            [97, 114, 101, 122, 122, 111] => lookup_603_28(acc),
            [97, 115, 99, 111, 108, 105, 45, 112, 105, 99, 101, 110, 111] => lookup_603_29(acc),
            [97, 115, 99, 111, 108, 105, 112, 105, 99, 101, 110, 111] => lookup_603_30(acc),
            [97, 115, 116, 105] => lookup_603_31(acc),
            [97, 116] => lookup_603_32(acc),
            [97, 118] => lookup_603_33(acc),
            [97, 118, 101, 108, 108, 105, 110, 111] => lookup_603_34(acc),
            [98, 97] => lookup_603_35(acc),
            [98, 97, 108, 115, 97, 110] => lookup_603_36(acc),
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_603_37(acc)
            }
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_603_38(acc)
            }
            [98, 97, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_603_39(acc)
            }
            [98, 97, 114, 105] => lookup_603_40(acc),
            [98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_603_41(acc)
            }
            [98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97] => {
                lookup_603_42(acc)
            }
            [98, 97, 115] => lookup_603_43(acc),
            [98, 97, 115, 105, 108, 105, 99, 97, 116, 97] => lookup_603_44(acc),
            [98, 101, 108, 108, 117, 110, 111] => lookup_603_45(acc),
            [98, 101, 110, 101, 118, 101, 110, 116, 111] => lookup_603_46(acc),
            [98, 101, 114, 103, 97, 109, 111] => lookup_603_47(acc),
            [98, 103] => lookup_603_48(acc),
            [98, 105] => lookup_603_49(acc),
            [98, 105, 101, 108, 108, 97] => lookup_603_50(acc),
            [98, 108] => lookup_603_51(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_603_52(acc),
            [98, 110] => lookup_603_53(acc),
            [98, 111] => lookup_603_54(acc),
            [98, 111, 108, 111, 103, 110, 97] => lookup_603_55(acc),
            [98, 111, 108, 122, 97, 110, 111] => lookup_603_56(acc),
            [98, 111, 108, 122, 97, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_603_57(acc)
            }
            [98, 111, 122, 101, 110] => lookup_603_58(acc),
            [98, 111, 122, 101, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_603_59(acc)
            }
            [98, 111, 122, 101, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_603_60(acc)
            }
            [98, 111, 122, 101, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_603_61(acc)
            }
            [98, 114] => lookup_603_62(acc),
            [98, 114, 101, 115, 99, 105, 97] => lookup_603_63(acc),
            [98, 114, 105, 110, 100, 105, 115, 105] => lookup_603_64(acc),
            [98, 115] => lookup_603_65(acc),
            [98, 116] => lookup_603_66(acc),
            [98, 117, 108, 115, 97, 110] => lookup_603_67(acc),
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_603_68(acc)
            }
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_603_69(acc)
            }
            [98, 117, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_603_70(acc)
            }
            [98, 122] => lookup_603_71(acc),
            [99, 97] => lookup_603_72(acc),
            [99, 97, 103, 108, 105, 97, 114, 105] => lookup_603_73(acc),
            [99, 97, 108] => lookup_603_74(acc),
            [99, 97, 108, 97, 98, 114, 105, 97] => lookup_603_75(acc),
            [99, 97, 108, 116, 97, 110, 105, 115, 115, 101, 116, 116, 97] => lookup_603_76(acc),
            [99, 97, 109] => lookup_603_77(acc),
            [99, 97, 109, 112, 97, 110, 105, 97] => lookup_603_78(acc),
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 45, 109, 101, 100, 105, 111] => {
                lookup_603_79(acc)
            }
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 109, 101, 100, 105, 111] => {
                lookup_603_80(acc)
            }
            [99, 97, 109, 112, 111, 98, 97, 115, 115, 111] => lookup_603_81(acc),
            [99, 97, 114, 98, 111, 110, 105, 97, 45, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_603_82(acc)
            }
            [99, 97, 114, 98, 111, 110, 105, 97, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_603_83(acc)
            }
            [99, 97, 114, 114, 97, 114, 97, 45, 109, 97, 115, 115, 97] => lookup_603_84(acc),
            [99, 97, 114, 114, 97, 114, 97, 109, 97, 115, 115, 97] => lookup_603_85(acc),
            [99, 97, 115, 101, 114, 116, 97] => lookup_603_86(acc),
            [99, 97, 116, 97, 110, 105, 97] => lookup_603_87(acc),
            [99, 97, 116, 97, 110, 122, 97, 114, 111] => lookup_603_88(acc),
            [99, 98] => lookup_603_89(acc),
            [99, 101] => lookup_603_90(acc),
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 105] => lookup_603_91(acc),
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 195, 172] => lookup_603_92(acc),
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 105] => lookup_603_93(acc),
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 195, 172] => lookup_603_94(acc),
            [99, 104] => lookup_603_95(acc),
            [99, 104, 105, 101, 116, 105] => lookup_603_96(acc),
            [99, 105] => lookup_603_97(acc),
            [99, 108] => lookup_603_98(acc),
            [99, 110] => lookup_603_99(acc),
            [99, 111] => lookup_603_100(acc),
            [99, 111, 109, 111] => lookup_603_101(acc),
            [99, 111, 115, 101, 110, 122, 97] => lookup_603_102(acc),
            [99, 114] => lookup_603_103(acc),
            [99, 114, 101, 109, 111, 110, 97] => lookup_603_104(acc),
            [99, 114, 111, 116, 111, 110, 101] => lookup_603_105(acc),
            [99, 115] => lookup_603_106(acc),
            [99, 116] => lookup_603_107(acc),
            [99, 117, 110, 101, 111] => lookup_603_108(acc),
            [99, 122] => lookup_603_109(acc),
            [100, 101, 108, 108, 45, 111, 103, 108, 105, 97, 115, 116, 114, 97] => {
                lookup_603_110(acc)
            }
            [100, 101, 108, 108, 111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_603_111(acc),
            [101, 100, 117] => lookup_603_112(acc),
            [101, 109, 105, 108, 105, 97, 45, 114, 111, 109, 97, 103, 110, 97] => {
                lookup_603_113(acc)
            }
            [101, 109, 105, 108, 105, 97, 114, 111, 109, 97, 103, 110, 97] => lookup_603_114(acc),
            [101, 109, 114] => lookup_603_115(acc),
            [101, 110] => lookup_603_116(acc),
            [101, 110, 110, 97] => lookup_603_117(acc),
            [102, 99] => lookup_603_118(acc),
            [102, 101] => lookup_603_119(acc),
            [102, 101, 114, 109, 111] => lookup_603_120(acc),
            [102, 101, 114, 114, 97, 114, 97] => lookup_603_121(acc),
            [102, 103] => lookup_603_122(acc),
            [102, 105] => lookup_603_123(acc),
            [102, 105, 114, 101, 110, 122, 101] => lookup_603_124(acc),
            [102, 108, 111, 114, 101, 110, 99, 101] => lookup_603_125(acc),
            [102, 109] => lookup_603_126(acc),
            [102, 111, 103, 103, 105, 97] => lookup_603_127(acc),
            [102, 111, 114, 108, 105, 45, 99, 101, 115, 101, 110, 97] => lookup_603_128(acc),
            [102, 111, 114, 108, 105, 99, 101, 115, 101, 110, 97] => lookup_603_129(acc),
            [102, 111, 114, 108, 195, 172, 45, 99, 101, 115, 101, 110, 97] => lookup_603_130(acc),
            [102, 111, 114, 108, 195, 172, 99, 101, 115, 101, 110, 97] => lookup_603_131(acc),
            [102, 114] => lookup_603_132(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_603_133(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_603_134(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_603_135(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_603_136(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_603_137(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 103, 105, 117, 108, 105, 97] => {
                lookup_603_138(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_603_139(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_603_140(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_603_141(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_603_142(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_603_143(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 103, 105, 117, 108, 105, 97] => lookup_603_144(acc),
            [102, 114, 111, 115, 105, 110, 111, 110, 101] => lookup_603_145(acc),
            [102, 118, 103] => lookup_603_146(acc),
            [103, 101] => lookup_603_147(acc),
            [103, 101, 110, 111, 97] => lookup_603_148(acc),
            [103, 101, 110, 111, 118, 97] => lookup_603_149(acc),
            [103, 111] => lookup_603_150(acc),
            [103, 111, 114, 105, 122, 105, 97] => lookup_603_151(acc),
            [103, 111, 118] => lookup_603_152(acc),
            [103, 114] => lookup_603_153(acc),
            [103, 114, 111, 115, 115, 101, 116, 111] => lookup_603_154(acc),
            [105, 98, 120, 111, 115] => lookup_603_155(acc),
            [105, 103, 108, 101, 115, 105, 97, 115, 45, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_603_156(acc)
            }
            [105, 103, 108, 101, 115, 105, 97, 115, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_603_157(acc)
            }
            [105, 108, 105, 97, 100, 98, 111, 120, 111, 115] => lookup_603_158(acc),
            [105, 109] => lookup_603_159(acc),
            [105, 109, 112, 101, 114, 105, 97] => lookup_603_160(acc),
            [105, 115] => lookup_603_161(acc),
            [105, 115, 101, 114, 110, 105, 97] => lookup_603_162(acc),
            [107, 114] => lookup_603_163(acc),
            [108, 97, 45, 115, 112, 101, 122, 105, 97] => lookup_603_164(acc),
            [108, 97, 113, 117, 105, 108, 97] => lookup_603_165(acc),
            [108, 97, 115, 112, 101, 122, 105, 97] => lookup_603_166(acc),
            [108, 97, 116, 105, 110, 97] => lookup_603_167(acc),
            [108, 97, 122] => lookup_603_168(acc),
            [108, 97, 122, 105, 111] => lookup_603_169(acc),
            [108, 99] => lookup_603_170(acc),
            [108, 101] => lookup_603_171(acc),
            [108, 101, 99, 99, 101] => lookup_603_172(acc),
            [108, 101, 99, 99, 111] => lookup_603_173(acc),
            [108, 105] => lookup_603_174(acc),
            [108, 105, 103] => lookup_603_175(acc),
            [108, 105, 103, 117, 114, 105, 97] => lookup_603_176(acc),
            [108, 105, 118, 111, 114, 110, 111] => lookup_603_177(acc),
            [108, 111] => lookup_603_178(acc),
            [108, 111, 100, 105] => lookup_603_179(acc),
            [108, 111, 109] => lookup_603_180(acc),
            [108, 111, 109, 98, 97, 114, 100, 105, 97] => lookup_603_181(acc),
            [108, 111, 109, 98, 97, 114, 100, 121] => lookup_603_182(acc),
            [108, 116] => lookup_603_183(acc),
            [108, 117] => lookup_603_184(acc),
            [108, 117, 99, 97, 110, 105, 97] => lookup_603_185(acc),
            [108, 117, 99, 99, 97] => lookup_603_186(acc),
            [109, 97, 99, 101, 114, 97, 116, 97] => lookup_603_187(acc),
            [109, 97, 110, 116, 111, 118, 97] => lookup_603_188(acc),
            [109, 97, 114] => lookup_603_189(acc),
            [109, 97, 114, 99, 104, 101] => lookup_603_190(acc),
            [109, 97, 115, 115, 97, 45, 99, 97, 114, 114, 97, 114, 97] => lookup_603_191(acc),
            [109, 97, 115, 115, 97, 99, 97, 114, 114, 97, 114, 97] => lookup_603_192(acc),
            [109, 97, 116, 101, 114, 97] => lookup_603_193(acc),
            [109, 98] => lookup_603_194(acc),
            [109, 99] => lookup_603_195(acc),
            [109, 101] => lookup_603_196(acc),
            [109, 101, 100, 105, 111, 45, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_603_197(acc)
            }
            [109, 101, 100, 105, 111, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_603_198(acc)
            }
            [109, 101, 115, 115, 105, 110, 97] => lookup_603_199(acc),
            [109, 105] => lookup_603_200(acc),
            [109, 105, 108, 97, 110] => lookup_603_201(acc),
            [109, 105, 108, 97, 110, 111] => lookup_603_202(acc),
            [109, 110] => lookup_603_203(acc),
            [109, 111] => lookup_603_204(acc),
            [109, 111, 100, 101, 110, 97] => lookup_603_205(acc),
            [109, 111, 108] => lookup_603_206(acc),
            [109, 111, 108, 105, 115, 101] => lookup_603_207(acc),
            [109, 111, 110, 122, 97] => lookup_603_208(acc),
            [109, 111, 110, 122, 97, 45, 98, 114, 105, 97, 110, 122, 97] => lookup_603_209(acc),
            [109, 111, 110, 122, 97, 45, 101, 45, 100, 101, 108, 108, 97, 45, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_603_210(acc)
            }
            [109, 111, 110, 122, 97, 98, 114, 105, 97, 110, 122, 97] => lookup_603_211(acc),
            [109, 111, 110, 122, 97, 101, 98, 114, 105, 97, 110, 122, 97] => lookup_603_212(acc),
            [109, 111, 110, 122, 97, 101, 100, 101, 108, 108, 97, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_603_213(acc)
            }
            [109, 115] => lookup_603_214(acc),
            [109, 116] => lookup_603_215(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_603_216(acc),
            [110, 97] => lookup_603_217(acc),
            [110, 97, 112, 108, 101, 115] => lookup_603_218(acc),
            [110, 97, 112, 111, 108, 105] => lookup_603_219(acc),
            [110, 101, 101, 110] => lookup_603_220(info, labels, acc),
            [110, 111] => lookup_603_221(acc),
            [110, 111, 118, 97, 114, 97] => lookup_603_222(acc),
            [110, 117] => lookup_603_223(acc),
            [110, 117, 111, 114, 111] => lookup_603_224(acc),
            [111, 103] => lookup_603_225(acc),
            [111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_603_226(acc),
            [111, 108, 98, 105, 97, 45, 116, 101, 109, 112, 105, 111] => lookup_603_227(acc),
            [111, 108, 98, 105, 97, 116, 101, 109, 112, 105, 111] => lookup_603_228(acc),
            [111, 114] => lookup_603_229(acc),
            [111, 114, 105, 115, 116, 97, 110, 111] => lookup_603_230(acc),
            [111, 116] => lookup_603_231(acc),
            [112, 97] => lookup_603_232(acc),
            [112, 97, 100, 111, 118, 97] => lookup_603_233(acc),
            [112, 97, 100, 117, 97] => lookup_603_234(acc),
            [112, 97, 108, 101, 114, 109, 111] => lookup_603_235(acc),
            [112, 97, 114, 109, 97] => lookup_603_236(acc),
            [112, 97, 118, 105, 97] => lookup_603_237(acc),
            [112, 99] => lookup_603_238(acc),
            [112, 100] => lookup_603_239(acc),
            [112, 101] => lookup_603_240(acc),
            [112, 101, 114, 117, 103, 105, 97] => lookup_603_241(acc),
            [112, 101, 115, 97, 114, 111, 45, 117, 114, 98, 105, 110, 111] => lookup_603_242(acc),
            [112, 101, 115, 97, 114, 111, 117, 114, 98, 105, 110, 111] => lookup_603_243(acc),
            [112, 101, 115, 99, 97, 114, 97] => lookup_603_244(acc),
            [112, 103] => lookup_603_245(acc),
            [112, 105] => lookup_603_246(acc),
            [112, 105, 97, 99, 101, 110, 122, 97] => lookup_603_247(acc),
            [112, 105, 101, 100, 109, 111, 110, 116] => lookup_603_248(acc),
            [112, 105, 101, 109, 111, 110, 116, 101] => lookup_603_249(acc),
            [112, 105, 115, 97] => lookup_603_250(acc),
            [112, 105, 115, 116, 111, 105, 97] => lookup_603_251(acc),
            [112, 109, 110] => lookup_603_252(acc),
            [112, 110] => lookup_603_253(acc),
            [112, 111] => lookup_603_254(acc),
            [112, 111, 114, 100, 101, 110, 111, 110, 101] => lookup_603_255(acc),
            [112, 111, 116, 101, 110, 122, 97] => lookup_603_256(acc),
            [112, 114] => lookup_603_257(acc),
            [112, 114, 97, 116, 111] => lookup_603_258(acc),
            [112, 116] => lookup_603_259(acc),
            [112, 117] => lookup_603_260(acc),
            [112, 117, 103] => lookup_603_261(acc),
            [112, 117, 103, 108, 105, 97] => lookup_603_262(acc),
            [112, 118] => lookup_603_263(acc),
            [112, 122] => lookup_603_264(acc),
            [114, 97] => lookup_603_265(acc),
            [114, 97, 103, 117, 115, 97] => lookup_603_266(acc),
            [114, 97, 118, 101, 110, 110, 97] => lookup_603_267(acc),
            [114, 99] => lookup_603_268(acc),
            [114, 101] => lookup_603_269(acc),
            [114, 101, 103, 103, 105, 111, 45, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_603_270(acc)
            }
            [114, 101, 103, 103, 105, 111, 45, 101, 109, 105, 108, 105, 97] => lookup_603_271(acc),
            [114, 101, 103, 103, 105, 111, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_603_272(acc)
            }
            [114, 101, 103, 103, 105, 111, 101, 109, 105, 108, 105, 97] => lookup_603_273(acc),
            [114, 103] => lookup_603_274(acc),
            [114, 105] => lookup_603_275(acc),
            [114, 105, 101, 116, 105] => lookup_603_276(acc),
            [114, 105, 109, 105, 110, 105] => lookup_603_277(acc),
            [114, 109] => lookup_603_278(acc),
            [114, 110] => lookup_603_279(acc),
            [114, 111] => lookup_603_280(acc),
            [114, 111, 109, 97] => lookup_603_281(acc),
            [114, 111, 109, 101] => lookup_603_282(acc),
            [114, 111, 118, 105, 103, 111] => lookup_603_283(acc),
            [115, 97] => lookup_603_284(acc),
            [115, 97, 108, 101, 114, 110, 111] => lookup_603_285(acc),
            [115, 97, 114] => lookup_603_286(acc),
            [115, 97, 114, 100, 101, 103, 110, 97] => lookup_603_287(acc),
            [115, 97, 114, 100, 105, 110, 105, 97] => lookup_603_288(acc),
            [115, 97, 115, 115, 97, 114, 105] => lookup_603_289(acc),
            [115, 97, 118, 111, 110, 97] => lookup_603_290(acc),
            [115, 105] => lookup_603_291(acc),
            [115, 105, 99] => lookup_603_292(acc),
            [115, 105, 99, 105, 108, 105, 97] => lookup_603_293(acc),
            [115, 105, 99, 105, 108, 121] => lookup_603_294(acc),
            [115, 105, 101, 110, 97] => lookup_603_295(acc),
            [115, 105, 114, 97, 99, 117, 115, 97] => lookup_603_296(acc),
            [115, 111] => lookup_603_297(acc),
            [115, 111, 110, 100, 114, 105, 111] => lookup_603_298(acc),
            [115, 112] => lookup_603_299(acc),
            [115, 114] => lookup_603_300(acc),
            [115, 115] => lookup_603_301(acc),
            [115, 117, 101, 100, 116, 105, 114, 111, 108] => lookup_603_302(acc),
            [115, 118] => lookup_603_303(acc),
            [115, 121, 110, 99, 108, 111, 117, 100] => lookup_603_304(acc),
            [115, 195, 188, 100, 116, 105, 114, 111, 108] => lookup_603_305(acc),
            [116, 97] => lookup_603_306(acc),
            [116, 97, 97] => lookup_603_307(acc),
            [116, 97, 114, 97, 110, 116, 111] => lookup_603_308(acc),
            [116, 101] => lookup_603_309(acc),
            [116, 101, 109, 112, 105, 111, 45, 111, 108, 98, 105, 97] => lookup_603_310(acc),
            [116, 101, 109, 112, 105, 111, 111, 108, 98, 105, 97] => lookup_603_311(acc),
            [116, 101, 114, 97, 109, 111] => lookup_603_312(acc),
            [116, 101, 114, 110, 105] => lookup_603_313(acc),
            [116, 105, 109] => lookup_603_314(info, labels, acc),
            [116, 110] => lookup_603_315(acc),
            [116, 111] => lookup_603_316(acc),
            [116, 111, 114, 105, 110, 111] => lookup_603_317(acc),
            [116, 111, 115] => lookup_603_318(acc),
            [116, 111, 115, 99, 97, 110, 97] => lookup_603_319(acc),
            [116, 112] => lookup_603_320(acc),
            [116, 114] => lookup_603_321(acc),
            [116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_603_322(acc)
            }
            [116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_603_323(acc)
            }
            [116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_603_324(acc)
            }
            [116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97, 97, 110, 100, 114, 105, 97] => {
                lookup_603_325(acc)
            }
            [116, 114, 97, 112, 97, 110, 105] => lookup_603_326(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_603_327(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_603_328(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_603_329(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_603_330(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_603_331(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_603_332(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111] => lookup_603_333(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_603_334(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 97, 100, 105, 103, 101] => {
                lookup_603_335(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_603_336(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_603_337(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_603_338(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 116, 105, 114, 111, 108] => {
                lookup_603_339(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_603_340(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_603_341(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_603_342(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_603_343(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_603_344(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_603_345(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_603_346(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 97, 100, 105, 103, 101] => {
                lookup_603_347(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_603_348(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_603_349(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_603_350(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 116, 105, 114, 111, 108] => {
                lookup_603_351(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_603_352(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_603_353(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_603_354(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_603_355(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_603_356(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_603_357(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_603_358(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_603_359(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_603_360(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_603_361(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_603_362(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_603_363(acc)
            }
            [116, 114, 101, 110, 116, 111] => lookup_603_364(acc),
            [116, 114, 101, 118, 105, 115, 111] => lookup_603_365(acc),
            [116, 114, 105, 101, 115, 116, 101] => lookup_603_366(acc),
            [116, 115] => lookup_603_367(acc),
            [116, 117, 114, 105, 110] => lookup_603_368(acc),
            [116, 117, 115, 99, 97, 110, 121] => lookup_603_369(acc),
            [116, 118] => lookup_603_370(acc),
            [117, 100] => lookup_603_371(acc),
            [117, 100, 105, 110, 101] => lookup_603_372(acc),
            [117, 109, 98] => lookup_603_373(acc),
            [117, 109, 98, 114, 105, 97] => lookup_603_374(acc),
            [117, 114, 98, 105, 110, 111, 45, 112, 101, 115, 97, 114, 111] => lookup_603_375(acc),
            [117, 114, 98, 105, 110, 111, 112, 101, 115, 97, 114, 111] => lookup_603_376(acc),
            [118, 97] => lookup_603_377(acc),
            [118, 97, 108, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_603_378(acc),
            [118, 97, 108, 45, 100, 97, 111, 115, 116, 97] => lookup_603_379(acc),
            [118, 97, 108, 100, 45, 97, 111, 115, 116, 97] => lookup_603_380(acc),
            [118, 97, 108, 100, 97, 111, 115, 116, 97] => lookup_603_381(acc),
            [118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 97] => lookup_603_382(acc),
            [118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_603_383(acc),
            [118, 97, 108, 108, 101, 45, 100, 97, 111, 115, 116, 97] => lookup_603_384(acc),
            [118, 97, 108, 108, 101, 97, 111, 115, 116, 97] => lookup_603_385(acc),
            [118, 97, 108, 108, 101, 100, 45, 97, 111, 115, 116, 97] => lookup_603_386(acc),
            [118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 97] => lookup_603_387(acc),
            [118, 97, 108, 108, 101, 101, 45, 97, 111, 115, 116, 101] => lookup_603_388(acc),
            [118, 97, 108, 108, 101, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_603_389(acc)
            }
            [118, 97, 108, 108, 101, 101, 97, 111, 115, 116, 101] => lookup_603_390(acc),
            [118, 97, 108, 108, 101, 101, 100, 97, 111, 115, 116, 101] => lookup_603_391(acc),
            [118, 97, 108, 108, 195, 169, 101, 45, 97, 111, 115, 116, 101] => lookup_603_392(acc),
            [118, 97, 108, 108, 195, 169, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_603_393(acc)
            }
            [118, 97, 108, 108, 195, 169, 101, 97, 111, 115, 116, 101] => lookup_603_394(acc),
            [118, 97, 108, 108, 195, 169, 101, 100, 97, 111, 115, 116, 101] => lookup_603_395(acc),
            [118, 97, 111] => lookup_603_396(acc),
            [118, 97, 114, 101, 115, 101] => lookup_603_397(acc),
            [118, 98] => lookup_603_398(acc),
            [118, 99] => lookup_603_399(acc),
            [118, 100, 97] => lookup_603_400(acc),
            [118, 101] => lookup_603_401(acc),
            [118, 101, 110] => lookup_603_402(acc),
            [118, 101, 110, 101, 116, 111] => lookup_603_403(acc),
            [118, 101, 110, 101, 122, 105, 97] => lookup_603_404(acc),
            [118, 101, 110, 105, 99, 101] => lookup_603_405(acc),
            [118, 101, 114, 98, 97, 110, 105, 97] => lookup_603_406(acc),
            [118, 101, 114, 99, 101, 108, 108, 105] => lookup_603_407(acc),
            [118, 101, 114, 111, 110, 97] => lookup_603_408(acc),
            [118, 105] => lookup_603_409(acc),
            [118, 105, 98, 111, 45, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_603_410(acc),
            [118, 105, 98, 111, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_603_411(acc),
            [118, 105, 99, 101, 110, 122, 97] => lookup_603_412(acc),
            [118, 105, 116, 101, 114, 98, 111] => lookup_603_413(acc),
            [118, 114] => lookup_603_414(acc),
            [118, 115] => lookup_603_415(acc),
            [118, 116] => lookup_603_416(acc),
            [118, 118] => lookup_603_417(acc),
            [120, 110, 45, 45, 98, 97, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_603_418(acc)
            }
            [120, 110, 45, 45, 98, 111, 122, 101, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 50, 111, 98] => {
                lookup_603_419(acc)
            }
            [120, 110, 45, 45, 98, 117, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_603_420(acc)
            }
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 45, 109, 99, 98] => {
                lookup_603_421(acc)
            }
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 45, 105, 56, 97] => {
                lookup_603_422(acc)
            }
            [120, 110, 45, 45, 102, 111, 114, 108, 45, 99, 101, 115, 101, 110, 97, 45, 102, 99, 98] => {
                lookup_603_423(acc)
            }
            [120, 110, 45, 45, 102, 111, 114, 108, 99, 101, 115, 101, 110, 97, 45, 99, 56, 97] => {
                lookup_603_424(acc)
            }
            [120, 110, 45, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 50, 97] => {
                lookup_603_425(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_603_426(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_603_427(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 99, 51, 98] => {
                lookup_603_428(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 116, 105, 114, 111, 108, 45, 115, 122, 98] => {
                lookup_603_429(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_603_430(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_603_431(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 45, 116, 105, 114, 111, 108, 45, 54, 118, 98] => {
                lookup_603_432(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_603_433(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_603_434(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 101, 45, 101, 104, 98] => {
                lookup_603_435(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 97, 111, 115, 116, 101, 45, 101, 55, 97] => {
                lookup_603_436(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_603_437(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_604() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_607() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_608() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_609_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_609_0(acc),
            [110, 101, 116] => lookup_609_1(acc),
            [111, 102] => lookup_609_2(acc),
            [111, 114, 103] => lookup_609_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_610() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_612() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_615_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_616() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_617() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_618_0(acc),
            [101, 100, 117] => lookup_618_1(acc),
            [103, 111, 118] => lookup_618_2(acc),
            [109, 105, 108] => lookup_618_3(acc),
            [110, 97, 109, 101] => lookup_618_4(acc),
            [110, 101, 116] => lookup_618_5(acc),
            [111, 114, 103] => lookup_618_6(acc),
            [115, 99, 104] => lookup_618_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_619() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_621() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_622() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 115, 97, 105] => lookup_623_3_0(acc),
            [97, 109, 97] => lookup_623_3_1(acc),
            [97, 110, 106, 111] => lookup_623_3_2(acc),
            [97, 115, 117, 107, 101] => lookup_623_3_3(acc),
            [99, 104, 105, 114, 121, 117] => lookup_623_3_4(acc),
            [99, 104, 105, 116, 97] => lookup_623_3_5(acc),
            [102, 117, 115, 111] => lookup_623_3_6(acc),
            [103, 97, 109, 97, 103, 111, 114, 105] => lookup_623_3_7(acc),
            [104, 97, 110, 100, 97] => lookup_623_3_8(acc),
            [104, 97, 122, 117] => lookup_623_3_9(acc),
            [104, 101, 107, 105, 110, 97, 110] => lookup_623_3_10(acc),
            [104, 105, 103, 97, 115, 104, 105, 117, 114, 97] => lookup_623_3_11(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_623_3_12(acc),
            [105, 110, 97, 122, 97, 119, 97] => lookup_623_3_13(acc),
            [105, 110, 117, 121, 97, 109, 97] => lookup_623_3_14(acc),
            [105, 115, 115, 104, 105, 107, 105] => lookup_623_3_15(acc),
            [105, 119, 97, 107, 117, 114, 97] => lookup_623_3_16(acc),
            [107, 97, 110, 105, 101] => lookup_623_3_17(acc),
            [107, 97, 114, 105, 121, 97] => lookup_623_3_18(acc),
            [107, 97, 115, 117, 103, 97, 105] => lookup_623_3_19(acc),
            [107, 105, 114, 97] => lookup_623_3_20(acc),
            [107, 105, 121, 111, 115, 117] => lookup_623_3_21(acc),
            [107, 111, 109, 97, 107, 105] => lookup_623_3_22(acc),
            [107, 111, 110, 97, 110] => lookup_623_3_23(acc),
            [107, 111, 116, 97] => lookup_623_3_24(acc),
            [109, 105, 104, 97, 109, 97] => lookup_623_3_25(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_623_3_26(acc),
            [110, 105, 115, 104, 105, 111] => lookup_623_3_27(acc),
            [110, 105, 115, 115, 104, 105, 110] => lookup_623_3_28(acc),
            [111, 98, 117] => lookup_623_3_29(acc),
            [111, 103, 117, 99, 104, 105] => lookup_623_3_30(acc),
            [111, 104, 97, 114, 117] => lookup_623_3_31(acc),
            [111, 107, 97, 122, 97, 107, 105] => lookup_623_3_32(acc),
            [111, 119, 97, 114, 105, 97, 115, 97, 104, 105] => lookup_623_3_33(acc),
            [115, 101, 116, 111] => lookup_623_3_34(acc),
            [115, 104, 105, 107, 97, 116, 115, 117] => lookup_623_3_35(acc),
            [115, 104, 105, 110, 115, 104, 105, 114, 111] => lookup_623_3_36(acc),
            [115, 104, 105, 116, 97, 114, 97] => lookup_623_3_37(acc),
            [116, 97, 104, 97, 114, 97] => lookup_623_3_38(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_623_3_39(acc),
            [116, 111, 98, 105, 115, 104, 105, 109, 97] => lookup_623_3_40(acc),
            [116, 111, 101, 105] => lookup_623_3_41(acc),
            [116, 111, 103, 111] => lookup_623_3_42(acc),
            [116, 111, 107, 97, 105] => lookup_623_3_43(acc),
            [116, 111, 107, 111, 110, 97, 109, 101] => lookup_623_3_44(acc),
            [116, 111, 121, 111, 97, 107, 101] => lookup_623_3_45(acc),
            [116, 111, 121, 111, 104, 97, 115, 104, 105] => lookup_623_3_46(acc),
            [116, 111, 121, 111, 107, 97, 119, 97] => lookup_623_3_47(acc),
            [116, 111, 121, 111, 110, 101] => lookup_623_3_48(acc),
            [116, 111, 121, 111, 116, 97] => lookup_623_3_49(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_623_3_50(acc),
            [121, 97, 116, 111, 109, 105] => lookup_623_3_51(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 105, 116, 97] => lookup_623_4_0(acc),
            [100, 97, 105, 115, 101, 110] => lookup_623_4_1(acc),
            [102, 117, 106, 105, 115, 97, 116, 111] => lookup_623_4_2(acc),
            [103, 111, 106, 111, 109, 101] => lookup_623_4_3(acc),
            [104, 97, 99, 104, 105, 114, 111, 103, 97, 116, 97] => lookup_623_4_4(acc),
            [104, 97, 112, 112, 111, 117] => lookup_623_4_5(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 97, 114, 117, 115, 101] => lookup_623_4_6(acc),
            [104, 111, 110, 106, 111] => lookup_623_4_7(acc),
            [104, 111, 110, 106, 121, 111] => lookup_623_4_8(acc),
            [105, 107, 97, 119, 97] => lookup_623_4_9(acc),
            [107, 97, 109, 105, 107, 111, 97, 110, 105] => lookup_623_4_10(acc),
            [107, 97, 109, 105, 111, 107, 97] => lookup_623_4_11(acc),
            [107, 97, 116, 97, 103, 97, 109, 105] => lookup_623_4_12(acc),
            [107, 97, 122, 117, 110, 111] => lookup_623_4_13(acc),
            [107, 105, 116, 97, 97, 107, 105, 116, 97] => lookup_623_4_14(acc),
            [107, 111, 115, 97, 107, 97] => lookup_623_4_15(acc),
            [107, 121, 111, 119, 97] => lookup_623_4_16(acc),
            [109, 105, 115, 97, 116, 111] => lookup_623_4_17(acc),
            [109, 105, 116, 97, 110, 101] => lookup_623_4_18(acc),
            [109, 111, 114, 105, 121, 111, 115, 104, 105] => lookup_623_4_19(acc),
            [110, 105, 107, 97, 104, 111] => lookup_623_4_20(acc),
            [110, 111, 115, 104, 105, 114, 111] => lookup_623_4_21(acc),
            [111, 100, 97, 116, 101] => lookup_623_4_22(acc),
            [111, 103, 97] => lookup_623_4_23(acc),
            [111, 103, 97, 116, 97] => lookup_623_4_24(acc),
            [115, 101, 109, 98, 111, 107, 117] => lookup_623_4_25(acc),
            [121, 111, 107, 111, 116, 101] => lookup_623_4_26(acc),
            [121, 117, 114, 105, 104, 111, 110, 106, 111] => lookup_623_4_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 111, 109, 111, 114, 105] => lookup_623_6_0(acc),
            [103, 111, 110, 111, 104, 101] => lookup_623_6_1(acc),
            [104, 97, 99, 104, 105, 110, 111, 104, 101] => lookup_623_6_2(acc),
            [104, 97, 115, 104, 105, 107, 97, 109, 105] => lookup_623_6_3(acc),
            [104, 105, 114, 97, 110, 97, 105] => lookup_623_6_4(acc),
            [104, 105, 114, 111, 115, 97, 107, 105] => lookup_623_6_5(acc),
            [105, 116, 97, 121, 97, 110, 97, 103, 105] => lookup_623_6_6(acc),
            [107, 117, 114, 111, 105, 115, 104, 105] => lookup_623_6_7(acc),
            [109, 105, 115, 97, 119, 97] => lookup_623_6_8(acc),
            [109, 117, 116, 115, 117] => lookup_623_6_9(acc),
            [110, 97, 107, 97, 100, 111, 109, 97, 114, 105] => lookup_623_6_10(acc),
            [110, 111, 104, 101, 106, 105] => lookup_623_6_11(acc),
            [111, 105, 114, 97, 115, 101] => lookup_623_6_12(acc),
            [111, 119, 97, 110, 105] => lookup_623_6_13(acc),
            [114, 111, 107, 117, 110, 111, 104, 101] => lookup_623_6_14(acc),
            [115, 97, 110, 110, 111, 104, 101] => lookup_623_6_15(acc),
            [115, 104, 105, 99, 104, 105, 110, 111, 104, 101] => lookup_623_6_16(acc),
            [115, 104, 105, 110, 103, 111] => lookup_623_6_17(acc),
            [116, 97, 107, 107, 111] => lookup_623_6_18(acc),
            [116, 111, 119, 97, 100, 97] => lookup_623_6_19(acc),
            [116, 115, 117, 103, 97, 114, 117] => lookup_623_6_20(acc),
            [116, 115, 117, 114, 117, 116, 97] => lookup_623_6_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_24<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 105, 107, 111] => lookup_623_24_0(acc),
            [97, 115, 97, 104, 105] => lookup_623_24_1(acc),
            [99, 104, 111, 110, 97, 110] => lookup_623_24_2(acc),
            [99, 104, 111, 115, 101, 105] => lookup_623_24_3(acc),
            [99, 104, 111, 115, 104, 105] => lookup_623_24_4(acc),
            [99, 104, 117, 111] => lookup_623_24_5(acc),
            [102, 117, 110, 97, 98, 97, 115, 104, 105] => lookup_623_24_6(acc),
            [102, 117, 116, 116, 115, 117] => lookup_623_24_7(acc),
            [104, 97, 110, 97, 109, 105, 103, 97, 119, 97] => lookup_623_24_8(acc),
            [105, 99, 104, 105, 104, 97, 114, 97] => lookup_623_24_9(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_623_24_10(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_623_24_11(acc),
            [105, 110, 122, 97, 105] => lookup_623_24_12(acc),
            [105, 115, 117, 109, 105] => lookup_623_24_13(acc),
            [107, 97, 109, 97, 103, 97, 121, 97] => lookup_623_24_14(acc),
            [107, 97, 109, 111, 103, 97, 119, 97] => lookup_623_24_15(acc),
            [107, 97, 115, 104, 105, 119, 97] => lookup_623_24_16(acc),
            [107, 97, 116, 111, 114, 105] => lookup_623_24_17(acc),
            [107, 97, 116, 115, 117, 117, 114, 97] => lookup_623_24_18(acc),
            [107, 105, 109, 105, 116, 115, 117] => lookup_623_24_19(acc),
            [107, 105, 115, 97, 114, 97, 122, 117] => lookup_623_24_20(acc),
            [107, 111, 122, 97, 107, 105] => lookup_623_24_21(acc),
            [107, 117, 106, 117, 107, 117, 114, 105] => lookup_623_24_22(acc),
            [107, 121, 111, 110, 97, 110] => lookup_623_24_23(acc),
            [109, 97, 116, 115, 117, 100, 111] => lookup_623_24_24(acc),
            [109, 105, 100, 111, 114, 105] => lookup_623_24_25(acc),
            [109, 105, 104, 97, 109, 97] => lookup_623_24_26(acc),
            [109, 105, 110, 97, 109, 105, 98, 111, 115, 111] => lookup_623_24_27(acc),
            [109, 111, 98, 97, 114, 97] => lookup_623_24_28(acc),
            [109, 117, 116, 115, 117, 122, 97, 119, 97] => lookup_623_24_29(acc),
            [110, 97, 103, 97, 114, 97] => lookup_623_24_30(acc),
            [110, 97, 103, 97, 114, 101, 121, 97, 109, 97] => lookup_623_24_31(acc),
            [110, 97, 114, 97, 115, 104, 105, 110, 111] => lookup_623_24_32(acc),
            [110, 97, 114, 105, 116, 97] => lookup_623_24_33(acc),
            [110, 111, 100, 97] => lookup_623_24_34(acc),
            [111, 97, 109, 105, 115, 104, 105, 114, 97, 115, 97, 116, 111] => lookup_623_24_35(acc),
            [111, 109, 105, 103, 97, 119, 97] => lookup_623_24_36(acc),
            [111, 110, 106, 117, 107, 117] => lookup_623_24_37(acc),
            [111, 116, 97, 107, 105] => lookup_623_24_38(acc),
            [115, 97, 107, 97, 101] => lookup_623_24_39(acc),
            [115, 97, 107, 117, 114, 97] => lookup_623_24_40(acc),
            [115, 104, 105, 109, 111, 102, 117, 115, 97] => lookup_623_24_41(acc),
            [115, 104, 105, 114, 97, 107, 111] => lookup_623_24_42(acc),
            [115, 104, 105, 114, 111, 105] => lookup_623_24_43(acc),
            [115, 104, 105, 115, 117, 105] => lookup_623_24_44(acc),
            [115, 111, 100, 101, 103, 97, 117, 114, 97] => lookup_623_24_45(acc),
            [115, 111, 115, 97] => lookup_623_24_46(acc),
            [116, 97, 107, 111] => lookup_623_24_47(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_623_24_48(acc),
            [116, 111, 103, 97, 110, 101] => lookup_623_24_49(acc),
            [116, 111, 104, 110, 111, 115, 104, 111] => lookup_623_24_50(acc),
            [116, 111, 109, 105, 115, 97, 116, 111] => lookup_623_24_51(acc),
            [117, 114, 97, 121, 97, 115, 117] => lookup_623_24_52(acc),
            [121, 97, 99, 104, 105, 109, 97, 116, 97] => lookup_623_24_53(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_623_24_54(acc),
            [121, 111, 107, 97, 105, 99, 104, 105, 98, 97] => lookup_623_24_55(acc),
            [121, 111, 107, 111, 115, 104, 105, 98, 97, 104, 105, 107, 97, 114, 105] => {
                lookup_623_24_56(acc)
            }
            [121, 111, 116, 115, 117, 107, 97, 105, 100, 111] => lookup_623_24_57(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_45<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 110, 97, 110] => lookup_623_45_0(acc),
            [104, 111, 110, 97, 105] => lookup_623_45_1(acc),
            [105, 107, 97, 116, 97] => lookup_623_45_2(acc),
            [105, 109, 97, 98, 97, 114, 105] => lookup_623_45_3(acc),
            [105, 121, 111] => lookup_623_45_4(acc),
            [107, 97, 109, 105, 106, 105, 109, 97] => lookup_623_45_5(acc),
            [107, 105, 104, 111, 107, 117] => lookup_623_45_6(acc),
            [107, 117, 109, 97, 107, 111, 103, 101, 110] => lookup_623_45_7(acc),
            [109, 97, 115, 97, 107, 105] => lookup_623_45_8(acc),
            [109, 97, 116, 115, 117, 110, 111] => lookup_623_45_9(acc),
            [109, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_623_45_10(acc),
            [110, 97, 109, 105, 107, 97, 116, 97] => lookup_623_45_11(acc),
            [110, 105, 105, 104, 97, 109, 97] => lookup_623_45_12(acc),
            [111, 122, 117] => lookup_623_45_13(acc),
            [115, 97, 105, 106, 111] => lookup_623_45_14(acc),
            [115, 101, 105, 121, 111] => lookup_623_45_15(acc),
            [115, 104, 105, 107, 111, 107, 117, 99, 104, 117, 111] => lookup_623_45_16(acc),
            [116, 111, 98, 101] => lookup_623_45_17(acc),
            [116, 111, 111, 110] => lookup_623_45_18(acc),
            [117, 99, 104, 105, 107, 111] => lookup_623_45_19(acc),
            [117, 119, 97, 106, 105, 109, 97] => lookup_623_45_20(acc),
            [121, 97, 119, 97, 116, 97, 104, 97, 109, 97] => lookup_623_45_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_54<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 99, 104, 105, 122, 101, 110] => lookup_623_54_0(acc),
            [101, 105, 104, 101, 105, 106, 105] => lookup_623_54_1(acc),
            [102, 117, 107, 117, 105] => lookup_623_54_2(acc),
            [105, 107, 101, 100, 97] => lookup_623_54_3(acc),
            [107, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_623_54_4(acc),
            [109, 105, 104, 97, 109, 97] => lookup_623_54_5(acc),
            [109, 105, 110, 97, 109, 105, 101, 99, 104, 105, 122, 101, 110] => lookup_623_54_6(acc),
            [111, 98, 97, 109, 97] => lookup_623_54_7(acc),
            [111, 104, 105] => lookup_623_54_8(acc),
            [111, 110, 111] => lookup_623_54_9(acc),
            [115, 97, 98, 97, 101] => lookup_623_54_10(acc),
            [115, 97, 107, 97, 105] => lookup_623_54_11(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_623_54_12(acc),
            [116, 115, 117, 114, 117, 103, 97] => lookup_623_54_13(acc),
            [119, 97, 107, 97, 115, 97] => lookup_623_54_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 104, 105, 121, 97] => lookup_623_55_0(acc),
            [98, 117, 122, 101, 110] => lookup_623_55_1(acc),
            [99, 104, 105, 107, 117, 103, 111] => lookup_623_55_2(acc),
            [99, 104, 105, 107, 117, 104, 111] => lookup_623_55_3(acc),
            [99, 104, 105, 107, 117, 106, 111] => lookup_623_55_4(acc),
            [99, 104, 105, 107, 117, 115, 104, 105, 110, 111] => lookup_623_55_5(acc),
            [99, 104, 105, 107, 117, 122, 101, 110] => lookup_623_55_6(acc),
            [99, 104, 117, 111] => lookup_623_55_7(acc),
            [100, 97, 122, 97, 105, 102, 117] => lookup_623_55_8(acc),
            [102, 117, 107, 117, 99, 104, 105] => lookup_623_55_9(acc),
            [104, 97, 107, 97, 116, 97] => lookup_623_55_10(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_623_55_11(acc),
            [104, 105, 114, 111, 107, 97, 119, 97] => lookup_623_55_12(acc),
            [104, 105, 115, 97, 121, 97, 109, 97] => lookup_623_55_13(acc),
            [105, 105, 122, 117, 107, 97] => lookup_623_55_14(acc),
            [105, 110, 97, 116, 115, 117, 107, 105] => lookup_623_55_15(acc),
            [107, 97, 104, 111] => lookup_623_55_16(acc),
            [107, 97, 115, 117, 103, 97] => lookup_623_55_17(acc),
            [107, 97, 115, 117, 121, 97] => lookup_623_55_18(acc),
            [107, 97, 119, 97, 114, 97] => lookup_623_55_19(acc),
            [107, 101, 105, 115, 101, 110] => lookup_623_55_20(acc),
            [107, 111, 103, 97] => lookup_623_55_21(acc),
            [107, 117, 114, 97, 116, 101] => lookup_623_55_22(acc),
            [107, 117, 114, 111, 103, 105] => lookup_623_55_23(acc),
            [107, 117, 114, 117, 109, 101] => lookup_623_55_24(acc),
            [109, 105, 110, 97, 109, 105] => lookup_623_55_25(acc),
            [109, 105, 121, 97, 107, 111] => lookup_623_55_26(acc),
            [109, 105, 121, 97, 109, 97] => lookup_623_55_27(acc),
            [109, 105, 121, 97, 119, 97, 107, 97] => lookup_623_55_28(acc),
            [109, 105, 122, 117, 109, 97, 107, 105] => lookup_623_55_29(acc),
            [109, 117, 110, 97, 107, 97, 116, 97] => lookup_623_55_30(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_623_55_31(acc),
            [110, 97, 107, 97, 109, 97] => lookup_623_55_32(acc),
            [110, 105, 115, 104, 105] => lookup_623_55_33(acc),
            [110, 111, 103, 97, 116, 97] => lookup_623_55_34(acc),
            [111, 103, 111, 114, 105] => lookup_623_55_35(acc),
            [111, 107, 97, 103, 97, 107, 105] => lookup_623_55_36(acc),
            [111, 107, 97, 119, 97] => lookup_623_55_37(acc),
            [111, 107, 105] => lookup_623_55_38(acc),
            [111, 109, 117, 116, 97] => lookup_623_55_39(acc),
            [111, 110, 103, 97] => lookup_623_55_40(acc),
            [111, 110, 111, 106, 111] => lookup_623_55_41(acc),
            [111, 116, 111] => lookup_623_55_42(acc),
            [115, 97, 105, 103, 97, 119, 97] => lookup_623_55_43(acc),
            [115, 97, 115, 97, 103, 117, 114, 105] => lookup_623_55_44(acc),
            [115, 104, 105, 110, 103, 117] => lookup_623_55_45(acc),
            [115, 104, 105, 110, 121, 111, 115, 104, 105, 116, 111, 109, 105] => {
                lookup_623_55_46(acc)
            }
            [115, 104, 111, 110, 97, 105] => lookup_623_55_47(acc),
            [115, 111, 101, 100, 97] => lookup_623_55_48(acc),
            [115, 117, 101] => lookup_623_55_49(acc),
            [116, 97, 99, 104, 105, 97, 114, 97, 105] => lookup_623_55_50(acc),
            [116, 97, 103, 97, 119, 97] => lookup_623_55_51(acc),
            [116, 97, 107, 97, 116, 97] => lookup_623_55_52(acc),
            [116, 111, 104, 111] => lookup_623_55_53(acc),
            [116, 111, 121, 111, 116, 115, 117] => lookup_623_55_54(acc),
            [116, 115, 117, 105, 107, 105] => lookup_623_55_55(acc),
            [117, 107, 105, 104, 97] => lookup_623_55_56(acc),
            [117, 109, 105] => lookup_623_55_57(acc),
            [117, 115, 117, 105] => lookup_623_55_58(acc),
            [121, 97, 109, 97, 100, 97] => lookup_623_55_59(acc),
            [121, 97, 109, 101] => lookup_623_55_60(acc),
            [121, 97, 110, 97, 103, 97, 119, 97] => lookup_623_55_61(acc),
            [121, 117, 107, 117, 104, 97, 115, 104, 105] => lookup_623_55_62(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_56_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_56<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 122, 117, 98, 97, 110, 103, 101] => lookup_623_56_0(acc),
            [97, 105, 122, 117, 109, 105, 115, 97, 116, 111] => lookup_623_56_1(acc),
            [97, 105, 122, 117, 119, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_623_56_2(acc),
            [97, 115, 97, 107, 97, 119, 97] => lookup_623_56_3(acc),
            [98, 97, 110, 100, 97, 105] => lookup_623_56_4(acc),
            [100, 97, 116, 101] => lookup_623_56_5(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_623_56_6(acc),
            [102, 117, 114, 117, 100, 111, 110, 111] => lookup_623_56_7(acc),
            [102, 117, 116, 97, 98, 97] => lookup_623_56_8(acc),
            [104, 97, 110, 97, 119, 97] => lookup_623_56_9(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_623_56_10(acc),
            [104, 105, 114, 97, 116, 97] => lookup_623_56_11(acc),
            [104, 105, 114, 111, 110, 111] => lookup_623_56_12(acc),
            [105, 105, 116, 97, 116, 101] => lookup_623_56_13(acc),
            [105, 110, 97, 119, 97, 115, 104, 105, 114, 111] => lookup_623_56_14(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_623_56_15(acc),
            [105, 119, 97, 107, 105] => lookup_623_56_16(acc),
            [105, 122, 117, 109, 105, 122, 97, 107, 105] => lookup_623_56_17(acc),
            [107, 97, 103, 97, 109, 105, 105, 115, 104, 105] => lookup_623_56_18(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_623_56_19(acc),
            [107, 97, 119, 97, 109, 97, 116, 97] => lookup_623_56_20(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_623_56_21(acc),
            [107, 105, 116, 97, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_623_56_22(acc),
            [107, 111, 111, 114, 105] => lookup_623_56_23(acc),
            [107, 111, 114, 105, 121, 97, 109, 97] => lookup_623_56_24(acc),
            [107, 117, 110, 105, 109, 105] => lookup_623_56_25(acc),
            [109, 105, 104, 97, 114, 117] => lookup_623_56_26(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_623_56_27(acc),
            [110, 97, 109, 105, 101] => lookup_623_56_28(acc),
            [110, 97, 110, 103, 111] => lookup_623_56_29(acc),
            [110, 105, 115, 104, 105, 97, 105, 122, 117] => lookup_623_56_30(acc),
            [110, 105, 115, 104, 105, 103, 111] => lookup_623_56_31(acc),
            [111, 107, 117, 109, 97] => lookup_623_56_32(acc),
            [111, 109, 111, 116, 101, 103, 111] => lookup_623_56_33(acc),
            [111, 110, 111] => lookup_623_56_34(acc),
            [111, 116, 97, 109, 97] => lookup_623_56_35(acc),
            [115, 97, 109, 101, 103, 97, 119, 97] => lookup_623_56_36(acc),
            [115, 104, 105, 109, 111, 103, 111] => lookup_623_56_37(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_623_56_38(acc),
            [115, 104, 111, 119, 97] => lookup_623_56_39(acc),
            [115, 111, 109, 97] => lookup_623_56_40(acc),
            [115, 117, 107, 97, 103, 97, 119, 97] => lookup_623_56_41(acc),
            [116, 97, 105, 115, 104, 105, 110] => lookup_623_56_42(acc),
            [116, 97, 109, 97, 107, 97, 119, 97] => lookup_623_56_43(acc),
            [116, 97, 110, 97, 103, 117, 114, 97] => lookup_623_56_44(acc),
            [116, 101, 110, 101, 105] => lookup_623_56_45(acc),
            [121, 97, 98, 117, 107, 105] => lookup_623_56_46(acc),
            [121, 97, 109, 97, 116, 111] => lookup_623_56_47(acc),
            [121, 97, 109, 97, 116, 115, 117, 114, 105] => lookup_623_56_48(acc),
            [121, 97, 110, 97, 105, 122, 117] => lookup_623_56_49(acc),
            [121, 117, 103, 97, 119, 97] => lookup_623_56_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_57_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_57<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 112, 97, 99, 104, 105] => lookup_623_57_0(acc),
            [101, 110, 97] => lookup_623_57_1(acc),
            [103, 105, 102, 117] => lookup_623_57_2(acc),
            [103, 105, 110, 97, 110] => lookup_623_57_3(acc),
            [103, 111, 100, 111] => lookup_623_57_4(acc),
            [103, 117, 106, 111] => lookup_623_57_5(acc),
            [104, 97, 115, 104, 105, 109, 97] => lookup_623_57_6(acc),
            [104, 105, 99, 104, 105, 115, 111] => lookup_623_57_7(acc),
            [104, 105, 100, 97] => lookup_623_57_8(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 104, 105, 114, 97, 107, 97, 119, 97] => {
                lookup_623_57_9(acc)
            }
            [105, 98, 105, 103, 97, 119, 97] => lookup_623_57_10(acc),
            [105, 107, 101, 100, 97] => lookup_623_57_11(acc),
            [107, 97, 107, 97, 109, 105, 103, 97, 104, 97, 114, 97] => lookup_623_57_12(acc),
            [107, 97, 110, 105] => lookup_623_57_13(acc),
            [107, 97, 115, 97, 104, 97, 114, 97] => lookup_623_57_14(acc),
            [107, 97, 115, 97, 109, 97, 116, 115, 117] => lookup_623_57_15(acc),
            [107, 97, 119, 97, 117, 101] => lookup_623_57_16(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_623_57_17(acc),
            [109, 105, 110, 111] => lookup_623_57_18(acc),
            [109, 105, 110, 111, 107, 97, 109, 111] => lookup_623_57_19(acc),
            [109, 105, 116, 97, 107, 101] => lookup_623_57_20(acc),
            [109, 105, 122, 117, 110, 97, 109, 105] => lookup_623_57_21(acc),
            [109, 111, 116, 111, 115, 117] => lookup_623_57_22(acc),
            [110, 97, 107, 97, 116, 115, 117, 103, 97, 119, 97] => lookup_623_57_23(acc),
            [111, 103, 97, 107, 105] => lookup_623_57_24(acc),
            [115, 97, 107, 97, 104, 111, 103, 105] => lookup_623_57_25(acc),
            [115, 101, 107, 105] => lookup_623_57_26(acc),
            [115, 101, 107, 105, 103, 97, 104, 97, 114, 97] => lookup_623_57_27(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_623_57_28(acc),
            [116, 97, 106, 105, 109, 105] => lookup_623_57_29(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_623_57_30(acc),
            [116, 97, 114, 117, 105] => lookup_623_57_31(acc),
            [116, 111, 107, 105] => lookup_623_57_32(acc),
            [116, 111, 109, 105, 107, 97] => lookup_623_57_33(acc),
            [119, 97, 110, 111, 117, 99, 104, 105] => lookup_623_57_34(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_623_57_35(acc),
            [121, 97, 111, 116, 115, 117] => lookup_623_57_36(acc),
            [121, 111, 114, 111] => lookup_623_57_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_65<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 110, 97, 107, 97] => lookup_623_65_0(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_623_65_1(acc),
            [102, 117, 106, 105, 111, 107, 97] => lookup_623_65_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 97, 103, 97, 116, 115, 117, 109, 97] => {
                lookup_623_65_3(acc)
            }
            [105, 115, 101, 115, 97, 107, 105] => lookup_623_65_4(acc),
            [105, 116, 97, 107, 117, 114, 97] => lookup_623_65_5(acc),
            [107, 97, 110, 110, 97] => lookup_623_65_6(acc),
            [107, 97, 110, 114, 97] => lookup_623_65_7(acc),
            [107, 97, 116, 97, 115, 104, 105, 110, 97] => lookup_623_65_8(acc),
            [107, 97, 119, 97, 98, 97] => lookup_623_65_9(acc),
            [107, 105, 114, 121, 117] => lookup_623_65_10(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_623_65_11(acc),
            [109, 97, 101, 98, 97, 115, 104, 105] => lookup_623_65_12(acc),
            [109, 101, 105, 119, 97] => lookup_623_65_13(acc),
            [109, 105, 100, 111, 114, 105] => lookup_623_65_14(acc),
            [109, 105, 110, 97, 107, 97, 109, 105] => lookup_623_65_15(acc),
            [110, 97, 103, 97, 110, 111, 104, 97, 114, 97] => lookup_623_65_16(acc),
            [110, 97, 107, 97, 110, 111, 106, 111] => lookup_623_65_17(acc),
            [110, 97, 110, 109, 111, 107, 117] => lookup_623_65_18(acc),
            [110, 117, 109, 97, 116, 97] => lookup_623_65_19(acc),
            [111, 105, 122, 117, 109, 105] => lookup_623_65_20(acc),
            [111, 114, 97] => lookup_623_65_21(acc),
            [111, 116, 97] => lookup_623_65_22(acc),
            [115, 104, 105, 98, 117, 107, 97, 119, 97] => lookup_623_65_23(acc),
            [115, 104, 105, 109, 111, 110, 105, 116, 97] => lookup_623_65_24(acc),
            [115, 104, 105, 110, 116, 111] => lookup_623_65_25(acc),
            [115, 104, 111, 119, 97] => lookup_623_65_26(acc),
            [116, 97, 107, 97, 115, 97, 107, 105] => lookup_623_65_27(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_623_65_28(acc),
            [116, 97, 109, 97, 109, 117, 114, 97] => lookup_623_65_29(acc),
            [116, 97, 116, 101, 98, 97, 121, 97, 115, 104, 105] => lookup_623_65_30(acc),
            [116, 111, 109, 105, 111, 107, 97] => lookup_623_65_31(acc),
            [116, 115, 117, 107, 105, 121, 111, 110, 111] => lookup_623_65_32(acc),
            [116, 115, 117, 109, 97, 103, 111, 105] => lookup_623_65_33(acc),
            [117, 101, 110, 111] => lookup_623_65_34(acc),
            [121, 111, 115, 104, 105, 111, 107, 97] => lookup_623_65_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_73_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_73<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 109, 105, 110, 97, 109, 105] => lookup_623_73_0(acc),
            [100, 97, 105, 119, 97] => lookup_623_73_1(acc),
            [101, 116, 97, 106, 105, 109, 97] => lookup_623_73_2(acc),
            [102, 117, 99, 104, 117] => lookup_623_73_3(acc),
            [102, 117, 107, 117, 121, 97, 109, 97] => lookup_623_73_4(acc),
            [104, 97, 116, 115, 117, 107, 97, 105, 99, 104, 105] => lookup_623_73_5(acc),
            [104, 105, 103, 97, 115, 104, 105, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_623_73_6(acc)
            }
            [104, 111, 110, 103, 111] => lookup_623_73_7(acc),
            [106, 105, 110, 115, 101, 107, 105, 107, 111, 103, 101, 110] => lookup_623_73_8(acc),
            [107, 97, 105, 116, 97] => lookup_623_73_9(acc),
            [107, 117, 105] => lookup_623_73_10(acc),
            [107, 117, 109, 97, 110, 111] => lookup_623_73_11(acc),
            [107, 117, 114, 101] => lookup_623_73_12(acc),
            [109, 105, 104, 97, 114, 97] => lookup_623_73_13(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_623_73_14(acc),
            [110, 97, 107, 97] => lookup_623_73_15(acc),
            [111, 110, 111, 109, 105, 99, 104, 105] => lookup_623_73_16(acc),
            [111, 115, 97, 107, 105, 107, 97, 109, 105, 106, 105, 109, 97] => lookup_623_73_17(acc),
            [111, 116, 97, 107, 101] => lookup_623_73_18(acc),
            [115, 97, 107, 97] => lookup_623_73_19(acc),
            [115, 101, 114, 97] => lookup_623_73_20(acc),
            [115, 101, 114, 97, 110, 105, 115, 104, 105] => lookup_623_73_21(acc),
            [115, 104, 105, 110, 105, 99, 104, 105] => lookup_623_73_22(acc),
            [115, 104, 111, 98, 97, 114, 97] => lookup_623_73_23(acc),
            [116, 97, 107, 101, 104, 97, 114, 97] => lookup_623_73_24(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_74_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_74<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 97, 115, 104, 105, 114, 105] => lookup_623_74_0(acc),
            [97, 98, 105, 114, 97] => lookup_623_74_1(acc),
            [97, 105, 98, 101, 116, 115, 117] => lookup_623_74_2(acc),
            [97, 107, 97, 98, 105, 114, 97] => lookup_623_74_3(acc),
            [97, 107, 107, 101, 115, 104, 105] => lookup_623_74_4(acc),
            [97, 115, 97, 104, 105, 107, 97, 119, 97] => lookup_623_74_5(acc),
            [97, 115, 104, 105, 98, 101, 116, 115, 117] => lookup_623_74_6(acc),
            [97, 115, 104, 111, 114, 111] => lookup_623_74_7(acc),
            [97, 115, 115, 97, 98, 117] => lookup_623_74_8(acc),
            [97, 116, 115, 117, 109, 97] => lookup_623_74_9(acc),
            [98, 105, 98, 97, 105] => lookup_623_74_10(acc),
            [98, 105, 101, 105] => lookup_623_74_11(acc),
            [98, 105, 102, 117, 107, 97] => lookup_623_74_12(acc),
            [98, 105, 104, 111, 114, 111] => lookup_623_74_13(acc),
            [98, 105, 114, 97, 116, 111, 114, 105] => lookup_623_74_14(acc),
            [99, 104, 105, 112, 112, 117, 98, 101, 116, 115, 117] => lookup_623_74_15(acc),
            [99, 104, 105, 116, 111, 115, 101] => lookup_623_74_16(acc),
            [100, 97, 116, 101] => lookup_623_74_17(acc),
            [101, 98, 101, 116, 115, 117] => lookup_623_74_18(acc),
            [101, 109, 98, 101, 116, 115, 117] => lookup_623_74_19(acc),
            [101, 110, 105, 119, 97] => lookup_623_74_20(acc),
            [101, 114, 105, 109, 111] => lookup_623_74_21(acc),
            [101, 115, 97, 110] => lookup_623_74_22(acc),
            [101, 115, 97, 115, 104, 105] => lookup_623_74_23(acc),
            [102, 117, 107, 97, 103, 97, 119, 97] => lookup_623_74_24(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_623_74_25(acc),
            [102, 117, 114, 97, 110, 111] => lookup_623_74_26(acc),
            [102, 117, 114, 117, 98, 105, 114, 97] => lookup_623_74_27(acc),
            [104, 97, 98, 111, 114, 111] => lookup_623_74_28(acc),
            [104, 97, 107, 111, 100, 97, 116, 101] => lookup_623_74_29(acc),
            [104, 97, 109, 97, 116, 111, 110, 98, 101, 116, 115, 117] => lookup_623_74_30(acc),
            [104, 105, 100, 97, 107, 97] => lookup_623_74_31(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 117, 114, 97] => lookup_623_74_32(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 119, 97] => lookup_623_74_33(acc),
            [104, 105, 114, 111, 111] => lookup_623_74_34(acc),
            [104, 111, 107, 117, 114, 121, 117] => lookup_623_74_35(acc),
            [104, 111, 107, 117, 116, 111] => lookup_623_74_36(acc),
            [104, 111, 110, 98, 101, 116, 115, 117] => lookup_623_74_37(acc),
            [104, 111, 114, 111, 107, 97, 110, 97, 105] => lookup_623_74_38(acc),
            [104, 111, 114, 111, 110, 111, 98, 101] => lookup_623_74_39(acc),
            [105, 107, 101, 100, 97] => lookup_623_74_40(acc),
            [105, 109, 97, 107, 97, 110, 101] => lookup_623_74_41(acc),
            [105, 115, 104, 105, 107, 97, 114, 105] => lookup_623_74_42(acc),
            [105, 119, 97, 109, 105, 122, 97, 119, 97] => lookup_623_74_43(acc),
            [105, 119, 97, 110, 97, 105] => lookup_623_74_44(acc),
            [107, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_623_74_45(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_623_74_46(acc),
            [107, 97, 109, 105, 115, 104, 105, 104, 111, 114, 111] => lookup_623_74_47(acc),
            [107, 97, 109, 105, 115, 117, 110, 97, 103, 97, 119, 97] => lookup_623_74_48(acc),
            [107, 97, 109, 111, 101, 110, 97, 105] => lookup_623_74_49(acc),
            [107, 97, 121, 97, 98, 101] => lookup_623_74_50(acc),
            [107, 101, 109, 98, 117, 99, 104, 105] => lookup_623_74_51(acc),
            [107, 105, 107, 111, 110, 97, 105] => lookup_623_74_52(acc),
            [107, 105, 109, 111, 98, 101, 116, 115, 117] => lookup_623_74_53(acc),
            [107, 105, 116, 97, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_623_74_54(acc)
            }
            [107, 105, 116, 97, 109, 105] => lookup_623_74_55(acc),
            [107, 105, 121, 111, 115, 97, 116, 111] => lookup_623_74_56(acc),
            [107, 111, 115, 104, 105, 109, 105, 122, 117] => lookup_623_74_57(acc),
            [107, 117, 110, 110, 101, 112, 112, 117] => lookup_623_74_58(acc),
            [107, 117, 114, 105, 121, 97, 109, 97] => lookup_623_74_59(acc),
            [107, 117, 114, 111, 109, 97, 116, 115, 117, 110, 97, 105] => lookup_623_74_60(acc),
            [107, 117, 115, 104, 105, 114, 111] => lookup_623_74_61(acc),
            [107, 117, 116, 99, 104, 97, 110] => lookup_623_74_62(acc),
            [107, 121, 111, 119, 97] => lookup_623_74_63(acc),
            [109, 97, 115, 104, 105, 107, 101] => lookup_623_74_64(acc),
            [109, 97, 116, 115, 117, 109, 97, 101] => lookup_623_74_65(acc),
            [109, 105, 107, 97, 115, 97] => lookup_623_74_66(acc),
            [109, 105, 110, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_623_74_67(acc),
            [109, 111, 109, 98, 101, 116, 115, 117] => lookup_623_74_68(acc),
            [109, 111, 115, 101, 117, 115, 104, 105] => lookup_623_74_69(acc),
            [109, 117, 107, 97, 119, 97] => lookup_623_74_70(acc),
            [109, 117, 114, 111, 114, 97, 110] => lookup_623_74_71(acc),
            [110, 97, 105, 101] => lookup_623_74_72(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_623_74_73(acc),
            [110, 97, 107, 97, 115, 97, 116, 115, 117, 110, 97, 105] => lookup_623_74_74(acc),
            [110, 97, 107, 97, 116, 111, 109, 98, 101, 116, 115, 117] => lookup_623_74_75(acc),
            [110, 97, 110, 97, 101] => lookup_623_74_76(acc),
            [110, 97, 110, 112, 111, 114, 111] => lookup_623_74_77(acc),
            [110, 97, 121, 111, 114, 111] => lookup_623_74_78(acc),
            [110, 101, 109, 117, 114, 111] => lookup_623_74_79(acc),
            [110, 105, 105, 107, 97, 112, 112, 117] => lookup_623_74_80(acc),
            [110, 105, 107, 105] => lookup_623_74_81(acc),
            [110, 105, 115, 104, 105, 111, 107, 111, 112, 112, 101] => lookup_623_74_82(acc),
            [110, 111, 98, 111, 114, 105, 98, 101, 116, 115, 117] => lookup_623_74_83(acc),
            [110, 117, 109, 97, 116, 97] => lookup_623_74_84(acc),
            [111, 98, 105, 104, 105, 114, 111] => lookup_623_74_85(acc),
            [111, 98, 105, 114, 97] => lookup_623_74_86(acc),
            [111, 107, 101, 116, 111] => lookup_623_74_87(acc),
            [111, 107, 111, 112, 112, 101] => lookup_623_74_88(acc),
            [111, 116, 97, 114, 117] => lookup_623_74_89(acc),
            [111, 116, 111, 98, 101] => lookup_623_74_90(acc),
            [111, 116, 111, 102, 117, 107, 101] => lookup_623_74_91(acc),
            [111, 116, 111, 105, 110, 101, 112, 112, 117] => lookup_623_74_92(acc),
            [111, 117, 109, 117] => lookup_623_74_93(acc),
            [111, 122, 111, 114, 97] => lookup_623_74_94(acc),
            [112, 105, 112, 112, 117] => lookup_623_74_95(acc),
            [114, 97, 110, 107, 111, 115, 104, 105] => lookup_623_74_96(acc),
            [114, 101, 98, 117, 110] => lookup_623_74_97(acc),
            [114, 105, 107, 117, 98, 101, 116, 115, 117] => lookup_623_74_98(acc),
            [114, 105, 115, 104, 105, 114, 105] => lookup_623_74_99(acc),
            [114, 105, 115, 104, 105, 114, 105, 102, 117, 106, 105] => lookup_623_74_100(acc),
            [115, 97, 114, 111, 109, 97] => lookup_623_74_101(acc),
            [115, 97, 114, 117, 102, 117, 116, 115, 117] => lookup_623_74_102(acc),
            [115, 104, 97, 107, 111, 116, 97, 110] => lookup_623_74_103(acc),
            [115, 104, 97, 114, 105] => lookup_623_74_104(acc),
            [115, 104, 105, 98, 101, 99, 104, 97] => lookup_623_74_105(acc),
            [115, 104, 105, 98, 101, 116, 115, 117] => lookup_623_74_106(acc),
            [115, 104, 105, 107, 97, 98, 101] => lookup_623_74_107(acc),
            [115, 104, 105, 107, 97, 111, 105] => lookup_623_74_108(acc),
            [115, 104, 105, 109, 97, 109, 97, 107, 105] => lookup_623_74_109(acc),
            [115, 104, 105, 109, 105, 122, 117] => lookup_623_74_110(acc),
            [115, 104, 105, 109, 111, 107, 97, 119, 97] => lookup_623_74_111(acc),
            [115, 104, 105, 110, 115, 104, 105, 110, 111, 116, 115, 117] => lookup_623_74_112(acc),
            [115, 104, 105, 110, 116, 111, 107, 117] => lookup_623_74_113(acc),
            [115, 104, 105, 114, 97, 110, 117, 107, 97] => lookup_623_74_114(acc),
            [115, 104, 105, 114, 97, 111, 105] => lookup_623_74_115(acc),
            [115, 104, 105, 114, 105, 117, 99, 104, 105] => lookup_623_74_116(acc),
            [115, 111, 98, 101, 116, 115, 117] => lookup_623_74_117(acc),
            [115, 117, 110, 97, 103, 97, 119, 97] => lookup_623_74_118(acc),
            [116, 97, 105, 107, 105] => lookup_623_74_119(acc),
            [116, 97, 107, 97, 115, 117] => lookup_623_74_120(acc),
            [116, 97, 107, 105, 107, 97, 119, 97] => lookup_623_74_121(acc),
            [116, 97, 107, 105, 110, 111, 117, 101] => lookup_623_74_122(acc),
            [116, 101, 115, 104, 105, 107, 97, 103, 97] => lookup_623_74_123(acc),
            [116, 111, 98, 101, 116, 115, 117] => lookup_623_74_124(acc),
            [116, 111, 104, 109, 97] => lookup_623_74_125(acc),
            [116, 111, 109, 97, 107, 111, 109, 97, 105] => lookup_623_74_126(acc),
            [116, 111, 109, 97, 114, 105] => lookup_623_74_127(acc),
            [116, 111, 121, 97] => lookup_623_74_128(acc),
            [116, 111, 121, 97, 107, 111] => lookup_623_74_129(acc),
            [116, 111, 121, 111, 116, 111, 109, 105] => lookup_623_74_130(acc),
            [116, 111, 121, 111, 117, 114, 97] => lookup_623_74_131(acc),
            [116, 115, 117, 98, 101, 116, 115, 117] => lookup_623_74_132(acc),
            [116, 115, 117, 107, 105, 103, 97, 116, 97] => lookup_623_74_133(acc),
            [117, 114, 97, 107, 97, 119, 97] => lookup_623_74_134(acc),
            [117, 114, 97, 117, 115, 117] => lookup_623_74_135(acc),
            [117, 114, 121, 117] => lookup_623_74_136(acc),
            [117, 116, 97, 115, 104, 105, 110, 97, 105] => lookup_623_74_137(acc),
            [119, 97, 107, 107, 97, 110, 97, 105] => lookup_623_74_138(acc),
            [119, 97, 115, 115, 97, 109, 117] => lookup_623_74_139(acc),
            [121, 97, 107, 117, 109, 111] => lookup_623_74_140(acc),
            [121, 111, 105, 99, 104, 105] => lookup_623_74_141(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_77_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_77<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 111, 105] => lookup_623_77_0(acc),
            [97, 107, 97, 115, 104, 105] => lookup_623_77_1(acc),
            [97, 107, 111] => lookup_623_77_2(acc),
            [97, 109, 97, 103, 97, 115, 97, 107, 105] => lookup_623_77_3(acc),
            [97, 111, 103, 97, 107, 105] => lookup_623_77_4(acc),
            [97, 115, 97, 103, 111] => lookup_623_77_5(acc),
            [97, 115, 104, 105, 121, 97] => lookup_623_77_6(acc),
            [97, 119, 97, 106, 105] => lookup_623_77_7(acc),
            [102, 117, 107, 117, 115, 97, 107, 105] => lookup_623_77_8(acc),
            [103, 111, 115, 104, 105, 107, 105] => lookup_623_77_9(acc),
            [104, 97, 114, 105, 109, 97] => lookup_623_77_10(acc),
            [104, 105, 109, 101, 106, 105] => lookup_623_77_11(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_623_77_12(acc),
            [105, 110, 97, 103, 97, 119, 97] => lookup_623_77_13(acc),
            [105, 116, 97, 109, 105] => lookup_623_77_14(acc),
            [107, 97, 107, 111, 103, 97, 119, 97] => lookup_623_77_15(acc),
            [107, 97, 109, 105, 103, 111, 114, 105] => lookup_623_77_16(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_623_77_17(acc),
            [107, 97, 115, 97, 105] => lookup_623_77_18(acc),
            [107, 97, 115, 117, 103, 97] => lookup_623_77_19(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_623_77_20(acc),
            [109, 105, 107, 105] => lookup_623_77_21(acc),
            [109, 105, 110, 97, 109, 105, 97, 119, 97, 106, 105] => lookup_623_77_22(acc),
            [110, 105, 115, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_623_77_23(acc),
            [110, 105, 115, 104, 105, 119, 97, 107, 105] => lookup_623_77_24(acc),
            [111, 110, 111] => lookup_623_77_25(acc),
            [115, 97, 110, 100, 97] => lookup_623_77_26(acc),
            [115, 97, 110, 110, 97, 110] => lookup_623_77_27(acc),
            [115, 97, 115, 97, 121, 97, 109, 97] => lookup_623_77_28(acc),
            [115, 97, 121, 111] => lookup_623_77_29(acc),
            [115, 104, 105, 110, 103, 117] => lookup_623_77_30(acc),
            [115, 104, 105, 110, 111, 110, 115, 101, 110] => lookup_623_77_31(acc),
            [115, 104, 105, 115, 111] => lookup_623_77_32(acc),
            [115, 117, 109, 111, 116, 111] => lookup_623_77_33(acc),
            [116, 97, 105, 115, 104, 105] => lookup_623_77_34(acc),
            [116, 97, 107, 97] => lookup_623_77_35(acc),
            [116, 97, 107, 97, 114, 97, 122, 117, 107, 97] => lookup_623_77_36(acc),
            [116, 97, 107, 97, 115, 97, 103, 111] => lookup_623_77_37(acc),
            [116, 97, 107, 105, 110, 111] => lookup_623_77_38(acc),
            [116, 97, 109, 98, 97] => lookup_623_77_39(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_623_77_40(acc),
            [116, 111, 121, 111, 111, 107, 97] => lookup_623_77_41(acc),
            [121, 97, 98, 117] => lookup_623_77_42(acc),
            [121, 97, 115, 104, 105, 114, 111] => lookup_623_77_43(acc),
            [121, 111, 107, 97] => lookup_623_77_44(acc),
            [121, 111, 107, 97, 119, 97] => lookup_623_77_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_78_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_78<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 105] => lookup_623_78_0(acc),
            [97, 115, 97, 104, 105] => lookup_623_78_1(acc),
            [98, 97, 110, 100, 111] => lookup_623_78_2(acc),
            [99, 104, 105, 107, 117, 115, 101, 105] => lookup_623_78_3(acc),
            [100, 97, 105, 103, 111] => lookup_623_78_4(acc),
            [102, 117, 106, 105, 115, 104, 105, 114, 111] => lookup_623_78_5(acc),
            [104, 105, 116, 97, 99, 104, 105] => lookup_623_78_6(acc),
            [104, 105, 116, 97, 99, 104, 105, 110, 97, 107, 97] => lookup_623_78_7(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 109, 105, 121, 97] => lookup_623_78_8(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 116, 97] => lookup_623_78_9(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_623_78_10(acc),
            [105, 110, 97] => lookup_623_78_11(acc),
            [105, 110, 97, 115, 104, 105, 107, 105] => lookup_623_78_12(acc),
            [105, 116, 97, 107, 111] => lookup_623_78_13(acc),
            [105, 119, 97, 109, 97] => lookup_623_78_14(acc),
            [106, 111, 115, 111] => lookup_623_78_15(acc),
            [107, 97, 109, 105, 115, 117] => lookup_623_78_16(acc),
            [107, 97, 115, 97, 109, 97] => lookup_623_78_17(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_623_78_18(acc),
            [107, 97, 115, 117, 109, 105, 103, 97, 117, 114, 97] => lookup_623_78_19(acc),
            [107, 111, 103, 97] => lookup_623_78_20(acc),
            [109, 105, 104, 111] => lookup_623_78_21(acc),
            [109, 105, 116, 111] => lookup_623_78_22(acc),
            [109, 111, 114, 105, 121, 97] => lookup_623_78_23(acc),
            [110, 97, 107, 97] => lookup_623_78_24(acc),
            [110, 97, 109, 101, 103, 97, 116, 97] => lookup_623_78_25(acc),
            [111, 97, 114, 97, 105] => lookup_623_78_26(acc),
            [111, 103, 97, 119, 97] => lookup_623_78_27(acc),
            [111, 109, 105, 116, 97, 109, 97] => lookup_623_78_28(acc),
            [114, 121, 117, 103, 97, 115, 97, 107, 105] => lookup_623_78_29(acc),
            [115, 97, 107, 97, 105] => lookup_623_78_30(acc),
            [115, 97, 107, 117, 114, 97, 103, 97, 119, 97] => lookup_623_78_31(acc),
            [115, 104, 105, 109, 111, 100, 97, 116, 101] => lookup_623_78_32(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 109, 97] => lookup_623_78_33(acc),
            [115, 104, 105, 114, 111, 115, 97, 116, 111] => lookup_623_78_34(acc),
            [115, 111, 119, 97] => lookup_623_78_35(acc),
            [115, 117, 105, 102, 117] => lookup_623_78_36(acc),
            [116, 97, 107, 97, 104, 97, 103, 105] => lookup_623_78_37(acc),
            [116, 97, 109, 97, 116, 115, 117, 107, 117, 114, 105] => lookup_623_78_38(acc),
            [116, 111, 107, 97, 105] => lookup_623_78_39(acc),
            [116, 111, 109, 111, 98, 101] => lookup_623_78_40(acc),
            [116, 111, 110, 101] => lookup_623_78_41(acc),
            [116, 111, 114, 105, 100, 101] => lookup_623_78_42(acc),
            [116, 115, 117, 99, 104, 105, 117, 114, 97] => lookup_623_78_43(acc),
            [116, 115, 117, 107, 117, 98, 97] => lookup_623_78_44(acc),
            [117, 99, 104, 105, 104, 97, 114, 97] => lookup_623_78_45(acc),
            [117, 115, 104, 105, 107, 117] => lookup_623_78_46(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_623_78_47(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_623_78_48(acc),
            [121, 97, 119, 97, 114, 97] => lookup_623_78_49(acc),
            [121, 117, 107, 105] => lookup_623_78_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_80_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_80<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 109, 105, 122, 117] => lookup_623_80_0(acc),
            [104, 97, 107, 117, 105] => lookup_623_80_1(acc),
            [104, 97, 107, 117, 115, 97, 110] => lookup_623_80_2(acc),
            [107, 97, 103, 97] => lookup_623_80_3(acc),
            [107, 97, 104, 111, 107, 117] => lookup_623_80_4(acc),
            [107, 97, 110, 97, 122, 97, 119, 97] => lookup_623_80_5(acc),
            [107, 97, 119, 97, 107, 105, 116, 97] => lookup_623_80_6(acc),
            [107, 111, 109, 97, 116, 115, 117] => lookup_623_80_7(acc),
            [110, 97, 107, 97, 110, 111, 116, 111] => lookup_623_80_8(acc),
            [110, 97, 110, 97, 111] => lookup_623_80_9(acc),
            [110, 111, 109, 105] => lookup_623_80_10(acc),
            [110, 111, 110, 111, 105, 99, 104, 105] => lookup_623_80_11(acc),
            [110, 111, 116, 111] => lookup_623_80_12(acc),
            [115, 104, 105, 107, 97] => lookup_623_80_13(acc),
            [115, 117, 122, 117] => lookup_623_80_14(acc),
            [116, 115, 117, 98, 97, 116, 97] => lookup_623_80_15(acc),
            [116, 115, 117, 114, 117, 103, 105] => lookup_623_80_16(acc),
            [117, 99, 104, 105, 110, 97, 100, 97] => lookup_623_80_17(acc),
            [119, 97, 106, 105, 109, 97] => lookup_623_80_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_82_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_82<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 100, 97, 105] => lookup_623_82_0(acc),
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_623_82_1(acc),
            [104, 97, 110, 97, 109, 97, 107, 105] => lookup_623_82_2(acc),
            [104, 105, 114, 97, 105, 122, 117, 109, 105] => lookup_623_82_3(acc),
            [104, 105, 114, 111, 110, 111] => lookup_623_82_4(acc),
            [105, 99, 104, 105, 110, 111, 104, 101] => lookup_623_82_5(acc),
            [105, 99, 104, 105, 110, 111, 115, 101, 107, 105] => lookup_623_82_6(acc),
            [105, 119, 97, 105, 122, 117, 109, 105] => lookup_623_82_7(acc),
            [105, 119, 97, 116, 101] => lookup_623_82_8(acc),
            [106, 111, 98, 111, 106, 105] => lookup_623_82_9(acc),
            [107, 97, 109, 97, 105, 115, 104, 105] => lookup_623_82_10(acc),
            [107, 97, 110, 101, 103, 97, 115, 97, 107, 105] => lookup_623_82_11(acc),
            [107, 97, 114, 117, 109, 97, 105] => lookup_623_82_12(acc),
            [107, 97, 119, 97, 105] => lookup_623_82_13(acc),
            [107, 105, 116, 97, 107, 97, 109, 105] => lookup_623_82_14(acc),
            [107, 117, 106, 105] => lookup_623_82_15(acc),
            [107, 117, 110, 111, 104, 101] => lookup_623_82_16(acc),
            [107, 117, 122, 117, 109, 97, 107, 105] => lookup_623_82_17(acc),
            [109, 105, 121, 97, 107, 111] => lookup_623_82_18(acc),
            [109, 105, 122, 117, 115, 97, 119, 97] => lookup_623_82_19(acc),
            [109, 111, 114, 105, 111, 107, 97] => lookup_623_82_20(acc),
            [110, 105, 110, 111, 104, 101] => lookup_623_82_21(acc),
            [110, 111, 100, 97] => lookup_623_82_22(acc),
            [111, 102, 117, 110, 97, 116, 111] => lookup_623_82_23(acc),
            [111, 115, 104, 117] => lookup_623_82_24(acc),
            [111, 116, 115, 117, 99, 104, 105] => lookup_623_82_25(acc),
            [114, 105, 107, 117, 122, 101, 110, 116, 97, 107, 97, 116, 97] => lookup_623_82_26(acc),
            [115, 104, 105, 119, 97] => lookup_623_82_27(acc),
            [115, 104, 105, 122, 117, 107, 117, 105, 115, 104, 105] => lookup_623_82_28(acc),
            [115, 117, 109, 105, 116, 97] => lookup_623_82_29(acc),
            [116, 97, 110, 111, 104, 97, 116, 97] => lookup_623_82_30(acc),
            [116, 111, 110, 111] => lookup_623_82_31(acc),
            [121, 97, 104, 97, 98, 97] => lookup_623_82_32(acc),
            [121, 97, 109, 97, 100, 97] => lookup_623_82_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_85_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_85<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 121, 97, 103, 97, 119, 97] => lookup_623_85_0(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 97, 119, 97] => lookup_623_85_1(acc),
            [107, 97, 110, 111, 110, 106, 105] => lookup_623_85_2(acc),
            [107, 111, 116, 111, 104, 105, 114, 97] => lookup_623_85_3(acc),
            [109, 97, 110, 110, 111] => lookup_623_85_4(acc),
            [109, 97, 114, 117, 103, 97, 109, 101] => lookup_623_85_5(acc),
            [109, 105, 116, 111, 121, 111] => lookup_623_85_6(acc),
            [110, 97, 111, 115, 104, 105, 109, 97] => lookup_623_85_7(acc),
            [115, 97, 110, 117, 107, 105] => lookup_623_85_8(acc),
            [116, 97, 100, 111, 116, 115, 117] => lookup_623_85_9(acc),
            [116, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_623_85_10(acc),
            [116, 111, 110, 111, 115, 104, 111] => lookup_623_85_11(acc),
            [117, 99, 104, 105, 110, 111, 109, 105] => lookup_623_85_12(acc),
            [117, 116, 97, 122, 117] => lookup_623_85_13(acc),
            [122, 101, 110, 116, 115, 117, 106, 105] => lookup_623_85_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_86_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_86<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 117, 110, 101] => lookup_623_86_0(acc),
            [97, 109, 97, 109, 105] => lookup_623_86_1(acc),
            [104, 105, 111, 107, 105] => lookup_623_86_2(acc),
            [105, 115, 97] => lookup_623_86_3(acc),
            [105, 115, 101, 110] => lookup_623_86_4(acc),
            [105, 122, 117, 109, 105] => lookup_623_86_5(acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_623_86_6(acc),
            [107, 97, 110, 111, 121, 97] => lookup_623_86_7(acc),
            [107, 97, 119, 97, 110, 97, 98, 101] => lookup_623_86_8(acc),
            [107, 105, 110, 107, 111] => lookup_623_86_9(acc),
            [107, 111, 117, 121, 97, 109, 97] => lookup_623_86_10(acc),
            [109, 97, 107, 117, 114, 97, 122, 97, 107, 105] => lookup_623_86_11(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_623_86_12(acc),
            [109, 105, 110, 97, 109, 105, 116, 97, 110, 101] => lookup_623_86_13(acc),
            [110, 97, 107, 97, 116, 97, 110, 101] => lookup_623_86_14(acc),
            [110, 105, 115, 104, 105, 110, 111, 111, 109, 111, 116, 101] => lookup_623_86_15(acc),
            [115, 97, 116, 115, 117, 109, 97, 115, 101, 110, 100, 97, 105] => lookup_623_86_16(acc),
            [115, 111, 111] => lookup_623_86_17(acc),
            [116, 97, 114, 117, 109, 105, 122, 117] => lookup_623_86_18(acc),
            [121, 117, 115, 117, 105] => lookup_623_86_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_87_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_87<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 107, 97, 119, 97] => lookup_623_87_0(acc),
            [97, 116, 115, 117, 103, 105] => lookup_623_87_1(acc),
            [97, 121, 97, 115, 101] => lookup_623_87_2(acc),
            [99, 104, 105, 103, 97, 115, 97, 107, 105] => lookup_623_87_3(acc),
            [101, 98, 105, 110, 97] => lookup_623_87_4(acc),
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_623_87_5(acc),
            [104, 97, 100, 97, 110, 111] => lookup_623_87_6(acc),
            [104, 97, 107, 111, 110, 101] => lookup_623_87_7(acc),
            [104, 105, 114, 97, 116, 115, 117, 107, 97] => lookup_623_87_8(acc),
            [105, 115, 101, 104, 97, 114, 97] => lookup_623_87_9(acc),
            [107, 97, 105, 115, 101, 105] => lookup_623_87_10(acc),
            [107, 97, 109, 97, 107, 117, 114, 97] => lookup_623_87_11(acc),
            [107, 105, 121, 111, 107, 97, 119, 97] => lookup_623_87_12(acc),
            [109, 97, 116, 115, 117, 100, 97] => lookup_623_87_13(acc),
            [109, 105, 110, 97, 109, 105, 97, 115, 104, 105, 103, 97, 114, 97] => {
                lookup_623_87_14(acc)
            }
            [109, 105, 117, 114, 97] => lookup_623_87_15(acc),
            [110, 97, 107, 97, 105] => lookup_623_87_16(acc),
            [110, 105, 110, 111, 109, 105, 121, 97] => lookup_623_87_17(acc),
            [111, 100, 97, 119, 97, 114, 97] => lookup_623_87_18(acc),
            [111, 105] => lookup_623_87_19(acc),
            [111, 105, 115, 111] => lookup_623_87_20(acc),
            [115, 97, 103, 97, 109, 105, 104, 97, 114, 97] => lookup_623_87_21(acc),
            [115, 97, 109, 117, 107, 97, 119, 97] => lookup_623_87_22(acc),
            [116, 115, 117, 107, 117, 105] => lookup_623_87_23(acc),
            [121, 97, 109, 97, 107, 105, 116, 97] => lookup_623_87_24(acc),
            [121, 97, 109, 97, 116, 111] => lookup_623_87_25(acc),
            [121, 111, 107, 111, 115, 117, 107, 97] => lookup_623_87_26(acc),
            [121, 117, 103, 97, 119, 97, 114, 97] => lookup_623_87_27(acc),
            [122, 97, 109, 97] => lookup_623_87_28(acc),
            [122, 117, 115, 104, 105] => lookup_623_87_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_89_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_89_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_89<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_623_89_0(acc),
            wild => lookup_623_89_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_623_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_93_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_93_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_93<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_623_93_0(acc),
            wild => lookup_623_93_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_623_94_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_94_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_94<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_623_94_0(acc),
            wild => lookup_623_94_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_623_95_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_95<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 105] => lookup_623_95_0(acc),
            [103, 101, 105, 115, 101, 105] => lookup_623_95_1(acc),
            [104, 105, 100, 97, 107, 97] => lookup_623_95_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 116, 115, 117, 110, 111] => lookup_623_95_3(acc),
            [105, 110, 111] => lookup_623_95_4(acc),
            [107, 97, 103, 97, 109, 105] => lookup_623_95_5(acc),
            [107, 97, 109, 105] => lookup_623_95_6(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_623_95_7(acc),
            [107, 111, 99, 104, 105] => lookup_623_95_8(acc),
            [109, 105, 104, 97, 114, 97] => lookup_623_95_9(acc),
            [109, 111, 116, 111, 121, 97, 109, 97] => lookup_623_95_10(acc),
            [109, 117, 114, 111, 116, 111] => lookup_623_95_11(acc),
            [110, 97, 104, 97, 114, 105] => lookup_623_95_12(acc),
            [110, 97, 107, 97, 109, 117, 114, 97] => lookup_623_95_13(acc),
            [110, 97, 110, 107, 111, 107, 117] => lookup_623_95_14(acc),
            [110, 105, 115, 104, 105, 116, 111, 115, 97] => lookup_623_95_15(acc),
            [110, 105, 121, 111, 100, 111, 103, 97, 119, 97] => lookup_623_95_16(acc),
            [111, 99, 104, 105] => lookup_623_95_17(acc),
            [111, 107, 97, 119, 97] => lookup_623_95_18(acc),
            [111, 116, 111, 121, 111] => lookup_623_95_19(acc),
            [111, 116, 115, 117, 107, 105] => lookup_623_95_20(acc),
            [115, 97, 107, 97, 119, 97] => lookup_623_95_21(acc),
            [115, 117, 107, 117, 109, 111] => lookup_623_95_22(acc),
            [115, 117, 115, 97, 107, 105] => lookup_623_95_23(acc),
            [116, 111, 115, 97] => lookup_623_95_24(acc),
            [116, 111, 115, 97, 115, 104, 105, 109, 105, 122, 117] => lookup_623_95_25(acc),
            [116, 111, 121, 111] => lookup_623_95_26(acc),
            [116, 115, 117, 110, 111] => lookup_623_95_27(acc),
            [117, 109, 97, 106, 105] => lookup_623_95_28(acc),
            [121, 97, 115, 117, 100, 97] => lookup_623_95_29(acc),
            [121, 117, 115, 117, 104, 97, 114, 97] => lookup_623_95_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_96_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_96<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 97, 107, 117, 115, 97] => lookup_623_96_0(acc),
            [97, 114, 97, 111] => lookup_623_96_1(acc),
            [97, 115, 111] => lookup_623_96_2(acc),
            [99, 104, 111, 121, 111] => lookup_623_96_3(acc),
            [103, 121, 111, 107, 117, 116, 111] => lookup_623_96_4(acc),
            [107, 97, 109, 105, 97, 109, 97, 107, 117, 115, 97] => lookup_623_96_5(acc),
            [107, 105, 107, 117, 99, 104, 105] => lookup_623_96_6(acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_623_96_7(acc),
            [109, 97, 115, 104, 105, 107, 105] => lookup_623_96_8(acc),
            [109, 105, 102, 117, 110, 101] => lookup_623_96_9(acc),
            [109, 105, 110, 97, 109, 97, 116, 97] => lookup_623_96_10(acc),
            [109, 105, 110, 97, 109, 105, 111, 103, 117, 110, 105] => lookup_623_96_11(acc),
            [110, 97, 103, 97, 115, 117] => lookup_623_96_12(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_623_96_13(acc),
            [111, 103, 117, 110, 105] => lookup_623_96_14(acc),
            [111, 122, 117] => lookup_623_96_15(acc),
            [115, 117, 109, 111, 116, 111] => lookup_623_96_16(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_623_96_17(acc),
            [117, 107, 105] => lookup_623_96_18(acc),
            [117, 116, 111] => lookup_623_96_19(acc),
            [121, 97, 109, 97, 103, 97] => lookup_623_96_20(acc),
            [121, 97, 109, 97, 116, 111] => lookup_623_96_21(acc),
            [121, 97, 116, 115, 117, 115, 104, 105, 114, 111] => lookup_623_96_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_98_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_98<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 121, 97, 98, 101] => lookup_623_98_0(acc),
            [102, 117, 107, 117, 99, 104, 105, 121, 97, 109, 97] => lookup_623_98_1(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97] => lookup_623_98_2(acc),
            [105, 100, 101] => lookup_623_98_3(acc),
            [105, 110, 101] => lookup_623_98_4(acc),
            [106, 111, 121, 111] => lookup_623_98_5(acc),
            [107, 97, 109, 101, 111, 107, 97] => lookup_623_98_6(acc),
            [107, 97, 109, 111] => lookup_623_98_7(acc),
            [107, 105, 116, 97] => lookup_623_98_8(acc),
            [107, 105, 122, 117] => lookup_623_98_9(acc),
            [107, 117, 109, 105, 121, 97, 109, 97] => lookup_623_98_10(acc),
            [107, 121, 111, 116, 97, 109, 98, 97] => lookup_623_98_11(acc),
            [107, 121, 111, 116, 97, 110, 97, 98, 101] => lookup_623_98_12(acc),
            [107, 121, 111, 116, 97, 110, 103, 111] => lookup_623_98_13(acc),
            [109, 97, 105, 122, 117, 114, 117] => lookup_623_98_14(acc),
            [109, 105, 110, 97, 109, 105] => lookup_623_98_15(acc),
            [109, 105, 110, 97, 109, 105, 121, 97, 109, 97, 115, 104, 105, 114, 111] => {
                lookup_623_98_16(acc)
            }
            [109, 105, 121, 97, 122, 117] => lookup_623_98_17(acc),
            [109, 117, 107, 111] => lookup_623_98_18(acc),
            [110, 97, 103, 97, 111, 107, 97, 107, 121, 111] => lookup_623_98_19(acc),
            [110, 97, 107, 97, 103, 121, 111] => lookup_623_98_20(acc),
            [110, 97, 110, 116, 97, 110] => lookup_623_98_21(acc),
            [111, 121, 97, 109, 97, 122, 97, 107, 105] => lookup_623_98_22(acc),
            [115, 97, 107, 121, 111] => lookup_623_98_23(acc),
            [115, 101, 105, 107, 97] => lookup_623_98_24(acc),
            [116, 97, 110, 97, 98, 101] => lookup_623_98_25(acc),
            [117, 106, 105] => lookup_623_98_26(acc),
            [117, 106, 105, 116, 97, 119, 97, 114, 97] => lookup_623_98_27(acc),
            [119, 97, 122, 117, 107, 97] => lookup_623_98_28(acc),
            [121, 97, 109, 97, 115, 104, 105, 110, 97] => lookup_623_98_29(acc),
            [121, 97, 119, 97, 116, 97] => lookup_623_98_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_108_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_108<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 104, 105] => lookup_623_108_0(acc),
            [105, 110, 97, 98, 101] => lookup_623_108_1(acc),
            [105, 115, 101] => lookup_623_108_2(acc),
            [107, 97, 109, 101, 121, 97, 109, 97] => lookup_623_108_3(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_623_108_4(acc),
            [107, 105, 104, 111] => lookup_623_108_5(acc),
            [107, 105, 115, 111, 115, 97, 107, 105] => lookup_623_108_6(acc),
            [107, 105, 119, 97] => lookup_623_108_7(acc),
            [107, 111, 109, 111, 110, 111] => lookup_623_108_8(acc),
            [107, 117, 109, 97, 110, 111] => lookup_623_108_9(acc),
            [107, 117, 119, 97, 110, 97] => lookup_623_108_10(acc),
            [109, 97, 116, 115, 117, 115, 97, 107, 97] => lookup_623_108_11(acc),
            [109, 101, 105, 119, 97] => lookup_623_108_12(acc),
            [109, 105, 104, 97, 109, 97] => lookup_623_108_13(acc),
            [109, 105, 110, 97, 109, 105, 105, 115, 101] => lookup_623_108_14(acc),
            [109, 105, 115, 117, 103, 105] => lookup_623_108_15(acc),
            [109, 105, 121, 97, 109, 97] => lookup_623_108_16(acc),
            [110, 97, 98, 97, 114, 105] => lookup_623_108_17(acc),
            [115, 104, 105, 109, 97] => lookup_623_108_18(acc),
            [115, 117, 122, 117, 107, 97] => lookup_623_108_19(acc),
            [116, 97, 100, 111] => lookup_623_108_20(acc),
            [116, 97, 105, 107, 105] => lookup_623_108_21(acc),
            [116, 97, 107, 105] => lookup_623_108_22(acc),
            [116, 97, 109, 97, 107, 105] => lookup_623_108_23(acc),
            [116, 111, 98, 97] => lookup_623_108_24(acc),
            [116, 115, 117] => lookup_623_108_25(acc),
            [117, 100, 111, 110, 111] => lookup_623_108_26(acc),
            [117, 114, 101, 115, 104, 105, 110, 111] => lookup_623_108_27(acc),
            [119, 97, 116, 97, 114, 97, 105] => lookup_623_108_28(acc),
            [121, 111, 107, 107, 97, 105, 99, 104, 105] => lookup_623_108_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_110_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_110<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 114, 117, 107, 97, 119, 97] => lookup_623_110_0(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => {
                lookup_623_110_1(acc)
            }
            [105, 115, 104, 105, 110, 111, 109, 97, 107, 105] => lookup_623_110_2(acc),
            [105, 119, 97, 110, 117, 109, 97] => lookup_623_110_3(acc),
            [107, 97, 107, 117, 100, 97] => lookup_623_110_4(acc),
            [107, 97, 109, 105] => lookup_623_110_5(acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_623_110_6(acc),
            [109, 97, 114, 117, 109, 111, 114, 105] => lookup_623_110_7(acc),
            [109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_623_110_8(acc),
            [109, 105, 110, 97, 109, 105, 115, 97, 110, 114, 105, 107, 117] => {
                lookup_623_110_9(acc)
            }
            [109, 105, 115, 97, 116, 111] => lookup_623_110_10(acc),
            [109, 117, 114, 97, 116, 97] => lookup_623_110_11(acc),
            [110, 97, 116, 111, 114, 105] => lookup_623_110_12(acc),
            [111, 103, 97, 119, 97, 114, 97] => lookup_623_110_13(acc),
            [111, 104, 105, 114, 97] => lookup_623_110_14(acc),
            [111, 110, 97, 103, 97, 119, 97] => lookup_623_110_15(acc),
            [111, 115, 97, 107, 105] => lookup_623_110_16(acc),
            [114, 105, 102, 117] => lookup_623_110_17(acc),
            [115, 101, 109, 105, 110, 101] => lookup_623_110_18(acc),
            [115, 104, 105, 98, 97, 116, 97] => lookup_623_110_19(acc),
            [115, 104, 105, 99, 104, 105, 107, 97, 115, 104, 117, 107, 117] => {
                lookup_623_110_20(acc)
            }
            [115, 104, 105, 107, 97, 109, 97] => lookup_623_110_21(acc),
            [115, 104, 105, 111, 103, 97, 109, 97] => lookup_623_110_22(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_623_110_23(acc),
            [116, 97, 103, 97, 106, 111] => lookup_623_110_24(acc),
            [116, 97, 105, 119, 97] => lookup_623_110_25(acc),
            [116, 111, 109, 101] => lookup_623_110_26(acc),
            [116, 111, 109, 105, 121, 97] => lookup_623_110_27(acc),
            [119, 97, 107, 117, 121, 97] => lookup_623_110_28(acc),
            [119, 97, 116, 97, 114, 105] => lookup_623_110_29(acc),
            [121, 97, 109, 97, 109, 111, 116, 111] => lookup_623_110_30(acc),
            [122, 97, 111] => lookup_623_110_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_111_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_111<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 121, 97] => lookup_623_111_0(acc),
            [101, 98, 105, 110, 111] => lookup_623_111_1(acc),
            [103, 111, 107, 97, 115, 101] => lookup_623_111_2(acc),
            [104, 121, 117, 103, 97] => lookup_623_111_3(acc),
            [107, 97, 100, 111, 103, 97, 119, 97] => lookup_623_111_4(acc),
            [107, 97, 119, 97, 109, 105, 110, 97, 109, 105] => lookup_623_111_5(acc),
            [107, 105, 106, 111] => lookup_623_111_6(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_623_111_7(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_623_111_8(acc),
            [107, 105, 116, 97, 117, 114, 97] => lookup_623_111_9(acc),
            [107, 111, 98, 97, 121, 97, 115, 104, 105] => lookup_623_111_10(acc),
            [107, 117, 110, 105, 116, 111, 109, 105] => lookup_623_111_11(acc),
            [107, 117, 115, 104, 105, 109, 97] => lookup_623_111_12(acc),
            [109, 105, 109, 97, 116, 97] => lookup_623_111_13(acc),
            [109, 105, 121, 97, 107, 111, 110, 111, 106, 111] => lookup_623_111_14(acc),
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_623_111_15(acc),
            [109, 111, 114, 111, 116, 115, 117, 107, 97] => lookup_623_111_16(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_623_111_17(acc),
            [110, 105, 115, 104, 105, 109, 101, 114, 97] => lookup_623_111_18(acc),
            [110, 111, 98, 101, 111, 107, 97] => lookup_623_111_19(acc),
            [115, 97, 105, 116, 111] => lookup_623_111_20(acc),
            [115, 104, 105, 105, 98, 97] => lookup_623_111_21(acc),
            [115, 104, 105, 110, 116, 111, 109, 105] => lookup_623_111_22(acc),
            [116, 97, 107, 97, 104, 97, 114, 117] => lookup_623_111_23(acc),
            [116, 97, 107, 97, 110, 97, 98, 101] => lookup_623_111_24(acc),
            [116, 97, 107, 97, 122, 97, 107, 105] => lookup_623_111_25(acc),
            [116, 115, 117, 110, 111] => lookup_623_111_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_116_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_116<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 104, 105] => lookup_623_116_0(acc),
            [97, 103, 101, 109, 97, 116, 115, 117] => lookup_623_116_1(acc),
            [97, 110, 97, 110] => lookup_623_116_2(acc),
            [97, 111, 107, 105] => lookup_623_116_3(acc),
            [97, 115, 97, 104, 105] => lookup_623_116_4(acc),
            [97, 122, 117, 109, 105, 110, 111] => lookup_623_116_5(acc),
            [99, 104, 105, 107, 117, 104, 111, 107, 117] => lookup_623_116_6(acc),
            [99, 104, 105, 107, 117, 109, 97] => lookup_623_116_7(acc),
            [99, 104, 105, 110, 111] => lookup_623_116_8(acc),
            [102, 117, 106, 105, 109, 105] => lookup_623_116_9(acc),
            [104, 97, 107, 117, 98, 97] => lookup_623_116_10(acc),
            [104, 97, 114, 97] => lookup_623_116_11(acc),
            [104, 105, 114, 97, 121, 97] => lookup_623_116_12(acc),
            [105, 105, 100, 97] => lookup_623_116_13(acc),
            [105, 105, 106, 105, 109, 97] => lookup_623_116_14(acc),
            [105, 105, 121, 97, 109, 97] => lookup_623_116_15(acc),
            [105, 105, 122, 117, 110, 97] => lookup_623_116_16(acc),
            [105, 107, 101, 100, 97] => lookup_623_116_17(acc),
            [105, 107, 117, 115, 97, 107, 97] => lookup_623_116_18(acc),
            [105, 110, 97] => lookup_623_116_19(acc),
            [107, 97, 114, 117, 105, 122, 97, 119, 97] => lookup_623_116_20(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_623_116_21(acc),
            [107, 105, 115, 111] => lookup_623_116_22(acc),
            [107, 105, 115, 111, 102, 117, 107, 117, 115, 104, 105, 109, 97] => {
                lookup_623_116_23(acc)
            }
            [107, 105, 116, 97, 97, 105, 107, 105] => lookup_623_116_24(acc),
            [107, 111, 109, 97, 103, 97, 110, 101] => lookup_623_116_25(acc),
            [107, 111, 109, 111, 114, 111] => lookup_623_116_26(acc),
            [109, 97, 116, 115, 117, 107, 97, 119, 97] => lookup_623_116_27(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_623_116_28(acc),
            [109, 105, 97, 115, 97] => lookup_623_116_29(acc),
            [109, 105, 110, 97, 109, 105, 97, 105, 107, 105] => lookup_623_116_30(acc),
            [109, 105, 110, 97, 109, 105, 109, 97, 107, 105] => lookup_623_116_31(acc),
            [109, 105, 110, 97, 109, 105, 109, 105, 110, 111, 119, 97] => lookup_623_116_32(acc),
            [109, 105, 110, 111, 119, 97] => lookup_623_116_33(acc),
            [109, 105, 121, 97, 100, 97] => lookup_623_116_34(acc),
            [109, 105, 121, 111, 116, 97] => lookup_623_116_35(acc),
            [109, 111, 99, 104, 105, 122, 117, 107, 105] => lookup_623_116_36(acc),
            [110, 97, 103, 97, 110, 111] => lookup_623_116_37(acc),
            [110, 97, 103, 97, 119, 97] => lookup_623_116_38(acc),
            [110, 97, 103, 105, 115, 111] => lookup_623_116_39(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_623_116_40(acc),
            [110, 97, 107, 97, 110, 111] => lookup_623_116_41(acc),
            [110, 111, 122, 97, 119, 97, 111, 110, 115, 101, 110] => lookup_623_116_42(acc),
            [111, 98, 117, 115, 101] => lookup_623_116_43(acc),
            [111, 103, 97, 119, 97] => lookup_623_116_44(acc),
            [111, 107, 97, 121, 97] => lookup_623_116_45(acc),
            [111, 109, 97, 99, 104, 105] => lookup_623_116_46(acc),
            [111, 109, 105] => lookup_623_116_47(acc),
            [111, 111, 107, 117, 119, 97] => lookup_623_116_48(acc),
            [111, 111, 115, 104, 105, 107, 97] => lookup_623_116_49(acc),
            [111, 116, 97, 107, 105] => lookup_623_116_50(acc),
            [111, 116, 97, 114, 105] => lookup_623_116_51(acc),
            [115, 97, 107, 97, 101] => lookup_623_116_52(acc),
            [115, 97, 107, 97, 107, 105] => lookup_623_116_53(acc),
            [115, 97, 107, 117] => lookup_623_116_54(acc),
            [115, 97, 107, 117, 104, 111] => lookup_623_116_55(acc),
            [115, 104, 105, 109, 111, 115, 117, 119, 97] => lookup_623_116_56(acc),
            [115, 104, 105, 110, 97, 110, 111, 109, 97, 99, 104, 105] => lookup_623_116_57(acc),
            [115, 104, 105, 111, 106, 105, 114, 105] => lookup_623_116_58(acc),
            [115, 117, 119, 97] => lookup_623_116_59(acc),
            [115, 117, 122, 97, 107, 97] => lookup_623_116_60(acc),
            [116, 97, 107, 97, 103, 105] => lookup_623_116_61(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_623_116_62(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_623_116_63(acc),
            [116, 97, 116, 101, 115, 104, 105, 110, 97] => lookup_623_116_64(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_623_116_65(acc),
            [116, 111, 103, 97, 107, 117, 115, 104, 105] => lookup_623_116_66(acc),
            [116, 111, 103, 117, 114, 97] => lookup_623_116_67(acc),
            [116, 111, 109, 105] => lookup_623_116_68(acc),
            [117, 101, 100, 97] => lookup_623_116_69(acc),
            [119, 97, 100, 97] => lookup_623_116_70(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_623_116_71(acc),
            [121, 97, 109, 97, 110, 111, 117, 99, 104, 105] => lookup_623_116_72(acc),
            [121, 97, 115, 97, 107, 97] => lookup_623_116_73(acc),
            [121, 97, 115, 117, 111, 107, 97] => lookup_623_116_74(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_117_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_117<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 105, 106, 105, 119, 97] => lookup_623_117_0(acc),
            [102, 117, 116, 115, 117] => lookup_623_117_1(acc),
            [103, 111, 116, 111] => lookup_623_117_2(acc),
            [104, 97, 115, 97, 109, 105] => lookup_623_117_3(acc),
            [104, 105, 114, 97, 100, 111] => lookup_623_117_4(acc),
            [105, 107, 105] => lookup_623_117_5(acc),
            [105, 115, 97, 104, 97, 121, 97] => lookup_623_117_6(acc),
            [107, 97, 119, 97, 116, 97, 110, 97] => lookup_623_117_7(acc),
            [107, 117, 99, 104, 105, 110, 111, 116, 115, 117] => lookup_623_117_8(acc),
            [109, 97, 116, 115, 117, 117, 114, 97] => lookup_623_117_9(acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_623_117_10(acc),
            [111, 98, 97, 109, 97] => lookup_623_117_11(acc),
            [111, 109, 117, 114, 97] => lookup_623_117_12(acc),
            [111, 115, 101, 116, 111] => lookup_623_117_13(acc),
            [115, 97, 105, 107, 97, 105] => lookup_623_117_14(acc),
            [115, 97, 115, 101, 98, 111] => lookup_623_117_15(acc),
            [115, 101, 105, 104, 105] => lookup_623_117_16(acc),
            [115, 104, 105, 109, 97, 98, 97, 114, 97] => lookup_623_117_17(acc),
            [115, 104, 105, 110, 107, 97, 109, 105, 103, 111, 116, 111] => lookup_623_117_18(acc),
            [116, 111, 103, 105, 116, 115, 117] => lookup_623_117_19(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_623_117_20(acc),
            [117, 110, 122, 101, 110] => lookup_623_117_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_118_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_118_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_118<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_623_118_0(acc),
            wild => lookup_623_118_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_623_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_120_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_120<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 100, 111] => lookup_623_120_0(acc),
            [103, 111, 115, 101] => lookup_623_120_1(acc),
            [104, 101, 103, 117, 114, 105] => lookup_623_120_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 115, 104, 105, 110, 111] => {
                lookup_623_120_3(acc)
            }
            [105, 107, 97, 114, 117, 103, 97] => lookup_623_120_4(acc),
            [105, 107, 111, 109, 97] => lookup_623_120_5(acc),
            [107, 97, 109, 105, 107, 105, 116, 97, 121, 97, 109, 97] => lookup_623_120_6(acc),
            [107, 97, 110, 109, 97, 107, 105] => lookup_623_120_7(acc),
            [107, 97, 115, 104, 105, 98, 97] => lookup_623_120_8(acc),
            [107, 97, 115, 104, 105, 104, 97, 114, 97] => lookup_623_120_9(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_623_120_10(acc),
            [107, 97, 119, 97, 105] => lookup_623_120_11(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_623_120_12(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_623_120_13(acc),
            [107, 111, 114, 121, 111] => lookup_623_120_14(acc),
            [107, 117, 114, 111, 116, 97, 107, 105] => lookup_623_120_15(acc),
            [109, 105, 116, 115, 117, 101] => lookup_623_120_16(acc),
            [109, 105, 121, 97, 107, 101] => lookup_623_120_17(acc),
            [110, 97, 114, 97] => lookup_623_120_18(acc),
            [110, 111, 115, 101, 103, 97, 119, 97] => lookup_623_120_19(acc),
            [111, 106, 105] => lookup_623_120_20(acc),
            [111, 117, 100, 97] => lookup_623_120_21(acc),
            [111, 121, 111, 100, 111] => lookup_623_120_22(acc),
            [115, 97, 107, 117, 114, 97, 105] => lookup_623_120_23(acc),
            [115, 97, 110, 103, 111] => lookup_623_120_24(acc),
            [115, 104, 105, 109, 111, 105, 99, 104, 105] => lookup_623_120_25(acc),
            [115, 104, 105, 109, 111, 107, 105, 116, 97, 121, 97, 109, 97] => {
                lookup_623_120_26(acc)
            }
            [115, 104, 105, 110, 106, 111] => lookup_623_120_27(acc),
            [115, 111, 110, 105] => lookup_623_120_28(acc),
            [116, 97, 107, 97, 116, 111, 114, 105] => lookup_623_120_29(acc),
            [116, 97, 119, 97, 114, 97, 109, 111, 116, 111] => lookup_623_120_30(acc),
            [116, 101, 110, 107, 97, 119, 97] => lookup_623_120_31(acc),
            [116, 101, 110, 114, 105] => lookup_623_120_32(acc),
            [117, 100, 97] => lookup_623_120_33(acc),
            [121, 97, 109, 97, 116, 111, 107, 111, 114, 105, 121, 97, 109, 97] => {
                lookup_623_120_34(acc)
            }
            [121, 97, 109, 97, 116, 111, 116, 97, 107, 97, 100, 97] => lookup_623_120_35(acc),
            [121, 97, 109, 97, 122, 111, 101] => lookup_623_120_36(acc),
            [121, 111, 115, 104, 105, 110, 111] => lookup_623_120_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_121_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_121_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_623_121_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_121_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_121_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_121_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_121_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_121_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_121_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_121_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_121_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_121_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_121<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 101, 105, 110, 101, 116] => lookup_623_121_0(info, labels, acc),
            [103, 101, 104, 105, 114, 110] => lookup_623_121_1(acc),
            [105, 118, 111, 114, 121] => lookup_623_121_2(acc),
            [109, 97, 105, 108, 45, 98, 111, 120] => lookup_623_121_3(acc),
            [109, 105, 110, 116, 115] => lookup_623_121_4(acc),
            [109, 111, 107, 117, 114, 101, 110] => lookup_623_121_5(acc),
            [111, 112, 97, 108] => lookup_623_121_6(acc),
            [115, 97, 107, 117, 114, 97] => lookup_623_121_7(acc),
            [115, 117, 109, 111, 109, 111] => lookup_623_121_8(acc),
            [116, 111, 112, 97, 122] => lookup_623_121_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_123_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_123<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 103, 97] => lookup_623_123_0(acc),
            [97, 103, 97, 110, 111] => lookup_623_123_1(acc),
            [103, 111, 115, 101, 110] => lookup_623_123_2(acc),
            [105, 116, 111, 105, 103, 97, 119, 97] => lookup_623_123_3(acc),
            [105, 122, 117, 109, 111, 122, 97, 107, 105] => lookup_623_123_4(acc),
            [106, 111, 101, 116, 115, 117] => lookup_623_123_5(acc),
            [107, 97, 109, 111] => lookup_623_123_6(acc),
            [107, 97, 114, 105, 119, 97] => lookup_623_123_7(acc),
            [107, 97, 115, 104, 105, 119, 97, 122, 97, 107, 105] => lookup_623_123_8(acc),
            [109, 105, 110, 97, 109, 105, 117, 111, 110, 117, 109, 97] => lookup_623_123_9(acc),
            [109, 105, 116, 115, 117, 107, 101] => lookup_623_123_10(acc),
            [109, 117, 105, 107, 97] => lookup_623_123_11(acc),
            [109, 117, 114, 97, 107, 97, 109, 105] => lookup_623_123_12(acc),
            [109, 121, 111, 107, 111] => lookup_623_123_13(acc),
            [110, 97, 103, 97, 111, 107, 97] => lookup_623_123_14(acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_623_123_15(acc),
            [111, 106, 105, 121, 97] => lookup_623_123_16(acc),
            [111, 109, 105] => lookup_623_123_17(acc),
            [115, 97, 100, 111] => lookup_623_123_18(acc),
            [115, 97, 110, 106, 111] => lookup_623_123_19(acc),
            [115, 101, 105, 114, 111] => lookup_623_123_20(acc),
            [115, 101, 105, 114, 111, 117] => lookup_623_123_21(acc),
            [115, 101, 107, 105, 107, 97, 119, 97] => lookup_623_123_22(acc),
            [115, 104, 105, 98, 97, 116, 97] => lookup_623_123_23(acc),
            [116, 97, 103, 97, 109, 105] => lookup_623_123_24(acc),
            [116, 97, 105, 110, 97, 105] => lookup_623_123_25(acc),
            [116, 111, 99, 104, 105, 111] => lookup_623_123_26(acc),
            [116, 111, 107, 97, 109, 97, 99, 104, 105] => lookup_623_123_27(acc),
            [116, 115, 117, 98, 97, 109, 101] => lookup_623_123_28(acc),
            [116, 115, 117, 110, 97, 110] => lookup_623_123_29(acc),
            [117, 111, 110, 117, 109, 97] => lookup_623_123_30(acc),
            [121, 97, 104, 105, 107, 111] => lookup_623_123_31(acc),
            [121, 111, 105, 116, 97] => lookup_623_123_32(acc),
            [121, 117, 122, 97, 119, 97] => lookup_623_123_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_129_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_129<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 112, 112, 117] => lookup_623_129_0(acc),
            [98, 117, 110, 103, 111, 111, 110, 111] => lookup_623_129_1(acc),
            [98, 117, 110, 103, 111, 116, 97, 107, 97, 100, 97] => lookup_623_129_2(acc),
            [104, 97, 115, 97, 109, 97] => lookup_623_129_3(acc),
            [104, 105, 106, 105] => lookup_623_129_4(acc),
            [104, 105, 109, 101, 115, 104, 105, 109, 97] => lookup_623_129_5(acc),
            [104, 105, 116, 97] => lookup_623_129_6(acc),
            [107, 97, 109, 105, 116, 115, 117, 101] => lookup_623_129_7(acc),
            [107, 111, 107, 111, 110, 111, 101] => lookup_623_129_8(acc),
            [107, 117, 106, 117] => lookup_623_129_9(acc),
            [107, 117, 110, 105, 115, 97, 107, 105] => lookup_623_129_10(acc),
            [107, 117, 115, 117] => lookup_623_129_11(acc),
            [111, 105, 116, 97] => lookup_623_129_12(acc),
            [115, 97, 105, 107, 105] => lookup_623_129_13(acc),
            [116, 97, 107, 101, 116, 97] => lookup_623_129_14(acc),
            [116, 115, 117, 107, 117, 109, 105] => lookup_623_129_15(acc),
            [117, 115, 97] => lookup_623_129_16(acc),
            [117, 115, 117, 107, 105] => lookup_623_129_17(acc),
            [121, 117, 102, 117] => lookup_623_129_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_130<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 97, 105, 119, 97] => lookup_623_130_0(acc),
            [97, 115, 97, 107, 117, 99, 104, 105] => lookup_623_130_1(acc),
            [98, 105, 122, 101, 110] => lookup_623_130_2(acc),
            [104, 97, 121, 97, 115, 104, 105, 109, 97] => lookup_623_130_3(acc),
            [105, 98, 97, 114, 97] => lookup_623_130_4(acc),
            [107, 97, 103, 97, 109, 105, 110, 111] => lookup_623_130_5(acc),
            [107, 97, 115, 97, 111, 107, 97] => lookup_623_130_6(acc),
            [107, 105, 98, 105, 99, 104, 117, 111] => lookup_623_130_7(acc),
            [107, 117, 109, 101, 110, 97, 110] => lookup_623_130_8(acc),
            [107, 117, 114, 97, 115, 104, 105, 107, 105] => lookup_623_130_9(acc),
            [109, 97, 110, 105, 119, 97] => lookup_623_130_10(acc),
            [109, 105, 115, 97, 107, 105] => lookup_623_130_11(acc),
            [110, 97, 103, 105] => lookup_623_130_12(acc),
            [110, 105, 105, 109, 105] => lookup_623_130_13(acc),
            [110, 105, 115, 104, 105, 97, 119, 97, 107, 117, 114, 97] => lookup_623_130_14(acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_623_130_15(acc),
            [115, 97, 116, 111, 115, 104, 111] => lookup_623_130_16(acc),
            [115, 101, 116, 111, 117, 99, 104, 105] => lookup_623_130_17(acc),
            [115, 104, 105, 110, 106, 111] => lookup_623_130_18(acc),
            [115, 104, 111, 111] => lookup_623_130_19(acc),
            [115, 111, 106, 97] => lookup_623_130_20(acc),
            [116, 97, 107, 97, 104, 97, 115, 104, 105] => lookup_623_130_21(acc),
            [116, 97, 109, 97, 110, 111] => lookup_623_130_22(acc),
            [116, 115, 117, 121, 97, 109, 97] => lookup_623_130_23(acc),
            [119, 97, 107, 101] => lookup_623_130_24(acc),
            [121, 97, 107, 97, 103, 101] => lookup_623_130_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_131_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_131<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 103, 117, 110, 105] => lookup_623_131_0(acc),
            [103, 105, 110, 111, 119, 97, 110] => lookup_623_131_1(acc),
            [103, 105, 110, 111, 122, 97] => lookup_623_131_2(acc),
            [103, 117, 115, 104, 105, 107, 97, 109, 105] => lookup_623_131_3(acc),
            [104, 97, 101, 98, 97, 114, 117] => lookup_623_131_4(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_623_131_5(acc),
            [104, 105, 114, 97, 114, 97] => lookup_623_131_6(acc),
            [105, 104, 101, 121, 97] => lookup_623_131_7(acc),
            [105, 115, 104, 105, 103, 97, 107, 105] => lookup_623_131_8(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_623_131_9(acc),
            [105, 116, 111, 109, 97, 110] => lookup_623_131_10(acc),
            [105, 122, 101, 110, 97] => lookup_623_131_11(acc),
            [107, 97, 100, 101, 110, 97] => lookup_623_131_12(acc),
            [107, 105, 110] => lookup_623_131_13(acc),
            [107, 105, 116, 97, 100, 97, 105, 116, 111] => lookup_623_131_14(acc),
            [107, 105, 116, 97, 110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => {
                lookup_623_131_15(acc)
            }
            [107, 117, 109, 101, 106, 105, 109, 97] => lookup_623_131_16(acc),
            [107, 117, 110, 105, 103, 97, 109, 105] => lookup_623_131_17(acc),
            [109, 105, 110, 97, 109, 105, 100, 97, 105, 116, 111] => lookup_623_131_18(acc),
            [109, 111, 116, 111, 98, 117] => lookup_623_131_19(acc),
            [110, 97, 103, 111] => lookup_623_131_20(acc),
            [110, 97, 104, 97] => lookup_623_131_21(acc),
            [110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => lookup_623_131_22(acc),
            [110, 97, 107, 105, 106, 105, 110] => lookup_623_131_23(acc),
            [110, 97, 110, 106, 111] => lookup_623_131_24(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_623_131_25(acc),
            [111, 103, 105, 109, 105] => lookup_623_131_26(acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_623_131_27(acc),
            [111, 110, 110, 97] => lookup_623_131_28(acc),
            [115, 104, 105, 109, 111, 106, 105] => lookup_623_131_29(acc),
            [116, 97, 107, 101, 116, 111, 109, 105] => lookup_623_131_30(acc),
            [116, 97, 114, 97, 109, 97] => lookup_623_131_31(acc),
            [116, 111, 107, 97, 115, 104, 105, 107, 105] => lookup_623_131_32(acc),
            [116, 111, 109, 105, 103, 117, 115, 117, 107, 117] => lookup_623_131_33(acc),
            [116, 111, 110, 97, 107, 105] => lookup_623_131_34(acc),
            [117, 114, 97, 115, 111, 101] => lookup_623_131_35(acc),
            [117, 114, 117, 109, 97] => lookup_623_131_36(acc),
            [121, 97, 101, 115, 101] => lookup_623_131_37(acc),
            [121, 111, 109, 105, 116, 97, 110] => lookup_623_131_38(acc),
            [121, 111, 110, 97, 98, 97, 114, 117] => lookup_623_131_39(acc),
            [121, 111, 110, 97, 103, 117, 110, 105] => lookup_623_131_40(acc),
            [122, 97, 109, 97, 109, 105] => lookup_623_131_41(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_134<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 101, 110, 111] => lookup_623_134_0(acc),
            [99, 104, 105, 104, 97, 121, 97, 97, 107, 97, 115, 97, 107, 97] => {
                lookup_623_134_1(acc)
            }
            [99, 104, 117, 111] => lookup_623_134_2(acc),
            [100, 97, 105, 116, 111] => lookup_623_134_3(acc),
            [102, 117, 106, 105, 105, 100, 101, 114, 97] => lookup_623_134_4(acc),
            [104, 97, 98, 105, 107, 105, 110, 111] => lookup_623_134_5(acc),
            [104, 97, 110, 110, 97, 110] => lookup_623_134_6(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 115, 97, 107, 97] => lookup_623_134_7(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 117, 109, 105, 121, 111, 115, 104, 105] => {
                lookup_623_134_8(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 100, 111, 103, 97, 119, 97] => {
                lookup_623_134_9(acc)
            }
            [104, 105, 114, 97, 107, 97, 116, 97] => lookup_623_134_10(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_623_134_11(acc),
            [105, 107, 101, 100, 97] => lookup_623_134_12(acc),
            [105, 122, 117, 109, 105] => lookup_623_134_13(acc),
            [105, 122, 117, 109, 105, 111, 116, 115, 117] => lookup_623_134_14(acc),
            [105, 122, 117, 109, 105, 115, 97, 110, 111] => lookup_623_134_15(acc),
            [107, 97, 100, 111, 109, 97] => lookup_623_134_16(acc),
            [107, 97, 105, 122, 117, 107, 97] => lookup_623_134_17(acc),
            [107, 97, 110, 97, 110] => lookup_623_134_18(acc),
            [107, 97, 115, 104, 105, 119, 97, 114, 97] => lookup_623_134_19(acc),
            [107, 97, 116, 97, 110, 111] => lookup_623_134_20(acc),
            [107, 97, 119, 97, 99, 104, 105, 110, 97, 103, 97, 110, 111] => lookup_623_134_21(acc),
            [107, 105, 115, 104, 105, 119, 97, 100, 97] => lookup_623_134_22(acc),
            [107, 105, 116, 97] => lookup_623_134_23(acc),
            [107, 117, 109, 97, 116, 111, 114, 105] => lookup_623_134_24(acc),
            [109, 97, 116, 115, 117, 98, 97, 114, 97] => lookup_623_134_25(acc),
            [109, 105, 110, 97, 116, 111] => lookup_623_134_26(acc),
            [109, 105, 110, 111, 104] => lookup_623_134_27(acc),
            [109, 105, 115, 97, 107, 105] => lookup_623_134_28(acc),
            [109, 111, 114, 105, 103, 117, 99, 104, 105] => lookup_623_134_29(acc),
            [110, 101, 121, 97, 103, 97, 119, 97] => lookup_623_134_30(acc),
            [110, 105, 115, 104, 105] => lookup_623_134_31(acc),
            [110, 111, 115, 101] => lookup_623_134_32(acc),
            [111, 115, 97, 107, 97, 115, 97, 121, 97, 109, 97] => lookup_623_134_33(acc),
            [115, 97, 107, 97, 105] => lookup_623_134_34(acc),
            [115, 97, 121, 97, 109, 97] => lookup_623_134_35(acc),
            [115, 101, 110, 110, 97, 110] => lookup_623_134_36(acc),
            [115, 101, 116, 116, 115, 117] => lookup_623_134_37(acc),
            [115, 104, 105, 106, 111, 110, 97, 119, 97, 116, 101] => lookup_623_134_38(acc),
            [115, 104, 105, 109, 97, 109, 111, 116, 111] => lookup_623_134_39(acc),
            [115, 117, 105, 116, 97] => lookup_623_134_40(acc),
            [116, 97, 100, 97, 111, 107, 97] => lookup_623_134_41(acc),
            [116, 97, 105, 115, 104, 105] => lookup_623_134_42(acc),
            [116, 97, 106, 105, 114, 105] => lookup_623_134_43(acc),
            [116, 97, 107, 97, 105, 115, 104, 105] => lookup_623_134_44(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_623_134_45(acc),
            [116, 111, 110, 100, 97, 98, 97, 121, 97, 115, 104, 105] => lookup_623_134_46(acc),
            [116, 111, 121, 111, 110, 97, 107, 97] => lookup_623_134_47(acc),
            [116, 111, 121, 111, 110, 111] => lookup_623_134_48(acc),
            [121, 97, 111] => lookup_623_134_49(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_154_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_154<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 105, 97, 107, 101] => lookup_623_154_0(acc),
            [97, 114, 105, 116, 97] => lookup_623_154_1(acc),
            [102, 117, 107, 117, 100, 111, 109, 105] => lookup_623_154_2(acc),
            [103, 101, 110, 107, 97, 105] => lookup_623_154_3(acc),
            [104, 97, 109, 97, 116, 97, 109, 97] => lookup_623_154_4(acc),
            [104, 105, 122, 101, 110] => lookup_623_154_5(acc),
            [105, 109, 97, 114, 105] => lookup_623_154_6(acc),
            [107, 97, 109, 105, 109, 105, 110, 101] => lookup_623_154_7(acc),
            [107, 97, 110, 122, 97, 107, 105] => lookup_623_154_8(acc),
            [107, 97, 114, 97, 116, 115, 117] => lookup_623_154_9(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_623_154_10(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_623_154_11(acc),
            [107, 105, 116, 97, 104, 97, 116, 97] => lookup_623_154_12(acc),
            [107, 105, 121, 97, 109, 97] => lookup_623_154_13(acc),
            [107, 111, 117, 104, 111, 107, 117] => lookup_623_154_14(acc),
            [107, 121, 117, 114, 97, 103, 105] => lookup_623_154_15(acc),
            [110, 105, 115, 104, 105, 97, 114, 105, 116, 97] => lookup_623_154_16(acc),
            [111, 103, 105] => lookup_623_154_17(acc),
            [111, 109, 97, 99, 104, 105] => lookup_623_154_18(acc),
            [111, 117, 99, 104, 105] => lookup_623_154_19(acc),
            [115, 97, 103, 97] => lookup_623_154_20(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_623_154_21(acc),
            [116, 97, 107, 117] => lookup_623_154_22(acc),
            [116, 97, 114, 97] => lookup_623_154_23(acc),
            [116, 111, 115, 117] => lookup_623_154_24(acc),
            [121, 111, 115, 104, 105, 110, 111, 103, 97, 114, 105] => lookup_623_154_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_155_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_155<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 97, 107, 97, 119, 97] => lookup_623_155_0(acc),
            [97, 115, 97, 107, 97] => lookup_623_155_1(acc),
            [99, 104, 105, 99, 104, 105, 98, 117] => lookup_623_155_2(acc),
            [102, 117, 106, 105, 109, 105] => lookup_623_155_3(acc),
            [102, 117, 106, 105, 109, 105, 110, 111] => lookup_623_155_4(acc),
            [102, 117, 107, 97, 121, 97] => lookup_623_155_5(acc),
            [104, 97, 110, 110, 111] => lookup_623_155_6(acc),
            [104, 97, 110, 121, 117] => lookup_623_155_7(acc),
            [104, 97, 115, 117, 100, 97] => lookup_623_155_8(acc),
            [104, 97, 116, 111, 103, 97, 121, 97] => lookup_623_155_9(acc),
            [104, 97, 116, 111, 121, 97, 109, 97] => lookup_623_155_10(acc),
            [104, 105, 100, 97, 107, 97] => lookup_623_155_11(acc),
            [104, 105, 103, 97, 115, 104, 105, 99, 104, 105, 99, 104, 105, 98, 117] => {
                lookup_623_155_12(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 121, 97, 109, 97] => {
                lookup_623_155_13(acc)
            }
            [104, 111, 110, 106, 111] => lookup_623_155_14(acc),
            [105, 110, 97] => lookup_623_155_15(acc),
            [105, 114, 117, 109, 97] => lookup_623_155_16(acc),
            [105, 119, 97, 116, 115, 117, 107, 105] => lookup_623_155_17(acc),
            [107, 97, 109, 105, 105, 122, 117, 109, 105] => lookup_623_155_18(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_623_155_19(acc),
            [107, 97, 109, 105, 115, 97, 116, 111] => lookup_623_155_20(acc),
            [107, 97, 115, 117, 107, 97, 98, 101] => lookup_623_155_21(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_623_155_22(acc),
            [107, 97, 119, 97, 103, 117, 99, 104, 105] => lookup_623_155_23(acc),
            [107, 97, 119, 97, 106, 105, 109, 97] => lookup_623_155_24(acc),
            [107, 97, 122, 111] => lookup_623_155_25(acc),
            [107, 105, 116, 97, 109, 111, 116, 111] => lookup_623_155_26(acc),
            [107, 111, 115, 104, 105, 103, 97, 121, 97] => lookup_623_155_27(acc),
            [107, 111, 117, 110, 111, 115, 117] => lookup_623_155_28(acc),
            [107, 117, 107, 105] => lookup_623_155_29(acc),
            [107, 117, 109, 97, 103, 97, 121, 97] => lookup_623_155_30(acc),
            [109, 97, 116, 115, 117, 98, 117, 115, 104, 105] => lookup_623_155_31(acc),
            [109, 105, 110, 97, 110, 111] => lookup_623_155_32(acc),
            [109, 105, 115, 97, 116, 111] => lookup_623_155_33(acc),
            [109, 105, 121, 97, 115, 104, 105, 114, 111] => lookup_623_155_34(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_623_155_35(acc),
            [109, 111, 114, 111, 121, 97, 109, 97] => lookup_623_155_36(acc),
            [110, 97, 103, 97, 116, 111, 114, 111] => lookup_623_155_37(acc),
            [110, 97, 109, 101, 103, 97, 119, 97] => lookup_623_155_38(acc),
            [110, 105, 105, 122, 97] => lookup_623_155_39(acc),
            [111, 103, 97, 110, 111] => lookup_623_155_40(acc),
            [111, 103, 97, 119, 97] => lookup_623_155_41(acc),
            [111, 103, 111, 115, 101] => lookup_623_155_42(acc),
            [111, 107, 101, 103, 97, 119, 97] => lookup_623_155_43(acc),
            [111, 109, 105, 121, 97] => lookup_623_155_44(acc),
            [111, 116, 97, 107, 105] => lookup_623_155_45(acc),
            [114, 97, 110, 122, 97, 110] => lookup_623_155_46(acc),
            [114, 121, 111, 107, 97, 109, 105] => lookup_623_155_47(acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_623_155_48(acc),
            [115, 97, 107, 97, 100, 111] => lookup_623_155_49(acc),
            [115, 97, 116, 116, 101] => lookup_623_155_50(acc),
            [115, 97, 121, 97, 109, 97] => lookup_623_155_51(acc),
            [115, 104, 105, 107, 105] => lookup_623_155_52(acc),
            [115, 104, 105, 114, 97, 111, 107, 97] => lookup_623_155_53(acc),
            [115, 111, 107, 97] => lookup_623_155_54(acc),
            [115, 117, 103, 105, 116, 111] => lookup_623_155_55(acc),
            [116, 111, 100, 97] => lookup_623_155_56(acc),
            [116, 111, 107, 105, 103, 97, 119, 97] => lookup_623_155_57(acc),
            [116, 111, 107, 111, 114, 111, 122, 97, 119, 97] => lookup_623_155_58(acc),
            [116, 115, 117, 114, 117, 103, 97, 115, 104, 105, 109, 97] => lookup_623_155_59(acc),
            [117, 114, 97, 119, 97] => lookup_623_155_60(acc),
            [119, 97, 114, 97, 98, 105] => lookup_623_155_61(acc),
            [121, 97, 115, 104, 105, 111] => lookup_623_155_62(acc),
            [121, 111, 107, 111, 122, 101] => lookup_623_155_63(acc),
            [121, 111, 110, 111] => lookup_623_155_64(acc),
            [121, 111, 114, 105, 105] => lookup_623_155_65(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_623_155_66(acc),
            [121, 111, 115, 104, 105, 107, 97, 119, 97] => lookup_623_155_67(acc),
            [121, 111, 115, 104, 105, 109, 105] => lookup_623_155_68(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_156_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_156_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_623_156_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_156_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_156_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_623_156_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_156<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [105, 115, 107, 48, 49] => lookup_623_156_0(info, labels, acc),
            [105, 115, 107, 48, 50] => lookup_623_156_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_158_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_158_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_158<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_623_158_0(acc),
            wild => lookup_623_158_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_623_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_162_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_162_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_162<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_623_162_0(acc),
            wild => lookup_623_162_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_623_163_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_163<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 115, 104, 111] => lookup_623_163_0(acc),
            [103, 97, 109, 111] => lookup_623_163_1(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 109, 105] => lookup_623_163_2(acc),
            [104, 105, 107, 111, 110, 101] => lookup_623_163_3(acc),
            [107, 111, 107, 97] => lookup_623_163_4(acc),
            [107, 111, 110, 97, 110] => lookup_623_163_5(acc),
            [107, 111, 115, 101, 105] => lookup_623_163_6(acc),
            [107, 111, 116, 111] => lookup_623_163_7(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_623_163_8(acc),
            [109, 97, 105, 98, 97, 114, 97] => lookup_623_163_9(acc),
            [109, 111, 114, 105, 121, 97, 109, 97] => lookup_623_163_10(acc),
            [110, 97, 103, 97, 104, 97, 109, 97] => lookup_623_163_11(acc),
            [110, 105, 115, 104, 105, 97, 122, 97, 105] => lookup_623_163_12(acc),
            [110, 111, 116, 111, 103, 97, 119, 97] => lookup_623_163_13(acc),
            [111, 109, 105, 104, 97, 99, 104, 105, 109, 97, 110] => lookup_623_163_14(acc),
            [111, 116, 115, 117] => lookup_623_163_15(acc),
            [114, 105, 116, 116, 111] => lookup_623_163_16(acc),
            [114, 121, 117, 111, 104] => lookup_623_163_17(acc),
            [116, 97, 107, 97, 115, 104, 105, 109, 97] => lookup_623_163_18(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_623_163_19(acc),
            [116, 111, 114, 97, 104, 105, 109, 101] => lookup_623_163_20(acc),
            [116, 111, 121, 111, 115, 97, 116, 111] => lookup_623_163_21(acc),
            [121, 97, 115, 117] => lookup_623_163_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_164_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_164<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 97, 103, 105] => lookup_623_164_0(acc),
            [97, 109, 97] => lookup_623_164_1(acc),
            [103, 111, 116, 115, 117] => lookup_623_164_2(acc),
            [104, 97, 109, 97, 100, 97] => lookup_623_164_3(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117, 109, 111] => lookup_623_164_4(acc),
            [104, 105, 107, 97, 119, 97] => lookup_623_164_5(acc),
            [104, 105, 107, 105, 109, 105] => lookup_623_164_6(acc),
            [105, 122, 117, 109, 111] => lookup_623_164_7(acc),
            [107, 97, 107, 105, 110, 111, 107, 105] => lookup_623_164_8(acc),
            [109, 97, 115, 117, 100, 97] => lookup_623_164_9(acc),
            [109, 97, 116, 115, 117, 101] => lookup_623_164_10(acc),
            [109, 105, 115, 97, 116, 111] => lookup_623_164_11(acc),
            [110, 105, 115, 104, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_623_164_12(acc),
            [111, 104, 100, 97] => lookup_623_164_13(acc),
            [111, 107, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_623_164_14(acc),
            [111, 107, 117, 105, 122, 117, 109, 111] => lookup_623_164_15(acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_623_164_16(acc),
            [116, 97, 109, 97, 121, 117] => lookup_623_164_17(acc),
            [116, 115, 117, 119, 97, 110, 111] => lookup_623_164_18(acc),
            [117, 110, 110, 97, 110] => lookup_623_164_19(acc),
            [121, 97, 107, 117, 109, 111] => lookup_623_164_20(acc),
            [121, 97, 115, 117, 103, 105] => lookup_623_164_21(acc),
            [121, 97, 116, 115, 117, 107, 97] => lookup_623_164_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_165_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_165<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 97, 105] => lookup_623_165_0(acc),
            [97, 116, 97, 109, 105] => lookup_623_165_1(acc),
            [102, 117, 106, 105] => lookup_623_165_2(acc),
            [102, 117, 106, 105, 101, 100, 97] => lookup_623_165_3(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_623_165_4(acc),
            [102, 117, 106, 105, 110, 111, 109, 105, 121, 97] => lookup_623_165_5(acc),
            [102, 117, 107, 117, 114, 111, 105] => lookup_623_165_6(acc),
            [103, 111, 116, 101, 109, 98, 97] => lookup_623_165_7(acc),
            [104, 97, 105, 98, 97, 114, 97] => lookup_623_165_8(acc),
            [104, 97, 109, 97, 109, 97, 116, 115, 117] => lookup_623_165_9(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117] => lookup_623_165_10(acc),
            [105, 116, 111] => lookup_623_165_11(acc),
            [105, 119, 97, 116, 97] => lookup_623_165_12(acc),
            [105, 122, 117] => lookup_623_165_13(acc),
            [105, 122, 117, 110, 111, 107, 117, 110, 105] => lookup_623_165_14(acc),
            [107, 97, 107, 101, 103, 97, 119, 97] => lookup_623_165_15(acc),
            [107, 97, 110, 110, 97, 109, 105] => lookup_623_165_16(acc),
            [107, 97, 119, 97, 110, 101, 104, 111, 110] => lookup_623_165_17(acc),
            [107, 97, 119, 97, 122, 117] => lookup_623_165_18(acc),
            [107, 105, 107, 117, 103, 97, 119, 97] => lookup_623_165_19(acc),
            [107, 111, 115, 97, 105] => lookup_623_165_20(acc),
            [109, 97, 107, 105, 110, 111, 104, 97, 114, 97] => lookup_623_165_21(acc),
            [109, 97, 116, 115, 117, 122, 97, 107, 105] => lookup_623_165_22(acc),
            [109, 105, 110, 97, 109, 105, 105, 122, 117] => lookup_623_165_23(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_623_165_24(acc),
            [109, 111, 114, 105, 109, 97, 99, 104, 105] => lookup_623_165_25(acc),
            [110, 105, 115, 104, 105, 105, 122, 117] => lookup_623_165_26(acc),
            [110, 117, 109, 97, 122, 117] => lookup_623_165_27(acc),
            [111, 109, 97, 101, 122, 97, 107, 105] => lookup_623_165_28(acc),
            [115, 104, 105, 109, 97, 100, 97] => lookup_623_165_29(acc),
            [115, 104, 105, 109, 105, 122, 117] => lookup_623_165_30(acc),
            [115, 104, 105, 109, 111, 100, 97] => lookup_623_165_31(acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_623_165_32(acc),
            [115, 117, 115, 111, 110, 111] => lookup_623_165_33(acc),
            [121, 97, 105, 122, 117] => lookup_623_165_34(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_623_165_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_175_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_175<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 104, 105, 107, 97, 103, 97] => lookup_623_175_0(acc),
            [98, 97, 116, 111] => lookup_623_175_1(acc),
            [104, 97, 103, 97] => lookup_623_175_2(acc),
            [105, 99, 104, 105, 107, 97, 105] => lookup_623_175_3(acc),
            [105, 119, 97, 102, 117, 110, 101] => lookup_623_175_4(acc),
            [107, 97, 109, 105, 110, 111, 107, 97, 119, 97] => lookup_623_175_5(acc),
            [107, 97, 110, 117, 109, 97] => lookup_623_175_6(acc),
            [107, 97, 114, 97, 115, 117, 121, 97, 109, 97] => lookup_623_175_7(acc),
            [107, 117, 114, 111, 105, 115, 111] => lookup_623_175_8(acc),
            [109, 97, 115, 104, 105, 107, 111] => lookup_623_175_9(acc),
            [109, 105, 98, 117] => lookup_623_175_10(acc),
            [109, 111, 107, 97] => lookup_623_175_11(acc),
            [109, 111, 116, 101, 103, 105] => lookup_623_175_12(acc),
            [110, 97, 115, 117] => lookup_623_175_13(acc),
            [110, 97, 115, 117, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_623_175_14(acc),
            [110, 105, 107, 107, 111] => lookup_623_175_15(acc),
            [110, 105, 115, 104, 105, 107, 97, 116, 97] => lookup_623_175_16(acc),
            [110, 111, 103, 105] => lookup_623_175_17(acc),
            [111, 104, 105, 114, 97] => lookup_623_175_18(acc),
            [111, 104, 116, 97, 119, 97, 114, 97] => lookup_623_175_19(acc),
            [111, 121, 97, 109, 97] => lookup_623_175_20(acc),
            [115, 97, 107, 117, 114, 97] => lookup_623_175_21(acc),
            [115, 97, 110, 111] => lookup_623_175_22(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 107, 101] => lookup_623_175_23(acc),
            [115, 104, 105, 111, 121, 97] => lookup_623_175_24(acc),
            [116, 97, 107, 97, 110, 101, 122, 97, 119, 97] => lookup_623_175_25(acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_623_175_26(acc),
            [116, 115, 117, 103, 97] => lookup_623_175_27(acc),
            [117, 106, 105, 105, 101] => lookup_623_175_28(acc),
            [117, 116, 115, 117, 110, 111, 109, 105, 121, 97] => lookup_623_175_29(acc),
            [121, 97, 105, 116, 97] => lookup_623_175_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_176_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_176<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 122, 117, 109, 105] => lookup_623_176_0(acc),
            [97, 110, 97, 110] => lookup_623_176_1(acc),
            [105, 99, 104, 105, 98, 97] => lookup_623_176_2(acc),
            [105, 116, 97, 110, 111] => lookup_623_176_3(acc),
            [107, 97, 105, 110, 97, 110] => lookup_623_176_4(acc),
            [107, 111, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_623_176_5(acc),
            [109, 97, 116, 115, 117, 115, 104, 105, 103, 101] => lookup_623_176_6(acc),
            [109, 105, 109, 97] => lookup_623_176_7(acc),
            [109, 105, 110, 97, 109, 105] => lookup_623_176_8(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_623_176_9(acc),
            [109, 117, 103, 105] => lookup_623_176_10(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_623_176_11(acc),
            [110, 97, 114, 117, 116, 111] => lookup_623_176_12(acc),
            [115, 97, 110, 97, 103, 111, 99, 104, 105] => lookup_623_176_13(acc),
            [115, 104, 105, 115, 104, 105, 107, 117, 105] => lookup_623_176_14(acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_623_176_15(acc),
            [119, 97, 106, 105, 107, 105] => lookup_623_176_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_177_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_177<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 97, 99, 104, 105] => lookup_623_177_0(acc),
            [97, 107, 105, 114, 117, 110, 111] => lookup_623_177_1(acc),
            [97, 107, 105, 115, 104, 105, 109, 97] => lookup_623_177_2(acc),
            [97, 111, 103, 97, 115, 104, 105, 109, 97] => lookup_623_177_3(acc),
            [97, 114, 97, 107, 97, 119, 97] => lookup_623_177_4(acc),
            [98, 117, 110, 107, 121, 111] => lookup_623_177_5(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_623_177_6(acc),
            [99, 104, 111, 102, 117] => lookup_623_177_7(acc),
            [99, 104, 117, 111] => lookup_623_177_8(acc),
            [101, 100, 111, 103, 97, 119, 97] => lookup_623_177_9(acc),
            [102, 117, 99, 104, 117] => lookup_623_177_10(acc),
            [102, 117, 115, 115, 97] => lookup_623_177_11(acc),
            [104, 97, 99, 104, 105, 106, 111] => lookup_623_177_12(acc),
            [104, 97, 99, 104, 105, 111, 106, 105] => lookup_623_177_13(acc),
            [104, 97, 109, 117, 114, 97] => lookup_623_177_14(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 117, 114, 117, 109, 101] => {
                lookup_623_177_15(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_623_177_16(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97, 116, 111] => {
                lookup_623_177_17(acc)
            }
            [104, 105, 110, 111] => lookup_623_177_18(acc),
            [104, 105, 110, 111, 100, 101] => lookup_623_177_19(acc),
            [104, 105, 110, 111, 104, 97, 114, 97] => lookup_623_177_20(acc),
            [105, 110, 97, 103, 105] => lookup_623_177_21(acc),
            [105, 116, 97, 98, 97, 115, 104, 105] => lookup_623_177_22(acc),
            [107, 97, 116, 115, 117, 115, 104, 105, 107, 97] => lookup_623_177_23(acc),
            [107, 105, 116, 97] => lookup_623_177_24(acc),
            [107, 105, 121, 111, 115, 101] => lookup_623_177_25(acc),
            [107, 111, 100, 97, 105, 114, 97] => lookup_623_177_26(acc),
            [107, 111, 103, 97, 110, 101, 105] => lookup_623_177_27(acc),
            [107, 111, 107, 117, 98, 117, 110, 106, 105] => lookup_623_177_28(acc),
            [107, 111, 109, 97, 101] => lookup_623_177_29(acc),
            [107, 111, 116, 111] => lookup_623_177_30(acc),
            [107, 111, 117, 122, 117, 115, 104, 105, 109, 97] => lookup_623_177_31(acc),
            [107, 117, 110, 105, 116, 97, 99, 104, 105] => lookup_623_177_32(acc),
            [109, 97, 99, 104, 105, 100, 97] => lookup_623_177_33(acc),
            [109, 101, 103, 117, 114, 111] => lookup_623_177_34(acc),
            [109, 105, 110, 97, 116, 111] => lookup_623_177_35(acc),
            [109, 105, 116, 97, 107, 97] => lookup_623_177_36(acc),
            [109, 105, 122, 117, 104, 111] => lookup_623_177_37(acc),
            [109, 117, 115, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_623_177_38(acc)
            }
            [109, 117, 115, 97, 115, 104, 105, 110, 111] => lookup_623_177_39(acc),
            [110, 97, 107, 97, 110, 111] => lookup_623_177_40(acc),
            [110, 101, 114, 105, 109, 97] => lookup_623_177_41(acc),
            [111, 103, 97, 115, 97, 119, 97, 114, 97] => lookup_623_177_42(acc),
            [111, 107, 117, 116, 97, 109, 97] => lookup_623_177_43(acc),
            [111, 109, 101] => lookup_623_177_44(acc),
            [111, 115, 104, 105, 109, 97] => lookup_623_177_45(acc),
            [111, 116, 97] => lookup_623_177_46(acc),
            [115, 101, 116, 97, 103, 97, 121, 97] => lookup_623_177_47(acc),
            [115, 104, 105, 98, 117, 121, 97] => lookup_623_177_48(acc),
            [115, 104, 105, 110, 97, 103, 97, 119, 97] => lookup_623_177_49(acc),
            [115, 104, 105, 110, 106, 117, 107, 117] => lookup_623_177_50(acc),
            [115, 117, 103, 105, 110, 97, 109, 105] => lookup_623_177_51(acc),
            [115, 117, 109, 105, 100, 97] => lookup_623_177_52(acc),
            [116, 97, 99, 104, 105, 107, 97, 119, 97] => lookup_623_177_53(acc),
            [116, 97, 105, 116, 111] => lookup_623_177_54(acc),
            [116, 97, 109, 97] => lookup_623_177_55(acc),
            [116, 111, 115, 104, 105, 109, 97] => lookup_623_177_56(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_179_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_179_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_179_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_179_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_179_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_179_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_179_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_179_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_179_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_179_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_179_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_179_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_179_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_179<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 105, 122, 117] => lookup_623_179_0(acc),
            [104, 105, 110, 111] => lookup_623_179_1(acc),
            [107, 97, 119, 97, 104, 97, 114, 97] => lookup_623_179_2(acc),
            [107, 111, 103, 101] => lookup_623_179_3(acc),
            [107, 111, 116, 111, 117, 114, 97] => lookup_623_179_4(acc),
            [109, 105, 115, 97, 115, 97] => lookup_623_179_5(acc),
            [110, 97, 110, 98, 117] => lookup_623_179_6(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_623_179_7(acc),
            [115, 97, 107, 97, 105, 109, 105, 110, 97, 116, 111] => lookup_623_179_8(acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_623_179_9(acc),
            [119, 97, 107, 97, 115, 97] => lookup_623_179_10(acc),
            [121, 97, 122, 117] => lookup_623_179_11(acc),
            [121, 111, 110, 97, 103, 111] => lookup_623_179_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_180_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_180<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 104, 105] => lookup_623_180_0(acc),
            [102, 117, 99, 104, 117] => lookup_623_180_1(acc),
            [102, 117, 107, 117, 109, 105, 116, 115, 117] => lookup_623_180_2(acc),
            [102, 117, 110, 97, 104, 97, 115, 104, 105] => lookup_623_180_3(acc),
            [104, 105, 109, 105] => lookup_623_180_4(acc),
            [105, 109, 105, 122, 117] => lookup_623_180_5(acc),
            [105, 110, 97, 109, 105] => lookup_623_180_6(acc),
            [106, 111, 104, 97, 110, 97] => lookup_623_180_7(acc),
            [107, 97, 109, 105, 105, 99, 104, 105] => lookup_623_180_8(acc),
            [107, 117, 114, 111, 98, 101] => lookup_623_180_9(acc),
            [110, 97, 107, 97, 110, 105, 105, 107, 97, 119, 97] => lookup_623_180_10(acc),
            [110, 97, 109, 101, 114, 105, 107, 97, 119, 97] => lookup_623_180_11(acc),
            [110, 97, 110, 116, 111] => lookup_623_180_12(acc),
            [110, 121, 117, 122, 101, 110] => lookup_623_180_13(acc),
            [111, 121, 97, 98, 101] => lookup_623_180_14(acc),
            [116, 97, 105, 114, 97] => lookup_623_180_15(acc),
            [116, 97, 107, 97, 111, 107, 97] => lookup_623_180_16(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_623_180_17(acc),
            [116, 111, 103, 97] => lookup_623_180_18(acc),
            [116, 111, 110, 97, 109, 105] => lookup_623_180_19(acc),
            [116, 111, 121, 97, 109, 97] => lookup_623_180_20(acc),
            [117, 110, 97, 122, 117, 107, 105] => lookup_623_180_21(acc),
            [117, 111, 122, 117] => lookup_623_180_22(acc),
            [121, 97, 109, 97, 100, 97] => lookup_623_180_23(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_190_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_190<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 105, 100, 97] => lookup_623_190_0(acc),
            [97, 114, 105, 100, 97, 103, 97, 119, 97] => lookup_623_190_1(acc),
            [103, 111, 98, 111] => lookup_623_190_2(acc),
            [104, 97, 115, 104, 105, 109, 111, 116, 111] => lookup_623_190_3(acc),
            [104, 105, 100, 97, 107, 97] => lookup_623_190_4(acc),
            [104, 105, 114, 111, 103, 97, 119, 97] => lookup_623_190_5(acc),
            [105, 110, 97, 109, 105] => lookup_623_190_6(acc),
            [105, 119, 97, 100, 101] => lookup_623_190_7(acc),
            [107, 97, 105, 110, 97, 110] => lookup_623_190_8(acc),
            [107, 97, 109, 105, 116, 111, 110, 100, 97] => lookup_623_190_9(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_623_190_10(acc),
            [107, 105, 109, 105, 110, 111] => lookup_623_190_11(acc),
            [107, 105, 110, 111, 107, 97, 119, 97] => lookup_623_190_12(acc),
            [107, 105, 116, 97, 121, 97, 109, 97] => lookup_623_190_13(acc),
            [107, 111, 121, 97] => lookup_623_190_14(acc),
            [107, 111, 122, 97] => lookup_623_190_15(acc),
            [107, 111, 122, 97, 103, 97, 119, 97] => lookup_623_190_16(acc),
            [107, 117, 100, 111, 121, 97, 109, 97] => lookup_623_190_17(acc),
            [107, 117, 115, 104, 105, 109, 111, 116, 111] => lookup_623_190_18(acc),
            [109, 105, 104, 97, 109, 97] => lookup_623_190_19(acc),
            [109, 105, 115, 97, 116, 111] => lookup_623_190_20(acc),
            [110, 97, 99, 104, 105, 107, 97, 116, 115, 117, 117, 114, 97] => lookup_623_190_21(acc),
            [115, 104, 105, 110, 103, 117] => lookup_623_190_22(acc),
            [115, 104, 105, 114, 97, 104, 97, 109, 97] => lookup_623_190_23(acc),
            [116, 97, 105, 106, 105] => lookup_623_190_24(acc),
            [116, 97, 110, 97, 98, 101] => lookup_623_190_25(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_623_190_26(acc),
            [121, 117, 97, 115, 97] => lookup_623_190_27(acc),
            [121, 117, 114, 97] => lookup_623_190_28(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_192_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_192_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_192<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [114, 115] => lookup_623_192_0(acc),
            [117, 115, 101, 114] => lookup_623_192_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_244<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 104, 105] => lookup_623_244_0(acc),
            [102, 117, 110, 97, 103, 97, 116, 97] => lookup_623_244_1(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 101] => lookup_623_244_2(acc),
            [105, 105, 100, 101] => lookup_623_244_3(acc),
            [107, 97, 104, 111, 107, 117] => lookup_623_244_4(acc),
            [107, 97, 109, 105, 110, 111, 121, 97, 109, 97] => lookup_623_244_5(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_623_244_6(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_623_244_7(acc),
            [109, 97, 109, 117, 114, 111, 103, 97, 119, 97] => lookup_623_244_8(acc),
            [109, 105, 107, 97, 119, 97] => lookup_623_244_9(acc),
            [109, 117, 114, 97, 121, 97, 109, 97] => lookup_623_244_10(acc),
            [110, 97, 103, 97, 105] => lookup_623_244_11(acc),
            [110, 97, 107, 97, 121, 97, 109, 97] => lookup_623_244_12(acc),
            [110, 97, 110, 121, 111] => lookup_623_244_13(acc),
            [110, 105, 115, 104, 105, 107, 97, 119, 97] => lookup_623_244_14(acc),
            [111, 98, 97, 110, 97, 122, 97, 119, 97] => lookup_623_244_15(acc),
            [111, 101] => lookup_623_244_16(acc),
            [111, 103, 117, 110, 105] => lookup_623_244_17(acc),
            [111, 104, 107, 117, 114, 97] => lookup_623_244_18(acc),
            [111, 105, 115, 104, 105, 100, 97] => lookup_623_244_19(acc),
            [115, 97, 103, 97, 101] => lookup_623_244_20(acc),
            [115, 97, 107, 97, 116, 97] => lookup_623_244_21(acc),
            [115, 97, 107, 101, 103, 97, 119, 97] => lookup_623_244_22(acc),
            [115, 104, 105, 110, 106, 111] => lookup_623_244_23(acc),
            [115, 104, 105, 114, 97, 116, 97, 107, 97] => lookup_623_244_24(acc),
            [115, 104, 111, 110, 97, 105] => lookup_623_244_25(acc),
            [116, 97, 107, 97, 104, 97, 116, 97] => lookup_623_244_26(acc),
            [116, 101, 110, 100, 111] => lookup_623_244_27(acc),
            [116, 111, 122, 97, 119, 97] => lookup_623_244_28(acc),
            [116, 115, 117, 114, 117, 111, 107, 97] => lookup_623_244_29(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_623_244_30(acc),
            [121, 97, 109, 97, 110, 111, 98, 101] => lookup_623_244_31(acc),
            [121, 111, 110, 101, 122, 97, 119, 97] => lookup_623_244_32(acc),
            [121, 117, 122, 97] => lookup_623_244_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_245_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_245<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 117] => lookup_623_245_0(acc),
            [104, 97, 103, 105] => lookup_623_245_1(acc),
            [104, 105, 107, 97, 114, 105] => lookup_623_245_2(acc),
            [104, 111, 102, 117] => lookup_623_245_3(acc),
            [105, 119, 97, 107, 117, 110, 105] => lookup_623_245_4(acc),
            [107, 117, 100, 97, 109, 97, 116, 115, 117] => lookup_623_245_5(acc),
            [109, 105, 116, 111, 117] => lookup_623_245_6(acc),
            [110, 97, 103, 97, 116, 111] => lookup_623_245_7(acc),
            [111, 115, 104, 105, 109, 97] => lookup_623_245_8(acc),
            [115, 104, 105, 109, 111, 110, 111, 115, 101, 107, 105] => lookup_623_245_9(acc),
            [115, 104, 117, 110, 97, 110] => lookup_623_245_10(acc),
            [116, 97, 98, 117, 115, 101] => lookup_623_245_11(acc),
            [116, 111, 107, 117, 121, 97, 109, 97] => lookup_623_245_12(acc),
            [116, 111, 121, 111, 116, 97] => lookup_623_245_13(acc),
            [117, 98, 101] => lookup_623_245_14(acc),
            [121, 117, 117] => lookup_623_245_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_246_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_246<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 117, 111] => lookup_623_246_0(acc),
            [100, 111, 115, 104, 105] => lookup_623_246_1(acc),
            [102, 117, 101, 102, 117, 107, 105] => lookup_623_246_2(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_623_246_3(acc),
            [102, 117, 106, 105, 107, 97, 119, 97, 103, 117, 99, 104, 105, 107, 111] => {
                lookup_623_246_4(acc)
            }
            [102, 117, 106, 105, 121, 111, 115, 104, 105, 100, 97] => lookup_623_246_5(acc),
            [104, 97, 121, 97, 107, 97, 119, 97] => lookup_623_246_6(acc),
            [104, 111, 107, 117, 116, 111] => lookup_623_246_7(acc),
            [105, 99, 104, 105, 107, 97, 119, 97, 109, 105, 115, 97, 116, 111] => {
                lookup_623_246_8(acc)
            }
            [107, 97, 105] => lookup_623_246_9(acc),
            [107, 111, 102, 117] => lookup_623_246_10(acc),
            [107, 111, 115, 104, 117] => lookup_623_246_11(acc),
            [107, 111, 115, 117, 103, 101] => lookup_623_246_12(acc),
            [109, 105, 110, 97, 109, 105, 45, 97, 108, 112, 115] => lookup_623_246_13(acc),
            [109, 105, 110, 111, 98, 117] => lookup_623_246_14(acc),
            [110, 97, 107, 97, 109, 105, 99, 104, 105] => lookup_623_246_15(acc),
            [110, 97, 110, 98, 117] => lookup_623_246_16(acc),
            [110, 97, 114, 117, 115, 97, 119, 97] => lookup_623_246_17(acc),
            [110, 105, 114, 97, 115, 97, 107, 105] => lookup_623_246_18(acc),
            [110, 105, 115, 104, 105, 107, 97, 116, 115, 117, 114, 97] => lookup_623_246_19(acc),
            [111, 115, 104, 105, 110, 111] => lookup_623_246_20(acc),
            [111, 116, 115, 117, 107, 105] => lookup_623_246_21(acc),
            [115, 104, 111, 119, 97] => lookup_623_246_22(acc),
            [116, 97, 98, 97, 121, 97, 109, 97] => lookup_623_246_23(acc),
            [116, 115, 117, 114, 117] => lookup_623_246_24(acc),
            [117, 101, 110, 111, 104, 97, 114, 97] => lookup_623_246_25(acc),
            [121, 97, 109, 97, 110, 97, 107, 97, 107, 111] => lookup_623_246_26(acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_623_246_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_623_247_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_247_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_247<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_623_247_0(acc),
            wild => lookup_623_247_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_623_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_623_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [50, 45, 100] => lookup_623_0(acc),
            [97, 99] => lookup_623_1(acc),
            [97, 100] => lookup_623_2(acc),
            [97, 105, 99, 104, 105] => lookup_623_3(labels, acc),
            [97, 107, 105, 116, 97] => lookup_623_4(labels, acc),
            [97, 110, 103, 114, 121] => lookup_623_5(acc),
            [97, 111, 109, 111, 114, 105] => lookup_623_6(labels, acc),
            [98, 97, 98, 121, 98, 108, 117, 101] => lookup_623_7(acc),
            [98, 97, 98, 121, 109, 105, 108, 107] => lookup_623_8(acc),
            [98, 97, 99, 107, 100, 114, 111, 112] => lookup_623_9(acc),
            [98, 97, 109, 98, 105, 110, 97] => lookup_623_10(acc),
            [98, 105, 116, 116, 101, 114] => lookup_623_11(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_623_12(acc),
            [98, 108, 117, 115, 104] => lookup_623_13(acc),
            [98, 111, 110, 97] => lookup_623_14(acc),
            [98, 111, 111] => lookup_623_15(acc),
            [98, 111, 121] => lookup_623_16(acc),
            [98, 111, 121, 102, 114, 105, 101, 110, 100] => lookup_623_17(acc),
            [98, 117, 116] => lookup_623_18(acc),
            [98, 117, 121, 115, 104, 111, 112] => lookup_623_19(acc),
            [99, 97, 110, 100, 121, 112, 111, 112] => lookup_623_20(acc),
            [99, 97, 112, 111, 111] => lookup_623_21(acc),
            [99, 97, 116, 102, 111, 111, 100] => lookup_623_22(acc),
            [99, 104, 101, 97, 112] => lookup_623_23(acc),
            [99, 104, 105, 98, 97] => lookup_623_24(labels, acc),
            [99, 104, 105, 99, 97, 112, 112, 97] => lookup_623_25(acc),
            [99, 104, 105, 108, 108, 111, 117, 116] => lookup_623_26(acc),
            [99, 104, 105, 112, 115] => lookup_623_27(acc),
            [99, 104, 111, 119, 100, 101, 114] => lookup_623_28(acc),
            [99, 104, 117] => lookup_623_29(acc),
            [99, 105, 97, 111] => lookup_623_30(acc),
            [99, 111] => lookup_623_31(acc),
            [99, 111, 99, 111, 116, 116, 101] => lookup_623_32(acc),
            [99, 111, 111, 108, 98, 108, 111, 103] => lookup_623_33(acc),
            [99, 114, 97, 110, 107, 121] => lookup_623_34(acc),
            [99, 114, 97, 112] => lookup_623_35(acc),
            [99, 117, 116, 101, 103, 105, 114, 108] => lookup_623_36(acc),
            [100, 97, 97] => lookup_623_37(acc),
            [100, 97, 121, 110, 105, 103, 104, 116] => lookup_623_38(acc),
            [100, 101, 99, 97] => lookup_623_39(acc),
            [100, 101, 99, 105] => lookup_623_40(acc),
            [100, 105, 103, 105, 99, 107] => lookup_623_41(acc),
            [101, 100] => lookup_623_42(acc),
            [101, 101, 107] => lookup_623_43(acc),
            [101, 103, 111, 105, 115, 109] => lookup_623_44(acc),
            [101, 104, 105, 109, 101] => lookup_623_45(labels, acc),
            [102, 97, 107, 101, 102, 117, 114] => lookup_623_46(acc),
            [102, 97, 115, 104, 105, 111, 110, 115, 116, 111, 114, 101] => lookup_623_47(acc),
            [102, 101, 109] => lookup_623_48(acc),
            [102, 108, 105, 101, 114] => lookup_623_49(acc),
            [102, 108, 111, 112] => lookup_623_50(acc),
            [102, 108, 111, 112, 112, 121] => lookup_623_51(acc),
            [102, 111, 111, 108] => lookup_623_52(acc),
            [102, 114, 101, 110, 99, 104, 107, 105, 115, 115] => lookup_623_53(acc),
            [102, 117, 107, 117, 105] => lookup_623_54(labels, acc),
            [102, 117, 107, 117, 111, 107, 97] => lookup_623_55(labels, acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_623_56(labels, acc),
            [103, 105, 102, 117] => lookup_623_57(labels, acc),
            [103, 105, 114, 108, 102, 114, 105, 101, 110, 100] => lookup_623_58(acc),
            [103, 105, 114, 108, 121] => lookup_623_59(acc),
            [103, 108, 111, 111, 109, 121] => lookup_623_60(acc),
            [103, 111] => lookup_623_61(acc),
            [103, 111, 110, 110, 97] => lookup_623_62(acc),
            [103, 114] => lookup_623_63(acc),
            [103, 114, 101, 97, 116, 101, 114] => lookup_623_64(acc),
            [103, 117, 110, 109, 97] => lookup_623_65(labels, acc),
            [104, 97, 99, 99, 97] => lookup_623_66(acc),
            [104, 97, 108, 102, 109, 111, 111, 110] => lookup_623_67(acc),
            [104, 97, 110, 100, 99, 114, 97, 102, 116, 101, 100] => lookup_623_68(acc),
            [104, 101, 97, 118, 121] => lookup_623_69(acc),
            [104, 101, 114] => lookup_623_70(acc),
            [104, 105, 104, 111] => lookup_623_71(acc),
            [104, 105, 112, 112, 121] => lookup_623_72(acc),
            [104, 105, 114, 111, 115, 104, 105, 109, 97] => lookup_623_73(labels, acc),
            [104, 111, 107, 107, 97, 105, 100, 111] => lookup_623_74(labels, acc),
            [104, 111, 108, 121] => lookup_623_75(acc),
            [104, 117, 110, 103, 114, 121] => lookup_623_76(acc),
            [104, 121, 111, 103, 111] => lookup_623_77(labels, acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_623_78(labels, acc),
            [105, 99, 117, 114, 117, 115] => lookup_623_79(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_623_80(labels, acc),
            [105, 116, 105, 103, 111] => lookup_623_81(acc),
            [105, 119, 97, 116, 101] => lookup_623_82(labels, acc),
            [106, 101, 101, 122] => lookup_623_83(acc),
            [106, 101, 108, 108, 121, 98, 101, 97, 110] => lookup_623_84(acc),
            [107, 97, 103, 97, 119, 97] => lookup_623_85(labels, acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_623_86(labels, acc),
            [107, 97, 110, 97, 103, 97, 119, 97] => lookup_623_87(labels, acc),
            [107, 97, 119, 97, 105, 105, 115, 104, 111, 112] => lookup_623_88(acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_623_89(info, labels, acc),
            [107, 105, 107, 105, 114, 97, 114, 97] => lookup_623_90(acc),
            [107, 105, 108, 108] => lookup_623_91(acc),
            [107, 105, 108, 111] => lookup_623_92(acc),
            [107, 105, 116, 97, 107, 121, 117, 115, 104, 117] => lookup_623_93(info, labels, acc),
            [107, 111, 98, 101] => lookup_623_94(info, labels, acc),
            [107, 111, 99, 104, 105] => lookup_623_95(labels, acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_623_96(labels, acc),
            [107, 117, 114, 111, 110] => lookup_623_97(acc),
            [107, 121, 111, 116, 111] => lookup_623_98(labels, acc),
            [108, 103] => lookup_623_99(acc),
            [108, 105, 116, 116, 108, 101, 115, 116, 97, 114] => lookup_623_100(acc),
            [108, 111, 108, 105, 112, 111, 112, 109, 99] => lookup_623_101(acc),
            [108, 111, 108, 105, 116, 97, 112, 117, 110, 107] => lookup_623_102(acc),
            [108, 111, 109, 111] => lookup_623_103(acc),
            [108, 111, 118, 101, 112, 111, 112] => lookup_623_104(acc),
            [108, 111, 118, 101, 115, 105, 99, 107] => lookup_623_105(acc),
            [109, 97, 105, 110] => lookup_623_106(acc),
            [109, 97, 116, 114, 105, 120] => lookup_623_107(acc),
            [109, 105, 101] => lookup_623_108(labels, acc),
            [109, 105, 109, 111, 122, 97] => lookup_623_109(acc),
            [109, 105, 121, 97, 103, 105] => lookup_623_110(labels, acc),
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_623_111(labels, acc),
            [109, 111, 100, 115] => lookup_623_112(acc),
            [109, 111, 110, 100] => lookup_623_113(acc),
            [109, 111, 110, 103, 111, 108, 105, 97, 110] => lookup_623_114(acc),
            [109, 111, 111] => lookup_623_115(acc),
            [110, 97, 103, 97, 110, 111] => lookup_623_116(labels, acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_623_117(labels, acc),
            [110, 97, 103, 111, 121, 97] => lookup_623_118(info, labels, acc),
            [110, 97, 109, 97, 115, 116, 101] => lookup_623_119(acc),
            [110, 97, 114, 97] => lookup_623_120(labels, acc),
            [110, 101] => lookup_623_121(labels, acc),
            [110, 101, 116, 103, 97, 109, 101, 114, 115] => lookup_623_122(acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_623_123(labels, acc),
            [110, 105, 107, 105, 116, 97] => lookup_623_124(acc),
            [110, 111, 98, 117, 115, 104, 105] => lookup_623_125(acc),
            [110, 111, 111, 114] => lookup_623_126(acc),
            [110, 121, 97, 110, 116, 97] => lookup_623_127(acc),
            [111, 48, 111, 48] => lookup_623_128(acc),
            [111, 105, 116, 97] => lookup_623_129(labels, acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_623_130(labels, acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_623_131(labels, acc),
            [111, 111, 112, 115] => lookup_623_132(acc),
            [111, 114] => lookup_623_133(acc),
            [111, 115, 97, 107, 97] => lookup_623_134(labels, acc),
            [112, 97, 114, 97, 108, 108, 101, 108] => lookup_623_135(acc),
            [112, 97, 114, 97, 115, 105, 116, 101] => lookup_623_136(acc),
            [112, 101, 99, 111, 114, 105] => lookup_623_137(acc),
            [112, 101, 101, 119, 101, 101] => lookup_623_138(acc),
            [112, 101, 110, 110, 101] => lookup_623_139(acc),
            [112, 101, 112, 112, 101, 114] => lookup_623_140(acc),
            [112, 101, 114, 109, 97] => lookup_623_141(acc),
            [112, 105, 103, 98, 111, 97, 116] => lookup_623_142(acc),
            [112, 105, 110, 111, 107, 111] => lookup_623_143(acc),
            [112, 117, 110, 121, 117] => lookup_623_144(acc),
            [112, 117, 112, 117] => lookup_623_145(acc),
            [112, 117, 115, 115, 121, 99, 97, 116] => lookup_623_146(acc),
            [112, 121, 97] => lookup_623_147(acc),
            [114, 97, 105, 110, 100, 114, 111, 112] => lookup_623_148(acc),
            [114, 100, 121] => lookup_623_149(acc),
            [114, 101, 97, 100, 121, 109, 97, 100, 101] => lookup_623_150(acc),
            [114, 103, 114] => lookup_623_151(acc),
            [114, 117, 108, 101, 122] => lookup_623_152(acc),
            [115, 97, 100, 105, 115, 116] => lookup_623_153(acc),
            [115, 97, 103, 97] => lookup_623_154(labels, acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_623_155(labels, acc),
            [115, 97, 107, 117, 114, 97, 115, 116, 111, 114, 97, 103, 101] => {
                lookup_623_156(info, labels, acc)
            }
            [115, 97, 108, 111, 111, 110] => lookup_623_157(acc),
            [115, 97, 112, 112, 111, 114, 111] => lookup_623_158(info, labels, acc),
            [115, 98, 108, 111] => lookup_623_159(acc),
            [115, 99, 104, 111, 111, 108, 98, 117, 115] => lookup_623_160(acc),
            [115, 101, 99, 114, 101, 116] => lookup_623_161(acc),
            [115, 101, 110, 100, 97, 105] => lookup_623_162(info, labels, acc),
            [115, 104, 105, 103, 97] => lookup_623_163(labels, acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_623_164(labels, acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_623_165(labels, acc),
            [115, 107, 114] => lookup_623_166(acc),
            [115, 116, 97, 98, 97] => lookup_623_167(acc),
            [115, 116, 114, 105, 112, 112, 101, 114] => lookup_623_168(acc),
            [115, 117, 98] => lookup_623_169(acc),
            [115, 117, 110, 110, 121, 100, 97, 121] => lookup_623_170(acc),
            [115, 117, 112, 101, 114, 115, 97, 108, 101] => lookup_623_171(acc),
            [116, 97, 110, 107] => lookup_623_172(acc),
            [116, 104, 101, 115, 104, 111, 112] => lookup_623_173(acc),
            [116, 104, 105, 99, 107] => lookup_623_174(acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_623_175(labels, acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_623_176(labels, acc),
            [116, 111, 107, 121, 111] => lookup_623_177(labels, acc),
            [116, 111, 110, 107, 111, 116, 115, 117] => lookup_623_178(acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_623_179(labels, acc),
            [116, 111, 121, 97, 109, 97] => lookup_623_180(labels, acc),
            [117, 104, 45, 111, 104] => lookup_623_181(acc),
            [117, 110, 100, 101, 114] => lookup_623_182(acc),
            [117, 110, 100, 111] => lookup_623_183(acc),
            [117, 112, 112, 101, 114] => lookup_623_184(acc),
            [117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_623_185(acc),
            [118, 101, 108, 118, 101, 116] => lookup_623_186(acc),
            [118, 101, 114, 115, 101] => lookup_623_187(acc),
            [118, 101, 114, 115, 117, 115] => lookup_623_188(acc),
            [118, 105, 118, 105, 97, 110] => lookup_623_189(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_623_190(labels, acc),
            [119, 97, 116, 115, 111, 110] => lookup_623_191(acc),
            [119, 101, 98, 97, 99, 99, 101, 108] => lookup_623_192(info, labels, acc),
            [119, 101, 98, 108, 105, 107, 101] => lookup_623_193(acc),
            [119, 101, 98, 115, 111, 122, 97, 105] => lookup_623_194(acc),
            [119, 104, 105, 116, 101, 115, 110, 111, 119] => lookup_623_195(acc),
            [120, 105, 105] => lookup_623_196(acc),
            [120, 110, 45, 45, 48, 116, 114, 113, 55, 112, 55, 110, 110] => lookup_623_197(acc),
            [120, 110, 45, 45, 49, 99, 116, 119, 111] => lookup_623_198(acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 48, 51, 110] => lookup_623_199(acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 55, 49, 100] => lookup_623_200(acc),
            [120, 110, 45, 45, 50, 109, 52, 97, 49, 53, 101] => lookup_623_201(acc),
            [120, 110, 45, 45, 51, 50, 118, 112, 51, 48, 104] => lookup_623_202(acc),
            [120, 110, 45, 45, 52, 105, 116, 49, 54, 56, 100] => lookup_623_203(acc),
            [120, 110, 45, 45, 52, 105, 116, 55, 57, 55, 107] => lookup_623_204(acc),
            [120, 110, 45, 45, 52, 112, 118, 120, 115] => lookup_623_205(acc),
            [120, 110, 45, 45, 53, 106, 115, 48, 52, 53, 100] => lookup_623_206(acc),
            [120, 110, 45, 45, 53, 114, 116, 112, 52, 57, 99] => lookup_623_207(acc),
            [120, 110, 45, 45, 53, 114, 116, 113, 51, 52, 107] => lookup_623_208(acc),
            [120, 110, 45, 45, 54, 98, 116, 119, 53, 97] => lookup_623_209(acc),
            [120, 110, 45, 45, 54, 111, 114, 120, 50, 114] => lookup_623_210(acc),
            [120, 110, 45, 45, 55, 116, 48, 97, 50, 54, 52, 99] => lookup_623_211(acc),
            [120, 110, 45, 45, 56, 108, 116, 114, 54, 50, 107] => lookup_623_212(acc),
            [120, 110, 45, 45, 56, 112, 118, 114, 52, 117] => lookup_623_213(acc),
            [120, 110, 45, 45, 99, 51, 115, 49, 52, 109] => lookup_623_214(acc),
            [120, 110, 45, 45, 100, 53, 113, 118, 55, 122, 56, 55, 54, 99] => lookup_623_215(acc),
            [120, 110, 45, 45, 100, 106, 114, 115, 55, 50, 100, 54, 117, 121] => {
                lookup_623_216(acc)
            }
            [120, 110, 45, 45, 100, 106, 116, 121, 52, 107] => lookup_623_217(acc),
            [120, 110, 45, 45, 101, 102, 118, 110, 57, 115] => lookup_623_218(acc),
            [120, 110, 45, 45, 101, 104, 113, 122, 53, 54, 110] => lookup_623_219(acc),
            [120, 110, 45, 45, 101, 108, 113, 113, 49, 54, 104] => lookup_623_220(acc),
            [120, 110, 45, 45, 102, 54, 113, 120, 53, 51, 97] => lookup_623_221(acc),
            [120, 110, 45, 45, 107, 55, 121, 110, 57, 53, 101] => lookup_623_222(acc),
            [120, 110, 45, 45, 107, 98, 114, 113, 55, 111] => lookup_623_223(acc),
            [120, 110, 45, 45, 107, 108, 116, 55, 56, 55, 100] => lookup_623_224(acc),
            [120, 110, 45, 45, 107, 108, 116, 112, 55, 100] => lookup_623_225(acc),
            [120, 110, 45, 45, 107, 108, 116, 120, 57, 97] => lookup_623_226(acc),
            [120, 110, 45, 45, 107, 108, 116, 121, 53, 120] => lookup_623_227(acc),
            [120, 110, 45, 45, 109, 107, 114, 117, 52, 53, 105] => lookup_623_228(acc),
            [120, 110, 45, 45, 110, 105, 116, 50, 50, 53, 107] => lookup_623_229(acc),
            [120, 110, 45, 45, 110, 116, 115, 111, 48, 105, 113, 120, 51, 97] => {
                lookup_623_230(acc)
            }
            [120, 110, 45, 45, 110, 116, 115, 113, 49, 55, 103] => lookup_623_231(acc),
            [120, 110, 45, 45, 112, 115, 115, 117, 51, 51, 108] => lookup_623_232(acc),
            [120, 110, 45, 45, 113, 113, 113, 116, 49, 49, 109] => lookup_623_233(acc),
            [120, 110, 45, 45, 114, 104, 116, 50, 55, 122] => lookup_623_234(acc),
            [120, 110, 45, 45, 114, 104, 116, 51, 100] => lookup_623_235(acc),
            [120, 110, 45, 45, 114, 104, 116, 54, 49, 101] => lookup_623_236(acc),
            [120, 110, 45, 45, 114, 110, 121, 51, 49, 104] => lookup_623_237(acc),
            [120, 110, 45, 45, 116, 111, 114, 49, 51, 49, 111] => lookup_623_238(acc),
            [120, 110, 45, 45, 117, 105, 115, 116, 50, 50, 104] => lookup_623_239(acc),
            [120, 110, 45, 45, 117, 105, 115, 122, 51, 103] => lookup_623_240(acc),
            [120, 110, 45, 45, 117, 117, 119, 117, 53, 56, 97] => lookup_623_241(acc),
            [120, 110, 45, 45, 118, 103, 117, 52, 48, 50, 99] => lookup_623_242(acc),
            [120, 110, 45, 45, 122, 98, 120, 48, 50, 53, 100] => lookup_623_243(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_623_244(labels, acc),
            [121, 97, 109, 97, 103, 117, 99, 104, 105] => lookup_623_245(labels, acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_623_246(labels, acc),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_623_247(info, labels, acc),
            [122, 111, 109, 98, 105, 101] => lookup_623_248(acc),
            [228, 184, 137, 233, 135, 141] => lookup_623_249(acc),
            [228, 186, 172, 233, 131, 189] => lookup_623_250(acc),
            [228, 189, 144, 232, 179, 128] => lookup_623_251(acc),
            [229, 133, 181, 229, 186, 171] => lookup_623_252(acc),
            [229, 140, 151, 230, 181, 183, 233, 129, 147] => lookup_623_253(acc),
            [229, 141, 131, 232, 145, 137] => lookup_623_254(acc),
            [229, 146, 140, 230, 173, 140, 229, 177, 177] => lookup_623_255(acc),
            [229, 159, 188, 231, 142, 137] => lookup_623_256(acc),
            [229, 164, 167, 229, 136, 134] => lookup_623_257(acc),
            [229, 164, 167, 233, 152, 170] => lookup_623_258(acc),
            [229, 165, 136, 232, 137, 175] => lookup_623_259(acc),
            [229, 174, 174, 229, 159, 142] => lookup_623_260(acc),
            [229, 174, 174, 229, 180, 142] => lookup_623_261(acc),
            [229, 175, 140, 229, 177, 177] => lookup_623_262(acc),
            [229, 177, 177, 229, 143, 163] => lookup_623_263(acc),
            [229, 177, 177, 229, 189, 162] => lookup_623_264(acc),
            [229, 177, 177, 230, 162, 168] => lookup_623_265(acc),
            [229, 178, 144, 233, 152, 156] => lookup_623_266(acc),
            [229, 178, 161, 229, 177, 177] => lookup_623_267(acc),
            [229, 178, 169, 230, 137, 139] => lookup_623_268(acc),
            [229, 179, 182, 230, 160, 185] => lookup_623_269(acc),
            [229, 186, 131, 229, 179, 182] => lookup_623_270(acc),
            [229, 190, 179, 229, 179, 182] => lookup_623_271(acc),
            [230, 132, 155, 229, 170, 155] => lookup_623_272(acc),
            [230, 132, 155, 231, 159, 165] => lookup_623_273(acc),
            [230, 150, 176, 230, 189, 159] => lookup_623_274(acc),
            [230, 157, 177, 228, 186, 172] => lookup_623_275(acc),
            [230, 160, 131, 230, 156, 168] => lookup_623_276(acc),
            [230, 178, 150, 231, 184, 132] => lookup_623_277(acc),
            [230, 187, 139, 232, 179, 128] => lookup_623_278(acc),
            [231, 134, 138, 230, 156, 172] => lookup_623_279(acc),
            [231, 159, 179, 229, 183, 157] => lookup_623_280(acc),
            [231, 165, 158, 229, 165, 136, 229, 183, 157] => lookup_623_281(acc),
            [231, 166, 143, 228, 186, 149] => lookup_623_282(acc),
            [231, 166, 143, 229, 178, 161] => lookup_623_283(acc),
            [231, 166, 143, 229, 179, 182] => lookup_623_284(acc),
            [231, 167, 139, 231, 148, 176] => lookup_623_285(acc),
            [231, 190, 164, 233, 166, 172] => lookup_623_286(acc),
            [232, 140, 168, 229, 159, 142] => lookup_623_287(acc),
            [233, 149, 183, 229, 180, 142] => lookup_623_288(acc),
            [233, 149, 183, 233, 135, 142] => lookup_623_289(acc),
            [233, 157, 146, 230, 163, 174] => lookup_623_290(acc),
            [233, 157, 153, 229, 178, 161] => lookup_623_291(acc),
            [233, 166, 153, 229, 183, 157] => lookup_623_292(acc),
            [233, 171, 152, 231, 159, 165] => lookup_623_293(acc),
            [233, 179, 165, 229, 143, 150] => lookup_623_294(acc),
            [233, 185, 191, 229, 133, 144, 229, 179, 182] => lookup_623_295(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_624() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_625() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_628() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_629() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_630_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_630_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_630_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_630_0(acc),
            [99, 111] => lookup_630_1(labels, acc),
            [103, 111] => lookup_630_2(acc),
            [105, 110, 102, 111] => lookup_630_3(acc),
            [109, 101] => lookup_630_4(acc),
            [109, 111, 98, 105] => lookup_630_5(acc),
            [110, 101] => lookup_630_6(acc),
            [111, 114] => lookup_630_7(acc),
            [115, 99] => lookup_630_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_631() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_632() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_635_0(acc),
            [101, 100, 117] => lookup_635_1(acc),
            [103, 111, 118] => lookup_635_2(acc),
            [105, 111] => lookup_635_3(acc),
            [106, 112] => lookup_635_4(acc),
            [109, 105, 108] => lookup_635_5(acc),
            [110, 101, 116] => lookup_635_6(acc),
            [111, 114, 103] => lookup_635_7(acc),
            [116, 118] => lookup_635_8(acc),
            [117, 107] => lookup_635_9(acc),
            [117, 115] => lookup_635_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_636_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_636<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_636_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_637_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_637_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_637_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_637_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_637_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_637_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_637_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_637<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_637_0(acc),
            [99, 111, 109] => lookup_637_1(acc),
            [101, 100, 117] => lookup_637_2(acc),
            [103, 111, 118] => lookup_637_3(acc),
            [105, 110, 102, 111] => lookup_637_4(acc),
            [110, 101, 116] => lookup_637_5(acc),
            [111, 114, 103] => lookup_637_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_638() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_639() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_642() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_643() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115] => lookup_644_0(acc),
            [97, 115, 115, 111] => lookup_644_1(acc),
            [99, 111, 109] => lookup_644_2(acc),
            [99, 111, 111, 112] => lookup_644_3(acc),
            [101, 100, 117] => lookup_644_4(acc),
            [103, 111, 117, 118] => lookup_644_5(acc),
            [103, 111, 118] => lookup_644_6(acc),
            [109, 101, 100, 101, 99, 105, 110] => lookup_644_7(acc),
            [109, 105, 108] => lookup_644_8(acc),
            [110, 111, 109] => lookup_644_9(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_644_10(acc),
            [111, 114, 103] => lookup_644_11(acc),
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110, 115] => lookup_644_12(acc),
            [112, 114, 100] => lookup_644_13(acc),
            [112, 114, 101, 115, 115, 101] => lookup_644_14(acc),
            [116, 109] => lookup_644_15(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_644_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_645_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_645_0(acc),
            [103, 111, 118] => lookup_645_1(acc),
            [110, 101, 116] => lookup_645_2(acc),
            [111, 114, 103] => lookup_645_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_646() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_649_0(acc),
            [101, 100, 117] => lookup_649_1(acc),
            [103, 111, 118] => lookup_649_2(acc),
            [111, 114, 103] => lookup_649_3(acc),
            [114, 101, 112] => lookup_649_4(acc),
            [116, 114, 97] => lookup_649_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_650() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_651() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_652_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_652_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_652_1(acc),
            [98, 117, 115, 97, 110] => lookup_652_2(acc),
            [99, 104, 117, 110, 103, 98, 117, 107] => lookup_652_3(acc),
            [99, 104, 117, 110, 103, 110, 97, 109] => lookup_652_4(acc),
            [99, 111] => lookup_652_5(acc),
            [100, 97, 101, 103, 117] => lookup_652_6(acc),
            [100, 97, 101, 106, 101, 111, 110] => lookup_652_7(acc),
            [101, 115] => lookup_652_8(acc),
            [103, 97, 110, 103, 119, 111, 110] => lookup_652_9(acc),
            [103, 111] => lookup_652_10(acc),
            [103, 119, 97, 110, 103, 106, 117] => lookup_652_11(acc),
            [103, 121, 101, 111, 110, 103, 98, 117, 107] => lookup_652_12(acc),
            [103, 121, 101, 111, 110, 103, 103, 105] => lookup_652_13(acc),
            [103, 121, 101, 111, 110, 103, 110, 97, 109] => lookup_652_14(acc),
            [104, 115] => lookup_652_15(acc),
            [105, 110, 99, 104, 101, 111, 110] => lookup_652_16(acc),
            [106, 101, 106, 117] => lookup_652_17(acc),
            [106, 101, 111, 110, 98, 117, 107] => lookup_652_18(acc),
            [106, 101, 111, 110, 110, 97, 109] => lookup_652_19(acc),
            [107, 103] => lookup_652_20(acc),
            [109, 105, 108] => lookup_652_21(acc),
            [109, 115] => lookup_652_22(acc),
            [110, 101] => lookup_652_23(acc),
            [111, 114] => lookup_652_24(acc),
            [112, 101] => lookup_652_25(acc),
            [114, 101] => lookup_652_26(acc),
            [115, 99] => lookup_652_27(acc),
            [115, 101, 111, 117, 108] => lookup_652_28(acc),
            [117, 108, 115, 97, 110] => lookup_652_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_653_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_653_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_653<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_653_0(acc),
            [101, 100, 117] => lookup_653_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_654() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_655() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_656_0(acc),
            [101, 100, 117] => lookup_656_1(acc),
            [101, 109, 98] => lookup_656_2(acc),
            [103, 111, 118] => lookup_656_3(acc),
            [105, 110, 100] => lookup_656_4(acc),
            [110, 101, 116] => lookup_656_5(acc),
            [111, 114, 103] => lookup_656_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_657_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_657_0(acc),
            [101, 100, 117] => lookup_657_1(acc),
            [110, 101, 116] => lookup_657_2(acc),
            [111, 114, 103] => lookup_657_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_658() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_659_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_659_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [117, 112, 97, 97, 115] => lookup_659_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_659_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_659<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_659_0(acc),
            [101, 100, 117] => lookup_659_1(acc),
            [103, 111, 118] => lookup_659_2(acc),
            [106, 99, 108, 111, 117, 100] => lookup_659_3(acc),
            [107, 97, 122, 116, 101, 108, 101, 112, 111, 114, 116] => {
                lookup_659_4(info, labels, acc)
            }
            [109, 105, 108] => lookup_659_5(acc),
            [110, 101, 116] => lookup_659_6(acc),
            [111, 114, 103] => lookup_659_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_660_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_660_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_660_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 110, 114] => lookup_660_0(acc),
            [99] => lookup_660_1(acc),
            [99, 111, 109] => lookup_660_2(acc),
            [101, 100, 117] => lookup_660_3(acc),
            [103, 111, 118] => lookup_660_4(acc),
            [105, 110, 102, 111] => lookup_660_5(acc),
            [105, 110, 116] => lookup_660_6(acc),
            [110, 101, 116] => lookup_660_7(acc),
            [111, 114, 103] => lookup_660_8(acc),
            [112, 101, 114] => lookup_660_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_661() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_663() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_664() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_665_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_665_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_665_0_0(acc),
            [115, 105, 116, 101, 115] => lookup_665_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_665<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_665_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_666() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_667() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_668() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_671() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_672() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_674<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_674_0(acc),
            [101, 100, 117] => lookup_674_1(acc),
            [103, 111, 118] => lookup_674_2(acc),
            [110, 101, 116] => lookup_674_3(acc),
            [111, 114, 103] => lookup_674_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_675_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_675<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_675_0(acc),
            [99, 111, 109] => lookup_675_1(acc),
            [101, 100, 117] => lookup_675_2(acc),
            [103, 111, 118] => lookup_675_3(acc),
            [110, 101, 116] => lookup_675_4(acc),
            [111, 114, 103] => lookup_675_5(acc),
            [111, 121] => lookup_675_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_676() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_678() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_680() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_681() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_682() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_683() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_684_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_684_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_684<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_684_0(acc),
            [99, 97, 97] => lookup_684_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_685() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_686() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_687() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_688() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_689() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_690() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_691() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_693() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_694() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_695_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_695_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_695_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_695_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_695<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 121, 111, 110] => lookup_695_0(acc),
            [100, 119, 101, 98] => lookup_695_1(info, labels, acc),
            [109, 121, 112, 101, 112] => lookup_695_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_696() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_697_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_697_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_697<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 101, 109] => lookup_697_0(acc),
            [104, 108, 120] => lookup_697_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_698() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_699<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_699_0(acc),
            [97, 115, 115, 110] => lookup_699_1(acc),
            [99, 111, 109] => lookup_699_2(acc),
            [101, 100, 117] => lookup_699_3(acc),
            [103, 111, 118] => lookup_699_4(acc),
            [103, 114, 112] => lookup_699_5(acc),
            [104, 111, 116, 101, 108] => lookup_699_6(acc),
            [105, 110, 116] => lookup_699_7(acc),
            [108, 116, 100] => lookup_699_8(acc),
            [110, 101, 116] => lookup_699_9(acc),
            [110, 103, 111] => lookup_699_10(acc),
            [111, 114, 103] => lookup_699_11(acc),
            [115, 99, 104] => lookup_699_12(acc),
            [115, 111, 99] => lookup_699_13(acc),
            [119, 101, 98] => lookup_699_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_700() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_701() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_702() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_703() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_704() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_705() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_706_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_706<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 109, 103] => lookup_706_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_707() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_708() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_709() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_710() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_711() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_712() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_713_0(acc),
            [101, 100, 117] => lookup_713_1(acc),
            [103, 111, 118] => lookup_713_2(acc),
            [110, 101, 116] => lookup_713_3(acc),
            [111, 114, 103] => lookup_713_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_714_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_714_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_714<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_714_0(acc),
            [98, 105, 122] => lookup_714_1(acc),
            [99, 111] => lookup_714_2(acc),
            [100, 101] => lookup_714_3(acc),
            [101, 100, 117] => lookup_714_4(acc),
            [103, 111, 118] => lookup_714_5(acc),
            [105, 110, 102, 111] => lookup_714_6(acc),
            [110, 101, 116] => lookup_714_7(acc),
            [111, 114, 103] => lookup_714_8(acc),
            [115, 99] => lookup_714_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_715_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_715_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_715_0(acc),
            [103, 111, 118] => lookup_715_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_716() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_717() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_718_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_718<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 105, 116, 101] => lookup_718_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_718_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_719() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_721() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 110] => lookup_722_0(acc),
            [99, 111, 109] => lookup_722_1(acc),
            [99, 111, 110, 102] => lookup_722_2(acc),
            [101, 100, 117] => lookup_722_3(acc),
            [103, 111, 118] => lookup_722_4(acc),
            [105, 100] => lookup_722_5(acc),
            [109, 105, 108] => lookup_722_6(acc),
            [110, 101, 116] => lookup_722_7(acc),
            [111, 114, 103] => lookup_722_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_723_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_723_0(acc),
            [101, 100, 117] => lookup_723_1(acc),
            [103, 111, 118] => lookup_723_2(acc),
            [105, 100] => lookup_723_3(acc),
            [109, 101, 100] => lookup_723_4(acc),
            [110, 101, 116] => lookup_723_5(acc),
            [111, 114, 103] => lookup_723_6(acc),
            [112, 108, 99] => lookup_723_7(acc),
            [115, 99, 104] => lookup_723_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_724_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_724_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_724_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_724_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_724_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_724_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_724<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_724_0(acc),
            [99, 111] => lookup_724_1(acc),
            [103, 111, 118] => lookup_724_2(acc),
            [110, 101, 116] => lookup_724_3(acc),
            [111, 114, 103] => lookup_724_4(acc),
            [112, 114, 101, 115, 115] => lookup_724_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_725() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_726() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_728() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_729() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_730_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_730<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 111, 117, 116, 101, 114] => lookup_730_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_731() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_732() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_733() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_734() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_737() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_739() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_740_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_740_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_740<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_740_0(acc),
            [116, 109] => lookup_740_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_741() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_742_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_742_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_742_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_742_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_742<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116] => lookup_742_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_742_1(acc),
            [100, 101] => lookup_742_2(acc),
            [106, 112] => lookup_742_3(acc),
            [116, 111] => lookup_742_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_743_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 99, 97, 108, 104, 111, 115, 116] => lookup_743_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_743_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_38<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 105, 116, 101] => lookup_743_38_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_743_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_743<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_743_0(acc),
            [98, 97, 114, 115, 121] => lookup_743_1(acc),
            [98, 114, 97, 115, 105, 108, 105, 97] => lookup_743_2(acc),
            [99, 54, 54] => lookup_743_3(acc),
            [99, 111] => lookup_743_4(acc),
            [100, 97, 112, 108, 105, 101] => lookup_743_5(labels, acc),
            [100, 100, 110, 115] => lookup_743_6(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_743_7(acc),
            [100, 110, 115, 102, 111, 114] => lookup_743_8(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_743_9(acc),
            [101, 100, 103, 101, 115, 116, 97, 99, 107] => lookup_743_10(acc),
            [101, 100, 117] => lookup_743_11(acc),
            [102, 105, 108, 101, 103, 101, 97, 114] => lookup_743_12(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 97, 117] => lookup_743_13(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 100, 101] => lookup_743_14(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 103, 98] => lookup_743_15(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 105, 101] => lookup_743_16(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 106, 112] => lookup_743_17(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 115, 103] => lookup_743_18(acc),
            [103, 108, 105, 116, 99, 104] => lookup_743_19(acc),
            [103, 111, 118] => lookup_743_20(acc),
            [104, 111, 112, 116, 111] => lookup_743_21(acc),
            [105, 50, 51, 52] => lookup_743_22(acc),
            [105, 116, 115] => lookup_743_23(acc),
            [108, 111, 103, 105, 110, 116, 111] => lookup_743_24(acc),
            [108, 111, 104, 109, 117, 115] => lookup_743_25(acc),
            [109, 99, 100, 105, 114] => lookup_743_26(acc),
            [109, 99, 112, 101] => lookup_743_27(acc),
            [109, 121, 100, 115] => lookup_743_28(acc),
            [110, 101, 116] => lookup_743_29(acc),
            [110, 111, 104, 111, 115, 116] => lookup_743_30(acc),
            [110, 111, 105, 112] => lookup_743_31(acc),
            [111, 114, 103] => lookup_743_32(acc),
            [112, 114, 105, 118] => lookup_743_33(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_743_34(acc),
            [115, 111, 117, 110, 100, 99, 97, 115, 116] => lookup_743_35(acc),
            [115, 121, 110, 111, 108, 111, 103, 121] => lookup_743_36(acc),
            [116, 99, 112, 52] => lookup_743_37(acc),
            [116, 114, 97, 110, 115, 105, 112] => lookup_743_38(info, labels, acc),
            [118, 112, 52] => lookup_743_39(acc),
            [119, 101, 98, 104, 111, 112] => lookup_743_40(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_743_41(acc),
            [121, 111, 109, 98, 111] => lookup_743_42(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_744() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_745_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_745<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 109, 101, 114] => lookup_745_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_746() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_748() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_749() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_751_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_751<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_751_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_752() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_753_0(acc),
            [99, 111, 109] => lookup_753_1(acc),
            [101, 100, 117] => lookup_753_2(acc),
            [103, 111, 118] => lookup_753_3(acc),
            [109, 105, 108] => lookup_753_4(acc),
            [110, 111, 109] => lookup_753_5(acc),
            [111, 114, 103] => lookup_753_6(acc),
            [112, 114, 100] => lookup_753_7(acc),
            [116, 109] => lookup_753_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_754() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_755() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_756() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_757() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_759() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_761() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_762_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_762_0(acc),
            [99, 111, 109] => lookup_762_1(acc),
            [101, 100, 117] => lookup_762_2(acc),
            [103, 111, 118] => lookup_762_3(acc),
            [105, 110, 102] => lookup_762_4(acc),
            [110, 97, 109, 101] => lookup_762_5(acc),
            [110, 101, 116] => lookup_762_6(acc),
            [111, 114, 103] => lookup_762_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_763_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_763_0(acc),
            [101, 100, 117] => lookup_763_1(acc),
            [103, 111, 117, 118] => lookup_763_2(acc),
            [103, 111, 118] => lookup_763_3(acc),
            [110, 101, 116] => lookup_763_4(acc),
            [111, 114, 103] => lookup_763_5(acc),
            [112, 114, 101, 115, 115, 101] => lookup_763_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_764() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_765() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_766_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_767() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_768_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_768_0(acc),
            [103, 111, 118] => lookup_768_1(acc),
            [110, 121, 99] => lookup_768_2(acc),
            [111, 114, 103] => lookup_768_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_769_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_769_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_769_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_769_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_769_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_769<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_769_0(acc),
            [101, 100, 117] => lookup_769_1(acc),
            [103, 111, 118] => lookup_769_2(acc),
            [110, 101, 116] => lookup_769_3(acc),
            [111, 114, 103] => lookup_769_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_770_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_770_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_770<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_770_0(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_770_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_771() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_773() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_774() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_775() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_777() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_779() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_780() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_781() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_782() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_783() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_785() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_786_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_786<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 117] => lookup_786_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_787() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_788_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_788_0(acc),
            [103, 111, 118] => lookup_788_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_789_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_789_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_789_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_789_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_789_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_789_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_789_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_789<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_789_0(acc),
            [101, 100, 117] => lookup_789_1(acc),
            [103, 111, 118] => lookup_789_2(acc),
            [108, 97, 98] => lookup_789_3(acc),
            [109, 105, 110, 105, 115, 105, 116, 101] => lookup_789_4(acc),
            [110, 101, 116] => lookup_789_5(acc),
            [111, 114, 103] => lookup_789_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_790() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_791_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_791_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_791_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_791_0(labels, acc),
            [101, 100, 117] => lookup_791_1(acc),
            [110, 101, 116] => lookup_791_2(acc),
            [111, 114, 103] => lookup_791_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_792() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_794_0(acc),
            [99, 111] => lookup_794_1(acc),
            [99, 111, 109] => lookup_794_2(acc),
            [103, 111, 118] => lookup_794_3(acc),
            [110, 101, 116] => lookup_794_4(acc),
            [111, 114] => lookup_794_5(acc),
            [111, 114, 103] => lookup_794_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_795() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_796() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 101, 114, 111] => lookup_797_0(acc),
            [98, 105, 122] => lookup_797_1(acc),
            [99, 111, 109] => lookup_797_2(acc),
            [99, 111, 111, 112] => lookup_797_3(acc),
            [101, 100, 117] => lookup_797_4(acc),
            [103, 111, 118] => lookup_797_5(acc),
            [105, 110, 102, 111] => lookup_797_6(acc),
            [105, 110, 116] => lookup_797_7(acc),
            [109, 105, 108] => lookup_797_8(acc),
            [109, 117, 115, 101, 117, 109] => lookup_797_9(acc),
            [110, 97, 109, 101] => lookup_797_10(acc),
            [110, 101, 116] => lookup_797_11(acc),
            [111, 114, 103] => lookup_797_12(acc),
            [112, 114, 111] => lookup_797_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_798_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_798_0(acc),
            [98, 105, 122] => lookup_798_1(acc),
            [99, 111] => lookup_798_2(acc),
            [99, 111, 109] => lookup_798_3(acc),
            [99, 111, 111, 112] => lookup_798_4(acc),
            [101, 100, 117] => lookup_798_5(acc),
            [103, 111, 118] => lookup_798_6(acc),
            [105, 110, 116] => lookup_798_7(acc),
            [109, 117, 115, 101, 117, 109] => lookup_798_8(acc),
            [110, 101, 116] => lookup_798_9(acc),
            [111, 114, 103] => lookup_798_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_799_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_799_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_799_0(acc),
            [99, 111, 109] => lookup_799_1(acc),
            [101, 100, 117] => lookup_799_2(acc),
            [103, 111, 98] => lookup_799_3(acc),
            [110, 101, 116] => lookup_799_4(acc),
            [111, 114, 103] => lookup_799_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_800_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_800_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_800_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_800_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_800_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_800_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_800_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_800_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_800_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_800<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_800_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_800_1(acc),
            [99, 111, 109] => lookup_800_2(acc),
            [101, 100, 117] => lookup_800_3(acc),
            [103, 111, 118] => lookup_800_4(acc),
            [109, 105, 108] => lookup_800_5(acc),
            [110, 97, 109, 101] => lookup_800_6(acc),
            [110, 101, 116] => lookup_800_7(acc),
            [111, 114, 103] => lookup_800_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_801_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_801_0(acc),
            [97, 100, 118] => lookup_801_1(acc),
            [99, 111] => lookup_801_2(acc),
            [101, 100, 117] => lookup_801_3(acc),
            [103, 111, 118] => lookup_801_4(acc),
            [109, 105, 108] => lookup_801_5(acc),
            [110, 101, 116] => lookup_801_6(acc),
            [111, 114, 103] => lookup_801_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_802_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_802<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 97] => lookup_802_0(acc),
            [99, 99] => lookup_802_1(acc),
            [99, 111] => lookup_802_2(acc),
            [99, 111, 109] => lookup_802_3(acc),
            [100, 114] => lookup_802_4(acc),
            [105, 110] => lookup_802_5(acc),
            [105, 110, 102, 111] => lookup_802_6(acc),
            [109, 111, 98, 105] => lookup_802_7(acc),
            [109, 120] => lookup_802_8(acc),
            [110, 97, 109, 101] => lookup_802_9(acc),
            [111, 114] => lookup_802_10(acc),
            [111, 114, 103] => lookup_802_11(acc),
            [112, 114, 111] => lookup_802_12(acc),
            [115, 99, 104, 111, 111, 108] => lookup_802_13(acc),
            [116, 118] => lookup_802_14(acc),
            [117, 115] => lookup_802_15(acc),
            [119, 115] => lookup_802_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_803() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_805_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_805_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_805_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_805_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_805_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_805_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_805<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114] => lookup_805_0(info, labels, acc),
            [104, 105, 115] => lookup_805_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_806() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_807() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_808() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_809_0(acc),
            [110, 111, 109] => lookup_809_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_810() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_811() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_812_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_17_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_17_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 100, 110] => lookup_812_17_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111, 100] => lookup_812_17_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_22_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_22_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_22_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_22_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_22_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_22_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_22_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_22_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_22_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_22_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_22<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [49] => lookup_812_22_0(acc),
            [50] => lookup_812_22_1(acc),
            [51] => lookup_812_22_2(acc),
            [52] => lookup_812_22_3(acc),
            [53] => lookup_812_22_4(acc),
            [54] => lookup_812_22_5(acc),
            [55] => lookup_812_22_6(acc),
            [99, 101, 110, 116, 114, 97, 108, 117, 115] => lookup_812_22_7(acc),
            [101, 97, 115, 116, 97, 115, 105, 97] => lookup_812_22_8(acc),
            [101, 97, 115, 116, 117, 115, 50] => lookup_812_22_9(acc),
            [119, 101, 115, 116, 101, 117, 114, 111, 112, 101] => lookup_812_22_10(acc),
            [119, 101, 115, 116, 117, 115, 50] => lookup_812_22_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_38<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_812_38_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_40_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_40<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117] => lookup_812_40_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_46_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_46_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_46<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 49, 45, 100, 101] => lookup_812_46_0(acc),
            [119, 101, 115, 116, 49, 45, 117, 115] => lookup_812_46_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_49_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_49<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_812_49_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_812_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_70_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_70_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_70<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108, 115, 45, 115, 116, 111, 49] => lookup_812_70_0(acc),
            [106, 108, 115, 45, 115, 116, 111, 50] => lookup_812_70_1(acc),
            [106, 108, 115, 45, 115, 116, 111, 51] => lookup_812_70_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_73_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_73_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_73_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_73_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_73_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_812_73_2_0(acc),
            [103, 108, 111, 98, 97, 108] => lookup_812_73_2_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_73_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_73_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_73_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_73_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_812_73_3_0(acc),
            [98] => lookup_812_73_3_1(acc),
            [103, 108, 111, 98, 97, 108] => lookup_812_73_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_73<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [102, 114, 101, 101, 116, 108, 115] => lookup_812_73_0(acc),
            [109, 97, 112] => lookup_812_73_1(acc),
            [112, 114, 111, 100] => lookup_812_73_2(info, labels, acc),
            [115, 115, 108] => lookup_812_73_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_74_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_74<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 112] => lookup_812_74_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_107_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_107_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_107_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_107_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_107_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_107_0_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_107_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [102, 114, 45, 49] => lookup_812_107_0_0(acc),
            [108, 111, 110, 45, 49] => lookup_812_107_0_1(acc),
            [108, 111, 110, 45, 50] => lookup_812_107_0_2(acc),
            [110, 121, 45, 49] => lookup_812_107_0_3(acc),
            [110, 121, 45, 50] => lookup_812_107_0_4(acc),
            [115, 103, 45, 49] => lookup_812_107_0_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_107<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_812_107_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_125_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_125_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_812_125_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_812_125_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_125_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_812_125_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_812_125<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [104, 111, 115, 116, 105, 110, 103] => lookup_812_125_0(info, labels, acc),
            [119, 101, 98, 112, 97, 97, 115] => lookup_812_125_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_134_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_134_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_134<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_812_134_0(acc),
            [110, 111, 114, 100, 101, 115, 116, 101, 45, 105, 100, 99] => lookup_812_134_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_135_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_135<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_812_135_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_151_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_151_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_151<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [115, 111, 99] => lookup_812_151_0(acc),
            [117, 115, 101, 114] => lookup_812_151_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_156_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_156<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116, 97] => lookup_812_156_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_158_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_158<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_812_158_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_161_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_161<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_812_161_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_166_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_166_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_166_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_166_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [97, 116, 108] => lookup_812_166_0_0(acc),
            [110, 106, 115] => lookup_812_166_0_1(acc),
            [114, 105, 99] => lookup_812_166_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_166<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_812_166_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_168_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_168_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 98] => lookup_812_168_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_168_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_168<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 111, 114, 101] => lookup_812_168_0(info, labels, acc),
            [115, 101, 114, 118, 105, 99, 101, 98, 117, 115] => lookup_812_168_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_169_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_169_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812_169<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 97, 103, 101] => lookup_812_169_0(acc),
            [119, 101, 98, 115, 105, 116, 101] => lookup_812_169_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_812_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_812<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => lookup_812_0(acc),
            [97, 100, 111, 98, 101, 105, 111, 45, 115, 116, 97, 116, 105, 99] => lookup_812_1(acc),
            [97, 100, 111, 98, 101, 105, 111, 114, 117, 110, 116, 105, 109, 101] => {
                lookup_812_2(acc)
            }
            [97, 107, 97, 100, 110, 115] => lookup_812_3(acc),
            [97, 107, 97, 109, 97, 105] => lookup_812_4(acc),
            [97, 107, 97, 109, 97, 105, 45, 115, 116, 97, 103, 105, 110, 103] => lookup_812_5(acc),
            [97, 107, 97, 109, 97, 105, 101, 100, 103, 101] => lookup_812_6(acc),
            [97, 107, 97, 109, 97, 105, 101, 100, 103, 101, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_812_7(acc)
            }
            [97, 107, 97, 109, 97, 105, 104, 100] => lookup_812_8(acc),
            [97, 107, 97, 109, 97, 105, 104, 100, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_812_9(acc)
            }
            [97, 107, 97, 109, 97, 105, 111, 114, 105, 103, 105, 110] => lookup_812_10(acc),
            [97, 107, 97, 109, 97, 105, 111, 114, 105, 103, 105, 110, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_812_11(acc)
            }
            [97, 107, 97, 109, 97, 105, 122, 101, 100] => lookup_812_12(acc),
            [97, 107, 97, 109, 97, 105, 122, 101, 100, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_812_13(acc)
            }
            [97, 108, 119, 97, 121, 115, 100, 97, 116, 97] => lookup_812_14(acc),
            [97, 112, 112, 117, 100, 111] => lookup_812_15(acc),
            [97, 116, 45, 98, 97, 110, 100, 45, 99, 97, 109, 112] => lookup_812_16(acc),
            [97, 116, 108, 97, 115, 115, 105, 97, 110, 45, 100, 101, 118] => {
                lookup_812_17(info, labels, acc)
            }
            [97, 122, 117, 114, 101, 45, 97, 112, 105] => lookup_812_18(acc),
            [97, 122, 117, 114, 101, 45, 109, 111, 98, 105, 108, 101] => lookup_812_19(acc),
            [97, 122, 117, 114, 101, 101, 100, 103, 101] => lookup_812_20(acc),
            [97, 122, 117, 114, 101, 102, 100] => lookup_812_21(acc),
            [97, 122, 117, 114, 101, 115, 116, 97, 116, 105, 99, 97, 112, 112, 115] => {
                lookup_812_22(labels, acc)
            }
            [97, 122, 117, 114, 101, 119, 101, 98, 115, 105, 116, 101, 115] => lookup_812_23(acc),
            [98, 97, 114, 48] => lookup_812_24(acc),
            [98, 97, 114, 49] => lookup_812_25(acc),
            [98, 97, 114, 50] => lookup_812_26(acc),
            [98, 97, 114, 115, 121] => lookup_812_27(acc),
            [98, 105, 116, 98, 114, 105, 100, 103, 101] => lookup_812_28(acc),
            [98, 108, 97, 99, 107, 98, 97, 117, 100, 99, 100, 110] => lookup_812_29(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_812_30(acc),
            [98, 111, 111, 109, 108, 97] => lookup_812_31(acc),
            [98, 111, 117, 110, 99, 101, 109, 101] => lookup_812_32(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_812_33(acc),
            [98, 114, 111, 107, 101, 45, 105, 116] => lookup_812_34(acc),
            [98, 117, 121, 115, 104, 111, 117, 115, 101, 115] => lookup_812_35(acc),
            [99, 97, 115, 97, 99, 97, 109] => lookup_812_36(acc),
            [99, 100, 110, 45, 101, 100, 103, 101, 115] => lookup_812_37(acc),
            [99, 100, 110, 55, 55] => lookup_812_38(info, labels, acc),
            [99, 100, 110, 55, 55, 45, 115, 115, 108] => lookup_812_39(acc),
            [99, 104, 97, 110, 110, 101, 108, 115, 100, 118, 114] => lookup_812_40(labels, acc),
            [99, 108, 105, 99, 107, 114, 105, 115, 105, 110, 103] => lookup_812_41(acc),
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_812_42(acc),
            [99, 108, 111, 117, 100, 97, 112, 112] => lookup_812_43(acc),
            [99, 108, 111, 117, 100, 102, 114, 111, 110, 116] => lookup_812_44(acc),
            [99, 108, 111, 117, 100, 102, 117, 110, 99, 116, 105, 111, 110, 115] => {
                lookup_812_45(acc)
            }
            [99, 108, 111, 117, 100, 106, 105, 102, 102, 121] => lookup_812_46(labels, acc),
            [99, 108, 111, 117, 100, 121, 99, 108, 117, 115, 116, 101, 114] => lookup_812_47(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_812_48(acc),
            [99, 114, 121, 112, 116, 111, 110, 111, 109, 105, 99] => {
                lookup_812_49(info, labels, acc)
            }
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_812_50(acc),
            [100, 100, 110, 115] => lookup_812_51(acc),
            [100, 101, 98, 105, 97, 110] => lookup_812_52(acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_812_53(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_812_54(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_812_55(acc),
            [100, 110, 115, 117, 112] => lookup_812_56(acc),
            [100, 111, 101, 115, 45, 105, 116] => lookup_812_57(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_812_58(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_812_59(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_812_60(acc),
            [100, 121, 110, 97, 116, 104, 111, 109, 101] => lookup_812_61(acc),
            [100, 121, 110, 117] => lookup_812_62(acc),
            [100, 121, 110, 118, 54] => lookup_812_63(acc),
            [101, 97, 116, 105, 110, 103, 45, 111, 114, 103, 97, 110, 105, 99] => {
                lookup_812_64(acc)
            }
            [101, 100, 103, 101, 97, 112, 112] => lookup_812_65(acc),
            [101, 100, 103, 101, 107, 101, 121] => lookup_812_66(acc),
            [101, 100, 103, 101, 107, 101, 121, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_812_67(acc)
            }
            [101, 100, 103, 101, 115, 117, 105, 116, 101] => lookup_812_68(acc),
            [101, 100, 103, 101, 115, 117, 105, 116, 101, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_812_69(acc)
            }
            [101, 108, 97, 115, 116, 120] => lookup_812_70(info, labels, acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => lookup_812_71(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_812_72(acc),
            [102, 97, 115, 116, 108, 121] => lookup_812_73(info, labels, acc),
            [102, 97, 115, 116, 108, 121, 108, 98] => lookup_812_74(labels, acc),
            [102, 97, 115, 116, 115, 116, 97, 99, 107, 115] => lookup_812_75(acc),
            [102, 101, 115, 116, 101, 45, 105, 112] => lookup_812_76(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_812_77(acc)
            }
            [102, 108, 121, 110, 110, 104, 111, 115, 116, 105, 110, 103] => lookup_812_78(acc),
            [102, 114, 111, 109, 45, 97, 122] => lookup_812_79(acc),
            [102, 114, 111, 109, 45, 99, 111] => lookup_812_80(acc),
            [102, 114, 111, 109, 45, 108, 97] => lookup_812_81(acc),
            [102, 114, 111, 109, 45, 110, 121] => lookup_812_82(acc),
            [103, 98] => lookup_812_83(acc),
            [103, 101, 116, 115, 45, 105, 116] => lookup_812_84(acc),
            [104, 97, 109, 45, 114, 97, 100, 105, 111, 45, 111, 112] => lookup_812_85(acc),
            [104, 101, 116, 101, 109, 108] => lookup_812_86(acc),
            [104, 105, 99, 97, 109] => lookup_812_87(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_812_88(acc),
            [104, 111, 109, 101, 105, 112] => lookup_812_89(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_812_90(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_812_91(acc),
            [104, 117] => lookup_812_92(acc),
            [105, 110] => lookup_812_93(acc),
            [105, 110, 45, 100, 115, 108] => lookup_812_94(acc),
            [105, 110, 45, 116, 104, 101, 45, 98, 97, 110, 100] => lookup_812_95(acc),
            [105, 110, 45, 118, 112, 110] => lookup_812_96(acc),
            [105, 111, 98, 98] => lookup_812_97(acc),
            [105, 112, 105, 102, 111, 110, 121] => lookup_812_98(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_812_99(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_812_100(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_812_101(acc),
            [106, 112] => lookup_812_102(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_812_103(acc),
            [107, 105, 110, 103, 104, 111, 115, 116] => lookup_812_104(acc),
            [107, 110, 120, 45, 115, 101, 114, 118, 101, 114] => lookup_812_105(acc),
            [107, 114, 101, 108, 108, 105, 97, 110] => lookup_812_106(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_812_107(info, labels, acc)
            }
            [109, 101, 105, 110, 102, 111, 114, 117, 109] => lookup_812_108(acc),
            [109, 101, 109, 115, 101, 116] => lookup_812_109(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_812_110(acc),
            [109, 121, 97, 109, 97, 122, 101] => lookup_812_111(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_812_112(acc),
            [109, 121, 100, 105, 115, 115, 101, 110, 116] => lookup_812_113(acc),
            [109, 121, 101, 102, 102, 101, 99, 116] => lookup_812_114(acc),
            [109, 121, 102, 114, 105, 116, 122] => lookup_812_115(acc),
            [109, 121, 109, 101, 100, 105, 97, 112, 99] => lookup_812_116(acc),
            [109, 121, 112, 115, 120] => lookup_812_117(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_812_118(acc)
            }
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_812_119(acc),
            [110, 104, 108, 102, 97, 110] => lookup_812_120(acc),
            [110, 111, 45, 105, 112] => lookup_812_121(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_812_122(acc),
            [111, 102, 102, 105, 99, 101, 45, 111, 110, 45, 116, 104, 101] => lookup_812_123(acc),
            [111, 110, 97, 118, 115, 116, 97, 99, 107] => lookup_812_124(acc),
            [111, 118, 104] => lookup_812_125(info, labels, acc),
            [111, 119, 110, 105, 112] => lookup_812_126(acc),
            [112, 103, 97, 102, 97, 110] => lookup_812_127(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_812_128(acc),
            [112, 114, 105, 118, 97, 116, 105, 122, 101, 104, 101, 97, 108, 116, 104, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_812_129(acc)
            }
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_812_130(acc),
            [114, 101, 100, 105, 114, 101, 99, 116, 109, 101] => lookup_812_131(acc),
            [114, 101, 115, 101, 114, 118, 101, 45, 111, 110, 108, 105, 110, 101] => {
                lookup_812_132(acc)
            }
            [114, 117] => lookup_812_133(acc),
            [115, 97, 118, 101, 105, 110, 99, 108, 111, 117, 100] => {
                lookup_812_134(info, labels, acc)
            }
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_812_135(info, labels, acc),
            [115, 99, 104, 111, 107, 111, 107, 101, 107, 115] => lookup_812_136(acc),
            [115, 99, 114, 97, 112, 112, 101, 114, 45, 115, 105, 116, 101] => lookup_812_137(acc),
            [115, 101] => lookup_812_138(acc),
            [115, 101, 105, 100, 97, 116] => lookup_812_139(acc),
            [115, 101, 108, 102, 105, 112] => lookup_812_140(acc),
            [115, 101, 108, 108, 115, 45, 105, 116] => lookup_812_141(acc),
            [115, 101, 110, 115, 101, 101, 114, 105, 110, 103] => lookup_812_142(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_812_143(acc),
            [115, 101, 114, 118, 101, 98, 108, 111, 103] => lookup_812_144(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_812_145(acc),
            [115, 101, 114, 118, 101, 109, 105, 110, 101, 99, 114, 97, 102, 116] => {
                lookup_812_146(acc)
            }
            [115, 104, 111, 112, 115, 101, 108, 101, 99, 116] => lookup_812_147(acc),
            [115, 105, 116, 101, 108, 101, 97, 102] => lookup_812_148(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_812_149(acc),
            [115, 113, 117, 97, 114, 101, 115] => lookup_812_150(acc),
            [115, 114, 99, 102] => lookup_812_151(info, labels, acc),
            [115, 116, 97, 116, 105, 99, 45, 97, 99, 99, 101, 115, 115] => lookup_812_152(acc),
            [115, 117, 112, 97, 98, 97, 115, 101] => lookup_812_153(acc),
            [115, 121, 116, 101, 115] => lookup_812_154(acc),
            [116, 51, 108, 51, 112, 48, 114, 116] => lookup_812_155(acc),
            [116, 97, 105, 108, 115, 99, 97, 108, 101] => lookup_812_156(info, labels, acc),
            [116, 104, 114, 117, 104, 101, 114, 101] => lookup_812_157(acc),
            [116, 111, 114, 112, 114, 111, 106, 101, 99, 116] => lookup_812_158(labels, acc),
            [116, 114, 97, 102, 102, 105, 99, 109, 97, 110, 97, 103, 101, 114] => {
                lookup_812_159(acc)
            }
            [116, 115] => lookup_812_160(acc),
            [116, 115, 117, 107, 97, 101, 114, 117] => lookup_812_161(info, labels, acc),
            [116, 119, 109, 97, 105, 108] => lookup_812_162(acc),
            [117, 107] => lookup_812_163(acc),
            [117, 110, 105, 53] => lookup_812_164(acc),
            [118, 112, 110, 100, 110, 115] => lookup_812_165(acc),
            [118, 112, 115, 45, 104, 111, 115, 116] => lookup_812_166(labels, acc),
            [119, 101, 98, 104, 111, 112] => lookup_812_167(acc),
            [119, 105, 110, 100, 111, 119, 115] => lookup_812_168(info, labels, acc),
            [121, 97, 110, 100, 101, 120, 99, 108, 111, 117, 100] => lookup_812_169(labels, acc),
            [122, 97] => lookup_812_170(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_813() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_815_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_815_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_815_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108, 99, 101, 115] => lookup_815_0(info, labels, acc),
            [97, 114, 118, 111] => lookup_815_1(acc),
            [97, 122, 105, 109, 117, 116, 104] => lookup_815_2(acc),
            [99, 111] => lookup_815_3(acc),
            [116, 108, 111, 110] => lookup_815_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_816() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_818<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 105, 99, 101, 97, 98, 108, 101] => lookup_818_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_819() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_822<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_822_0(acc),
            [99, 111, 109] => lookup_822_1(acc),
            [102, 105, 114, 109] => lookup_822_2(acc),
            [105, 110, 102, 111] => lookup_822_3(acc),
            [110, 101, 116] => lookup_822_4(acc),
            [111, 116, 104, 101, 114] => lookup_822_5(acc),
            [112, 101, 114] => lookup_822_6(acc),
            [114, 101, 99] => lookup_822_7(acc),
            [115, 116, 111, 114, 101] => lookup_822_8(acc),
            [119, 101, 98] => lookup_822_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_823() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_824_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_824_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_824_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_824_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_824_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_824_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_824_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_824_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 108] => lookup_824_0(acc),
            [99, 111, 109] => lookup_824_1(labels, acc),
            [101, 100, 117] => lookup_824_2(acc),
            [102, 105, 114, 109] => lookup_824_3(acc),
            [103, 101, 110] => lookup_824_4(acc),
            [103, 111, 118] => lookup_824_5(acc),
            [105] => lookup_824_6(acc),
            [108, 116, 100] => lookup_824_7(acc),
            [109, 105, 108] => lookup_824_8(acc),
            [109, 111, 98, 105] => lookup_824_9(acc),
            [110, 97, 109, 101] => lookup_824_10(acc),
            [110, 101, 116] => lookup_824_11(acc),
            [110, 103, 111] => lookup_824_12(acc),
            [111, 114, 103] => lookup_824_13(acc),
            [115, 99, 104] => lookup_824_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_825() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_826() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_827_0(acc),
            [98, 105, 122] => lookup_827_1(acc),
            [99, 111] => lookup_827_2(acc),
            [99, 111, 109] => lookup_827_3(acc),
            [101, 100, 117] => lookup_827_4(acc),
            [103, 111, 98] => lookup_827_5(acc),
            [105, 110] => lookup_827_6(acc),
            [105, 110, 102, 111] => lookup_827_7(acc),
            [105, 110, 116] => lookup_827_8(acc),
            [109, 105, 108] => lookup_827_9(acc),
            [110, 101, 116] => lookup_827_10(acc),
            [110, 111, 109] => lookup_827_11(acc),
            [111, 114, 103] => lookup_827_12(acc),
            [119, 101, 98] => lookup_827_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_829() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_832() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_833() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_834_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_834_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_834_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_834_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_834_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_834_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_834_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_834_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_834_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_834_9_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_834_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_834_9_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_834<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 105, 116, 101] => lookup_834_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_834_1(acc),
            [99, 105, 115, 116, 114, 111, 110] => lookup_834_2(acc),
            [99, 111] => lookup_834_3(acc),
            [100, 101, 109, 111, 110] => lookup_834_4(acc),
            [103, 111, 118] => lookup_834_5(acc),
            [104, 111, 115, 116, 105, 110, 103, 45, 99, 108, 117, 115, 116, 101, 114] => {
                lookup_834_6(acc)
            }
            [107, 104, 112, 108, 97, 121] => lookup_834_7(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_834_8(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_834_9(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_835_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_835_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_835_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_85_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_85<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_85_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_87_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_87<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_835_87_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_835_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_154_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_154<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_154_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_222_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_222_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_222_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_222_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_222<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_835_222_0(acc),
            [118, 97, 108, 101, 114] => lookup_835_222_1(acc),
            [118, 195, 165, 108, 101, 114] => lookup_835_222_2(acc),
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_835_222_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_230_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_230<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_230_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_231_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_231<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_231_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_242_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_242<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_835_242_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_265_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_265<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_265_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_382_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_382_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_382<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114, 111, 121] => lookup_835_382_0(acc),
            [115, 97, 110, 100, 101] => lookup_835_382_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_389_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_389<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_389_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_835_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_398_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_398_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_398<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114, 195, 184, 121] => lookup_835_398_0(acc),
            [115, 97, 110, 100, 101] => lookup_835_398_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_417_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_417<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_417_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_423_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_423_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_423_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_423_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_423_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_423_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_423<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 111] => lookup_835_423_0(acc),
            [98, 195, 184] => lookup_835_423_1(acc),
            [104, 101, 114, 111, 121] => lookup_835_423_2(acc),
            [104, 101, 114, 195, 184, 121] => lookup_835_423_3(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_835_423_4(acc),
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_835_423_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_429_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_429<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_429_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_434(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_435_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_435<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_435_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_436(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_437_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_437<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_437_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_438(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_439(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_440(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_441(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_442(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_443(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_444(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_445(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_446(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_447(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_448_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_448<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_448_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_449(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_450(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_451(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_452_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_452<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [118, 97, 108, 101, 114] => lookup_835_452_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_453(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_454(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_455(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_456(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_457(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_458(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_459(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_460(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_461(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_462(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_463(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_464(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_465(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_466(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_467(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_468(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_469(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_470(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_471(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_472(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_473(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_474(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_475(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_476(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_477(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_478(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_479(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_480(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_481(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_482(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_483(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_484(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_485(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_486(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_487_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_487<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_487_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_488(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_489(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_490(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_491(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_492(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_493(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_494(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_495(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_496(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_497(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_498(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_499(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_500(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_501(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_502(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_503(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_504(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_505(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_506(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_507(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_508(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_509(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_510(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_511(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_512(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_513(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_514(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_515(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_516(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_517(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_518(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_519(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_520(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_521(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_522(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_523(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_524(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_525(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_526(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_527_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_527<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_527_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_528(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_529(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_530(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_531(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_532(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_533(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_534(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_535(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_536(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_537(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_538(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_539(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_540(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_541(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_542(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_543(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_544(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_545(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_546(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_547(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_548(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_549(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_550(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_551(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_552(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_553(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_554(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_555(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_556(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_557(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_558(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_559(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_560(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_561(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_562(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_563(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_564(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_565(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_566(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_567(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_568(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_569(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_570(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_571(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_572(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_573(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_574(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_575(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_576_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_576<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_576_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_577(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_578(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_579(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_580(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_581(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_582(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_583(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_584(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_585(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_586(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_587(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_588(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_589(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_590(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_591(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_592(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_593(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_594(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_595(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_596(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_597(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_598(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_599(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_600(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_601_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_601<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_601_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_602(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_603(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_604(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_605(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_606(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_607(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_608(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_609(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_610(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_611(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_612(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_613(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_614(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_615(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_616(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_617(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_618(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_619_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_619_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_619_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_619<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 111] => lookup_835_619_0(acc),
            [98, 195, 184] => lookup_835_619_1(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_835_619_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_620(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_621(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_622(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_623(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_624(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_625(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_626_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_626<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_626_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_627(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_628(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_629(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_630(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_631_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_631<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_631_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_632(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_633(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_634(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_635(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_636(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_637(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_638(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_639(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_640(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_641(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_642(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_643(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_644(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_645(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_646(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_647(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_648(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_649(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_650(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_651(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_652(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_653(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_654(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_655(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_656(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_657(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_658(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_659_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_659<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_659_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_660(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_661(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_662(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_663(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_664(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_665(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_666(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_667(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_668(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_669(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_670(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_671(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_672(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_673(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_674(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_675(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_676(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_677(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_678(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_679(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_680(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_681(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_682_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_682<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_835_682_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_683(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_684(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_685(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_686(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_687(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_688(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_689_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_689<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_835_689_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_690(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_691(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_692(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_693(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_694(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_695(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_696(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_697(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_698(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_699(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_700(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_701(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_702(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_703(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_704(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_705(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_706(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_707(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_708(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_709(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_710(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_711(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_712(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_713(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_714(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_715(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_716(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_717(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_718(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_719(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_720(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_721(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_722(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_723(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_724(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_725(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_726(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_727(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_728(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_729(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_730(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_731(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_732(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_733(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_734(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_735(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_736(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_737(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_738(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_739(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_740(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_741(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_742(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_743(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_744(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_745(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_746(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_747(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_748(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_749(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_750(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_751(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_752(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_753(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_754(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_755(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_756(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_757(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_758(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_759(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_760(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_761(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_762(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_763(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_764(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_765(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_766(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_767(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_768(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_769(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_770(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_771(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_772(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_773(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_774(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_775(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_776(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_777(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_778(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_779(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_780(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_781(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_782(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_783(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_784(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_785(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_786(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_787(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_788(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_789(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_790(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_791_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_791_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_791<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 22usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_835_791_0(acc),
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_835_791_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_792(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_793(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_794(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_795(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_796(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_797(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_798(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_799(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_800(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_801(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_802(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_803(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_804(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_805(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_806(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_807(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_808(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_809(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_810(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_811(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_812(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_813(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_814(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_815(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_816(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_817(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_818(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_819(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_820(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_821(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_822(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_823(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_824(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_825(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_826(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_827(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_828(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_829(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_830(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_831(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_832(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_833(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_834(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_835(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_836(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_837(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_838(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_839(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_840(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_841(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_842(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_843(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_844(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_845(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_846_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_846<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_835_846_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_847(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_848(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_849(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_850(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_851(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_852(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_853(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_854(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_855(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_856(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_857(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_858(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_859(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_860(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_861(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_862(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_863(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_864(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_865(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_866(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_867(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_868(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_869(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_870(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_871(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_872(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_873(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_874(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_875(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_876(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_877(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_878(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_879(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_880(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_881(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_882(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_883(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_884(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_885(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_886(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_887(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_888(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_889_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_889<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 195, 165, 108, 101, 114] => lookup_835_889_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835_890(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_891(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_892(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_893(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_894(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835_895(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_835<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 104, 106, 101, 109, 109, 101, 115, 105, 100, 101] => lookup_835_0(acc),
            [97, 97] => lookup_835_1(labels, acc),
            [97, 97, 114, 98, 111, 114, 116, 101] => lookup_835_2(acc),
            [97, 101, 106, 114, 105, 101] => lookup_835_3(acc),
            [97, 102, 106, 111, 114, 100] => lookup_835_4(acc),
            [97, 103, 100, 101, 110, 101, 115] => lookup_835_5(acc),
            [97, 104] => lookup_835_6(labels, acc),
            [97, 107, 101, 114, 115, 104, 117, 115] => lookup_835_7(info, labels, acc),
            [97, 107, 110, 111, 108, 117, 111, 107, 116, 97] => lookup_835_8(acc),
            [97, 107, 114, 101, 104, 97, 109, 110] => lookup_835_9(acc),
            [97, 108] => lookup_835_10(acc),
            [97, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_835_11(acc),
            [97, 108, 101, 115, 117, 110, 100] => lookup_835_12(acc),
            [97, 108, 103, 97, 114, 100] => lookup_835_13(acc),
            [97, 108, 115, 116, 97, 104, 97, 117, 103] => lookup_835_14(acc),
            [97, 108, 116, 97] => lookup_835_15(acc),
            [97, 108, 118, 100, 97, 108] => lookup_835_16(acc),
            [97, 109, 108, 105] => lookup_835_17(acc),
            [97, 109, 111, 116] => lookup_835_18(acc),
            [97, 110, 100, 97, 115, 117, 111, 108, 111] => lookup_835_19(acc),
            [97, 110, 100, 101, 98, 117] => lookup_835_20(acc),
            [97, 110, 100, 111, 121] => lookup_835_21(acc),
            [97, 110, 100, 195, 184, 121] => lookup_835_22(acc),
            [97, 114, 100, 97, 108] => lookup_835_23(acc),
            [97, 114, 101, 109, 97, 114, 107] => lookup_835_24(acc),
            [97, 114, 101, 110, 100, 97, 108] => lookup_835_25(acc),
            [97, 114, 110, 97] => lookup_835_26(acc),
            [97, 115, 101, 114, 97, 108] => lookup_835_27(acc),
            [97, 115, 107, 101, 114] => lookup_835_28(acc),
            [97, 115, 107, 105, 109] => lookup_835_29(acc),
            [97, 115, 107, 111, 121] => lookup_835_30(acc),
            [97, 115, 107, 118, 111, 108, 108] => lookup_835_31(acc),
            [97, 115, 107, 195, 184, 121] => lookup_835_32(acc),
            [97, 115, 110, 101, 115] => lookup_835_33(acc),
            [97, 117, 100, 110, 101, 100, 97, 108, 110] => lookup_835_34(acc),
            [97, 117, 107, 114, 97] => lookup_835_35(acc),
            [97, 117, 114, 101] => lookup_835_36(acc),
            [97, 117, 114, 108, 97, 110, 100] => lookup_835_37(acc),
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 111, 108, 97, 110, 100] => {
                lookup_835_38(acc)
            }
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 195, 184, 108, 97, 110, 100] => {
                lookup_835_39(acc)
            }
            [97, 117, 115, 116, 101, 118, 111, 108, 108] => lookup_835_40(acc),
            [97, 117, 115, 116, 114, 104, 101, 105, 109] => lookup_835_41(acc),
            [97, 118, 101, 114, 111, 121] => lookup_835_42(acc),
            [97, 118, 101, 114, 195, 184, 121] => lookup_835_43(acc),
            [98, 97, 100, 97, 100, 100, 106, 97] => lookup_835_44(acc),
            [98, 97, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_835_45(acc),
            [98, 97, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_835_46(acc),
            [98, 97, 105, 100, 97, 114] => lookup_835_47(acc),
            [98, 97, 106, 100, 100, 97, 114] => lookup_835_48(acc),
            [98, 97, 108, 97, 116] => lookup_835_49(acc),
            [98, 97, 108, 101, 115, 116, 114, 97, 110, 100] => lookup_835_50(acc),
            [98, 97, 108, 108, 97, 110, 103, 101, 110] => lookup_835_51(acc),
            [98, 97, 108, 115, 102, 106, 111, 114, 100] => lookup_835_52(acc),
            [98, 97, 109, 98, 108, 101] => lookup_835_53(acc),
            [98, 97, 114, 100, 117] => lookup_835_54(acc),
            [98, 97, 114, 117, 109] => lookup_835_55(acc),
            [98, 97, 116, 115, 102, 106, 111, 114, 100] => lookup_835_56(acc),
            [98, 101, 97, 114, 97, 108, 118, 97, 104, 107, 105] => lookup_835_57(acc),
            [98, 101, 97, 114, 97, 108, 118, 195, 161, 104, 107, 105] => lookup_835_58(acc),
            [98, 101, 97, 114, 100, 117] => lookup_835_59(acc),
            [98, 101, 105, 97, 114, 110] => lookup_835_60(acc),
            [98, 101, 114, 103] => lookup_835_61(acc),
            [98, 101, 114, 103, 101, 110] => lookup_835_62(acc),
            [98, 101, 114, 108, 101, 118, 97, 103] => lookup_835_63(acc),
            [98, 101, 114, 108, 101, 118, 195, 165, 103] => lookup_835_64(acc),
            [98, 105, 101, 118, 97, 116] => lookup_835_65(acc),
            [98, 105, 101, 118, 195, 161, 116] => lookup_835_66(acc),
            [98, 105, 110, 100, 97, 108] => lookup_835_67(acc),
            [98, 105, 114, 107, 101, 110, 101, 115] => lookup_835_68(acc),
            [98, 106, 97, 114, 107, 111, 121] => lookup_835_69(acc),
            [98, 106, 97, 114, 107, 195, 184, 121] => lookup_835_70(acc),
            [98, 106, 101, 114, 107, 114, 101, 105, 109] => lookup_835_71(acc),
            [98, 106, 117, 103, 110] => lookup_835_72(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_835_73(acc),
            [98, 111, 100, 111] => lookup_835_74(acc),
            [98, 111, 100, 195, 184] => lookup_835_75(acc),
            [98, 111, 107, 110] => lookup_835_76(acc),
            [98, 111, 109, 108, 111] => lookup_835_77(acc),
            [98, 114, 101, 109, 97, 110, 103, 101, 114] => lookup_835_78(acc),
            [98, 114, 111, 110, 110, 111, 121] => lookup_835_79(acc),
            [98, 114, 111, 110, 110, 111, 121, 115, 117, 110, 100] => lookup_835_80(acc),
            [98, 114, 117, 109, 117, 110, 100, 100, 97, 108] => lookup_835_81(acc),
            [98, 114, 121, 110, 101] => lookup_835_82(acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121] => lookup_835_83(acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121, 115, 117, 110, 100] => lookup_835_84(acc),
            [98, 117] => lookup_835_85(labels, acc),
            [98, 117, 100, 101, 106, 106, 117] => lookup_835_86(acc),
            [98, 117, 115, 107, 101, 114, 117, 100] => lookup_835_87(info, labels, acc),
            [98, 121, 103, 108, 97, 110, 100] => lookup_835_88(acc),
            [98, 121, 107, 108, 101] => lookup_835_89(acc),
            [98, 195, 161, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_835_90(acc),
            [98, 195, 161, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_835_91(acc),
            [98, 195, 161, 105, 100, 195, 161, 114] => lookup_835_92(acc),
            [98, 195, 161, 106, 100, 100, 97, 114] => lookup_835_93(acc),
            [98, 195, 161, 108, 195, 161, 116] => lookup_835_94(acc),
            [98, 195, 165, 100, 195, 165, 100, 100, 106, 195, 165] => lookup_835_95(acc),
            [98, 195, 165, 116, 115, 102, 106, 111, 114, 100] => lookup_835_96(acc),
            [98, 195, 166, 114, 117, 109] => lookup_835_97(acc),
            [98, 195, 184, 109, 108, 111] => lookup_835_98(acc),
            [99, 97, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_835_99(acc),
            [99, 111] => lookup_835_100(acc),
            [100, 97, 118, 118, 101, 110, 106, 97, 114, 103, 97] => lookup_835_101(acc),
            [100, 97, 118, 118, 101, 110, 106, 195, 161, 114, 103, 97] => lookup_835_102(acc),
            [100, 97, 118, 118, 101, 115, 105, 105, 100, 97] => lookup_835_103(acc),
            [100, 101, 97, 116, 110, 117] => lookup_835_104(acc),
            [100, 101, 112] => lookup_835_105(acc),
            [100, 105, 101, 108, 100, 100, 97, 110, 117, 111, 114, 114, 105] => lookup_835_106(acc),
            [100, 105, 118, 116, 97, 115, 118, 117, 111, 100, 110, 97] => lookup_835_107(acc),
            [100, 105, 118, 116, 116, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_835_108(acc),
            [100, 111, 110, 110, 97] => lookup_835_109(acc),
            [100, 111, 118, 114, 101] => lookup_835_110(acc),
            [100, 114, 97, 109, 109, 101, 110] => lookup_835_111(acc),
            [100, 114, 97, 110, 103, 101, 100, 97, 108] => lookup_835_112(acc),
            [100, 114, 111, 98, 97, 107] => lookup_835_113(acc),
            [100, 114, 195, 184, 98, 97, 107] => lookup_835_114(acc),
            [100, 121, 114, 111, 121] => lookup_835_115(acc),
            [100, 121, 114, 195, 184, 121] => lookup_835_116(acc),
            [100, 195, 184, 110, 110, 97] => lookup_835_117(acc),
            [101, 103, 101, 114, 115, 117, 110, 100] => lookup_835_118(acc),
            [101, 105, 100] => lookup_835_119(acc),
            [101, 105, 100, 102, 106, 111, 114, 100] => lookup_835_120(acc),
            [101, 105, 100, 115, 98, 101, 114, 103] => lookup_835_121(acc),
            [101, 105, 100, 115, 107, 111, 103] => lookup_835_122(acc),
            [101, 105, 100, 115, 118, 111, 108, 108] => lookup_835_123(acc),
            [101, 105, 103, 101, 114, 115, 117, 110, 100] => lookup_835_124(acc),
            [101, 108, 118, 101, 114, 117, 109] => lookup_835_125(acc),
            [101, 110, 101, 98, 97, 107, 107] => lookup_835_126(acc),
            [101, 110, 103, 101, 114, 100, 97, 108] => lookup_835_127(acc),
            [101, 116, 110, 101] => lookup_835_128(acc),
            [101, 116, 110, 101, 100, 97, 108] => lookup_835_129(acc),
            [101, 118, 101, 110, 97, 115, 115, 105] => lookup_835_130(acc),
            [101, 118, 101, 110, 101, 115] => lookup_835_131(acc),
            [101, 118, 101, 110, 195, 161, 197, 161, 197, 161, 105] => lookup_835_132(acc),
            [101, 118, 106, 101, 45, 111, 103, 45, 104, 111, 114, 110, 110, 101, 115] => {
                lookup_835_133(acc)
            }
            [102, 97, 114, 115, 117, 110, 100] => lookup_835_134(acc),
            [102, 97, 117, 115, 107, 101] => lookup_835_135(acc),
            [102, 101, 100, 106, 101] => lookup_835_136(acc),
            [102, 101, 116] => lookup_835_137(acc),
            [102, 101, 116, 115, 117, 110, 100] => lookup_835_138(acc),
            [102, 104, 115] => lookup_835_139(acc),
            [102, 105, 110, 110, 111, 121] => lookup_835_140(acc),
            [102, 105, 110, 110, 195, 184, 121] => lookup_835_141(acc),
            [102, 105, 116, 106, 97, 114] => lookup_835_142(acc),
            [102, 106, 97, 108, 101, 114] => lookup_835_143(acc),
            [102, 106, 101, 108, 108] => lookup_835_144(acc),
            [102, 108, 97] => lookup_835_145(acc),
            [102, 108, 97, 107, 115, 116, 97, 100] => lookup_835_146(acc),
            [102, 108, 97, 116, 97, 110, 103, 101, 114] => lookup_835_147(acc),
            [102, 108, 101, 107, 107, 101, 102, 106, 111, 114, 100] => lookup_835_148(acc),
            [102, 108, 101, 115, 98, 101, 114, 103] => lookup_835_149(acc),
            [102, 108, 111, 114, 97] => lookup_835_150(acc),
            [102, 108, 111, 114, 111] => lookup_835_151(acc),
            [102, 108, 111, 114, 195, 184] => lookup_835_152(acc),
            [102, 108, 195, 165] => lookup_835_153(acc),
            [102, 109] => lookup_835_154(labels, acc),
            [102, 111, 108, 107, 101, 98, 105, 98, 108] => lookup_835_155(acc),
            [102, 111, 108, 108, 100, 97, 108] => lookup_835_156(acc),
            [102, 111, 114, 100, 101] => lookup_835_157(acc),
            [102, 111, 114, 115, 97, 110, 100] => lookup_835_158(acc),
            [102, 111, 115, 110, 101, 115] => lookup_835_159(acc),
            [102, 114, 97, 110, 97] => lookup_835_160(acc),
            [102, 114, 101, 100, 114, 105, 107, 115, 116, 97, 100] => lookup_835_161(acc),
            [102, 114, 101, 105] => lookup_835_162(acc),
            [102, 114, 111, 103, 110] => lookup_835_163(acc),
            [102, 114, 111, 108, 97, 110, 100] => lookup_835_164(acc),
            [102, 114, 111, 115, 116, 97] => lookup_835_165(acc),
            [102, 114, 111, 121, 97] => lookup_835_166(acc),
            [102, 114, 195, 166, 110, 97] => lookup_835_167(acc),
            [102, 114, 195, 184, 121, 97] => lookup_835_168(acc),
            [102, 117, 111, 105, 115, 107, 117] => lookup_835_169(acc),
            [102, 117, 111, 115, 115, 107, 111] => lookup_835_170(acc),
            [102, 117, 115, 97] => lookup_835_171(acc),
            [102, 121, 108, 107, 101, 115, 98, 105, 98, 108] => lookup_835_172(acc),
            [102, 121, 114, 101, 115, 100, 97, 108] => lookup_835_173(acc),
            [102, 195, 184, 114, 100, 101] => lookup_835_174(acc),
            [103, 97, 105, 118, 117, 111, 116, 110, 97] => lookup_835_175(acc),
            [103, 97, 108, 115, 97] => lookup_835_176(acc),
            [103, 97, 109, 118, 105, 107] => lookup_835_177(acc),
            [103, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_835_178(acc),
            [103, 97, 117, 108, 97, 114] => lookup_835_179(acc),
            [103, 97, 117, 115, 100, 97, 108] => lookup_835_180(acc),
            [103, 105, 101, 104, 116, 97, 118, 117, 111, 97, 116, 110, 97] => lookup_835_181(acc),
            [103, 105, 108, 100, 101, 115, 107, 97, 108] => lookup_835_182(acc),
            [103, 105, 108, 100, 101, 115, 107, 195, 165, 108] => lookup_835_183(acc),
            [103, 105, 115, 107, 101] => lookup_835_184(acc),
            [103, 106, 101, 109, 110, 101, 115] => lookup_835_185(acc),
            [103, 106, 101, 114, 100, 114, 117, 109] => lookup_835_186(acc),
            [103, 106, 101, 114, 115, 116, 97, 100] => lookup_835_187(acc),
            [103, 106, 101, 115, 100, 97, 108] => lookup_835_188(acc),
            [103, 106, 111, 118, 105, 107] => lookup_835_189(acc),
            [103, 106, 195, 184, 118, 105, 107] => lookup_835_190(acc),
            [103, 108, 111, 112, 112, 101, 110] => lookup_835_191(acc),
            [103, 111, 108] => lookup_835_192(acc),
            [103, 114, 97, 110] => lookup_835_193(acc),
            [103, 114, 97, 110, 101] => lookup_835_194(acc),
            [103, 114, 97, 110, 118, 105, 110] => lookup_835_195(acc),
            [103, 114, 97, 116, 97, 110, 103, 101, 110] => lookup_835_196(acc),
            [103, 114, 105, 109, 115, 116, 97, 100] => lookup_835_197(acc),
            [103, 114, 111, 110, 103] => lookup_835_198(acc),
            [103, 114, 117, 101] => lookup_835_199(acc),
            [103, 117, 108, 101, 110] => lookup_835_200(acc),
            [103, 117, 111, 118, 100, 97, 103, 101, 97, 105, 100, 110, 117] => lookup_835_201(acc),
            [103, 195, 161, 105, 118, 117, 111, 116, 110, 97] => lookup_835_202(acc),
            [103, 195, 161, 108, 115, 195, 161] => lookup_835_203(acc),
            [103, 195, 161, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_835_204(acc),
            [104, 97] => lookup_835_205(acc),
            [104, 97, 98, 109, 101, 114] => lookup_835_206(acc),
            [104, 97, 100, 115, 101, 108] => lookup_835_207(acc),
            [104, 97, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_835_208(acc),
            [104, 97, 108, 100, 101, 110] => lookup_835_209(acc),
            [104, 97, 108, 115, 97] => lookup_835_210(acc),
            [104, 97, 109, 97, 114] => lookup_835_211(acc),
            [104, 97, 109, 97, 114, 111, 121] => lookup_835_212(acc),
            [104, 97, 109, 109, 97, 114, 102, 101, 97, 115, 116, 97] => lookup_835_213(acc),
            [104, 97, 109, 109, 101, 114, 102, 101, 115, 116] => lookup_835_214(acc),
            [104, 97, 112, 109, 105, 114] => lookup_835_215(acc),
            [104, 97, 114, 97, 109] => lookup_835_216(acc),
            [104, 97, 114, 101, 105, 100] => lookup_835_217(acc),
            [104, 97, 114, 115, 116, 97, 100] => lookup_835_218(acc),
            [104, 97, 115, 118, 105, 107] => lookup_835_219(acc),
            [104, 97, 116, 116, 102, 106, 101, 108, 108, 100, 97, 108] => lookup_835_220(acc),
            [104, 97, 117, 103, 101, 115, 117, 110, 100] => lookup_835_221(acc),
            [104, 101, 100, 109, 97, 114, 107] => lookup_835_222(info, labels, acc),
            [104, 101, 109, 110, 101] => lookup_835_223(acc),
            [104, 101, 109, 110, 101, 115] => lookup_835_224(acc),
            [104, 101, 109, 115, 101, 100, 97, 108] => lookup_835_225(acc),
            [104, 101, 114, 97, 100] => lookup_835_226(acc),
            [104, 105, 116, 114, 97] => lookup_835_227(acc),
            [104, 106, 97, 114, 116, 100, 97, 108] => lookup_835_228(acc),
            [104, 106, 101, 108, 109, 101, 108, 97, 110, 100] => lookup_835_229(acc),
            [104, 108] => lookup_835_230(labels, acc),
            [104, 109] => lookup_835_231(labels, acc),
            [104, 111, 98, 111, 108] => lookup_835_232(acc),
            [104, 111, 98, 195, 184, 108] => lookup_835_233(acc),
            [104, 111, 102] => lookup_835_234(acc),
            [104, 111, 107, 107, 115, 117, 110, 100] => lookup_835_235(acc),
            [104, 111, 108] => lookup_835_236(acc),
            [104, 111, 108, 101] => lookup_835_237(acc),
            [104, 111, 108, 109, 101, 115, 116, 114, 97, 110, 100] => lookup_835_238(acc),
            [104, 111, 108, 116, 97, 108, 101, 110] => lookup_835_239(acc),
            [104, 111, 108, 116, 195, 165, 108, 101, 110] => lookup_835_240(acc),
            [104, 111, 110, 101, 102, 111, 115, 115] => lookup_835_241(acc),
            [104, 111, 114, 100, 97, 108, 97, 110, 100] => lookup_835_242(info, labels, acc),
            [104, 111, 114, 110, 105, 110, 100, 97, 108] => lookup_835_243(acc),
            [104, 111, 114, 116, 101, 110] => lookup_835_244(acc),
            [104, 111, 121, 97, 110, 103, 101, 114] => lookup_835_245(acc),
            [104, 111, 121, 108, 97, 110, 100, 101, 116] => lookup_835_246(acc),
            [104, 117, 114, 100, 97, 108] => lookup_835_247(acc),
            [104, 117, 114, 117, 109] => lookup_835_248(acc),
            [104, 118, 97, 108, 101, 114] => lookup_835_249(acc),
            [104, 121, 108, 108, 101, 115, 116, 97, 100] => lookup_835_250(acc),
            [104, 195, 161, 98, 109, 101, 114] => lookup_835_251(acc),
            [104, 195, 161, 109, 109, 195, 161, 114, 102, 101, 97, 115, 116, 97] => {
                lookup_835_252(acc)
            }
            [104, 195, 161, 112, 109, 105, 114] => lookup_835_253(acc),
            [104, 195, 165] => lookup_835_254(acc),
            [104, 195, 166, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_835_255(acc),
            [104, 195, 184, 110, 101, 102, 111, 115, 115] => lookup_835_256(acc),
            [104, 195, 184, 121, 97, 110, 103, 101, 114] => lookup_835_257(acc),
            [104, 195, 184, 121, 108, 97, 110, 100, 101, 116] => lookup_835_258(acc),
            [105, 98, 101, 115, 116, 97, 100] => lookup_835_259(acc),
            [105, 100, 114, 101, 116, 116] => lookup_835_260(acc),
            [105, 110, 100, 101, 114, 111, 121] => lookup_835_261(acc),
            [105, 110, 100, 101, 114, 195, 184, 121] => lookup_835_262(acc),
            [105, 118, 101, 108, 97, 110, 100] => lookup_835_263(acc),
            [105, 118, 103, 117] => lookup_835_264(acc),
            [106, 97, 110, 45, 109, 97, 121, 101, 110] => lookup_835_265(labels, acc),
            [106, 101, 115, 115, 104, 101, 105, 109] => lookup_835_266(acc),
            [106, 101, 118, 110, 97, 107, 101, 114] => lookup_835_267(acc),
            [106, 111, 108, 115, 116, 101, 114] => lookup_835_268(acc),
            [106, 111, 110, 100, 97, 108] => lookup_835_269(acc),
            [106, 111, 114, 112, 101, 108, 97, 110, 100] => lookup_835_270(acc),
            [106, 195, 184, 108, 115, 116, 101, 114] => lookup_835_271(acc),
            [106, 195, 184, 114, 112, 101, 108, 97, 110, 100] => lookup_835_272(acc),
            [107, 97, 102, 106, 111, 114, 100] => lookup_835_273(acc),
            [107, 97, 114, 97, 115, 106, 111, 104, 107, 97] => lookup_835_274(acc),
            [107, 97, 114, 97, 115, 106, 111, 107] => lookup_835_275(acc),
            [107, 97, 114, 108, 115, 111, 121] => lookup_835_276(acc),
            [107, 97, 114, 109, 111, 121] => lookup_835_277(acc),
            [107, 97, 114, 109, 195, 184, 121] => lookup_835_278(acc),
            [107, 97, 117, 116, 111, 107, 101, 105, 110, 111] => lookup_835_279(acc),
            [107, 105, 114, 107, 101, 110, 101, 115] => lookup_835_280(acc),
            [107, 108, 97, 98, 117] => lookup_835_281(acc),
            [107, 108, 101, 112, 112] => lookup_835_282(acc),
            [107, 108, 195, 166, 98, 117] => lookup_835_283(acc),
            [107, 111, 109, 109, 117, 110, 101] => lookup_835_284(acc),
            [107, 111, 110, 103, 115, 98, 101, 114, 103] => lookup_835_285(acc),
            [107, 111, 110, 103, 115, 118, 105, 110, 103, 101, 114] => lookup_835_286(acc),
            [107, 111, 112, 101, 114, 118, 105, 107] => lookup_835_287(acc),
            [107, 114, 97, 97, 110, 103, 104, 107, 101] => lookup_835_288(acc),
            [107, 114, 97, 103, 101, 114, 111] => lookup_835_289(acc),
            [107, 114, 97, 103, 101, 114, 195, 184] => lookup_835_290(acc),
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 97, 110, 100] => lookup_835_291(acc),
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 117, 110, 100] => lookup_835_292(acc),
            [107, 114, 111, 100, 115, 104, 101, 114, 97, 100] => lookup_835_293(acc),
            [107, 114, 111, 107, 115, 116, 97, 100, 101, 108, 118, 97] => lookup_835_294(acc),
            [107, 114, 195, 165, 97, 110, 103, 104, 107, 101] => lookup_835_295(acc),
            [107, 114, 195, 184, 100, 115, 104, 101, 114, 97, 100] => lookup_835_296(acc),
            [107, 118, 97, 102, 106, 111, 114, 100] => lookup_835_297(acc),
            [107, 118, 97, 108, 115, 117, 110, 100] => lookup_835_298(acc),
            [107, 118, 97, 109] => lookup_835_299(acc),
            [107, 118, 97, 110, 97, 110, 103, 101, 110] => lookup_835_300(acc),
            [107, 118, 105, 110, 101, 115, 100, 97, 108] => lookup_835_301(acc),
            [107, 118, 105, 110, 110, 104, 101, 114, 97, 100] => lookup_835_302(acc),
            [107, 118, 105, 116, 101, 115, 101, 105, 100] => lookup_835_303(acc),
            [107, 118, 105, 116, 115, 111, 121] => lookup_835_304(acc),
            [107, 118, 105, 116, 115, 195, 184, 121] => lookup_835_305(acc),
            [107, 118, 195, 166, 102, 106, 111, 114, 100] => lookup_835_306(acc),
            [107, 118, 195, 166, 110, 97, 110, 103, 101, 110] => lookup_835_307(acc),
            [107, 195, 161, 114, 195, 161, 197, 161, 106, 111, 104, 107, 97] => lookup_835_308(acc),
            [107, 195, 165, 102, 106, 111, 114, 100] => lookup_835_309(acc),
            [108, 97, 97, 107, 101, 115, 118, 117, 101, 109, 105, 101] => lookup_835_310(acc),
            [108, 97, 104, 112, 112, 105] => lookup_835_311(acc),
            [108, 97, 110, 103, 101, 118, 97, 103] => lookup_835_312(acc),
            [108, 97, 110, 103, 101, 118, 195, 165, 103] => lookup_835_313(acc),
            [108, 97, 114, 100, 97, 108] => lookup_835_314(acc),
            [108, 97, 114, 118, 105, 107] => lookup_835_315(acc),
            [108, 97, 118, 97, 103, 105, 115] => lookup_835_316(acc),
            [108, 97, 118, 97, 110, 103, 101, 110] => lookup_835_317(acc),
            [108, 101, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_835_318(acc),
            [108, 101, 97, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_835_319(acc),
            [108, 101, 98, 101, 115, 98, 121] => lookup_835_320(acc),
            [108, 101, 105, 107, 97, 110, 103, 101, 114] => lookup_835_321(acc),
            [108, 101, 105, 114, 102, 106, 111, 114, 100] => lookup_835_322(acc),
            [108, 101, 105, 114, 118, 105, 107] => lookup_835_323(acc),
            [108, 101, 107, 97] => lookup_835_324(acc),
            [108, 101, 107, 115, 118, 105, 107] => lookup_835_325(acc),
            [108, 101, 110, 118, 105, 107] => lookup_835_326(acc),
            [108, 101, 114, 100, 97, 108] => lookup_835_327(acc),
            [108, 101, 115, 106, 97] => lookup_835_328(acc),
            [108, 101, 118, 97, 110, 103, 101, 114] => lookup_835_329(acc),
            [108, 105, 101, 114] => lookup_835_330(acc),
            [108, 105, 101, 114, 110, 101] => lookup_835_331(acc),
            [108, 105, 108, 108, 101, 104, 97, 109, 109, 101, 114] => lookup_835_332(acc),
            [108, 105, 108, 108, 101, 115, 97, 110, 100] => lookup_835_333(acc),
            [108, 105, 110, 100, 97, 115] => lookup_835_334(acc),
            [108, 105, 110, 100, 101, 115, 110, 101, 115] => lookup_835_335(acc),
            [108, 105, 110, 100, 195, 165, 115] => lookup_835_336(acc),
            [108, 111, 97, 98, 97, 116] => lookup_835_337(acc),
            [108, 111, 97, 98, 195, 161, 116] => lookup_835_338(acc),
            [108, 111, 100, 105, 110, 103, 101, 110] => lookup_835_339(acc),
            [108, 111, 109] => lookup_835_340(acc),
            [108, 111, 112, 112, 97] => lookup_835_341(acc),
            [108, 111, 114, 101, 110, 115, 107, 111, 103] => lookup_835_342(acc),
            [108, 111, 116, 101, 110] => lookup_835_343(acc),
            [108, 117, 110, 100] => lookup_835_344(acc),
            [108, 117, 110, 110, 101, 114] => lookup_835_345(acc),
            [108, 117, 114, 111, 121] => lookup_835_346(acc),
            [108, 117, 114, 195, 184, 121] => lookup_835_347(acc),
            [108, 117, 115, 116, 101, 114] => lookup_835_348(acc),
            [108, 121, 110, 103, 100, 97, 108] => lookup_835_349(acc),
            [108, 121, 110, 103, 101, 110] => lookup_835_350(acc),
            [108, 195, 161, 104, 112, 112, 105] => lookup_835_351(acc),
            [108, 195, 166, 114, 100, 97, 108] => lookup_835_352(acc),
            [108, 195, 184, 100, 105, 110, 103, 101, 110] => lookup_835_353(acc),
            [108, 195, 184, 114, 101, 110, 115, 107, 111, 103] => lookup_835_354(acc),
            [108, 195, 184, 116, 101, 110] => lookup_835_355(acc),
            [109, 97, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_835_356(acc),
            [109, 97, 108, 115, 101, 108, 118] => lookup_835_357(acc),
            [109, 97, 108, 118, 105, 107] => lookup_835_358(acc),
            [109, 97, 110, 100, 97, 108] => lookup_835_359(acc),
            [109, 97, 114, 107, 101, 114] => lookup_835_360(acc),
            [109, 97, 114, 110, 97, 114, 100, 97, 108] => lookup_835_361(acc),
            [109, 97, 115, 102, 106, 111, 114, 100, 101, 110] => lookup_835_362(acc),
            [109, 97, 115, 111, 121] => lookup_835_363(acc),
            [109, 97, 116, 116, 97, 45, 118, 97, 114, 106, 106, 97, 116] => lookup_835_364(acc),
            [109, 101, 108, 97, 110, 100] => lookup_835_365(acc),
            [109, 101, 108, 100, 97, 108] => lookup_835_366(acc),
            [109, 101, 108, 104, 117, 115] => lookup_835_367(acc),
            [109, 101, 108, 111, 121] => lookup_835_368(acc),
            [109, 101, 108, 195, 184, 121] => lookup_835_369(acc),
            [109, 101, 114, 97, 107, 101, 114] => lookup_835_370(acc),
            [109, 101, 114, 195, 165, 107, 101, 114] => lookup_835_371(acc),
            [109, 105, 100, 115, 117, 110, 100] => lookup_835_372(acc),
            [109, 105, 100, 116, 114, 101, 45, 103, 97, 117, 108, 100, 97, 108] => {
                lookup_835_373(acc)
            }
            [109, 105, 108] => lookup_835_374(acc),
            [109, 106, 111, 110, 100, 97, 108, 101, 110] => lookup_835_375(acc),
            [109, 106, 195, 184, 110, 100, 97, 108, 101, 110] => lookup_835_376(acc),
            [109, 111, 45, 105, 45, 114, 97, 110, 97] => lookup_835_377(acc),
            [109, 111, 97, 114, 101, 107, 101] => lookup_835_378(acc),
            [109, 111, 100, 97, 108, 101, 110] => lookup_835_379(acc),
            [109, 111, 100, 117, 109] => lookup_835_380(acc),
            [109, 111, 108, 100, 101] => lookup_835_381(acc),
            [109, 111, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_835_382(info, labels, acc)
            }
            [109, 111, 115, 106, 111, 101, 110] => lookup_835_383(acc),
            [109, 111, 115, 106, 195, 184, 101, 110] => lookup_835_384(acc),
            [109, 111, 115, 107, 101, 110, 101, 115] => lookup_835_385(acc),
            [109, 111, 115, 115] => lookup_835_386(acc),
            [109, 111, 115, 118, 105, 107] => lookup_835_387(acc),
            [109, 111, 195, 165, 114, 101, 107, 101] => lookup_835_388(acc),
            [109, 114] => lookup_835_389(labels, acc),
            [109, 117, 111, 115, 97, 116] => lookup_835_390(acc),
            [109, 117, 111, 115, 195, 161, 116] => lookup_835_391(acc),
            [109, 117, 115, 101, 117, 109] => lookup_835_392(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_835_393(acc),
            [109, 195, 161, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_835_394(acc),
            [109, 195, 161, 116, 116, 97, 45, 118, 195, 161, 114, 106, 106, 97, 116] => {
                lookup_835_395(acc)
            }
            [109, 195, 165, 108, 115, 101, 108, 118] => lookup_835_396(acc),
            [109, 195, 165, 115, 195, 184, 121] => lookup_835_397(acc),
            [109, 195, 184, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_835_398(info, labels, acc)
            }
            [110, 97, 97, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_835_399(acc)
            }
            [110, 97, 109, 100, 97, 108, 115, 101, 105, 100] => lookup_835_400(acc),
            [110, 97, 109, 115, 111, 115] => lookup_835_401(acc),
            [110, 97, 109, 115, 115, 107, 111, 103, 97, 110] => lookup_835_402(acc),
            [110, 97, 110, 110, 101, 115, 116, 97, 100] => lookup_835_403(acc),
            [110, 97, 114, 111, 121] => lookup_835_404(acc),
            [110, 97, 114, 118, 105, 105, 107, 97] => lookup_835_405(acc),
            [110, 97, 114, 118, 105, 107] => lookup_835_406(acc),
            [110, 97, 117, 115, 116, 100, 97, 108] => lookup_835_407(acc),
            [110, 97, 118, 117, 111, 116, 110, 97] => lookup_835_408(acc),
            [110, 101, 100, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_835_409(acc),
            [110, 101, 115, 110, 97] => lookup_835_410(acc),
            [110, 101, 115, 111, 100, 100, 101, 110] => lookup_835_411(acc),
            [110, 101, 115, 111, 100, 100, 116, 97, 110, 103, 101, 110] => lookup_835_412(acc),
            [110, 101, 115, 115, 101, 98, 121] => lookup_835_413(acc),
            [110, 101, 115, 115, 101, 116] => lookup_835_414(acc),
            [110, 105, 115, 115, 101, 100, 97, 108] => lookup_835_415(acc),
            [110, 105, 116, 116, 101, 100, 97, 108] => lookup_835_416(acc),
            [110, 108] => lookup_835_417(labels, acc),
            [110, 111, 114, 100, 45, 97, 117, 114, 100, 97, 108] => lookup_835_418(acc),
            [110, 111, 114, 100, 45, 102, 114, 111, 110] => lookup_835_419(acc),
            [110, 111, 114, 100, 45, 111, 100, 97, 108] => lookup_835_420(acc),
            [110, 111, 114, 100, 100, 97, 108] => lookup_835_421(acc),
            [110, 111, 114, 100, 107, 97, 112, 112] => lookup_835_422(acc),
            [110, 111, 114, 100, 108, 97, 110, 100] => lookup_835_423(info, labels, acc),
            [110, 111, 114, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_835_424(acc),
            [110, 111, 114, 100, 114, 101, 105, 115, 97] => lookup_835_425(acc),
            [110, 111, 114, 101, 45, 111, 103, 45, 117, 118, 100, 97, 108] => lookup_835_426(acc),
            [110, 111, 116, 111, 100, 100, 101, 110] => lookup_835_427(acc),
            [110, 111, 116, 116, 101, 114, 111, 121] => lookup_835_428(acc),
            [110, 116] => lookup_835_429(labels, acc),
            [110, 195, 161, 118, 117, 111, 116, 110, 97] => lookup_835_430(acc),
            [110, 195, 165, 195, 165, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_835_431(acc)
            }
            [110, 195, 166, 114, 195, 184, 121] => lookup_835_432(acc),
            [110, 195, 184, 116, 116, 101, 114, 195, 184, 121] => lookup_835_433(acc),
            [111, 100, 100, 97] => lookup_835_434(acc),
            [111, 102] => lookup_835_435(labels, acc),
            [111, 107, 115, 110, 101, 115] => lookup_835_436(acc),
            [111, 108] => lookup_835_437(labels, acc),
            [111, 109, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_835_438(acc),
            [111, 112, 112, 100, 97, 108] => lookup_835_439(acc),
            [111, 112, 112, 101, 103, 97, 114, 100] => lookup_835_440(acc),
            [111, 112, 112, 101, 103, 195, 165, 114, 100] => lookup_835_441(acc),
            [111, 114, 107, 97, 110, 103, 101, 114] => lookup_835_442(acc),
            [111, 114, 107, 100, 97, 108] => lookup_835_443(acc),
            [111, 114, 108, 97, 110, 100] => lookup_835_444(acc),
            [111, 114, 115, 107, 111, 103] => lookup_835_445(acc),
            [111, 114, 115, 116, 97] => lookup_835_446(acc),
            [111, 115, 101, 110] => lookup_835_447(acc),
            [111, 115, 108, 111] => lookup_835_448(labels, acc),
            [111, 115, 111, 121, 114, 111] => lookup_835_449(acc),
            [111, 115, 116, 101, 114, 111, 121] => lookup_835_450(acc),
            [111, 115, 116, 101, 114, 195, 184, 121] => lookup_835_451(acc),
            [111, 115, 116, 102, 111, 108, 100] => lookup_835_452(info, labels, acc),
            [111, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_835_453(acc),
            [111, 115, 195, 184, 121, 114, 111] => lookup_835_454(acc),
            [111, 118, 101, 114, 104, 97, 108, 108, 97] => lookup_835_455(acc),
            [111, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_835_456(acc),
            [111, 121, 101, 114] => lookup_835_457(acc),
            [111, 121, 103, 97, 114, 100, 101, 110] => lookup_835_458(acc),
            [111, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => lookup_835_459(acc),
            [112, 111, 114, 115, 97, 110, 103, 101, 114] => lookup_835_460(acc),
            [112, 111, 114, 115, 97, 110, 103, 117] => lookup_835_461(acc),
            [112, 111, 114, 115, 103, 114, 117, 110, 110] => lookup_835_462(acc),
            [112, 111, 114, 115, 195, 161, 197, 139, 103, 117] => lookup_835_463(acc),
            [112, 114, 105, 118] => lookup_835_464(acc),
            [114, 97, 100, 101] => lookup_835_465(acc),
            [114, 97, 100, 111, 121] => lookup_835_466(acc),
            [114, 97, 100, 195, 184, 121] => lookup_835_467(acc),
            [114, 97, 104, 107, 107, 101, 114, 97, 118, 106, 117] => lookup_835_468(acc),
            [114, 97, 104, 111, 108, 116] => lookup_835_469(acc),
            [114, 97, 105, 115, 97] => lookup_835_470(acc),
            [114, 97, 107, 107, 101, 115, 116, 97, 100] => lookup_835_471(acc),
            [114, 97, 108, 105, 110, 103, 101, 110] => lookup_835_472(acc),
            [114, 97, 110, 97] => lookup_835_473(acc),
            [114, 97, 110, 100, 97, 98, 101, 114, 103] => lookup_835_474(acc),
            [114, 97, 117, 109, 97] => lookup_835_475(acc),
            [114, 101, 110, 100, 97, 108, 101, 110] => lookup_835_476(acc),
            [114, 101, 110, 110, 101, 98, 117] => lookup_835_477(acc),
            [114, 101, 110, 110, 101, 115, 111, 121] => lookup_835_478(acc),
            [114, 101, 110, 110, 101, 115, 195, 184, 121] => lookup_835_479(acc),
            [114, 105, 110, 100, 97, 108] => lookup_835_480(acc),
            [114, 105, 110, 103, 101, 98, 117] => lookup_835_481(acc),
            [114, 105, 110, 103, 101, 114, 105, 107, 101] => lookup_835_482(acc),
            [114, 105, 110, 103, 115, 97, 107, 101, 114] => lookup_835_483(acc),
            [114, 105, 115, 111, 114] => lookup_835_484(acc),
            [114, 105, 115, 115, 97] => lookup_835_485(acc),
            [114, 105, 115, 195, 184, 114] => lookup_835_486(acc),
            [114, 108] => lookup_835_487(labels, acc),
            [114, 111, 97, 110] => lookup_835_488(acc),
            [114, 111, 100, 111, 121] => lookup_835_489(acc),
            [114, 111, 108, 108, 97, 103] => lookup_835_490(acc),
            [114, 111, 109, 115, 97] => lookup_835_491(acc),
            [114, 111, 109, 115, 107, 111, 103] => lookup_835_492(acc),
            [114, 111, 114, 111, 115] => lookup_835_493(acc),
            [114, 111, 115, 116] => lookup_835_494(acc),
            [114, 111, 121, 107, 101, 110] => lookup_835_495(acc),
            [114, 111, 121, 114, 118, 105, 107] => lookup_835_496(acc),
            [114, 117, 111, 118, 97, 116] => lookup_835_497(acc),
            [114, 121, 103, 103, 101] => lookup_835_498(acc),
            [114, 195, 161, 104, 107, 107, 101, 114, 195, 161, 118, 106, 117] => {
                lookup_835_499(acc)
            }
            [114, 195, 161, 105, 115, 97] => lookup_835_500(acc),
            [114, 195, 165, 100, 101] => lookup_835_501(acc),
            [114, 195, 165, 104, 111, 108, 116] => lookup_835_502(acc),
            [114, 195, 166, 108, 105, 110, 103, 101, 110] => lookup_835_503(acc),
            [114, 195, 184, 100, 195, 184, 121] => lookup_835_504(acc),
            [114, 195, 184, 109, 115, 107, 111, 103] => lookup_835_505(acc),
            [114, 195, 184, 114, 111, 115] => lookup_835_506(acc),
            [114, 195, 184, 115, 116] => lookup_835_507(acc),
            [114, 195, 184, 121, 107, 101, 110] => lookup_835_508(acc),
            [114, 195, 184, 121, 114, 118, 105, 107] => lookup_835_509(acc),
            [115, 97, 108, 97, 110, 103, 101, 110] => lookup_835_510(acc),
            [115, 97, 108, 97, 116] => lookup_835_511(acc),
            [115, 97, 108, 116, 100, 97, 108] => lookup_835_512(acc),
            [115, 97, 109, 110, 97, 110, 103, 101, 114] => lookup_835_513(acc),
            [115, 97, 110, 100, 101, 102, 106, 111, 114, 100] => lookup_835_514(acc),
            [115, 97, 110, 100, 110, 101, 115] => lookup_835_515(acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 111, 101, 110] => lookup_835_516(acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 195, 184, 101, 110] => lookup_835_517(acc),
            [115, 97, 110, 100, 111, 121] => lookup_835_518(acc),
            [115, 97, 110, 100, 195, 184, 121] => lookup_835_519(acc),
            [115, 97, 114, 112, 115, 98, 111, 114, 103] => lookup_835_520(acc),
            [115, 97, 117, 100, 97] => lookup_835_521(acc),
            [115, 97, 117, 104, 101, 114, 97, 100] => lookup_835_522(acc),
            [115, 101, 108] => lookup_835_523(acc),
            [115, 101, 108, 98, 117] => lookup_835_524(acc),
            [115, 101, 108, 106, 101] => lookup_835_525(acc),
            [115, 101, 108, 106, 111, 114, 100] => lookup_835_526(acc),
            [115, 102] => lookup_835_527(labels, acc),
            [115, 105, 101, 108, 108, 97, 107] => lookup_835_528(acc),
            [115, 105, 103, 100, 97, 108] => lookup_835_529(acc),
            [115, 105, 108, 106, 97, 110] => lookup_835_530(acc),
            [115, 105, 114, 100, 97, 108] => lookup_835_531(acc),
            [115, 107, 97, 110, 105, 116] => lookup_835_532(acc),
            [115, 107, 97, 110, 108, 97, 110, 100] => lookup_835_533(acc),
            [115, 107, 97, 117, 110] => lookup_835_534(acc),
            [115, 107, 101, 100, 115, 109, 111] => lookup_835_535(acc),
            [115, 107, 101, 100, 115, 109, 111, 107, 111, 114, 115, 101, 116] => {
                lookup_835_536(acc)
            }
            [115, 107, 105] => lookup_835_537(acc),
            [115, 107, 105, 101, 110] => lookup_835_538(acc),
            [115, 107, 105, 101, 114, 118, 97] => lookup_835_539(acc),
            [115, 107, 105, 101, 114, 118, 195, 161] => lookup_835_540(acc),
            [115, 107, 105, 112, 116, 118, 101, 116] => lookup_835_541(acc),
            [115, 107, 106, 97, 107] => lookup_835_542(acc),
            [115, 107, 106, 101, 114, 118, 111, 121] => lookup_835_543(acc),
            [115, 107, 106, 101, 114, 118, 195, 184, 121] => lookup_835_544(acc),
            [115, 107, 106, 195, 165, 107] => lookup_835_545(acc),
            [115, 107, 111, 100, 106, 101] => lookup_835_546(acc),
            [115, 107, 195, 161, 110, 105, 116] => lookup_835_547(acc),
            [115, 107, 195, 165, 110, 108, 97, 110, 100] => lookup_835_548(acc),
            [115, 108, 97, 116, 116, 117, 109] => lookup_835_549(acc),
            [115, 109, 111, 108, 97] => lookup_835_550(acc),
            [115, 109, 195, 184, 108, 97] => lookup_835_551(acc),
            [115, 110, 97, 97, 115, 101] => lookup_835_552(acc),
            [115, 110, 97, 115, 97] => lookup_835_553(acc),
            [115, 110, 105, 108, 108, 102, 106, 111, 114, 100] => lookup_835_554(acc),
            [115, 110, 111, 97, 115, 97] => lookup_835_555(acc),
            [115, 110, 195, 165, 97, 115, 101] => lookup_835_556(acc),
            [115, 110, 195, 165, 115, 97] => lookup_835_557(acc),
            [115, 111, 103, 110, 100, 97, 108] => lookup_835_558(acc),
            [115, 111, 103, 110, 101] => lookup_835_559(acc),
            [115, 111, 107, 110, 100, 97, 108] => lookup_835_560(acc),
            [115, 111, 108, 97] => lookup_835_561(acc),
            [115, 111, 108, 117, 110, 100] => lookup_835_562(acc),
            [115, 111, 109, 110, 97] => lookup_835_563(acc),
            [115, 111, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_835_564(acc),
            [115, 111, 110, 103, 100, 97, 108, 101, 110] => lookup_835_565(acc),
            [115, 111, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_835_566(acc),
            [115, 111, 114, 45, 102, 114, 111, 110] => lookup_835_567(acc),
            [115, 111, 114, 45, 111, 100, 97, 108] => lookup_835_568(acc),
            [115, 111, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_835_569(acc),
            [115, 111, 114, 102, 111, 108, 100] => lookup_835_570(acc),
            [115, 111, 114, 114, 101, 105, 115, 97] => lookup_835_571(acc),
            [115, 111, 114, 116, 108, 97, 110, 100] => lookup_835_572(acc),
            [115, 111, 114, 117, 109] => lookup_835_573(acc),
            [115, 112, 106, 101, 108, 107, 97, 118, 105, 107] => lookup_835_574(acc),
            [115, 112, 121, 100, 101, 98, 101, 114, 103] => lookup_835_575(acc),
            [115, 116] => lookup_835_576(labels, acc),
            [115, 116, 97, 110, 103, 101] => lookup_835_577(acc),
            [115, 116, 97, 116] => lookup_835_578(acc),
            [115, 116, 97, 116, 104, 101, 108, 108, 101] => lookup_835_579(acc),
            [115, 116, 97, 118, 97, 110, 103, 101, 114] => lookup_835_580(acc),
            [115, 116, 97, 118, 101, 114, 110] => lookup_835_581(acc),
            [115, 116, 101, 105, 103, 101, 110] => lookup_835_582(acc),
            [115, 116, 101, 105, 110, 107, 106, 101, 114] => lookup_835_583(acc),
            [115, 116, 106, 111, 114, 100, 97, 108] => lookup_835_584(acc),
            [115, 116, 106, 111, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_835_585(acc)
            }
            [115, 116, 106, 195, 184, 114, 100, 97, 108] => lookup_835_586(acc),
            [115, 116, 106, 195, 184, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_835_587(acc)
            }
            [115, 116, 111, 107, 107, 101] => lookup_835_588(acc),
            [115, 116, 111, 114, 45, 101, 108, 118, 100, 97, 108] => lookup_835_589(acc),
            [115, 116, 111, 114, 100] => lookup_835_590(acc),
            [115, 116, 111, 114, 100, 97, 108] => lookup_835_591(acc),
            [115, 116, 111, 114, 102, 106, 111, 114, 100] => lookup_835_592(acc),
            [115, 116, 114, 97, 110, 100] => lookup_835_593(acc),
            [115, 116, 114, 97, 110, 100, 97] => lookup_835_594(acc),
            [115, 116, 114, 121, 110] => lookup_835_595(acc),
            [115, 117, 108, 97] => lookup_835_596(acc),
            [115, 117, 108, 100, 97, 108] => lookup_835_597(acc),
            [115, 117, 110, 100] => lookup_835_598(acc),
            [115, 117, 110, 110, 100, 97, 108] => lookup_835_599(acc),
            [115, 117, 114, 110, 97, 100, 97, 108] => lookup_835_600(acc),
            [115, 118, 97, 108, 98, 97, 114, 100] => lookup_835_601(labels, acc),
            [115, 118, 101, 105, 111] => lookup_835_602(acc),
            [115, 118, 101, 108, 118, 105, 107] => lookup_835_603(acc),
            [115, 121, 107, 107, 121, 108, 118, 101, 110] => lookup_835_604(acc),
            [115, 195, 161, 108, 97, 116] => lookup_835_605(acc),
            [115, 195, 161, 108, 195, 161, 116] => lookup_835_606(acc),
            [115, 195, 184, 103, 110, 101] => lookup_835_607(acc),
            [115, 195, 184, 109, 110, 97] => lookup_835_608(acc),
            [115, 195, 184, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_835_609(acc),
            [115, 195, 184, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_835_610(acc),
            [115, 195, 184, 114, 45, 102, 114, 111, 110] => lookup_835_611(acc),
            [115, 195, 184, 114, 45, 111, 100, 97, 108] => lookup_835_612(acc),
            [115, 195, 184, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_835_613(acc),
            [115, 195, 184, 114, 102, 111, 108, 100] => lookup_835_614(acc),
            [115, 195, 184, 114, 114, 101, 105, 115, 97] => lookup_835_615(acc),
            [115, 195, 184, 114, 117, 109] => lookup_835_616(acc),
            [116, 97, 110, 97] => lookup_835_617(acc),
            [116, 97, 110, 97, 110, 103, 101, 114] => lookup_835_618(acc),
            [116, 101, 108, 101, 109, 97, 114, 107] => lookup_835_619(info, labels, acc),
            [116, 105, 109, 101] => lookup_835_620(acc),
            [116, 105, 110, 103, 118, 111, 108, 108] => lookup_835_621(acc),
            [116, 105, 110, 110] => lookup_835_622(acc),
            [116, 106, 101, 108, 100, 115, 117, 110, 100] => lookup_835_623(acc),
            [116, 106, 111, 109, 101] => lookup_835_624(acc),
            [116, 106, 195, 184, 109, 101] => lookup_835_625(acc),
            [116, 109] => lookup_835_626(labels, acc),
            [116, 111, 107, 107, 101] => lookup_835_627(acc),
            [116, 111, 108, 103, 97] => lookup_835_628(acc),
            [116, 111, 110, 115, 98, 101, 114, 103] => lookup_835_629(acc),
            [116, 111, 114, 115, 107, 101, 110] => lookup_835_630(acc),
            [116, 114] => lookup_835_631(labels, acc),
            [116, 114, 97, 110, 97] => lookup_835_632(acc),
            [116, 114, 97, 110, 98, 121] => lookup_835_633(acc),
            [116, 114, 97, 110, 111, 121] => lookup_835_634(acc),
            [116, 114, 97, 110, 195, 184, 121] => lookup_835_635(acc),
            [116, 114, 111, 97, 110, 100, 105, 110] => lookup_835_636(acc),
            [116, 114, 111, 103, 115, 116, 97, 100] => lookup_835_637(acc),
            [116, 114, 111, 109, 115, 97] => lookup_835_638(acc),
            [116, 114, 111, 109, 115, 111] => lookup_835_639(acc),
            [116, 114, 111, 109, 115, 195, 184] => lookup_835_640(acc),
            [116, 114, 111, 110, 100, 104, 101, 105, 109] => lookup_835_641(acc),
            [116, 114, 121, 115, 105, 108] => lookup_835_642(acc),
            [116, 114, 195, 166, 110, 97] => lookup_835_643(acc),
            [116, 114, 195, 184, 103, 115, 116, 97, 100] => lookup_835_644(acc),
            [116, 118, 101, 100, 101, 115, 116, 114, 97, 110, 100] => lookup_835_645(acc),
            [116, 121, 100, 97, 108] => lookup_835_646(acc),
            [116, 121, 110, 115, 101, 116] => lookup_835_647(acc),
            [116, 121, 115, 102, 106, 111, 114, 100] => lookup_835_648(acc),
            [116, 121, 115, 110, 101, 115] => lookup_835_649(acc),
            [116, 121, 115, 118, 97, 114] => lookup_835_650(acc),
            [116, 121, 115, 118, 195, 166, 114] => lookup_835_651(acc),
            [116, 195, 184, 110, 115, 98, 101, 114, 103] => lookup_835_652(acc),
            [117, 108, 108, 101, 110, 115, 97, 107, 101, 114] => lookup_835_653(acc),
            [117, 108, 108, 101, 110, 115, 118, 97, 110, 103] => lookup_835_654(acc),
            [117, 108, 118, 105, 107] => lookup_835_655(acc),
            [117, 110, 106, 97, 114, 103, 97] => lookup_835_656(acc),
            [117, 110, 106, 195, 161, 114, 103, 97] => lookup_835_657(acc),
            [117, 116, 115, 105, 114, 97] => lookup_835_658(acc),
            [118, 97] => lookup_835_659(labels, acc),
            [118, 97, 97, 112, 115, 116, 101] => lookup_835_660(acc),
            [118, 97, 100, 115, 111] => lookup_835_661(acc),
            [118, 97, 100, 115, 195, 184] => lookup_835_662(acc),
            [118, 97, 103, 97] => lookup_835_663(acc),
            [118, 97, 103, 97, 110] => lookup_835_664(acc),
            [118, 97, 103, 115, 111, 121] => lookup_835_665(acc),
            [118, 97, 107, 115, 100, 97, 108] => lookup_835_666(acc),
            [118, 97, 108, 108, 101] => lookup_835_667(acc),
            [118, 97, 110, 103] => lookup_835_668(acc),
            [118, 97, 110, 121, 108, 118, 101, 110] => lookup_835_669(acc),
            [118, 97, 114, 100, 111] => lookup_835_670(acc),
            [118, 97, 114, 100, 195, 184] => lookup_835_671(acc),
            [118, 97, 114, 103, 103, 97, 116] => lookup_835_672(acc),
            [118, 97, 114, 111, 121] => lookup_835_673(acc),
            [118, 101, 102, 115, 110] => lookup_835_674(acc),
            [118, 101, 103, 97] => lookup_835_675(acc),
            [118, 101, 103, 97, 114, 115, 104, 101, 105] => lookup_835_676(acc),
            [118, 101, 103, 195, 165, 114, 115, 104, 101, 105] => lookup_835_677(acc),
            [118, 101, 110, 110, 101, 115, 108, 97] => lookup_835_678(acc),
            [118, 101, 114, 100, 97, 108] => lookup_835_679(acc),
            [118, 101, 114, 114, 97, 110] => lookup_835_680(acc),
            [118, 101, 115, 116, 98, 121] => lookup_835_681(acc),
            [118, 101, 115, 116, 102, 111, 108, 100] => lookup_835_682(info, labels, acc),
            [118, 101, 115, 116, 110, 101, 115] => lookup_835_683(acc),
            [118, 101, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => lookup_835_684(acc),
            [118, 101, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_835_685(acc),
            [118, 101, 115, 116, 118, 97, 103, 111, 121] => lookup_835_686(acc),
            [118, 101, 115, 116, 118, 195, 165, 103, 195, 184, 121] => lookup_835_687(acc),
            [118, 101, 118, 101, 108, 115, 116, 97, 100] => lookup_835_688(acc),
            [118, 102] => lookup_835_689(labels, acc),
            [118, 103, 115] => lookup_835_690(acc),
            [118, 105, 107] => lookup_835_691(acc),
            [118, 105, 107, 110, 97] => lookup_835_692(acc),
            [118, 105, 110, 100, 97, 102, 106, 111, 114, 100] => lookup_835_693(acc),
            [118, 111, 97, 103, 97, 116] => lookup_835_694(acc),
            [118, 111, 108, 100, 97] => lookup_835_695(acc),
            [118, 111, 115, 115] => lookup_835_696(acc),
            [118, 111, 115, 115, 101, 118, 97, 110, 103, 101, 110] => lookup_835_697(acc),
            [118, 195, 161, 114, 103, 103, 195, 161, 116] => lookup_835_698(acc),
            [118, 195, 165, 103, 97, 110] => lookup_835_699(acc),
            [118, 195, 165, 103, 115, 195, 184, 121] => lookup_835_700(acc),
            [118, 195, 165, 103, 195, 165] => lookup_835_701(acc),
            [118, 195, 166, 114, 195, 184, 121] => lookup_835_702(acc),
            [120, 110, 45, 45, 97, 110, 100, 121, 45, 105, 114, 97] => lookup_835_703(acc),
            [120, 110, 45, 45, 97, 115, 107, 121, 45, 105, 114, 97] => lookup_835_704(acc),
            [120, 110, 45, 45, 97, 117, 114, 115, 107, 111, 103, 45, 104, 108, 97, 110, 100, 45, 106, 110, 98] => {
                lookup_835_705(acc)
            }
            [120, 110, 45, 45, 97, 118, 101, 114, 121, 45, 121, 117, 97] => lookup_835_706(acc),
            [120, 110, 45, 45, 98, 100, 100, 100, 106, 45, 109, 114, 97, 98, 100] => {
                lookup_835_707(acc)
            }
            [120, 110, 45, 45, 98, 101, 97, 114, 97, 108, 118, 104, 107, 105, 45, 121, 52, 97] => {
                lookup_835_708(acc)
            }
            [120, 110, 45, 45, 98, 101, 114, 108, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_835_709(acc)
            }
            [120, 110, 45, 45, 98, 104, 99, 97, 118, 117, 111, 116, 110, 97, 45, 115, 52, 97] => {
                lookup_835_710(acc)
            }
            [120, 110, 45, 45, 98, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97, 45, 107, 55, 97] => {
                lookup_835_711(acc)
            }
            [120, 110, 45, 45, 98, 105, 100, 114, 45, 53, 110, 97, 99] => lookup_835_712(acc),
            [120, 110, 45, 45, 98, 105, 101, 118, 116, 45, 48, 113, 97] => lookup_835_713(acc),
            [120, 110, 45, 45, 98, 106, 97, 114, 107, 121, 45, 102, 121, 97] => lookup_835_714(acc),
            [120, 110, 45, 45, 98, 106, 100, 100, 97, 114, 45, 112, 116, 97] => lookup_835_715(acc),
            [120, 110, 45, 45, 98, 108, 116, 45, 101, 108, 97, 98] => lookup_835_716(acc),
            [120, 110, 45, 45, 98, 109, 108, 111, 45, 103, 114, 97] => lookup_835_717(acc),
            [120, 110, 45, 45, 98, 111, 100, 45, 50, 110, 97] => lookup_835_718(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 45, 119, 117, 97, 99] => lookup_835_719(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 115, 117, 110, 100, 45, 109, 56, 97, 99] => {
                lookup_835_720(acc)
            }
            [120, 110, 45, 45, 98, 114, 117, 109, 45, 118, 111, 97] => lookup_835_721(acc),
            [120, 110, 45, 45, 98, 116, 115, 102, 106, 111, 114, 100, 45, 57, 122, 97] => {
                lookup_835_722(acc)
            }
            [120, 110, 45, 45, 100, 97, 118, 118, 101, 110, 106, 114, 103, 97, 45, 121, 52, 97] => {
                lookup_835_723(acc)
            }
            [120, 110, 45, 45, 100, 110, 110, 97, 45, 103, 114, 97] => lookup_835_724(acc),
            [120, 110, 45, 45, 100, 114, 98, 97, 107, 45, 119, 117, 97] => lookup_835_725(acc),
            [120, 110, 45, 45, 100, 121, 114, 121, 45, 105, 114, 97] => lookup_835_726(acc),
            [120, 110, 45, 45, 101, 118, 101, 110, 105, 45, 48, 113, 97, 48, 49, 103, 97] => {
                lookup_835_727(acc)
            }
            [120, 110, 45, 45, 102, 105, 110, 110, 121, 45, 121, 117, 97] => lookup_835_728(acc),
            [120, 110, 45, 45, 102, 106, 111, 114, 100, 45, 108, 114, 97] => lookup_835_729(acc),
            [120, 110, 45, 45, 102, 108, 45, 122, 105, 97] => lookup_835_730(acc),
            [120, 110, 45, 45, 102, 108, 111, 114, 45, 106, 114, 97] => lookup_835_731(acc),
            [120, 110, 45, 45, 102, 114, 100, 101, 45, 103, 114, 97] => lookup_835_732(acc),
            [120, 110, 45, 45, 102, 114, 110, 97, 45, 119, 111, 97] => lookup_835_733(acc),
            [120, 110, 45, 45, 102, 114, 121, 97, 45, 104, 114, 97] => lookup_835_734(acc),
            [120, 110, 45, 45, 103, 103, 97, 118, 105, 105, 107, 97, 45, 56, 121, 97, 52, 55, 104] => {
                lookup_835_735(acc)
            }
            [120, 110, 45, 45, 103, 105, 108, 100, 101, 115, 107, 108, 45, 103, 48, 97] => {
                lookup_835_736(acc)
            }
            [120, 110, 45, 45, 103, 105, 118, 117, 111, 116, 110, 97, 45, 56, 121, 97] => {
                lookup_835_737(acc)
            }
            [120, 110, 45, 45, 103, 106, 118, 105, 107, 45, 119, 117, 97] => lookup_835_738(acc),
            [120, 110, 45, 45, 103, 108, 115, 45, 101, 108, 97, 99] => lookup_835_739(acc),
            [120, 110, 45, 45, 104, 45, 50, 102, 97] => lookup_835_740(acc),
            [120, 110, 45, 45, 104, 98, 109, 101, 114, 45, 120, 113, 97] => lookup_835_741(acc),
            [120, 110, 45, 45, 104, 99, 101, 115, 117, 111, 108, 111, 45, 55, 121, 97, 51, 53, 98] => {
                lookup_835_742(acc)
            }
            [120, 110, 45, 45, 104, 103, 101, 98, 111, 115, 116, 97, 100, 45, 103, 51, 97] => {
                lookup_835_743(acc)
            }
            [120, 110, 45, 45, 104, 109, 109, 114, 102, 101, 97, 115, 116, 97, 45, 115, 52, 97, 99] => {
                lookup_835_744(acc)
            }
            [120, 110, 45, 45, 104, 110, 101, 102, 111, 115, 115, 45, 113, 49, 97] => {
                lookup_835_745(acc)
            }
            [120, 110, 45, 45, 104, 111, 98, 108, 45, 105, 114, 97] => lookup_835_746(acc),
            [120, 110, 45, 45, 104, 111, 108, 116, 108, 101, 110, 45, 104, 120, 97] => {
                lookup_835_747(acc)
            }
            [120, 110, 45, 45, 104, 112, 109, 105, 114, 45, 120, 113, 97] => lookup_835_748(acc),
            [120, 110, 45, 45, 104, 121, 97, 110, 103, 101, 114, 45, 113, 49, 97] => {
                lookup_835_749(acc)
            }
            [120, 110, 45, 45, 104, 121, 108, 97, 110, 100, 101, 116, 45, 53, 52, 97] => {
                lookup_835_750(acc)
            }
            [120, 110, 45, 45, 105, 110, 100, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_835_751(acc)
            }
            [120, 110, 45, 45, 106, 108, 115, 116, 101, 114, 45, 98, 121, 97] => {
                lookup_835_752(acc)
            }
            [120, 110, 45, 45, 106, 114, 112, 101, 108, 97, 110, 100, 45, 53, 52, 97] => {
                lookup_835_753(acc)
            }
            [120, 110, 45, 45, 107, 97, 114, 109, 121, 45, 121, 117, 97] => lookup_835_754(acc),
            [120, 110, 45, 45, 107, 102, 106, 111, 114, 100, 45, 105, 117, 97] => {
                lookup_835_755(acc)
            }
            [120, 110, 45, 45, 107, 108, 98, 117, 45, 119, 111, 97] => lookup_835_756(acc),
            [120, 110, 45, 45, 107, 111, 108, 117, 111, 107, 116, 97, 45, 55, 121, 97, 53, 55, 104] => {
                lookup_835_757(acc)
            }
            [120, 110, 45, 45, 107, 114, 97, 103, 101, 114, 45, 103, 121, 97] => {
                lookup_835_758(acc)
            }
            [120, 110, 45, 45, 107, 114, 97, 110, 103, 104, 107, 101, 45, 98, 48, 97] => {
                lookup_835_759(acc)
            }
            [120, 110, 45, 45, 107, 114, 100, 115, 104, 101, 114, 97, 100, 45, 109, 56, 97] => {
                lookup_835_760(acc)
            }
            [120, 110, 45, 45, 107, 114, 101, 104, 97, 109, 110, 45, 100, 120, 97] => {
                lookup_835_761(acc)
            }
            [120, 110, 45, 45, 107, 114, 106, 111, 104, 107, 97, 45, 104, 119, 97, 98, 52, 57, 106] => {
                lookup_835_762(acc)
            }
            [120, 110, 45, 45, 107, 115, 110, 101, 115, 45, 117, 117, 97] => lookup_835_763(acc),
            [120, 110, 45, 45, 107, 118, 102, 106, 111, 114, 100, 45, 110, 120, 97] => {
                lookup_835_764(acc)
            }
            [120, 110, 45, 45, 107, 118, 105, 116, 115, 121, 45, 102, 121, 97] => {
                lookup_835_765(acc)
            }
            [120, 110, 45, 45, 107, 118, 110, 97, 110, 103, 101, 110, 45, 107, 48, 97] => {
                lookup_835_766(acc)
            }
            [120, 110, 45, 45, 108, 45, 49, 102, 97] => lookup_835_767(acc),
            [120, 110, 45, 45, 108, 97, 104, 101, 97, 100, 106, 117, 45, 55, 121, 97] => {
                lookup_835_768(acc)
            }
            [120, 110, 45, 45, 108, 97, 110, 103, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_835_769(acc)
            }
            [120, 110, 45, 45, 108, 100, 105, 110, 103, 101, 110, 45, 113, 49, 97] => {
                lookup_835_770(acc)
            }
            [120, 110, 45, 45, 108, 101, 97, 103, 97, 118, 105, 105, 107, 97, 45, 53, 50, 98] => {
                lookup_835_771(acc)
            }
            [120, 110, 45, 45, 108, 101, 115, 117, 110, 100, 45, 104, 117, 97] => {
                lookup_835_772(acc)
            }
            [120, 110, 45, 45, 108, 103, 114, 100, 45, 112, 111, 97, 99] => lookup_835_773(acc),
            [120, 110, 45, 45, 108, 104, 112, 112, 105, 45, 120, 113, 97] => lookup_835_774(acc),
            [120, 110, 45, 45, 108, 105, 110, 100, 115, 45, 112, 114, 97] => lookup_835_775(acc),
            [120, 110, 45, 45, 108, 111, 97, 98, 116, 45, 48, 113, 97] => lookup_835_776(acc),
            [120, 110, 45, 45, 108, 114, 100, 97, 108, 45, 115, 114, 97] => lookup_835_777(acc),
            [120, 110, 45, 45, 108, 114, 101, 110, 115, 107, 111, 103, 45, 53, 52, 97] => {
                lookup_835_778(acc)
            }
            [120, 110, 45, 45, 108, 116, 45, 108, 105, 97, 99] => lookup_835_779(acc),
            [120, 110, 45, 45, 108, 116, 101, 110, 45, 103, 114, 97] => lookup_835_780(acc),
            [120, 110, 45, 45, 108, 117, 114, 121, 45, 105, 114, 97] => lookup_835_781(acc),
            [120, 110, 45, 45, 109, 101, 108, 121, 45, 105, 114, 97] => lookup_835_782(acc),
            [120, 110, 45, 45, 109, 101, 114, 107, 101, 114, 45, 107, 117, 97] => {
                lookup_835_783(acc)
            }
            [120, 110, 45, 45, 109, 106, 110, 100, 97, 108, 101, 110, 45, 54, 52, 97] => {
                lookup_835_784(acc)
            }
            [120, 110, 45, 45, 109, 108, 97, 116, 118, 117, 111, 112, 109, 105, 45, 115, 52, 97] => {
                lookup_835_785(acc)
            }
            [120, 110, 45, 45, 109, 108, 105, 45, 116, 108, 97] => lookup_835_786(acc),
            [120, 110, 45, 45, 109, 108, 115, 101, 108, 118, 45, 105, 117, 97] => {
                lookup_835_787(acc)
            }
            [120, 110, 45, 45, 109, 111, 114, 101, 107, 101, 45, 106, 117, 97] => {
                lookup_835_788(acc)
            }
            [120, 110, 45, 45, 109, 111, 115, 106, 101, 110, 45, 101, 121, 97] => {
                lookup_835_789(acc)
            }
            [120, 110, 45, 45, 109, 111, 116, 45, 116, 108, 97] => lookup_835_790(acc),
            [120, 110, 45, 45, 109, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108, 45, 113, 113, 98] => {
                lookup_835_791(info, labels, acc)
            }
            [120, 110, 45, 45, 109, 115, 121, 45, 117, 108, 97, 48, 104] => lookup_835_792(acc),
            [120, 110, 45, 45, 109, 116, 116, 97, 45, 118, 114, 106, 106, 97, 116, 45, 107, 55, 97, 102] => {
                lookup_835_793(acc)
            }
            [120, 110, 45, 45, 109, 117, 111, 115, 116, 45, 48, 113, 97] => lookup_835_794(acc),
            [120, 110, 45, 45, 110, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101, 45, 116, 99, 98, 97] => {
                lookup_835_795(acc)
            }
            [120, 110, 45, 45, 110, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_835_796(acc),
            [120, 110, 45, 45, 110, 116, 116, 101, 114, 121, 45, 98, 121, 97, 101] => {
                lookup_835_797(acc)
            }
            [120, 110, 45, 45, 110, 118, 117, 111, 116, 110, 97, 45, 104, 119, 97] => {
                lookup_835_798(acc)
            }
            [120, 110, 45, 45, 111, 112, 112, 101, 103, 114, 100, 45, 105, 120, 97] => {
                lookup_835_799(acc)
            }
            [120, 110, 45, 45, 111, 115, 116, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_835_800(acc)
            }
            [120, 110, 45, 45, 111, 115, 121, 114, 111, 45, 119, 117, 97] => lookup_835_801(acc),
            [120, 110, 45, 45, 112, 111, 114, 115, 103, 117, 45, 115, 116, 97, 50, 54, 102] => {
                lookup_835_802(acc)
            }
            [120, 110, 45, 45, 114, 97, 100, 121, 45, 105, 114, 97] => lookup_835_803(acc),
            [120, 110, 45, 45, 114, 100, 97, 108, 45, 112, 111, 97] => lookup_835_804(acc),
            [120, 110, 45, 45, 114, 100, 101, 45, 117, 108, 97] => lookup_835_805(acc),
            [120, 110, 45, 45, 114, 100, 121, 45, 48, 110, 97, 98] => lookup_835_806(acc),
            [120, 110, 45, 45, 114, 101, 110, 110, 101, 115, 121, 45, 118, 49, 97] => {
                lookup_835_807(acc)
            }
            [120, 110, 45, 45, 114, 104, 107, 107, 101, 114, 118, 106, 117, 45, 48, 49, 97, 102] => {
                lookup_835_808(acc)
            }
            [120, 110, 45, 45, 114, 104, 111, 108, 116, 45, 109, 114, 97] => lookup_835_809(acc),
            [120, 110, 45, 45, 114, 105, 115, 97, 45, 53, 110, 97] => lookup_835_810(acc),
            [120, 110, 45, 45, 114, 105, 115, 114, 45, 105, 114, 97] => lookup_835_811(acc),
            [120, 110, 45, 45, 114, 108, 97, 110, 100, 45, 117, 117, 97] => lookup_835_812(acc),
            [120, 110, 45, 45, 114, 108, 105, 110, 103, 101, 110, 45, 109, 120, 97] => {
                lookup_835_813(acc)
            }
            [120, 110, 45, 45, 114, 109, 115, 107, 111, 103, 45, 98, 121, 97] => {
                lookup_835_814(acc)
            }
            [120, 110, 45, 45, 114, 114, 111, 115, 45, 103, 114, 97] => lookup_835_815(acc),
            [120, 110, 45, 45, 114, 115, 107, 111, 103, 45, 117, 117, 97] => lookup_835_816(acc),
            [120, 110, 45, 45, 114, 115, 116, 45, 48, 110, 97] => lookup_835_817(acc),
            [120, 110, 45, 45, 114, 115, 116, 97, 45, 102, 114, 97] => lookup_835_818(acc),
            [120, 110, 45, 45, 114, 121, 107, 101, 110, 45, 118, 117, 97] => lookup_835_819(acc),
            [120, 110, 45, 45, 114, 121, 114, 118, 105, 107, 45, 98, 121, 97] => {
                lookup_835_820(acc)
            }
            [120, 110, 45, 45, 115, 45, 49, 102, 97] => lookup_835_821(acc),
            [120, 110, 45, 45, 115, 97, 110, 100, 110, 101, 115, 115, 106, 101, 110, 45, 111, 103, 98] => {
                lookup_835_822(acc)
            }
            [120, 110, 45, 45, 115, 97, 110, 100, 121, 45, 121, 117, 97] => lookup_835_823(acc),
            [120, 110, 45, 45, 115, 101, 114, 97, 108, 45, 108, 114, 97] => lookup_835_824(acc),
            [120, 110, 45, 45, 115, 103, 110, 101, 45, 103, 114, 97] => lookup_835_825(acc),
            [120, 110, 45, 45, 115, 107, 105, 101, 114, 118, 45, 117, 116, 97] => {
                lookup_835_826(acc)
            }
            [120, 110, 45, 45, 115, 107, 106, 101, 114, 118, 121, 45, 118, 49, 97] => {
                lookup_835_827(acc)
            }
            [120, 110, 45, 45, 115, 107, 106, 107, 45, 115, 111, 97] => lookup_835_828(acc),
            [120, 110, 45, 45, 115, 107, 110, 105, 116, 45, 121, 113, 97] => lookup_835_829(acc),
            [120, 110, 45, 45, 115, 107, 110, 108, 97, 110, 100, 45, 102, 120, 97] => {
                lookup_835_830(acc)
            }
            [120, 110, 45, 45, 115, 108, 97, 116, 45, 53, 110, 97] => lookup_835_831(acc),
            [120, 110, 45, 45, 115, 108, 116, 45, 101, 108, 97, 98] => lookup_835_832(acc),
            [120, 110, 45, 45, 115, 109, 108, 97, 45, 104, 114, 97] => lookup_835_833(acc),
            [120, 110, 45, 45, 115, 109, 110, 97, 45, 103, 114, 97] => lookup_835_834(acc),
            [120, 110, 45, 45, 115, 110, 97, 115, 101, 45, 110, 114, 97] => lookup_835_835(acc),
            [120, 110, 45, 45, 115, 110, 100, 114, 101, 45, 108, 97, 110, 100, 45, 48, 99, 98] => {
                lookup_835_836(acc)
            }
            [120, 110, 45, 45, 115, 110, 101, 115, 45, 112, 111, 97] => lookup_835_837(acc),
            [120, 110, 45, 45, 115, 110, 115, 97, 45, 114, 111, 97] => lookup_835_838(acc),
            [120, 110, 45, 45, 115, 114, 45, 97, 117, 114, 100, 97, 108, 45, 108, 56, 97] => {
                lookup_835_839(acc)
            }
            [120, 110, 45, 45, 115, 114, 45, 102, 114, 111, 110, 45, 113, 49, 97] => {
                lookup_835_840(acc)
            }
            [120, 110, 45, 45, 115, 114, 45, 111, 100, 97, 108, 45, 113, 49, 97] => {
                lookup_835_841(acc)
            }
            [120, 110, 45, 45, 115, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114, 45, 103, 103, 98] => {
                lookup_835_842(acc)
            }
            [120, 110, 45, 45, 115, 114, 102, 111, 108, 100, 45, 98, 121, 97] => {
                lookup_835_843(acc)
            }
            [120, 110, 45, 45, 115, 114, 114, 101, 105, 115, 97, 45, 113, 49, 97] => {
                lookup_835_844(acc)
            }
            [120, 110, 45, 45, 115, 114, 117, 109, 45, 103, 114, 97] => lookup_835_845(acc),
            [120, 110, 45, 45, 115, 116, 102, 111, 108, 100, 45, 57, 120, 97] => {
                lookup_835_846(info, labels, acc)
            }
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 45, 115, 49, 97] => {
                lookup_835_847(acc)
            }
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110, 45, 115, 113, 98] => {
                lookup_835_848(acc)
            }
            [120, 110, 45, 45, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110, 45, 122, 99, 98] => {
                lookup_835_849(acc)
            }
            [120, 110, 45, 45, 116, 106, 109, 101, 45, 104, 114, 97] => lookup_835_850(acc),
            [120, 110, 45, 45, 116, 110, 115, 98, 101, 114, 103, 45, 113, 49, 97] => {
                lookup_835_851(acc)
            }
            [120, 110, 45, 45, 116, 114, 97, 110, 121, 45, 121, 117, 97] => lookup_835_852(acc),
            [120, 110, 45, 45, 116, 114, 103, 115, 116, 97, 100, 45, 114, 49, 97] => {
                lookup_835_853(acc)
            }
            [120, 110, 45, 45, 116, 114, 110, 97, 45, 119, 111, 97] => lookup_835_854(acc),
            [120, 110, 45, 45, 116, 114, 111, 109, 115, 45, 122, 117, 97] => lookup_835_855(acc),
            [120, 110, 45, 45, 116, 121, 115, 118, 114, 45, 118, 114, 97] => lookup_835_856(acc),
            [120, 110, 45, 45, 117, 110, 106, 114, 103, 97, 45, 114, 116, 97] => {
                lookup_835_857(acc)
            }
            [120, 110, 45, 45, 118, 97, 100, 115, 45, 106, 114, 97] => lookup_835_858(acc),
            [120, 110, 45, 45, 118, 97, 114, 100, 45, 106, 114, 97] => lookup_835_859(acc),
            [120, 110, 45, 45, 118, 101, 103, 114, 115, 104, 101, 105, 45, 99, 48, 97] => {
                lookup_835_860(acc)
            }
            [120, 110, 45, 45, 118, 101, 115, 116, 118, 103, 121, 45, 105, 120, 97, 54, 111] => {
                lookup_835_861(acc)
            }
            [120, 110, 45, 45, 118, 103, 45, 121, 105, 97, 98] => lookup_835_862(acc),
            [120, 110, 45, 45, 118, 103, 97, 110, 45, 113, 111, 97] => lookup_835_863(acc),
            [120, 110, 45, 45, 118, 103, 115, 121, 45, 113, 111, 97, 48, 106] => {
                lookup_835_864(acc)
            }
            [120, 110, 45, 45, 118, 114, 101, 45, 101, 105, 107, 101, 114, 45, 107, 56, 97] => {
                lookup_835_865(acc)
            }
            [120, 110, 45, 45, 118, 114, 103, 103, 116, 45, 120, 113, 97, 100] => {
                lookup_835_866(acc)
            }
            [120, 110, 45, 45, 118, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_835_867(acc),
            [120, 110, 45, 45, 121, 101, 114, 45, 122, 110, 97] => lookup_835_868(acc),
            [120, 110, 45, 45, 121, 103, 97, 114, 100, 101, 110, 45, 112, 49, 97] => {
                lookup_835_869(acc)
            }
            [120, 110, 45, 45, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101, 45, 117, 106, 98] => {
                lookup_835_870(acc)
            }
            [195, 161, 107, 197, 139, 111, 108, 117, 111, 107, 116, 97] => lookup_835_871(acc),
            [195, 161, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_835_872(acc),
            [195, 161, 108, 116, 195, 161] => lookup_835_873(acc),
            [195, 165, 102, 106, 111, 114, 100] => lookup_835_874(acc),
            [195, 165, 107, 114, 101, 104, 97, 109, 110] => lookup_835_875(acc),
            [195, 165, 108] => lookup_835_876(acc),
            [195, 165, 108, 101, 115, 117, 110, 100] => lookup_835_877(acc),
            [195, 165, 108, 103, 195, 165, 114, 100] => lookup_835_878(acc),
            [195, 165, 109, 108, 105] => lookup_835_879(acc),
            [195, 165, 109, 111, 116] => lookup_835_880(acc),
            [195, 165, 114, 100, 97, 108] => lookup_835_881(acc),
            [195, 165, 115] => lookup_835_882(acc),
            [195, 165, 115, 101, 114, 97, 108] => lookup_835_883(acc),
            [195, 165, 115, 110, 101, 115] => lookup_835_884(acc),
            [195, 184, 107, 115, 110, 101, 115] => lookup_835_885(acc),
            [195, 184, 114, 108, 97, 110, 100] => lookup_835_886(acc),
            [195, 184, 114, 115, 107, 111, 103] => lookup_835_887(acc),
            [195, 184, 114, 115, 116, 97] => lookup_835_888(acc),
            [195, 184, 115, 116, 102, 111, 108, 100] => lookup_835_889(info, labels, acc),
            [195, 184, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_835_890(acc),
            [195, 184, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_835_891(acc),
            [195, 184, 121, 101, 114] => lookup_835_892(acc),
            [195, 184, 121, 103, 97, 114, 100, 101, 110] => lookup_835_893(acc),
            [195, 184, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => {
                lookup_835_894(acc)
            }
            [196, 141, 195, 161, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_835_895(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_836() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_839() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_841_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_841<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_841_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_842_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_842_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_842_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_842_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_842_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_842_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_842_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_842<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_842_0(acc),
            [99, 111, 109] => lookup_842_1(acc),
            [101, 100, 117] => lookup_842_2(acc),
            [103, 111, 118] => lookup_842_3(acc),
            [105, 110, 102, 111] => lookup_842_4(acc),
            [110, 101, 116] => lookup_842_5(acc),
            [111, 114, 103] => lookup_842_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_843() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_844() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_846<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 99, 108, 111, 117, 100] => {
                lookup_846_0(acc)
            }
            [109, 101, 114, 115, 101, 105, 110, 101] => lookup_846_1(acc),
            [109, 105, 110, 101] => lookup_846_2(acc),
            [115, 104, 97, 99, 107, 110, 101, 116] => lookup_846_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_847() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_848_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_848_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_848_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_848_0(acc),
            [99, 111] => lookup_848_1(labels, acc),
            [99, 114, 105] => lookup_848_2(acc),
            [103, 101, 101, 107] => lookup_848_3(acc),
            [103, 101, 110] => lookup_848_4(acc),
            [103, 111, 118, 116] => lookup_848_5(acc),
            [104, 101, 97, 108, 116, 104] => lookup_848_6(acc),
            [105, 119, 105] => lookup_848_7(acc),
            [107, 105, 119, 105] => lookup_848_8(acc),
            [109, 97, 111, 114, 105] => lookup_848_9(acc),
            [109, 105, 108] => lookup_848_10(acc),
            [109, 196, 129, 111, 114, 105] => lookup_848_11(acc),
            [110, 101, 116] => lookup_848_12(acc),
            [111, 114, 103] => lookup_848_13(acc),
            [112, 97, 114, 108, 105, 97, 109, 101, 110, 116] => lookup_848_14(acc),
            [115, 99, 104, 111, 111, 108] => lookup_848_15(acc),
            [120, 110, 45, 45, 109, 111, 114, 105, 45, 113, 115, 97] => lookup_848_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_849() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_850() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_852() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_853() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_854() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_855() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_856_0(acc),
            [99, 111, 109] => lookup_856_1(acc),
            [101, 100, 117] => lookup_856_2(acc),
            [103, 111, 118] => lookup_856_3(acc),
            [109, 101, 100] => lookup_856_4(acc),
            [109, 117, 115, 101, 117, 109] => lookup_856_5(acc),
            [110, 101, 116] => lookup_856_6(acc),
            [111, 114, 103] => lookup_856_7(acc),
            [112, 114, 111] => lookup_856_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_857() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_858_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_858_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_858_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 105, 110, 103] => lookup_858_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_858_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_858<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 109, 101, 108, 105, 110, 107] => lookup_858_0(acc),
            [107, 105, 110] => lookup_858_1(info, labels, acc),
            [111, 110, 114, 101, 100] => lookup_858_2(labels, acc),
            [115, 101, 114, 118, 105, 99, 101] => lookup_858_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_859() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_860() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_862_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_862_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_862_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_862<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_862_0(acc),
            [101, 101, 114, 111] => lookup_862_1(acc),
            [101, 101, 114, 111, 45, 115, 116, 97, 103, 101] => lookup_862_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_863() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_864() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_866_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_866<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 101, 99, 104] => lookup_866_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_867_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [116, 101, 108, 101] => lookup_867_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_867_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [99] => lookup_867_11_0(acc),
            [114, 115, 99] => lookup_867_11_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_867_12_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_12_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [115, 115, 108] => lookup_867_12_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_867_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 114, 105, 103, 105, 110] => lookup_867_12_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_867_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_28_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_28<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111] => lookup_867_28_0(acc),
            [104, 111, 109, 101] => lookup_867_28_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_867_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_32<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108] => lookup_867_32_0(acc),
            [97, 115, 115, 111] => lookup_867_32_1(acc),
            [97, 116] => lookup_867_32_2(acc),
            [97, 117] => lookup_867_32_3(acc),
            [98, 101] => lookup_867_32_4(acc),
            [98, 103] => lookup_867_32_5(acc),
            [99, 97] => lookup_867_32_6(acc),
            [99, 100] => lookup_867_32_7(acc),
            [99, 104] => lookup_867_32_8(acc),
            [99, 110] => lookup_867_32_9(acc),
            [99, 121] => lookup_867_32_10(acc),
            [99, 122] => lookup_867_32_11(acc),
            [100, 101] => lookup_867_32_12(acc),
            [100, 107] => lookup_867_32_13(acc),
            [101, 100, 117] => lookup_867_32_14(acc),
            [101, 101] => lookup_867_32_15(acc),
            [101, 115] => lookup_867_32_16(acc),
            [102, 105] => lookup_867_32_17(acc),
            [102, 114] => lookup_867_32_18(acc),
            [103, 114] => lookup_867_32_19(acc),
            [104, 114] => lookup_867_32_20(acc),
            [104, 117] => lookup_867_32_21(acc),
            [105, 101] => lookup_867_32_22(acc),
            [105, 108] => lookup_867_32_23(acc),
            [105, 110] => lookup_867_32_24(acc),
            [105, 110, 116] => lookup_867_32_25(acc),
            [105, 115] => lookup_867_32_26(acc),
            [105, 116] => lookup_867_32_27(acc),
            [106, 112] => lookup_867_32_28(acc),
            [107, 114] => lookup_867_32_29(acc),
            [108, 116] => lookup_867_32_30(acc),
            [108, 117] => lookup_867_32_31(acc),
            [108, 118] => lookup_867_32_32(acc),
            [109, 99] => lookup_867_32_33(acc),
            [109, 101] => lookup_867_32_34(acc),
            [109, 107] => lookup_867_32_35(acc),
            [109, 116] => lookup_867_32_36(acc),
            [109, 121] => lookup_867_32_37(acc),
            [110, 101, 116] => lookup_867_32_38(acc),
            [110, 103] => lookup_867_32_39(acc),
            [110, 108] => lookup_867_32_40(acc),
            [110, 111] => lookup_867_32_41(acc),
            [110, 122] => lookup_867_32_42(acc),
            [112, 97, 114, 105, 115] => lookup_867_32_43(acc),
            [112, 108] => lookup_867_32_44(acc),
            [112, 116] => lookup_867_32_45(acc),
            [113, 45, 97] => lookup_867_32_46(acc),
            [114, 111] => lookup_867_32_47(acc),
            [114, 117] => lookup_867_32_48(acc),
            [115, 101] => lookup_867_32_49(acc),
            [115, 105] => lookup_867_32_50(acc),
            [115, 107] => lookup_867_32_51(acc),
            [116, 114] => lookup_867_32_52(acc),
            [117, 107] => lookup_867_32_53(acc),
            [117, 115] => lookup_867_32_54(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_867_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_36_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_36_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_867_36_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_867_36_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_36_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_867_36_2_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_867_36_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_867_36_2_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_867_36<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_867_36_0(acc),
            [111, 115] => lookup_867_36_1(info, labels, acc),
            [115, 116, 103] => lookup_867_36_2(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_867_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_102_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_102<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_867_102_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_867_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_867<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 99, 101, 115, 115, 99, 97, 109] => lookup_867_0(acc),
            [97, 101] => lookup_867_1(acc),
            [97, 108, 116, 101, 114, 118, 105, 115, 116, 97] => lookup_867_2(acc),
            [97, 109, 117, 110, 101] => lookup_867_3(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_867_4(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_867_5(acc),
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_867_6(acc),
            [98, 109, 111, 97, 116, 116, 97, 99, 104, 109, 101, 110, 116, 115] => lookup_867_7(acc),
            [98, 111, 108, 100, 108, 121, 103, 111, 105, 110, 103, 110, 111, 119, 104, 101, 114, 101] => {
                lookup_867_8(acc)
            }
            [99, 97, 98, 108, 101, 45, 109, 111, 100, 101, 109] => lookup_867_9(acc),
            [99, 97, 109, 100, 118, 114] => lookup_867_10(acc),
            [99, 100, 110, 55, 55] => lookup_867_11(info, labels, acc),
            [99, 100, 110, 55, 55, 45, 115, 101, 99, 117, 114, 101] => {
                lookup_867_12(info, labels, acc)
            }
            [99, 101, 114, 116, 109, 103, 114] => lookup_867_13(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_867_14(acc),
            [99, 111, 108, 108, 101, 103, 101, 102, 97, 110] => lookup_867_15(acc),
            [99, 111, 117, 99, 104, 112, 111, 116, 97, 116, 111, 102, 114, 105, 101, 115] => {
                lookup_867_16(acc)
            }
            [100, 100, 110, 115, 115] => lookup_867_17(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_867_18(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_867_19(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_867_20(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_867_21(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_867_22(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_867_23(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_867_24(acc),
            [100, 117, 99, 107, 100, 110, 115] => lookup_867_25(acc),
            [100, 118, 114, 100, 110, 115] => lookup_867_26(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_867_27(acc),
            [100, 121, 110, 100, 110, 115] => lookup_867_28(labels, acc),
            [100, 121, 110, 115, 101, 114, 118] => lookup_867_29(acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => lookup_867_30(acc),
            [101, 110, 100, 111, 102, 116, 104, 101, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_867_31(acc)
            }
            [101, 117] => lookup_867_32(labels, acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_867_33(acc),
            [102, 101, 100, 111, 114, 97, 105, 110, 102, 114, 97, 99, 108, 111, 117, 100] => {
                lookup_867_34(acc)
            }
            [102, 101, 100, 111, 114, 97, 112, 101, 111, 112, 108, 101] => lookup_867_35(acc),
            [102, 101, 100, 111, 114, 97, 112, 114, 111, 106, 101, 99, 116] => {
                lookup_867_36(info, labels, acc)
            }
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_867_37(acc),
            [102, 114, 101, 101, 100, 101, 115, 107, 116, 111, 112] => lookup_867_38(acc),
            [102, 114, 111, 109, 45, 109, 101] => lookup_867_39(acc),
            [103, 97, 109, 101, 45, 104, 111, 115, 116] => lookup_867_40(acc),
            [103, 111, 116, 100, 110, 115] => lookup_867_41(acc),
            [104, 101, 112, 102, 111, 114, 103, 101] => lookup_867_42(acc),
            [104, 107] => lookup_867_43(acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_867_44(acc),
            [104, 111, 109, 101, 100, 110, 115] => lookup_867_45(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_867_46(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_867_47(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_867_48(acc),
            [104, 111, 112, 116, 111] => lookup_867_49(acc),
            [104, 116, 116, 112, 98, 105, 110] => lookup_867_50(acc),
            [105, 110, 45, 100, 115, 108] => lookup_867_51(acc),
            [105, 110, 45, 118, 112, 110] => lookup_867_52(acc),
            [105, 115, 45, 97, 45, 98, 114, 117, 105, 110, 115, 102, 97, 110] => lookup_867_53(acc),
            [105, 115, 45, 97, 45, 99, 97, 110, 100, 105, 100, 97, 116, 101] => lookup_867_54(acc),
            [105, 115, 45, 97, 45, 99, 101, 108, 116, 105, 99, 115, 102, 97, 110] => {
                lookup_867_55(acc)
            }
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_867_56(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_867_57(acc),
            [105, 115, 45, 97, 45, 107, 110, 105, 103, 104, 116] => lookup_867_58(acc),
            [105, 115, 45, 97, 45, 108, 105, 110, 117, 120, 45, 117, 115, 101, 114] => {
                lookup_867_59(acc)
            }
            [105, 115, 45, 97, 45, 112, 97, 116, 115, 102, 97, 110] => lookup_867_60(acc),
            [105, 115, 45, 97, 45, 115, 111, 120, 102, 97, 110] => lookup_867_61(acc),
            [105, 115, 45, 102, 111, 117, 110, 100] => lookup_867_62(acc),
            [105, 115, 45, 108, 111, 115, 116] => lookup_867_63(acc),
            [105, 115, 45, 115, 97, 118, 101, 100] => lookup_867_64(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 98, 97, 100] => lookup_867_65(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 101, 118, 105, 108] => lookup_867_66(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 103, 111, 111, 100] => lookup_867_67(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 110, 105, 99, 101] => lookup_867_68(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 115, 119, 101, 101, 116] => lookup_867_69(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_867_70(acc),
            [106, 112, 110] => lookup_867_71(acc),
            [106, 115] => lookup_867_72(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_867_73(acc),
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_867_74(acc),
            [109, 105, 115, 99, 111, 110, 102, 117, 115, 101, 100] => lookup_867_75(acc),
            [109, 108, 98, 102, 97, 110] => lookup_867_76(acc),
            [109, 111, 122, 105, 108, 108, 97, 45, 105, 111, 116] => lookup_867_77(acc),
            [109, 121, 45, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_867_78(acc),
            [109, 121, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_867_79(acc),
            [109, 121, 102, 116, 112] => lookup_867_80(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_867_81(acc)
            }
            [109, 121, 119, 105, 114, 101] => lookup_867_82(acc),
            [110, 102, 108, 102, 97, 110] => lookup_867_83(acc),
            [110, 111, 45, 105, 112] => lookup_867_84(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_867_85(acc),
            [112, 105, 109, 105, 101, 110, 116, 97] => lookup_867_86(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_867_87(acc),
            [112, 111, 105, 118, 114, 111, 110] => lookup_867_88(acc),
            [112, 111, 116, 97, 103, 101, 114] => lookup_867_89(acc),
            [112, 117, 98, 116, 108, 115] => lookup_867_90(acc),
            [114, 101, 97, 100, 45, 98, 111, 111, 107, 115] => lookup_867_91(acc),
            [114, 101, 97, 100, 109, 121, 98, 108, 111, 103] => lookup_867_92(acc),
            [115, 101, 108, 102, 105, 112] => lookup_867_93(acc),
            [115, 101, 108, 108, 115, 121, 111, 117, 114, 104, 111, 109, 101] => lookup_867_94(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_867_95(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_867_96(acc),
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_867_97(acc),
            [115, 109, 97, 108, 108, 45, 119, 101, 98] => lookup_867_98(acc),
            [115, 112, 100, 110, 115] => lookup_867_99(acc),
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_867_100(acc),
            [115, 119, 101, 101, 116, 112, 101, 112, 112, 101, 114] => lookup_867_101(acc),
            [116, 101, 99, 107, 105, 100, 115] => lookup_867_102(info, labels, acc),
            [116, 111, 111, 108, 102, 111, 114, 103, 101] => lookup_867_103(acc),
            [116, 117, 110, 107] => lookup_867_104(acc),
            [116, 117, 120, 102, 97, 109, 105, 108, 121] => lookup_867_105(acc),
            [116, 119, 109, 97, 105, 108] => lookup_867_106(acc),
            [117, 102, 99, 102, 97, 110] => lookup_867_107(acc),
            [117, 115] => lookup_867_108(acc),
            [119, 101, 98, 104, 111, 112] => lookup_867_109(acc),
            [119, 101, 98, 114, 101, 100, 105, 114, 101, 99, 116] => lookup_867_110(acc),
            [119, 109, 99, 108, 111, 117, 100] => lookup_867_111(acc),
            [119, 109, 102, 108, 97, 98, 115] => lookup_867_112(acc),
            [122, 97] => lookup_867_113(acc),
            [122, 97, 112, 116, 111] => lookup_867_114(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_868() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_869() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_871() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_873<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 114, 100, 112, 111, 108] => lookup_873_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_874_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 111] => lookup_874_0(acc),
            [97, 99] => lookup_874_1(acc),
            [99, 111, 109] => lookup_874_2(acc),
            [101, 100, 117] => lookup_874_3(acc),
            [103, 111, 98] => lookup_874_4(acc),
            [105, 110, 103] => lookup_874_5(acc),
            [109, 101, 100] => lookup_874_6(acc),
            [110, 101, 116] => lookup_874_7(acc),
            [110, 111, 109] => lookup_874_8(acc),
            [111, 114, 103] => lookup_874_9(acc),
            [115, 108, 100] => lookup_874_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_875_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_875_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_875_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_875_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_875_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_875_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_875_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_875_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_875_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_875_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_875<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 101, 109] => lookup_875_0(acc),
            [99, 111, 100, 101, 98, 101, 114, 103] => lookup_875_1(acc),
            [104, 108, 120] => lookup_875_2(acc),
            [104, 108, 120, 51] => lookup_875_3(acc),
            [109, 97, 103, 110, 101, 116] => lookup_875_4(acc),
            [112, 100, 110, 115] => lookup_875_5(acc),
            [112, 108, 101, 115, 107] => lookup_875_6(acc),
            [112, 114, 118, 99, 121] => lookup_875_7(acc),
            [114, 111, 99, 107, 121] => lookup_875_8(acc),
            [116, 114, 97, 110, 115, 108, 97, 116, 101, 100] => lookup_875_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_876() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_877() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_879() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_881_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_881<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_881_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_882() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_883() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_884_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_884_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_884_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_884_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_884_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_884_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_884_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_884_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_884<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_884_0(acc),
            [99, 111, 109] => lookup_884_1(acc),
            [101, 100, 117] => lookup_884_2(acc),
            [103, 111, 98] => lookup_884_3(acc),
            [109, 105, 108] => lookup_884_4(acc),
            [110, 101, 116] => lookup_884_5(acc),
            [110, 111, 109] => lookup_884_6(acc),
            [111, 114, 103] => lookup_884_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_886_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_886_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_886_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_886<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_886_0(acc),
            [101, 100, 117] => lookup_886_1(acc),
            [111, 114, 103] => lookup_886_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_887() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_888_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_888<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_888_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_889_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_889_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_889_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_889_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_889_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_889_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_889_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_889_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_889<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_889_0(acc),
            [101, 100, 117] => lookup_889_1(acc),
            [103, 111, 118] => lookup_889_2(acc),
            [105] => lookup_889_3(acc),
            [109, 105, 108] => lookup_889_4(acc),
            [110, 101, 116] => lookup_889_5(acc),
            [110, 103, 111] => lookup_889_6(acc),
            [111, 114, 103] => lookup_889_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_890() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_893() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_894() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_895() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_896_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_896<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 109, 101, 114] => lookup_896_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_897() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_898() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_899() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_900_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_900<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 51, 51, 55] => lookup_900_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_901() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_904() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_906_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_906<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 103, 114, 111, 107] => lookup_906_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_907_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_907_0(acc),
            [99, 111, 109] => lookup_907_1(acc),
            [101, 100, 117] => lookup_907_2(acc),
            [102, 97, 109] => lookup_907_3(acc),
            [103, 111, 98] => lookup_907_4(acc),
            [103, 111, 107] => lookup_907_5(acc),
            [103, 111, 110] => lookup_907_6(acc),
            [103, 111, 112] => lookup_907_7(acc),
            [103, 111, 115] => lookup_907_8(acc),
            [103, 111, 118] => lookup_907_9(acc),
            [105, 110, 102, 111] => lookup_907_10(acc),
            [110, 101, 116] => lookup_907_11(acc),
            [111, 114, 103] => lookup_907_12(acc),
            [119, 101, 98] => lookup_907_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_908_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_36<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112] => lookup_908_36_0(acc),
            [103, 114, 105, 119] => lookup_908_36_1(acc),
            [105, 99] => lookup_908_36_2(acc),
            [105, 115] => lookup_908_36_3(acc),
            [107, 109, 112, 115, 112] => lookup_908_36_4(acc),
            [107, 111, 110, 115, 117, 108, 97, 116] => lookup_908_36_5(acc),
            [107, 112, 112, 115, 112] => lookup_908_36_6(acc),
            [107, 119, 112] => lookup_908_36_7(acc),
            [107, 119, 112, 115, 112] => lookup_908_36_8(acc),
            [109, 117, 112] => lookup_908_36_9(acc),
            [109, 119] => lookup_908_36_10(acc),
            [111, 105, 97] => lookup_908_36_11(acc),
            [111, 105, 114, 109] => lookup_908_36_12(acc),
            [111, 107, 101] => lookup_908_36_13(acc),
            [111, 111, 119] => lookup_908_36_14(acc),
            [111, 115, 99, 104, 114] => lookup_908_36_15(acc),
            [111, 117, 109] => lookup_908_36_16(acc),
            [112, 97] => lookup_908_36_17(acc),
            [112, 105, 110, 98] => lookup_908_36_18(acc),
            [112, 105, 119] => lookup_908_36_19(acc),
            [112, 111] => lookup_908_36_20(acc),
            [112, 114] => lookup_908_36_21(acc),
            [112, 115, 112] => lookup_908_36_22(acc),
            [112, 115, 115, 101] => lookup_908_36_23(acc),
            [112, 117, 112] => lookup_908_36_24(acc),
            [114, 122, 103, 119] => lookup_908_36_25(acc),
            [115, 97] => lookup_908_36_26(acc),
            [115, 100, 110] => lookup_908_36_27(acc),
            [115, 107, 111] => lookup_908_36_28(acc),
            [115, 111] => lookup_908_36_29(acc),
            [115, 114] => lookup_908_36_30(acc),
            [115, 116, 97, 114, 111, 115, 116, 119, 111] => lookup_908_36_31(acc),
            [117, 103] => lookup_908_36_32(acc),
            [117, 103, 105, 109] => lookup_908_36_33(acc),
            [117, 109] => lookup_908_36_34(acc),
            [117, 109, 105, 103] => lookup_908_36_35(acc),
            [117, 112, 111, 119] => lookup_908_36_36(acc),
            [117, 112, 112, 111] => lookup_908_36_37(acc),
            [117, 115] => lookup_908_36_38(acc),
            [117, 119] => lookup_908_36_39(acc),
            [117, 122, 115] => lookup_908_36_40(acc),
            [119, 105, 102] => lookup_908_36_41(acc),
            [119, 105, 105, 104] => lookup_908_36_42(acc),
            [119, 105, 110, 98] => lookup_908_36_43(acc),
            [119, 105, 111, 115] => lookup_908_36_44(acc),
            [119, 105, 116, 100] => lookup_908_36_45(acc),
            [119, 105, 119] => lookup_908_36_46(acc),
            [119, 107, 122] => lookup_908_36_47(acc),
            [119, 115, 97] => lookup_908_36_48(acc),
            [119, 115, 107, 114] => lookup_908_36_49(acc),
            [119, 115, 115, 101] => lookup_908_36_50(acc),
            [119, 117, 111, 122] => lookup_908_36_51(acc),
            [119, 122, 109, 105, 117, 119] => lookup_908_36_52(acc),
            [122, 112] => lookup_908_36_53(acc),
            [122, 112, 105, 115, 100, 110] => lookup_908_36_54(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_908_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_908_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 103, 114, 111] => lookup_908_0(acc),
            [97, 105, 100] => lookup_908_1(acc),
            [97, 114, 116] => lookup_908_2(acc),
            [97, 116, 109] => lookup_908_3(acc),
            [97, 117, 103, 117, 115, 116, 111, 119] => lookup_908_4(acc),
            [97, 117, 116, 111] => lookup_908_5(acc),
            [98, 97, 98, 105, 97, 45, 103, 111, 114, 97] => lookup_908_6(acc),
            [98, 101, 100, 122, 105, 110] => lookup_908_7(acc),
            [98, 101, 101, 112] => lookup_908_8(acc),
            [98, 101, 115, 107, 105, 100, 121] => lookup_908_9(acc),
            [98, 105, 97, 108, 111, 119, 105, 101, 122, 97] => lookup_908_10(acc),
            [98, 105, 97, 108, 121, 115, 116, 111, 107] => lookup_908_11(acc),
            [98, 105, 101, 108, 97, 119, 97] => lookup_908_12(acc),
            [98, 105, 101, 115, 122, 99, 122, 97, 100, 121] => lookup_908_13(acc),
            [98, 105, 122] => lookup_908_14(acc),
            [98, 111, 108, 101, 115, 108, 97, 119, 105, 101, 99] => lookup_908_15(acc),
            [98, 121, 100, 103, 111, 115, 122, 99, 122] => lookup_908_16(acc),
            [98, 121, 116, 111, 109] => lookup_908_17(acc),
            [99, 105, 101, 115, 122, 121, 110] => lookup_908_18(acc),
            [99, 111] => lookup_908_19(acc),
            [99, 111, 109] => lookup_908_20(acc),
            [99, 122, 101, 108, 97, 100, 122] => lookup_908_21(acc),
            [99, 122, 101, 115, 116] => lookup_908_22(acc),
            [100, 108, 117, 103, 111, 108, 101, 107, 97] => lookup_908_23(acc),
            [101, 99, 111, 109, 109, 101, 114, 99, 101, 45, 115, 104, 111, 112] => {
                lookup_908_24(acc)
            }
            [101, 100, 117] => lookup_908_25(acc),
            [101, 108, 98, 108, 97, 103] => lookup_908_26(acc),
            [101, 108, 107] => lookup_908_27(acc),
            [103, 100, 97] => lookup_908_28(acc),
            [103, 100, 97, 110, 115, 107] => lookup_908_29(acc),
            [103, 100, 121, 110, 105, 97] => lookup_908_30(acc),
            [103, 108, 105, 119, 105, 99, 101] => lookup_908_31(acc),
            [103, 108, 111, 103, 111, 119] => lookup_908_32(acc),
            [103, 109, 105, 110, 97] => lookup_908_33(acc),
            [103, 110, 105, 101, 122, 110, 111] => lookup_908_34(acc),
            [103, 111, 114, 108, 105, 99, 101] => lookup_908_35(acc),
            [103, 111, 118] => lookup_908_36(labels, acc),
            [103, 114, 97, 106, 101, 119, 111] => lookup_908_37(acc),
            [103, 115, 109] => lookup_908_38(acc),
            [104, 111, 109, 101, 115, 107, 108, 101, 112] => lookup_908_39(acc),
            [105, 108, 97, 119, 97] => lookup_908_40(acc),
            [105, 110, 102, 111] => lookup_908_41(acc),
            [106, 97, 119, 111, 114, 122, 110, 111] => lookup_908_42(acc),
            [106, 101, 108, 101, 110, 105, 97, 45, 103, 111, 114, 97] => lookup_908_43(acc),
            [106, 103, 111, 114, 97] => lookup_908_44(acc),
            [107, 97, 108, 105, 115, 122] => lookup_908_45(acc),
            [107, 97, 114, 112, 97, 99, 122] => lookup_908_46(acc),
            [107, 97, 114, 116, 117, 122, 121] => lookup_908_47(acc),
            [107, 97, 115, 122, 117, 98, 121] => lookup_908_48(acc),
            [107, 97, 116, 111, 119, 105, 99, 101] => lookup_908_49(acc),
            [107, 97, 122, 105, 109, 105, 101, 114, 122, 45, 100, 111, 108, 110, 121] => {
                lookup_908_50(acc)
            }
            [107, 101, 112, 110, 111] => lookup_908_51(acc),
            [107, 101, 116, 114, 122, 121, 110] => lookup_908_52(acc),
            [107, 108, 111, 100, 122, 107, 111] => lookup_908_53(acc),
            [107, 111, 98, 105, 101, 114, 122, 121, 99, 101] => lookup_908_54(acc),
            [107, 111, 108, 111, 98, 114, 122, 101, 103] => lookup_908_55(acc),
            [107, 111, 110, 105, 110] => lookup_908_56(acc),
            [107, 111, 110, 115, 107, 111, 119, 111, 108, 97] => lookup_908_57(acc),
            [107, 114, 97, 107, 111, 119] => lookup_908_58(acc),
            [107, 114, 97, 115, 110, 105, 107] => lookup_908_59(acc),
            [107, 117, 116, 110, 111] => lookup_908_60(acc),
            [108, 97, 112, 121] => lookup_908_61(acc),
            [108, 101, 98, 111, 114, 107] => lookup_908_62(acc),
            [108, 101, 99, 122, 110, 97] => lookup_908_63(acc),
            [108, 101, 103, 110, 105, 99, 97] => lookup_908_64(acc),
            [108, 101, 122, 97, 106, 115, 107] => lookup_908_65(acc),
            [108, 105, 109, 97, 110, 111, 119, 97] => lookup_908_66(acc),
            [108, 111, 109, 122, 97] => lookup_908_67(acc),
            [108, 111, 119, 105, 99, 122] => lookup_908_68(acc),
            [108, 117, 98, 97, 114, 116, 111, 119] => lookup_908_69(acc),
            [108, 117, 98, 105, 110] => lookup_908_70(acc),
            [108, 117, 98, 108, 105, 110] => lookup_908_71(acc),
            [108, 117, 107, 111, 119] => lookup_908_72(acc),
            [109, 97, 105, 108] => lookup_908_73(acc),
            [109, 97, 108, 98, 111, 114, 107] => lookup_908_74(acc),
            [109, 97, 108, 111, 112, 111, 108, 115, 107, 97] => lookup_908_75(acc),
            [109, 97, 122, 111, 119, 115, 122, 101] => lookup_908_76(acc),
            [109, 97, 122, 117, 114, 121] => lookup_908_77(acc),
            [109, 101, 100] => lookup_908_78(acc),
            [109, 101, 100, 105, 97] => lookup_908_79(acc),
            [109, 105, 97, 115, 116, 97] => lookup_908_80(acc),
            [109, 105, 101, 108, 101, 99] => lookup_908_81(acc),
            [109, 105, 101, 108, 110, 111] => lookup_908_82(acc),
            [109, 105, 108] => lookup_908_83(acc),
            [109, 114, 97, 103, 111, 119, 111] => lookup_908_84(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_908_85(acc),
            [110, 97, 107, 108, 111] => lookup_908_86(acc),
            [110, 101, 116] => lookup_908_87(acc),
            [110, 105, 101, 114, 117, 99, 104, 111, 109, 111, 115, 99, 105] => lookup_908_88(acc),
            [110, 111, 109] => lookup_908_89(acc),
            [110, 111, 119, 97, 114, 117, 100, 97] => lookup_908_90(acc),
            [110, 121, 115, 97] => lookup_908_91(acc),
            [111, 108, 97, 119, 97] => lookup_908_92(acc),
            [111, 108, 101, 99, 107, 111] => lookup_908_93(acc),
            [111, 108, 107, 117, 115, 122] => lookup_908_94(acc),
            [111, 108, 115, 122, 116, 121, 110] => lookup_908_95(acc),
            [111, 112, 111, 99, 122, 110, 111] => lookup_908_96(acc),
            [111, 112, 111, 108, 101] => lookup_908_97(acc),
            [111, 114, 103] => lookup_908_98(acc),
            [111, 115, 116, 114, 111, 100, 97] => lookup_908_99(acc),
            [111, 115, 116, 114, 111, 108, 101, 107, 97] => lookup_908_100(acc),
            [111, 115, 116, 114, 111, 119, 105, 101, 99] => lookup_908_101(acc),
            [111, 115, 116, 114, 111, 119, 119, 108, 107, 112] => lookup_908_102(acc),
            [112, 99] => lookup_908_103(acc),
            [112, 105, 108, 97] => lookup_908_104(acc),
            [112, 105, 115, 122] => lookup_908_105(acc),
            [112, 111, 100, 104, 97, 108, 101] => lookup_908_106(acc),
            [112, 111, 100, 108, 97, 115, 105, 101] => lookup_908_107(acc),
            [112, 111, 108, 107, 111, 119, 105, 99, 101] => lookup_908_108(acc),
            [112, 111, 109, 111, 114, 115, 107, 105, 101] => lookup_908_109(acc),
            [112, 111, 109, 111, 114, 122, 101] => lookup_908_110(acc),
            [112, 111, 110, 105, 97, 116, 111, 119, 97] => lookup_908_111(acc),
            [112, 111, 119, 105, 97, 116] => lookup_908_112(acc),
            [112, 111, 122, 110, 97, 110] => lookup_908_113(acc),
            [112, 114, 105, 118] => lookup_908_114(acc),
            [112, 114, 111, 99, 104, 111, 119, 105, 99, 101] => lookup_908_115(acc),
            [112, 114, 117, 115, 122, 107, 111, 119] => lookup_908_116(acc),
            [112, 114, 122, 101, 119, 111, 114, 115, 107] => lookup_908_117(acc),
            [112, 117, 108, 97, 119, 121] => lookup_908_118(acc),
            [114, 97, 100, 111, 109] => lookup_908_119(acc),
            [114, 97, 119, 97, 45, 109, 97, 122] => lookup_908_120(acc),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_908_121(acc),
            [114, 101, 108] => lookup_908_122(acc),
            [114, 121, 98, 110, 105, 107] => lookup_908_123(acc),
            [114, 122, 101, 115, 122, 111, 119] => lookup_908_124(acc),
            [115, 97, 110, 111, 107] => lookup_908_125(acc),
            [115, 100, 115, 99, 108, 111, 117, 100] => lookup_908_126(acc),
            [115, 101, 106, 110, 121] => lookup_908_127(acc),
            [115, 101, 120] => lookup_908_128(acc),
            [115, 104, 111, 112] => lookup_908_129(acc),
            [115, 104, 111, 112, 97, 114, 101, 110, 97] => lookup_908_130(acc),
            [115, 105, 109, 112, 108, 101, 115, 105, 116, 101] => lookup_908_131(acc),
            [115, 107, 108, 101, 112] => lookup_908_132(acc),
            [115, 107, 111, 99, 122, 111, 119] => lookup_908_133(acc),
            [115, 108, 97, 115, 107] => lookup_908_134(acc),
            [115, 108, 117, 112, 115, 107] => lookup_908_135(acc),
            [115, 111, 112, 111, 116] => lookup_908_136(acc),
            [115, 111, 115] => lookup_908_137(acc),
            [115, 111, 115, 110, 111, 119, 105, 101, 99] => lookup_908_138(acc),
            [115, 116, 97, 108, 111, 119, 97, 45, 119, 111, 108, 97] => lookup_908_139(acc),
            [115, 116, 97, 114, 97, 99, 104, 111, 119, 105, 99, 101] => lookup_908_140(acc),
            [115, 116, 97, 114, 103, 97, 114, 100] => lookup_908_141(acc),
            [115, 117, 119, 97, 108, 107, 105] => lookup_908_142(acc),
            [115, 119, 105, 100, 110, 105, 99, 97] => lookup_908_143(acc),
            [115, 119, 105, 100, 110, 105, 107] => lookup_908_144(acc),
            [115, 119, 105, 101, 98, 111, 100, 122, 105, 110] => lookup_908_145(acc),
            [115, 119, 105, 110, 111, 117, 106, 115, 99, 105, 101] => lookup_908_146(acc),
            [115, 122, 99, 122, 101, 99, 105, 110] => lookup_908_147(acc),
            [115, 122, 99, 122, 121, 116, 110, 111] => lookup_908_148(acc),
            [115, 122, 107, 111, 108, 97] => lookup_908_149(acc),
            [116, 97, 114, 103, 105] => lookup_908_150(acc),
            [116, 97, 114, 110, 111, 98, 114, 122, 101, 103] => lookup_908_151(acc),
            [116, 103, 111, 114, 121] => lookup_908_152(acc),
            [116, 109] => lookup_908_153(acc),
            [116, 111, 114, 117, 110] => lookup_908_154(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_908_155(acc),
            [116, 114, 97, 118, 101, 108] => lookup_908_156(acc),
            [116, 117, 114, 101, 107] => lookup_908_157(acc),
            [116, 117, 114, 121, 115, 116, 121, 107, 97] => lookup_908_158(acc),
            [116, 121, 99, 104, 121] => lookup_908_159(acc),
            [117, 110, 105, 99, 108, 111, 117, 100] => lookup_908_160(acc),
            [117, 115, 116, 107, 97] => lookup_908_161(acc),
            [119, 97, 108, 98, 114, 122, 121, 99, 104] => lookup_908_162(acc),
            [119, 97, 114, 109, 105, 97] => lookup_908_163(acc),
            [119, 97, 114, 115, 122, 97, 119, 97] => lookup_908_164(acc),
            [119, 97, 119] => lookup_908_165(acc),
            [119, 101, 103, 114, 111, 119] => lookup_908_166(acc),
            [119, 105, 101, 108, 117, 110] => lookup_908_167(acc),
            [119, 108, 111, 99, 108] => lookup_908_168(acc),
            [119, 108, 111, 99, 108, 97, 119, 101, 107] => lookup_908_169(acc),
            [119, 111, 100, 122, 105, 115, 108, 97, 119] => lookup_908_170(acc),
            [119, 111, 108, 111, 109, 105, 110] => lookup_908_171(acc),
            [119, 114, 111, 99] => lookup_908_172(acc),
            [119, 114, 111, 99, 108, 97, 119] => lookup_908_173(acc),
            [122, 97, 99, 104, 112, 111, 109, 111, 114] => lookup_908_174(acc),
            [122, 97, 103, 97, 110] => lookup_908_175(acc),
            [122, 97, 107, 111, 112, 97, 110, 101] => lookup_908_176(acc),
            [122, 97, 114, 111, 119] => lookup_908_177(acc),
            [122, 103, 111, 114, 97] => lookup_908_178(acc),
            [122, 103, 111, 114, 122, 101, 108, 101, 99] => lookup_908_179(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_909_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_909<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_909_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_910() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_913() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_914_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_914_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_914<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101] => lookup_914_0(acc),
            [111, 119, 110] => lookup_914_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_915_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_915_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_915_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_915_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_915_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_915<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_915_0(acc),
            [101, 100, 117] => lookup_915_1(acc),
            [103, 111, 118] => lookup_915_2(acc),
            [110, 101, 116] => lookup_915_3(acc),
            [111, 114, 103] => lookup_915_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_916() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_917() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_920_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_920<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 100, 105, 101] => lookup_920_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_921() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_922_0(acc),
            [98, 105, 122] => lookup_922_1(acc),
            [99, 111, 109] => lookup_922_2(acc),
            [101, 100, 117] => lookup_922_3(acc),
            [101, 115, 116] => lookup_922_4(acc),
            [103, 111, 118] => lookup_922_5(acc),
            [105, 110, 102, 111] => lookup_922_6(acc),
            [105, 115, 108, 97] => lookup_922_7(acc),
            [110, 97, 109, 101] => lookup_922_8(acc),
            [110, 101, 116] => lookup_922_9(acc),
            [111, 114, 103] => lookup_922_10(acc),
            [112, 114, 111] => lookup_922_11(acc),
            [112, 114, 111, 102] => lookup_922_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_923() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_924() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 99, 105] => lookup_927_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_927_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 99, 104, 97, 114, 115] => lookup_927_0(acc),
            [97, 97, 97] => lookup_927_1(acc),
            [97, 99, 97] => lookup_927_2(acc),
            [97, 99, 99, 116] => lookup_927_3(acc),
            [97, 118, 111, 99, 97, 116] => lookup_927_4(acc),
            [98, 97, 114] => lookup_927_5(acc),
            [98, 97, 114, 115, 121] => lookup_927_6(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_927_7(acc),
            [99, 112, 97] => lookup_927_8(acc),
            [100, 110, 115, 116, 114, 97, 99, 101] => lookup_927_9(info, labels, acc),
            [101, 110, 103] => lookup_927_10(acc),
            [106, 117, 114] => lookup_927_11(acc),
            [108, 97, 119] => lookup_927_12(acc),
            [109, 101, 100] => lookup_927_13(acc),
            [114, 101, 99, 104, 116] => lookup_927_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_928() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_929() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_930() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_931() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_932() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_935() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_936() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_937() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_938_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_938_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_938_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_938_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_938_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_938_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_938_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_938<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_938_0(acc),
            [101, 100, 117] => lookup_938_1(acc),
            [103, 111, 118] => lookup_938_2(acc),
            [110, 101, 116] => lookup_938_3(acc),
            [111, 114, 103] => lookup_938_4(acc),
            [112, 108, 111] => lookup_938_5(acc),
            [115, 101, 99] => lookup_938_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_939_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_939_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_939_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 112, 97, 103, 105, 110, 97, 119, 101, 98] => lookup_939_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_939_1(acc),
            [99, 111, 109] => lookup_939_2(acc),
            [101, 100, 117] => lookup_939_3(acc),
            [103, 111, 118] => lookup_939_4(acc),
            [105, 110, 116] => lookup_939_5(acc),
            [110, 101, 116] => lookup_939_6(acc),
            [110, 111, 109, 101] => lookup_939_7(acc),
            [111, 114, 103] => lookup_939_8(acc),
            [112, 117, 98, 108] => lookup_939_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_940_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_940_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_940_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_940_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_940_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_940_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_940_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_940<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_940_0(acc),
            [105, 100] => lookup_940_1(info, labels, acc),
            [107, 105, 110] => lookup_940_2(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_941_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_941_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_941<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 108, 97, 117] => lookup_941_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_941_1(acc),
            [99, 111] => lookup_941_2(acc),
            [101, 100] => lookup_941_3(acc),
            [103, 111] => lookup_941_4(acc),
            [110, 101] => lookup_941_5(acc),
            [111, 114] => lookup_941_6(acc),
            [120, 52, 52, 51] => lookup_941_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_942() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_943_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_943_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_943_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_943_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_943_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_943_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_943_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_943<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_943_0(acc),
            [99, 111, 111, 112] => lookup_943_1(acc),
            [101, 100, 117] => lookup_943_2(acc),
            [103, 111, 118] => lookup_943_3(acc),
            [109, 105, 108] => lookup_943_4(acc),
            [110, 101, 116] => lookup_943_5(acc),
            [111, 114, 103] => lookup_943_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_944_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_944_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_944_0(acc),
            [99, 111, 109] => lookup_944_1(acc),
            [101, 100, 117] => lookup_944_2(acc),
            [103, 111, 118] => lookup_944_3(acc),
            [109, 105, 108] => lookup_944_4(acc),
            [110, 97, 109, 101] => lookup_944_5(acc),
            [110, 101, 116] => lookup_944_6(acc),
            [111, 114, 103] => lookup_944_7(acc),
            [115, 99, 104] => lookup_944_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_945() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_947() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_948() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_950_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_950_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_950_1(acc),
            [99, 111, 109] => lookup_950_2(acc),
            [110, 111, 109] => lookup_950_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_951() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_952() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_953() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_955() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_956() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_958() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_959() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_961() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_964() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_966() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_967() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_968() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_969() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_970() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_972_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_972<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_972_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_973() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_974() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_976() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_978() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_980_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_980<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 97, 110] => lookup_980_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_981_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_981_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_981_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_981_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_981_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_981_0(acc),
            [98, 97, 114, 115, 121] => lookup_981_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_981_2(acc),
            [99, 111] => lookup_981_3(acc),
            [99, 111, 109] => lookup_981_4(acc),
            [102, 105, 114, 109] => lookup_981_5(acc),
            [105, 110, 102, 111] => lookup_981_6(acc),
            [110, 111, 109] => lookup_981_7(acc),
            [110, 116] => lookup_981_8(acc),
            [111, 114, 103] => lookup_981_9(acc),
            [114, 101, 99] => lookup_981_10(acc),
            [115, 104, 111, 112] => lookup_981_11(acc),
            [115, 116, 111, 114, 101] => lookup_981_12(acc),
            [116, 109] => lookup_981_13(acc),
            [119, 119, 119] => lookup_981_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_982_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_982_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_982_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_982<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_982_0(acc),
            [109, 121, 100, 100, 110, 115] => lookup_982_1(acc),
            [119, 101, 98, 115, 112, 97, 99, 101] => lookup_982_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_983() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_984() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_985() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_986_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_986_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_986_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_986_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 104, 111, 112] => lookup_986_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_986_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_986_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_986_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_986_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_986_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_986_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_986_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_986<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_986_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_986_1(acc),
            [98, 114, 101, 110, 100, 108, 121] => lookup_986_2(info, labels, acc),
            [99, 111] => lookup_986_3(acc),
            [101, 100, 117] => lookup_986_4(acc),
            [103, 111, 118] => lookup_986_5(acc),
            [105, 110] => lookup_986_6(acc),
            [111, 114, 103] => lookup_986_7(acc),
            [111, 120] => lookup_986_8(acc),
            [117, 97] => lookup_986_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_987() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_988_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [104, 98] => lookup_988_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_988_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_19<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 112, 115] => lookup_988_19_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_988_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_25_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_25_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_988_25_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_988_25_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_25_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_988_25_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_988_25_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_25_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_988_25_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_988_25_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_25_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_988_25_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_988_25<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 115, 116, 105, 110, 103] => lookup_988_25_0(info, labels, acc),
            [108, 97, 110, 100, 105, 110, 103] => lookup_988_25_1(info, labels, acc),
            [115, 112, 101, 99, 116, 114, 117, 109] => lookup_988_25_2(info, labels, acc),
            [118, 112, 115] => lookup_988_25_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_988_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_35<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_988_35_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_988_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_988<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 115, 97, 105, 116] => lookup_988_0(acc),
            [97, 99] => lookup_988_1(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_988_2(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_988_3(acc),
            [98, 105, 114] => lookup_988_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_988_5(acc),
            [99, 98, 103] => lookup_988_6(acc),
            [99, 108, 100, 109, 97, 105, 108] => lookup_988_7(info, labels, acc),
            [99, 111, 109] => lookup_988_8(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_988_9(acc),
            [101, 100, 117] => lookup_988_10(acc),
            [101, 117, 114, 111, 100, 105, 114] => lookup_988_11(acc),
            [103, 111, 118] => lookup_988_12(acc),
            [103, 114, 111, 122, 110, 121] => lookup_988_13(acc),
            [105, 110, 116] => lookup_988_14(acc),
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_988_15(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_988_16(acc),
            [108, 107, 51] => lookup_988_17(acc),
            [109, 97, 114, 105, 110, 101] => lookup_988_18(acc),
            [109, 99, 100, 105, 114] => lookup_988_19(labels, acc),
            [109, 99, 112, 114, 101] => lookup_988_20(acc),
            [109, 105, 108] => lookup_988_21(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_988_22(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_988_23(acc),
            [109, 115, 107] => lookup_988_24(acc),
            [109, 121, 106, 105, 110, 111] => lookup_988_25(labels, acc),
            [109, 121, 116, 105, 115] => lookup_988_26(acc),
            [110, 97, 52, 117] => lookup_988_27(acc),
            [110, 97, 108, 99, 104, 105, 107] => lookup_988_28(acc),
            [110, 101, 116] => lookup_988_29(acc),
            [110, 111, 118] => lookup_988_30(acc),
            [111, 114, 103] => lookup_988_31(acc),
            [112, 112] => lookup_988_32(acc),
            [112, 121, 97, 116, 105, 103, 111, 114, 115, 107] => lookup_988_33(acc),
            [114, 97, 115] => lookup_988_34(acc),
            [114, 101, 103, 114, 117, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_988_35(info, labels, acc)
            }
            [115, 112, 98] => lookup_988_36(acc),
            [116, 101, 115, 116] => lookup_988_37(acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_988_38(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_988_39(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_989() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_990() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_991_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_991_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_991_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_991_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_991_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_991_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_991_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_991_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_991_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_991_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_991_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_991_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_991_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_991_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_991_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_991_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_991_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_991_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_991<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 117, 105, 108, 100] => lookup_991_0(info, labels, acc),
            [99, 111, 100, 101] => lookup_991_1(info, labels, acc),
            [100, 97, 116, 97, 98, 97, 115, 101] => lookup_991_2(info, labels, acc),
            [100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116] => lookup_991_3(acc),
            [104, 115] => lookup_991_4(acc),
            [109, 105, 103, 114, 97, 116, 105, 111, 110] => lookup_991_5(info, labels, acc),
            [111, 110, 112, 111, 114, 116, 101, 114] => lookup_991_6(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_991_7(acc),
            [114, 101, 112, 108] => lookup_991_8(acc),
            [115, 101, 114, 118, 101, 114, 115] => lookup_991_9(acc),
            [119, 105, 120] => lookup_991_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_992_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_992<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_992_0(acc),
            [99, 111] => lookup_992_1(acc),
            [99, 111, 111, 112] => lookup_992_2(acc),
            [103, 111, 118] => lookup_992_3(acc),
            [109, 105, 108] => lookup_992_4(acc),
            [110, 101, 116] => lookup_992_5(acc),
            [111, 114, 103] => lookup_992_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_993() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_995_0(acc),
            [101, 100, 117] => lookup_995_1(acc),
            [103, 111, 118] => lookup_995_2(acc),
            [109, 101, 100] => lookup_995_3(acc),
            [110, 101, 116] => lookup_995_4(acc),
            [111, 114, 103] => lookup_995_5(acc),
            [112, 117, 98] => lookup_995_6(acc),
            [115, 99, 104] => lookup_995_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_996() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_997() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_998() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_999() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1001() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1002() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1003() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1004() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1005() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1006() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1007() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1009() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1010() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1012_0(acc),
            [101, 100, 117] => lookup_1012_1(acc),
            [103, 111, 118] => lookup_1012_2(acc),
            [110, 101, 116] => lookup_1012_3(acc),
            [111, 114, 103] => lookup_1012_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1013() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1015_0(acc),
            [101, 100, 117] => lookup_1015_1(acc),
            [103, 111, 118] => lookup_1015_2(acc),
            [110, 101, 116] => lookup_1015_3(acc),
            [111, 114, 103] => lookup_1015_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1016() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1017() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1018() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1019() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1021() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1023_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1023<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1023_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1024_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1024_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1024_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118, 105, 99, 101] => lookup_1024_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1024<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1024_0(acc),
            [103, 111, 118] => lookup_1024_1(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1025_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1025_0(acc),
            [101, 100, 117] => lookup_1025_1(acc),
            [103, 111, 118] => lookup_1025_2(acc),
            [105, 110, 102, 111] => lookup_1025_3(acc),
            [109, 101, 100] => lookup_1025_4(acc),
            [110, 101, 116] => lookup_1025_5(acc),
            [111, 114, 103] => lookup_1025_6(acc),
            [116, 118] => lookup_1025_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1026_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1026_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1026_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1026_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1026_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1026_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1026_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1026_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_34_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1026_34<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [115, 117] => lookup_1026_34_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1026_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 109, 105, 110, 115, 105, 100, 97] => lookup_1026_0(acc),
            [97] => lookup_1026_1(acc),
            [97, 99] => lookup_1026_2(acc),
            [98] => lookup_1026_3(acc),
            [98, 100] => lookup_1026_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1026_5(acc),
            [98, 114, 97, 110, 100] => lookup_1026_6(acc),
            [99] => lookup_1026_7(acc),
            [99, 111, 109] => lookup_1026_8(acc),
            [99, 111, 110, 102] => lookup_1026_9(acc),
            [100] => lookup_1026_10(acc),
            [101] => lookup_1026_11(acc),
            [102] => lookup_1026_12(acc),
            [102, 104] => lookup_1026_13(acc),
            [102, 104, 115, 107] => lookup_1026_14(acc),
            [102, 104, 118] => lookup_1026_15(acc),
            [103] => lookup_1026_16(acc),
            [104] => lookup_1026_17(acc),
            [105] => lookup_1026_18(acc),
            [105, 111, 112, 115, 121, 115] => lookup_1026_19(acc),
            [105, 116, 99, 111, 117, 108, 100, 98, 101, 119, 111, 114] => lookup_1026_20(acc),
            [107] => lookup_1026_21(acc),
            [107, 111, 109, 102, 111, 114, 98] => lookup_1026_22(acc),
            [107, 111, 109, 109, 117, 110, 97, 108, 102, 111, 114, 98, 117, 110, 100] => {
                lookup_1026_23(acc)
            }
            [107, 111, 109, 118, 117, 120] => lookup_1026_24(acc),
            [108] => lookup_1026_25(acc),
            [108, 97, 110, 98, 105, 98] => lookup_1026_26(acc),
            [109] => lookup_1026_27(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_1026_28(acc),
            [110] => lookup_1026_29(acc),
            [110, 97, 116, 117, 114, 98, 114, 117, 107, 115, 103, 121, 109, 110] => {
                lookup_1026_30(acc)
            }
            [111] => lookup_1026_31(acc),
            [111, 114, 103] => lookup_1026_32(acc),
            [112] => lookup_1026_33(acc),
            [112, 97, 98, 97] => lookup_1026_34(info, labels, acc),
            [112, 97, 114, 116, 105] => lookup_1026_35(acc),
            [112, 112] => lookup_1026_36(acc),
            [112, 114, 101, 115, 115] => lookup_1026_37(acc),
            [114] => lookup_1026_38(acc),
            [115] => lookup_1026_39(acc),
            [116] => lookup_1026_40(acc),
            [116, 109] => lookup_1026_41(acc),
            [117] => lookup_1026_42(acc),
            [119] => lookup_1026_43(acc),
            [120] => lookup_1026_44(acc),
            [121] => lookup_1026_45(acc),
            [122] => lookup_1026_46(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1027() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1028() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1029() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1030() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1031() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1032() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1033() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1034<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1034_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1035() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1036() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1037() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1038() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1039() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1040_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1040_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1040_0(acc),
            [99, 111, 109] => lookup_1040_1(acc),
            [101, 100, 117] => lookup_1040_2(acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_1040_3(acc),
            [103, 111, 118] => lookup_1040_4(acc),
            [110, 101, 116] => lookup_1040_5(acc),
            [111, 114, 103] => lookup_1040_6(acc),
            [112, 101, 114] => lookup_1040_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1041_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1041_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1041_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1041_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1041_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1041_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1041_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1041_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1041_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1041_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1041_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1041_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 110, 116] => lookup_1041_8_0(acc),
            [101, 117] => lookup_1041_8_1(acc),
            [117, 115] => lookup_1041_8_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1041_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1041_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1041<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 112] => lookup_1041_0(acc),
            [99, 111, 109] => lookup_1041_1(acc),
            [103, 111, 118] => lookup_1041_2(acc),
            [104, 97, 115, 104, 98, 97, 110, 103] => lookup_1041_3(acc),
            [109, 105, 108] => lookup_1041_4(acc),
            [110, 101, 116] => lookup_1041_5(acc),
            [110, 111, 119] => lookup_1041_6(acc),
            [111, 114, 103] => lookup_1041_7(acc),
            [112, 108, 97, 116, 102, 111, 114, 109] => lookup_1041_8(info, labels, acc),
            [118, 120, 108] => lookup_1041_9(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_1041_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1042() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1043() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1044() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1045() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1048() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1049_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1049_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1049_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1049<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1049_0(acc),
            [98, 97, 115, 101] => lookup_1049_1(acc),
            [104, 111, 112, 108, 105, 120] => lookup_1049_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1050() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1051() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1052() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1053_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1053_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1053_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1053<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1053_0(acc),
            [103, 105, 116, 97, 112, 112] => lookup_1053_1(acc),
            [103, 105, 116, 112, 97, 103, 101] => lookup_1053_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1054() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1056() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1057_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1057_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1057_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_14_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1057_14_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1057_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_16_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1057_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1057_16_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1057<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1057_0(acc),
            [98, 121, 101, 110] => lookup_1057_1(acc),
            [99, 108, 111, 117, 100, 101, 114, 97] => lookup_1057_2(info, labels, acc),
            [99, 121, 111, 110] => lookup_1057_3(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_1057_4(acc),
            [102, 110, 119, 107] => lookup_1057_5(acc),
            [102, 111, 108, 105, 111, 110, 101, 116, 119, 111, 114, 107] => lookup_1057_6(acc),
            [106, 101, 108, 101] => lookup_1057_7(acc),
            [108, 101, 108, 117, 120] => lookup_1057_8(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1057_9(acc),
            [109, 105, 110, 116, 101, 114, 101] => lookup_1057_10(acc),
            [110, 111, 118, 101, 99, 111, 114, 101] => lookup_1057_11(acc),
            [111, 109, 110, 105, 119, 101] => lookup_1057_12(acc),
            [111, 112, 101, 110, 115, 111, 99, 105, 97, 108] => lookup_1057_13(acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 115, 104] => lookup_1057_14(info, labels, acc),
            [115, 114, 104, 116] => lookup_1057_15(acc),
            [116, 115, 116] => lookup_1057_16(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1058() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1059<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1059_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1060() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1062() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1063() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1064_0(acc),
            [101, 100, 117] => lookup_1064_1(acc),
            [103, 111, 118] => lookup_1064_2(acc),
            [110, 101, 116] => lookup_1064_3(acc),
            [111, 114, 103] => lookup_1064_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1065() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1066() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1067() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1068() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1069_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_1069_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1069_1(acc),
            [99, 111, 109] => lookup_1069_2(acc),
            [101, 100, 117] => lookup_1069_3(acc),
            [103, 111, 117, 118] => lookup_1069_4(acc),
            [111, 114, 103] => lookup_1069_5(acc),
            [112, 101, 114, 115, 111] => lookup_1069_6(acc),
            [117, 110, 105, 118] => lookup_1069_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1070() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1071_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1071<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1071_0(acc),
            [101, 100, 117] => lookup_1071_1(acc),
            [103, 111, 118] => lookup_1071_2(acc),
            [109, 101] => lookup_1071_3(acc),
            [110, 101, 116] => lookup_1071_4(acc),
            [111, 114, 103] => lookup_1071_5(acc),
            [115, 99, 104] => lookup_1071_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1072() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1073() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1074() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1075() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1076() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1077() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1078_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1078_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1078_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1078<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 104, 101, 114] => lookup_1078_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1079() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1080() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1081() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1082() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1083_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1083_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1083<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 102, 97, 115, 116] => lookup_1083_0(acc),
            [117, 98, 101, 114] => lookup_1083_1(acc),
            [120, 115, 52, 97, 108, 108] => lookup_1083_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1084() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1085() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1086() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1087() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1088_0(acc),
            [99, 111, 109] => lookup_1088_1(acc),
            [101, 100, 117] => lookup_1088_2(acc),
            [103, 111, 118] => lookup_1088_3(acc),
            [109, 101] => lookup_1088_4(acc),
            [110, 101, 116] => lookup_1088_5(acc),
            [111, 114, 103] => lookup_1088_6(acc),
            [115, 99, 104] => lookup_1088_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1089_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1089_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1089_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1089_0(acc),
            [99, 111, 109] => lookup_1089_1(acc),
            [99, 111, 110, 115, 117, 108, 97, 100, 111] => lookup_1089_2(acc),
            [101, 100, 117] => lookup_1089_3(acc),
            [101, 109, 98, 97, 105, 120, 97, 100, 97] => lookup_1089_4(acc),
            [107, 105, 114, 97, 114, 97] => lookup_1089_5(acc),
            [109, 105, 108] => lookup_1089_6(acc),
            [110, 101, 116] => lookup_1089_7(acc),
            [110, 111, 104, 111] => lookup_1089_8(acc),
            [111, 114, 103] => lookup_1089_9(acc),
            [112, 114, 105, 110, 99, 105, 112, 101] => lookup_1089_10(acc),
            [115, 97, 111, 116, 111, 109, 101] => lookup_1089_11(acc),
            [115, 116, 111, 114, 101] => lookup_1089_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1090() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1092() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1093() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1094() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1095() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1096() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1099_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1099<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 108, 108, 102, 121] => lookup_1099_0(acc),
            [115, 104, 111, 112, 119, 97, 114, 101] => lookup_1099_1(acc),
            [115, 116, 111, 114, 101, 98, 97, 115, 101] => lookup_1099_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1100() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1101() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1102() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1103() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1104_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1104<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 107, 104, 97, 122, 105, 97] => lookup_1104_0(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_1104_1(acc),
            [97, 107, 116, 121, 117, 98, 105, 110, 115, 107] => lookup_1104_2(acc),
            [97, 114, 107, 104, 97, 110, 103, 101, 108, 115, 107] => lookup_1104_3(acc),
            [97, 114, 109, 101, 110, 105, 97] => lookup_1104_4(acc),
            [97, 115, 104, 103, 97, 98, 97, 100] => lookup_1104_5(acc),
            [97, 122, 101, 114, 98, 97, 105, 106, 97, 110] => lookup_1104_6(acc),
            [98, 97, 108, 97, 115, 104, 111, 118] => lookup_1104_7(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_1104_8(acc),
            [98, 114, 121, 97, 110, 115, 107] => lookup_1104_9(acc),
            [98, 117, 107, 104, 97, 114, 97] => lookup_1104_10(acc),
            [99, 104, 105, 109, 107, 101, 110, 116] => lookup_1104_11(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_1104_12(acc),
            [101, 97, 115, 116, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1104_13(acc)
            }
            [101, 120, 110, 101, 116] => lookup_1104_14(acc),
            [103, 101, 111, 114, 103, 105, 97] => lookup_1104_15(acc),
            [103, 114, 111, 122, 110, 121] => lookup_1104_16(acc),
            [105, 118, 97, 110, 111, 118, 111] => lookup_1104_17(acc),
            [106, 97, 109, 98, 121, 108] => lookup_1104_18(acc),
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_1104_19(acc),
            [107, 97, 108, 117, 103, 97] => lookup_1104_20(acc),
            [107, 97, 114, 97, 99, 111, 108] => lookup_1104_21(acc),
            [107, 97, 114, 97, 103, 97, 110, 100, 97] => lookup_1104_22(acc),
            [107, 97, 114, 101, 108, 105, 97] => lookup_1104_23(acc),
            [107, 104, 97, 107, 97, 115, 115, 105, 97] => lookup_1104_24(acc),
            [107, 114, 97, 115, 110, 111, 100, 97, 114] => lookup_1104_25(acc),
            [107, 117, 114, 103, 97, 110] => lookup_1104_26(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_1104_27(acc),
            [108, 101, 110, 117, 103] => lookup_1104_28(acc),
            [109, 97, 110, 103, 121, 115, 104, 108, 97, 107] => lookup_1104_29(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_1104_30(acc),
            [109, 115, 107] => lookup_1104_31(acc),
            [109, 117, 114, 109, 97, 110, 115, 107] => lookup_1104_32(acc),
            [110, 97, 108, 99, 104, 105, 107] => lookup_1104_33(acc),
            [110, 97, 118, 111, 105] => lookup_1104_34(acc),
            [110, 111, 114, 116, 104, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1104_35(acc)
            }
            [110, 111, 118] => lookup_1104_36(acc),
            [111, 98, 110, 105, 110, 115, 107] => lookup_1104_37(acc),
            [112, 101, 110, 122, 97] => lookup_1104_38(acc),
            [112, 111, 107, 114, 111, 118, 115, 107] => lookup_1104_39(acc),
            [115, 111, 99, 104, 105] => lookup_1104_40(acc),
            [115, 112, 98] => lookup_1104_41(acc),
            [116, 97, 115, 104, 107, 101, 110, 116] => lookup_1104_42(acc),
            [116, 101, 114, 109, 101, 122] => lookup_1104_43(acc),
            [116, 111, 103, 108, 105, 97, 116, 116, 105] => lookup_1104_44(acc),
            [116, 114, 111, 105, 116, 115, 107] => lookup_1104_45(acc),
            [116, 115, 101, 108, 105, 110, 111, 103, 114, 97, 100] => lookup_1104_46(acc),
            [116, 117, 108, 97] => lookup_1104_47(acc),
            [116, 117, 118, 97] => lookup_1104_48(acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_1104_49(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_1104_50(acc),
            [118, 111, 108, 111, 103, 100, 97] => lookup_1104_51(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1105() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1106() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1107() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1108_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1108<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1108_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1109() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1112<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1112_0(acc),
            [101, 100, 117] => lookup_1112_1(acc),
            [103, 111, 98] => lookup_1112_2(acc),
            [111, 114, 103] => lookup_1112_3(acc),
            [114, 101, 100] => lookup_1112_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1113() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1114() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1115_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1115<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1115_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1116_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1116_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1116_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1116_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1116_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1116_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1116<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1116_0(acc),
            [101, 100, 117] => lookup_1116_1(acc),
            [103, 111, 118] => lookup_1116_2(acc),
            [109, 105, 108] => lookup_1116_3(acc),
            [110, 101, 116] => lookup_1116_4(acc),
            [111, 114, 103] => lookup_1116_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1117() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1118_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1118<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 110, 105, 103, 104, 116, 112, 111, 105, 110, 116] => lookup_1118_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1119_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1119_0(acc),
            [99, 111] => lookup_1119_1(acc),
            [111, 114, 103] => lookup_1119_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1120() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1122() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1123() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1124() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1126() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1127() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1128() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1129() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1130_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1130_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1130<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104] => lookup_1130_0(acc),
            [109, 101] => lookup_1130_1(acc),
            [119, 101] => lookup_1130_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1131() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1132_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1132<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1132_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1133() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1134_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1134_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1134<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_1134_0(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1134_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1135() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1136<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1136_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1137() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1139() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1140() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1141_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1141<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104] => lookup_1141_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1142() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1143_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1143<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1143_0(acc),
            [99, 111] => lookup_1143_1(acc),
            [103, 111] => lookup_1143_2(acc),
            [105, 110] => lookup_1143_3(acc),
            [109, 105] => lookup_1143_4(acc),
            [110, 101, 116] => lookup_1143_5(acc),
            [111, 110, 108, 105, 110, 101] => lookup_1143_6(acc),
            [111, 114] => lookup_1143_7(acc),
            [115, 104, 111, 112] => lookup_1143_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1144() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1145() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1146() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1150() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1152() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1153<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1153_0(acc),
            [98, 105, 122] => lookup_1153_1(acc),
            [99, 111] => lookup_1153_2(acc),
            [99, 111, 109] => lookup_1153_3(acc),
            [101, 100, 117] => lookup_1153_4(acc),
            [103, 111] => lookup_1153_5(acc),
            [103, 111, 118] => lookup_1153_6(acc),
            [105, 110, 116] => lookup_1153_7(acc),
            [109, 105, 108] => lookup_1153_8(acc),
            [110, 97, 109, 101] => lookup_1153_9(acc),
            [110, 101, 116] => lookup_1153_10(acc),
            [110, 105, 99] => lookup_1153_11(acc),
            [111, 114, 103] => lookup_1153_12(acc),
            [116, 101, 115, 116] => lookup_1153_13(acc),
            [119, 101, 98] => lookup_1153_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1154() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1155() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1157() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1158_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1158<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1158_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1159_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1159_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1159_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1159_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1159_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1159_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1159_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1159_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1159<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1159_0(acc),
            [99, 111, 109] => lookup_1159_1(acc),
            [101, 100, 117] => lookup_1159_2(acc),
            [103, 111, 118] => lookup_1159_3(acc),
            [109, 105, 108] => lookup_1159_4(acc),
            [110, 101, 116] => lookup_1159_5(acc),
            [110, 111, 109] => lookup_1159_6(acc),
            [111, 114, 103] => lookup_1159_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1160() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1161_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1161_0(acc),
            [101, 110, 115] => lookup_1161_1(acc),
            [102, 105, 110] => lookup_1161_2(acc),
            [103, 111, 118] => lookup_1161_3(acc),
            [105, 110, 100] => lookup_1161_4(acc),
            [105, 110, 102, 111] => lookup_1161_5(acc),
            [105, 110, 116, 108] => lookup_1161_6(acc),
            [109, 105, 110, 99, 111, 109] => lookup_1161_7(acc),
            [110, 97, 116] => lookup_1161_8(acc),
            [110, 101, 116] => lookup_1161_9(acc),
            [111, 114, 97, 110, 103, 101, 99, 108, 111, 117, 100] => lookup_1161_10(acc),
            [111, 114, 103] => lookup_1161_11(acc),
            [112, 101, 114, 115, 111] => lookup_1161_12(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_1161_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1162_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1162_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1162_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1162_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1162_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 105, 114, 101, 99, 116] => lookup_1162_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1162_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1162_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1162_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1162<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [54, 49, 49] => lookup_1162_0(acc),
            [99, 111, 109] => lookup_1162_1(acc),
            [101, 100, 117] => lookup_1162_2(acc),
            [103, 111, 118] => lookup_1162_3(acc),
            [109, 105, 108] => lookup_1162_4(acc),
            [110, 101, 116] => lookup_1162_5(acc),
            [110, 121, 97, 110] => lookup_1162_6(acc),
            [111, 114, 103] => lookup_1162_7(acc),
            [111, 121, 97] => lookup_1162_8(acc),
            [113, 117, 105, 99, 107, 99, 111, 110, 110, 101, 99, 116] => {
                lookup_1162_9(info, labels, acc)
            }
            [114, 100, 118] => lookup_1162_10(acc),
            [118, 112, 110, 112, 108, 117, 115] => lookup_1162_11(acc),
            [120, 48] => lookup_1162_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1163_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1163<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 101, 113, 117, 97, 108, 105, 102, 121, 109, 101] => lookup_1163_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1164() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1166_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1166_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1166<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 119, 45, 100, 110, 115] => lookup_1166_0(acc),
            [110, 116, 100, 108, 108] => lookup_1166_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1167() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1170() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1171() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1172() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1174_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1174_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1174_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1174_14_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1174_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 118] => lookup_1174_0(acc),
            [98, 98, 115] => lookup_1174_1(acc),
            [98, 101, 108] => lookup_1174_2(acc),
            [98, 105, 122] => lookup_1174_3(acc),
            [99, 111, 109] => lookup_1174_4(labels, acc),
            [100, 114] => lookup_1174_5(acc),
            [101, 100, 117] => lookup_1174_6(acc),
            [103, 101, 110] => lookup_1174_7(acc),
            [103, 111, 118] => lookup_1174_8(acc),
            [105, 110, 102, 111] => lookup_1174_9(acc),
            [107, 49, 50] => lookup_1174_10(acc),
            [107, 101, 112] => lookup_1174_11(acc),
            [109, 105, 108] => lookup_1174_12(acc),
            [110, 97, 109, 101] => lookup_1174_13(acc),
            [110, 99] => lookup_1174_14(labels, acc),
            [110, 101, 116] => lookup_1174_15(acc),
            [111, 114, 103] => lookup_1174_16(acc),
            [112, 111, 108] => lookup_1174_17(acc),
            [116, 101, 108] => lookup_1174_18(acc),
            [116, 115, 107] => lookup_1174_19(acc),
            [116, 118] => lookup_1174_20(acc),
            [119, 101, 98] => lookup_1174_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1175_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1175<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1175_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1176() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1177() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1179() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1181() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1183<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 101, 114, 111] => lookup_1183_0(acc),
            [98, 105, 122] => lookup_1183_1(acc),
            [99, 111] => lookup_1183_2(acc),
            [99, 111, 109] => lookup_1183_3(acc),
            [99, 111, 111, 112] => lookup_1183_4(acc),
            [101, 100, 117] => lookup_1183_5(acc),
            [103, 111, 118] => lookup_1183_6(acc),
            [105, 110, 102, 111] => lookup_1183_7(acc),
            [105, 110, 116] => lookup_1183_8(acc),
            [106, 111, 98, 115] => lookup_1183_9(acc),
            [109, 111, 98, 105] => lookup_1183_10(acc),
            [109, 117, 115, 101, 117, 109] => lookup_1183_11(acc),
            [110, 97, 109, 101] => lookup_1183_12(acc),
            [110, 101, 116] => lookup_1183_13(acc),
            [111, 114, 103] => lookup_1183_14(acc),
            [112, 114, 111] => lookup_1183_15(acc),
            [116, 114, 97, 118, 101, 108] => lookup_1183_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1184() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1186() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1187() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1188_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1188_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1188_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1188_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1188_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1188_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1188<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116, 116, 101, 114, 45, 116, 104, 97, 110] => lookup_1188_0(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1188_1(acc),
            [102, 114, 111, 109] => lookup_1188_2(acc),
            [111, 110, 45, 116, 104, 101, 45, 119, 101, 98] => lookup_1188_3(acc),
            [115, 97, 107, 117, 114, 97] => lookup_1188_4(acc),
            [119, 111, 114, 115, 101, 45, 116, 104, 97, 110] => lookup_1188_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1189() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1190_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1190_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 109, 97, 105, 108, 101, 114] => lookup_1190_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1190_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1190_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1190<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1190_0(acc),
            [99, 108, 117, 98] => lookup_1190_1(acc),
            [99, 111, 109] => lookup_1190_2(labels, acc),
            [101, 98, 105, 122] => lookup_1190_3(acc),
            [101, 100, 117] => lookup_1190_4(acc),
            [103, 97, 109, 101] => lookup_1190_5(acc),
            [103, 111, 118] => lookup_1190_6(acc),
            [105, 100, 118] => lookup_1190_7(acc),
            [109, 105, 108] => lookup_1190_8(acc),
            [110, 101, 116] => lookup_1190_9(acc),
            [111, 114, 103] => lookup_1190_10(acc),
            [117, 114, 108] => lookup_1190_11(acc),
            [120, 110, 45, 45, 99, 122, 114, 119, 50, 56, 98] => lookup_1190_12(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_1190_13(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 111, 54, 52, 97] => lookup_1190_14(acc),
            [229, 149, 134, 230, 165, 173] => lookup_1190_15(acc),
            [231, 181, 132, 231, 185, 148] => lookup_1190_16(acc),
            [231, 182, 178, 232, 183, 175] => lookup_1190_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1191_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1191_0(acc),
            [99, 111] => lookup_1191_1(acc),
            [103, 111] => lookup_1191_2(acc),
            [104, 111, 116, 101, 108] => lookup_1191_3(acc),
            [105, 110, 102, 111] => lookup_1191_4(acc),
            [109, 101] => lookup_1191_5(acc),
            [109, 105, 108] => lookup_1191_6(acc),
            [109, 111, 98, 105] => lookup_1191_7(acc),
            [110, 101] => lookup_1191_8(acc),
            [111, 114] => lookup_1191_9(acc),
            [115, 99] => lookup_1191_10(acc),
            [116, 118] => lookup_1191_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1192_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1192_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1192_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1192_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1192_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1192_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1192_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1192_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1192_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1192_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1192_0(acc),
            [99, 99] => lookup_1192_1(acc),
            [99, 104, 101, 114, 107, 97, 115, 115, 121] => lookup_1192_2(acc),
            [99, 104, 101, 114, 107, 97, 115, 121] => lookup_1192_3(acc),
            [99, 104, 101, 114, 110, 105, 103, 111, 118] => lookup_1192_4(acc),
            [99, 104, 101, 114, 110, 105, 104, 105, 118] => lookup_1192_5(acc),
            [99, 104, 101, 114, 110, 105, 118, 116, 115, 105] => lookup_1192_6(acc),
            [99, 104, 101, 114, 110, 111, 118, 116, 115, 121] => lookup_1192_7(acc),
            [99, 107] => lookup_1192_8(acc),
            [99, 110] => lookup_1192_9(acc),
            [99, 111] => lookup_1192_10(acc),
            [99, 111, 109] => lookup_1192_11(acc),
            [99, 114] => lookup_1192_12(acc),
            [99, 114, 105, 109, 101, 97] => lookup_1192_13(acc),
            [99, 118] => lookup_1192_14(acc),
            [99, 120] => lookup_1192_15(acc),
            [100, 110] => lookup_1192_16(acc),
            [100, 110, 101, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_1192_17(acc)
            }
            [100, 110, 105, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_1192_18(acc)
            }
            [100, 111, 110, 101, 116, 115, 107] => lookup_1192_19(acc),
            [100, 112] => lookup_1192_20(acc),
            [101, 100, 117] => lookup_1192_21(acc),
            [103, 111, 118] => lookup_1192_22(acc),
            [105, 101] => lookup_1192_23(acc),
            [105, 102] => lookup_1192_24(acc),
            [105, 110] => lookup_1192_25(acc),
            [105, 110, 102] => lookup_1192_26(acc),
            [105, 118, 97, 110, 111, 45, 102, 114, 97, 110, 107, 105, 118, 115, 107] => {
                lookup_1192_27(acc)
            }
            [107, 104] => lookup_1192_28(acc),
            [107, 104, 97, 114, 107, 105, 118] => lookup_1192_29(acc),
            [107, 104, 97, 114, 107, 111, 118] => lookup_1192_30(acc),
            [107, 104, 101, 114, 115, 111, 110] => lookup_1192_31(acc),
            [107, 104, 109, 101, 108, 110, 105, 116, 115, 107, 105, 121] => lookup_1192_32(acc),
            [107, 104, 109, 101, 108, 110, 121, 116, 115, 107, 121, 105] => lookup_1192_33(acc),
            [107, 105, 101, 118] => lookup_1192_34(acc),
            [107, 105, 114, 111, 118, 111, 103, 114, 97, 100] => lookup_1192_35(acc),
            [107, 109] => lookup_1192_36(acc),
            [107, 114] => lookup_1192_37(acc),
            [107, 114, 111, 112, 121, 118, 110, 121, 116, 115, 107, 121, 105] => {
                lookup_1192_38(acc)
            }
            [107, 114, 121, 109] => lookup_1192_39(acc),
            [107, 115] => lookup_1192_40(acc),
            [107, 118] => lookup_1192_41(acc),
            [107, 121, 105, 118] => lookup_1192_42(acc),
            [108, 103] => lookup_1192_43(acc),
            [108, 116] => lookup_1192_44(acc),
            [108, 116, 100] => lookup_1192_45(acc),
            [108, 117, 103, 97, 110, 115, 107] => lookup_1192_46(acc),
            [108, 117, 104, 97, 110, 115, 107] => lookup_1192_47(acc),
            [108, 117, 116, 115, 107] => lookup_1192_48(acc),
            [108, 118] => lookup_1192_49(acc),
            [108, 118, 105, 118] => lookup_1192_50(acc),
            [109, 107] => lookup_1192_51(acc),
            [109, 121, 107, 111, 108, 97, 105, 118] => lookup_1192_52(acc),
            [110, 101, 116] => lookup_1192_53(acc),
            [110, 105, 107, 111, 108, 97, 101, 118] => lookup_1192_54(acc),
            [111, 100] => lookup_1192_55(acc),
            [111, 100, 101, 115, 97] => lookup_1192_56(acc),
            [111, 100, 101, 115, 115, 97] => lookup_1192_57(acc),
            [111, 114, 103] => lookup_1192_58(acc),
            [112, 108] => lookup_1192_59(acc),
            [112, 111, 108, 116, 97, 118, 97] => lookup_1192_60(acc),
            [112, 112] => lookup_1192_61(acc),
            [114, 105, 118, 110, 101] => lookup_1192_62(acc),
            [114, 111, 118, 110, 111] => lookup_1192_63(acc),
            [114, 118] => lookup_1192_64(acc),
            [115, 98] => lookup_1192_65(acc),
            [115, 101, 98, 97, 115, 116, 111, 112, 111, 108] => lookup_1192_66(acc),
            [115, 101, 118, 97, 115, 116, 111, 112, 111, 108] => lookup_1192_67(acc),
            [115, 109] => lookup_1192_68(acc),
            [115, 117, 109, 121] => lookup_1192_69(acc),
            [116, 101] => lookup_1192_70(acc),
            [116, 101, 114, 110, 111, 112, 105, 108] => lookup_1192_71(acc),
            [117, 122] => lookup_1192_72(acc),
            [117, 122, 104, 103, 111, 114, 111, 100] => lookup_1192_73(acc),
            [117, 122, 104, 104, 111, 114, 111, 100] => lookup_1192_74(acc),
            [118] => lookup_1192_75(acc),
            [118, 105, 110, 110, 105, 99, 97] => lookup_1192_76(acc),
            [118, 105, 110, 110, 121, 116, 115, 105, 97] => lookup_1192_77(acc),
            [118, 110] => lookup_1192_78(acc),
            [118, 111, 108, 121, 110] => lookup_1192_79(acc),
            [121, 97, 108, 116, 97] => lookup_1192_80(acc),
            [122, 97, 107, 97, 114, 112, 97, 116, 116, 105, 97] => lookup_1192_81(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 101] => lookup_1192_82(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 105, 97] => lookup_1192_83(acc),
            [122, 104, 105, 116, 111, 109, 105, 114] => lookup_1192_84(acc),
            [122, 104, 121, 116, 111, 109, 121, 114] => lookup_1192_85(acc),
            [122, 112] => lookup_1192_86(acc),
            [122, 116] => lookup_1192_87(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1193() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1194() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1195_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1195_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1195_1(acc),
            [99, 111] => lookup_1195_2(acc),
            [99, 111, 109] => lookup_1195_3(acc),
            [103, 111] => lookup_1195_4(acc),
            [110, 101] => lookup_1195_5(acc),
            [111, 114] => lookup_1195_6(acc),
            [111, 114, 103] => lookup_1195_7(acc),
            [115, 99] => lookup_1195_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1196_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_2_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_2_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_2_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 104] => lookup_1196_2_4_0(acc),
            [118, 109] => lookup_1196_2_4_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1196_2_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_2_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_1196_2_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1196_2_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_2_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_2_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_2_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_2_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1196_2_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1196_2_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 105, 109, 111] => lookup_1196_2_0(acc),
            [98, 97, 114, 115, 121] => lookup_1196_2_1(acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_1196_2_2(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1196_2_3(acc),
            [98, 121, 116, 101, 109, 97, 114, 107] => lookup_1196_2_4(info, labels, acc),
            [108, 97, 121, 101, 114, 115, 104, 105, 102, 116] => lookup_1196_2_5(info, labels, acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_1196_2_6(acc),
            [110, 104, 45, 115, 101, 114, 118] => lookup_1196_2_7(acc),
            [110, 111, 45, 105, 112] => lookup_1196_2_8(acc),
            [114, 101, 116, 114, 111, 115, 110, 117, 98] => lookup_1196_2_9(info, labels, acc),
            [119, 101, 108, 108, 98, 101, 105, 110, 103, 122, 111, 110, 101] => {
                lookup_1196_2_10(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1196_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112, 105] => lookup_1196_5_0(acc),
            [99, 97, 109, 112, 97, 105, 103, 110] => lookup_1196_5_1(acc),
            [115, 101, 114, 118, 105, 99, 101] => lookup_1196_5_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1196_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_16_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_16_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_16_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_16_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_16_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_16<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 102, 102, 105, 110, 105, 116, 121, 108, 111, 116, 116, 101, 114, 121] => {
                lookup_1196_16_0(acc)
            }
            [103, 108, 117, 103] => lookup_1196_16_1(acc),
            [108, 117, 103] => lookup_1196_16_2(acc),
            [108, 117, 103, 115] => lookup_1196_16_3(acc),
            [114, 97, 102, 102, 108, 101, 101, 110, 116, 114, 121] => lookup_1196_16_4(acc),
            [119, 101, 101, 107, 108, 121, 108, 111, 116, 116, 101, 114, 121] => {
                lookup_1196_16_5(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1196_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1196_22_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1196_22_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1196<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1196_0(acc),
            [98, 97, 114, 115, 121] => lookup_1196_1(acc),
            [99, 111] => lookup_1196_2(labels, acc),
            [99, 111, 110, 110] => lookup_1196_3(acc),
            [99, 111, 112, 114, 111] => lookup_1196_4(acc),
            [103, 111, 118] => lookup_1196_5(labels, acc),
            [104, 111, 115, 112] => lookup_1196_6(acc),
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 99, 111, 109, 109, 105, 115, 115, 105, 111, 110] => {
                lookup_1196_7(acc)
            }
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 105, 110, 113, 117, 101, 115, 116] => {
                lookup_1196_8(acc)
            }
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 105, 110, 113, 117, 105, 114, 121] => {
                lookup_1196_9(acc)
            }
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 112, 97, 110, 101, 108] => {
                lookup_1196_10(acc)
            }
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 114, 101, 118, 105, 101, 119] => {
                lookup_1196_11(acc)
            }
            [108, 116, 100] => lookup_1196_12(acc),
            [109, 101] => lookup_1196_13(acc),
            [110, 101, 116] => lookup_1196_14(acc),
            [110, 104, 115] => lookup_1196_15(acc),
            [111, 114, 103] => lookup_1196_16(labels, acc),
            [112, 108, 99] => lookup_1196_17(acc),
            [112, 111, 108, 105, 99, 101] => lookup_1196_18(acc),
            [112, 117, 98, 108, 105, 99, 45, 105, 110, 113, 117, 105, 114, 121] => {
                lookup_1196_19(acc)
            }
            [112, 121, 109, 110, 116] => lookup_1196_20(acc),
            [114, 111, 121, 97, 108, 45, 99, 111, 109, 109, 105, 115, 115, 105, 111, 110] => {
                lookup_1196_21(acc)
            }
            [115, 99, 104] => lookup_1196_22(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1198() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1199() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1200() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1201() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_0_0(acc),
            [107, 49, 50] => lookup_1202_0_1(acc),
            [108, 105, 98] => lookup_1202_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_1_0(acc),
            [107, 49, 50] => lookup_1202_1_1(acc),
            [108, 105, 98] => lookup_1202_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_2_0(acc),
            [107, 49, 50] => lookup_1202_2_1(acc),
            [108, 105, 98] => lookup_1202_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_3_0(acc),
            [107, 49, 50] => lookup_1202_3_1(acc),
            [108, 105, 98] => lookup_1202_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_4_0(acc),
            [107, 49, 50] => lookup_1202_4_1(acc),
            [108, 105, 98] => lookup_1202_4_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_5_0(acc),
            [107, 49, 50] => lookup_1202_5_1(acc),
            [108, 105, 98] => lookup_1202_5_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_7_0(acc),
            [107, 49, 50] => lookup_1202_7_1(acc),
            [108, 105, 98] => lookup_1202_7_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_8_0(acc),
            [107, 49, 50] => lookup_1202_8_1(acc),
            [108, 105, 98] => lookup_1202_8_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_9_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_9_0(acc),
            [107, 49, 50] => lookup_1202_9_1(acc),
            [108, 105, 98] => lookup_1202_9_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_10_0(acc),
            [108, 105, 98] => lookup_1202_10_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 104, 120] => lookup_1202_13_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_15_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_15<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_15_0(acc),
            [107, 49, 50] => lookup_1202_15_1(acc),
            [108, 105, 98] => lookup_1202_15_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_17_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_17_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_17_0(acc),
            [107, 49, 50] => lookup_1202_17_1(acc),
            [108, 105, 98] => lookup_1202_17_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_20_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_20_0(acc),
            [107, 49, 50] => lookup_1202_20_1(acc),
            [108, 105, 98] => lookup_1202_20_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_21<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_21_0(acc),
            [108, 105, 98] => lookup_1202_21_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_22_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_22<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_22_0(acc),
            [107, 49, 50] => lookup_1202_22_1(acc),
            [108, 105, 98] => lookup_1202_22_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_23_0(acc),
            [107, 49, 50] => lookup_1202_23_1(acc),
            [108, 105, 98] => lookup_1202_23_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_24_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_24_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_24<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_24_0(acc),
            [107, 49, 50] => lookup_1202_24_1(acc),
            [108, 105, 98] => lookup_1202_24_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_25_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_25<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_25_0(acc),
            [107, 49, 50] => lookup_1202_25_1(acc),
            [108, 105, 98] => lookup_1202_25_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_29_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_29_0(acc),
            [107, 49, 50] => lookup_1202_29_1(acc),
            [108, 105, 98] => lookup_1202_29_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_30_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_30_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_30_0(acc),
            [107, 49, 50] => lookup_1202_30_1(acc),
            [108, 105, 98] => lookup_1202_30_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_31_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_31_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_31_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_31<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_31_0(acc),
            [107, 49, 50] => lookup_1202_31_1(acc),
            [108, 105, 98] => lookup_1202_31_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_33_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_33_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_33_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_33_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_33_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 116, 114] => lookup_1202_33_1_0(acc),
            [112, 97, 114, 111, 99, 104] => lookup_1202_33_1_1(acc),
            [112, 118, 116] => lookup_1202_33_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_33_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_33<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_33_0(acc),
            [107, 49, 50] => lookup_1202_33_1(labels, acc),
            [108, 105, 98] => lookup_1202_33_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_34_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_34_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_34_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_34<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_34_0(acc),
            [107, 49, 50] => lookup_1202_34_1(acc),
            [108, 105, 98] => lookup_1202_34_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_35_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_35_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_35<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_35_0(acc),
            [107, 49, 50] => lookup_1202_35_1(acc),
            [108, 105, 98] => lookup_1202_35_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_36_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_36_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_36_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_36_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_36_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_36_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_36_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_36_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_36_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_36_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_36<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 110, 45, 97, 114, 98, 111, 114] => lookup_1202_36_0(acc),
            [99, 99] => lookup_1202_36_1(acc),
            [99, 111, 103] => lookup_1202_36_2(acc),
            [100, 115, 116] => lookup_1202_36_3(acc),
            [101, 97, 116, 111, 110] => lookup_1202_36_4(acc),
            [103, 101, 110] => lookup_1202_36_5(acc),
            [107, 49, 50] => lookup_1202_36_6(acc),
            [108, 105, 98] => lookup_1202_36_7(acc),
            [109, 117, 115] => lookup_1202_36_8(acc),
            [116, 101, 99] => lookup_1202_36_9(acc),
            [119, 97, 115, 104, 116, 101, 110, 97, 119] => lookup_1202_36_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_38_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_38_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_38<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_38_0(acc),
            [107, 49, 50] => lookup_1202_38_1(acc),
            [108, 105, 98] => lookup_1202_38_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_39_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_39_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_39_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_39<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_39_0(acc),
            [107, 49, 50] => lookup_1202_39_1(acc),
            [108, 105, 98] => lookup_1202_39_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_40_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_40_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_40_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_40<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_40_0(acc),
            [107, 49, 50] => lookup_1202_40_1(acc),
            [108, 105, 98] => lookup_1202_40_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_41_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_41_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_41_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_41<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_41_0(acc),
            [107, 49, 50] => lookup_1202_41_1(acc),
            [108, 105, 98] => lookup_1202_41_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_42_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_42_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_42_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_42<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_42_0(acc),
            [107, 49, 50] => lookup_1202_42_1(acc),
            [108, 105, 98] => lookup_1202_42_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_43_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_43_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_43<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_43_0(acc),
            [108, 105, 98] => lookup_1202_43_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_44_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_44<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_44_0(acc),
            [107, 49, 50] => lookup_1202_44_1(acc),
            [108, 105, 98] => lookup_1202_44_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_45_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_45_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_45<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_45_0(acc),
            [107, 49, 50] => lookup_1202_45_1(acc),
            [108, 105, 98] => lookup_1202_45_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_46_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_46_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_46_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_46<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_46_0(acc),
            [107, 49, 50] => lookup_1202_46_1(acc),
            [108, 105, 98] => lookup_1202_46_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_47_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_47_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_47_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_47<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_47_0(acc),
            [107, 49, 50] => lookup_1202_47_1(acc),
            [108, 105, 98] => lookup_1202_47_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_50_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_50_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_50<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_50_0(acc),
            [107, 49, 50] => lookup_1202_50_1(acc),
            [108, 105, 98] => lookup_1202_50_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_51_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_51_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_51_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_51<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_51_0(acc),
            [107, 49, 50] => lookup_1202_51_1(acc),
            [108, 105, 98] => lookup_1202_51_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_52_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_52_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_52<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_52_0(acc),
            [107, 49, 50] => lookup_1202_52_1(acc),
            [108, 105, 98] => lookup_1202_52_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_53_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_53_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_53_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_53<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_53_0(acc),
            [107, 49, 50] => lookup_1202_53_1(acc),
            [108, 105, 98] => lookup_1202_53_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_54_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_54_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_54<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_54_0(acc),
            [107, 49, 50] => lookup_1202_54_1(acc),
            [108, 105, 98] => lookup_1202_54_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_55_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_55_0(acc),
            [107, 49, 50] => lookup_1202_55_1(acc),
            [108, 105, 98] => lookup_1202_55_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_58_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_58_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_58<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_58_0(acc),
            [107, 49, 50] => lookup_1202_58_1(acc),
            [108, 105, 98] => lookup_1202_58_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_59_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_59<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_59_0(acc),
            [108, 105, 98] => lookup_1202_59_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_60_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_60_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_60_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_60<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_60_0(acc),
            [107, 49, 50] => lookup_1202_60_1(acc),
            [108, 105, 98] => lookup_1202_60_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_61_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_61_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_61<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_61_0(acc),
            [108, 105, 98] => lookup_1202_61_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1202_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_63<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_63_0(acc),
            [107, 49, 50] => lookup_1202_63_1(acc),
            [108, 105, 98] => lookup_1202_63_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_64_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_64_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_64<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_64_0(acc),
            [107, 49, 50] => lookup_1202_64_1(acc),
            [108, 105, 98] => lookup_1202_64_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_65_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_65_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_65<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_65_0(acc),
            [107, 49, 50] => lookup_1202_65_1(acc),
            [108, 105, 98] => lookup_1202_65_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_66_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_66_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_66_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_66<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_66_0(acc),
            [107, 49, 50] => lookup_1202_66_1(acc),
            [108, 105, 98] => lookup_1202_66_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_67<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_67_0(acc),
            [107, 49, 50] => lookup_1202_67_1(acc),
            [108, 105, 98] => lookup_1202_67_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_68_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_68_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_68_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_68<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_68_0(acc),
            [107, 49, 50] => lookup_1202_68_1(acc),
            [108, 105, 98] => lookup_1202_68_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_69_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_69_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_69_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_69<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_69_0(acc),
            [107, 49, 50] => lookup_1202_69_1(acc),
            [108, 105, 98] => lookup_1202_69_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_70_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_70_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_70<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_70_0(acc),
            [107, 49, 50] => lookup_1202_70_1(acc),
            [108, 105, 98] => lookup_1202_70_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_71_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_71<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_71_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202_72_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_72_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_72_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202_72<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1202_72_0(acc),
            [107, 49, 50] => lookup_1202_72_1(acc),
            [108, 105, 98] => lookup_1202_72_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1202<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107] => lookup_1202_0(labels, acc),
            [97, 108] => lookup_1202_1(labels, acc),
            [97, 114] => lookup_1202_2(labels, acc),
            [97, 115] => lookup_1202_3(labels, acc),
            [97, 122] => lookup_1202_4(labels, acc),
            [99, 97] => lookup_1202_5(labels, acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1202_6(acc),
            [99, 111] => lookup_1202_7(labels, acc),
            [99, 116] => lookup_1202_8(labels, acc),
            [100, 99] => lookup_1202_9(labels, acc),
            [100, 101] => lookup_1202_10(labels, acc),
            [100, 110, 105] => lookup_1202_11(acc),
            [100, 114, 117, 100] => lookup_1202_12(acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_1202_13(info, labels, acc),
            [102, 101, 100] => lookup_1202_14(acc),
            [102, 108] => lookup_1202_15(labels, acc),
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_1202_16(acc),
            [103, 97] => lookup_1202_17(labels, acc),
            [103, 111, 108, 102, 102, 97, 110] => lookup_1202_18(acc),
            [103, 114, 97, 112, 104, 111, 120] => lookup_1202_19(acc),
            [103, 117] => lookup_1202_20(labels, acc),
            [104, 105] => lookup_1202_21(labels, acc),
            [105, 97] => lookup_1202_22(labels, acc),
            [105, 100] => lookup_1202_23(labels, acc),
            [105, 108] => lookup_1202_24(labels, acc),
            [105, 110] => lookup_1202_25(labels, acc),
            [105, 115, 45, 98, 121] => lookup_1202_26(acc),
            [105, 115, 97] => lookup_1202_27(acc),
            [107, 105, 100, 115] => lookup_1202_28(acc),
            [107, 115] => lookup_1202_29(labels, acc),
            [107, 121] => lookup_1202_30(labels, acc),
            [108, 97] => lookup_1202_31(labels, acc),
            [108, 97, 110, 100, 45, 52, 45, 115, 97, 108, 101] => lookup_1202_32(acc),
            [109, 97] => lookup_1202_33(labels, acc),
            [109, 100] => lookup_1202_34(labels, acc),
            [109, 101] => lookup_1202_35(labels, acc),
            [109, 105] => lookup_1202_36(labels, acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_1202_37(acc),
            [109, 110] => lookup_1202_38(labels, acc),
            [109, 111] => lookup_1202_39(labels, acc),
            [109, 115] => lookup_1202_40(labels, acc),
            [109, 116] => lookup_1202_41(labels, acc),
            [110, 99] => lookup_1202_42(labels, acc),
            [110, 100] => lookup_1202_43(labels, acc),
            [110, 101] => lookup_1202_44(labels, acc),
            [110, 104] => lookup_1202_45(labels, acc),
            [110, 106] => lookup_1202_46(labels, acc),
            [110, 109] => lookup_1202_47(labels, acc),
            [110, 111, 105, 112] => lookup_1202_48(acc),
            [110, 115, 110] => lookup_1202_49(acc),
            [110, 118] => lookup_1202_50(labels, acc),
            [110, 121] => lookup_1202_51(labels, acc),
            [111, 104] => lookup_1202_52(labels, acc),
            [111, 107] => lookup_1202_53(labels, acc),
            [111, 114] => lookup_1202_54(labels, acc),
            [112, 97] => lookup_1202_55(labels, acc),
            [112, 108, 97, 116, 116, 101, 114, 112] => lookup_1202_56(acc),
            [112, 111, 105, 110, 116, 116, 111] => lookup_1202_57(acc),
            [112, 114] => lookup_1202_58(labels, acc),
            [114, 105] => lookup_1202_59(labels, acc),
            [115, 99] => lookup_1202_60(labels, acc),
            [115, 100] => lookup_1202_61(labels, acc),
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_1202_62(acc),
            [116, 110] => lookup_1202_63(labels, acc),
            [116, 120] => lookup_1202_64(labels, acc),
            [117, 116] => lookup_1202_65(labels, acc),
            [118, 97] => lookup_1202_66(labels, acc),
            [118, 105] => lookup_1202_67(labels, acc),
            [118, 116] => lookup_1202_68(labels, acc),
            [119, 97] => lookup_1202_69(labels, acc),
            [119, 105] => lookup_1202_70(labels, acc),
            [119, 118] => lookup_1202_71(labels, acc),
            [119, 121] => lookup_1202_72(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1203_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1203_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1203_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1203_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1203_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1203_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1203_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1203_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1203<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1203_0(labels, acc),
            [101, 100, 117] => lookup_1203_1(acc),
            [103, 117, 98] => lookup_1203_2(acc),
            [109, 105, 108] => lookup_1203_3(acc),
            [110, 101, 116] => lookup_1203_4(acc),
            [111, 114, 103] => lookup_1203_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1204_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1204_0(acc),
            [99, 111, 109] => lookup_1204_1(acc),
            [110, 101, 116] => lookup_1204_2(acc),
            [111, 114, 103] => lookup_1204_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1205() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1208() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1209_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1209_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1209_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1209_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1209_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1209_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100] => lookup_1209_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1209_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1209_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1209_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1209<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48, 101] => lookup_1209_0(acc),
            [99, 111, 109] => lookup_1209_1(acc),
            [101, 100, 117] => lookup_1209_2(acc),
            [103, 111, 118] => lookup_1209_3(acc),
            [103, 118] => lookup_1209_4(labels, acc),
            [109, 105, 108] => lookup_1209_5(acc),
            [110, 101, 116] => lookup_1209_6(acc),
            [111, 114, 103] => lookup_1209_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1210_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_1210_0(acc),
            [98, 105, 98] => lookup_1210_1(acc),
            [99, 111] => lookup_1210_2(acc),
            [99, 111, 109] => lookup_1210_3(acc),
            [101, 49, 50] => lookup_1210_4(acc),
            [101, 100, 117] => lookup_1210_5(acc),
            [102, 105, 114, 109] => lookup_1210_6(acc),
            [103, 111, 98] => lookup_1210_7(acc),
            [103, 111, 118] => lookup_1210_8(acc),
            [105, 110, 102, 111] => lookup_1210_9(acc),
            [105, 110, 116] => lookup_1210_10(acc),
            [109, 105, 108] => lookup_1210_11(acc),
            [110, 101, 116] => lookup_1210_12(acc),
            [110, 111, 109] => lookup_1210_13(acc),
            [111, 114, 103] => lookup_1210_14(acc),
            [114, 97, 114] => lookup_1210_15(acc),
            [114, 101, 99] => lookup_1210_16(acc),
            [115, 116, 111, 114, 101] => lookup_1210_17(acc),
            [116, 101, 99] => lookup_1210_18(acc),
            [119, 101, 98] => lookup_1210_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1211() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1212() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1213() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1217() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1218_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1218<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116] => lookup_1218_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1219_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1219_0(acc),
            [99, 111, 109] => lookup_1219_1(acc),
            [107, 49, 50] => lookup_1219_2(acc),
            [110, 101, 116] => lookup_1219_3(acc),
            [111, 114, 103] => lookup_1219_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1220() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1221() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1222() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1227() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1229() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1230() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1231() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1232() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1233_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1233_0(acc),
            [97, 105] => lookup_1233_1(acc),
            [97, 110, 103, 105, 97, 110, 103] => lookup_1233_2(acc),
            [98, 97, 99, 103, 105, 97, 110, 103] => lookup_1233_3(acc),
            [98, 97, 99, 107, 97, 110] => lookup_1233_4(acc),
            [98, 97, 99, 108, 105, 101, 117] => lookup_1233_5(acc),
            [98, 97, 99, 110, 105, 110, 104] => lookup_1233_6(acc),
            [98, 97, 114, 105, 97, 45, 118, 117, 110, 103, 116, 97, 117] => lookup_1233_7(acc),
            [98, 101, 110, 116, 114, 101] => lookup_1233_8(acc),
            [98, 105, 110, 104, 100, 105, 110, 104] => lookup_1233_9(acc),
            [98, 105, 110, 104, 100, 117, 111, 110, 103] => lookup_1233_10(acc),
            [98, 105, 110, 104, 112, 104, 117, 111, 99] => lookup_1233_11(acc),
            [98, 105, 110, 104, 116, 104, 117, 97, 110] => lookup_1233_12(acc),
            [98, 105, 122] => lookup_1233_13(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1233_14(acc),
            [99, 97, 109, 97, 117] => lookup_1233_15(acc),
            [99, 97, 110, 116, 104, 111] => lookup_1233_16(acc),
            [99, 97, 111, 98, 97, 110, 103] => lookup_1233_17(acc),
            [99, 111, 109] => lookup_1233_18(acc),
            [100, 97, 107, 108, 97, 107] => lookup_1233_19(acc),
            [100, 97, 107, 110, 111, 110, 103] => lookup_1233_20(acc),
            [100, 97, 110, 97, 110, 103] => lookup_1233_21(acc),
            [100, 105, 101, 110, 98, 105, 101, 110] => lookup_1233_22(acc),
            [100, 111, 110, 103, 110, 97, 105] => lookup_1233_23(acc),
            [100, 111, 110, 103, 116, 104, 97, 112] => lookup_1233_24(acc),
            [101, 100, 117] => lookup_1233_25(acc),
            [103, 105, 97, 108, 97, 105] => lookup_1233_26(acc),
            [103, 111, 118] => lookup_1233_27(acc),
            [104, 97, 103, 105, 97, 110, 103] => lookup_1233_28(acc),
            [104, 97, 105, 100, 117, 111, 110, 103] => lookup_1233_29(acc),
            [104, 97, 105, 112, 104, 111, 110, 103] => lookup_1233_30(acc),
            [104, 97, 110, 97, 109] => lookup_1233_31(acc),
            [104, 97, 110, 111, 105] => lookup_1233_32(acc),
            [104, 97, 116, 105, 110, 104] => lookup_1233_33(acc),
            [104, 97, 117, 103, 105, 97, 110, 103] => lookup_1233_34(acc),
            [104, 101, 97, 108, 116, 104] => lookup_1233_35(acc),
            [104, 111, 97, 98, 105, 110, 104] => lookup_1233_36(acc),
            [104, 117, 110, 103, 121, 101, 110] => lookup_1233_37(acc),
            [105, 100] => lookup_1233_38(acc),
            [105, 110, 102, 111] => lookup_1233_39(acc),
            [105, 110, 116] => lookup_1233_40(acc),
            [105, 111] => lookup_1233_41(acc),
            [107, 104, 97, 110, 104, 104, 111, 97] => lookup_1233_42(acc),
            [107, 105, 101, 110, 103, 105, 97, 110, 103] => lookup_1233_43(acc),
            [107, 111, 110, 116, 117, 109] => lookup_1233_44(acc),
            [108, 97, 105, 99, 104, 97, 117] => lookup_1233_45(acc),
            [108, 97, 109, 100, 111, 110, 103] => lookup_1233_46(acc),
            [108, 97, 110, 103, 115, 111, 110] => lookup_1233_47(acc),
            [108, 97, 111, 99, 97, 105] => lookup_1233_48(acc),
            [108, 111, 110, 103, 97, 110] => lookup_1233_49(acc),
            [110, 97, 109, 100, 105, 110, 104] => lookup_1233_50(acc),
            [110, 97, 109, 101] => lookup_1233_51(acc),
            [110, 101, 116] => lookup_1233_52(acc),
            [110, 103, 104, 101, 97, 110] => lookup_1233_53(acc),
            [110, 105, 110, 104, 98, 105, 110, 104] => lookup_1233_54(acc),
            [110, 105, 110, 104, 116, 104, 117, 97, 110] => lookup_1233_55(acc),
            [111, 114, 103] => lookup_1233_56(acc),
            [112, 104, 117, 116, 104, 111] => lookup_1233_57(acc),
            [112, 104, 117, 121, 101, 110] => lookup_1233_58(acc),
            [112, 114, 111] => lookup_1233_59(acc),
            [113, 117, 97, 110, 103, 98, 105, 110, 104] => lookup_1233_60(acc),
            [113, 117, 97, 110, 103, 110, 97, 109] => lookup_1233_61(acc),
            [113, 117, 97, 110, 103, 110, 103, 97, 105] => lookup_1233_62(acc),
            [113, 117, 97, 110, 103, 110, 105, 110, 104] => lookup_1233_63(acc),
            [113, 117, 97, 110, 103, 116, 114, 105] => lookup_1233_64(acc),
            [115, 111, 99, 116, 114, 97, 110, 103] => lookup_1233_65(acc),
            [115, 111, 110, 108, 97] => lookup_1233_66(acc),
            [116, 97, 121, 110, 105, 110, 104] => lookup_1233_67(acc),
            [116, 104, 97, 105, 98, 105, 110, 104] => lookup_1233_68(acc),
            [116, 104, 97, 105, 110, 103, 117, 121, 101, 110] => lookup_1233_69(acc),
            [116, 104, 97, 110, 104, 104, 111, 97] => lookup_1233_70(acc),
            [116, 104, 97, 110, 104, 112, 104, 111, 104, 111, 99, 104, 105, 109, 105, 110, 104] => {
                lookup_1233_71(acc)
            }
            [116, 104, 117, 97, 116, 104, 105, 101, 110, 104, 117, 101] => lookup_1233_72(acc),
            [116, 105, 101, 110, 103, 105, 97, 110, 103] => lookup_1233_73(acc),
            [116, 114, 97, 118, 105, 110, 104] => lookup_1233_74(acc),
            [116, 117, 121, 101, 110, 113, 117, 97, 110, 103] => lookup_1233_75(acc),
            [118, 105, 110, 104, 108, 111, 110, 103] => lookup_1233_76(acc),
            [118, 105, 110, 104, 112, 104, 117, 99] => lookup_1233_77(acc),
            [121, 101, 110, 98, 97, 105] => lookup_1233_78(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1234() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1235() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1238() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1239() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1240_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1240_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1240_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1240_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103] => lookup_1240_0(acc),
            [99, 110] => lookup_1240_1(acc),
            [99, 111, 109] => lookup_1240_2(acc),
            [100, 101, 118] => lookup_1240_3(acc),
            [101, 100, 117] => lookup_1240_4(acc),
            [109, 101] => lookup_1240_5(acc),
            [110, 101, 116] => lookup_1240_6(acc),
            [111, 114, 103] => lookup_1240_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1241() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1244() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1245() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1246() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1247() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1248() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1251() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1252_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1252<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 109, 101, 114] => lookup_1252_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1253() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1254() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1255() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1256() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1257_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1257<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1257_0(acc),
            [115, 99, 104] => lookup_1257_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1258() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1259() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1260_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1260<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 109, 101, 114] => lookup_1260_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1261() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1262() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1263() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1266() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1267() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1268() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1269() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1272() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1273_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1273_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1273_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1273_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1273_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1273_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1273_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1273_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1273<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 118, 105, 115, 111, 114] => lookup_1273_0(info, labels, acc),
            [99, 108, 111, 117, 100, 54, 54] => lookup_1273_1(acc),
            [99, 111, 109] => lookup_1273_2(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1273_3(acc),
            [101, 100, 117] => lookup_1273_4(acc),
            [103, 111, 118] => lookup_1273_5(acc),
            [109, 121, 112, 101, 116, 115] => lookup_1273_6(acc),
            [110, 101, 116] => lookup_1273_7(acc),
            [111, 114, 103] => lookup_1273_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1274() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1275() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1276() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1277() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1278() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1279() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1280() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1282() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1283() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1284() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1286() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1287() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1288() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1289() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1291() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1294() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1295_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1295_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1295_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1295_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1295<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 12usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 52, 100, 98, 103, 100, 116, 121, 54, 99] => lookup_1295_0(acc),
            [120, 110, 45, 45, 53, 100, 98, 104, 108, 56, 100] => lookup_1295_1(acc),
            [120, 110, 45, 45, 56, 100, 98, 113, 50, 97] => lookup_1295_2(acc),
            [120, 110, 45, 45, 104, 101, 98, 100, 97, 56, 98] => lookup_1295_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1296() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1297() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1298() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1299() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1300() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1302() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1303() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1305() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1307() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1308() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 56, 48, 97, 117] => lookup_1310_0(acc),
            [120, 110, 45, 45, 57, 48, 97, 122, 104] => lookup_1310_1(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1310_2(acc),
            [120, 110, 45, 45, 100, 49, 97, 116] => lookup_1310_3(acc),
            [120, 110, 45, 45, 111, 49, 97, 99] => lookup_1310_4(acc),
            [120, 110, 45, 45, 111, 49, 97, 99, 104] => lookup_1310_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1311() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1312() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1313() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1315() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1317() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1318() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1320() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1321() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1322() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323() -> Info {
    Info {
        len: 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1324() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1325() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1326() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1327() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1328() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1329() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1330() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1331() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1332() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1333() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1334() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1336() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1337() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1338() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1339() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1340() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1341() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1342() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1343() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1344() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1346() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1347() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1350() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1351() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1353() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1354() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1355() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1356_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1356_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1356_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1356_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1356_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1356_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1356<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1356_0(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_1356_1(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_1356_2(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_1356_3(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_1356_4(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_1356_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1357() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1358() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1359() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1360() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1362() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1363() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1365() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1368() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1369() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1370() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1371() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1372() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1373() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1374() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1375() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1377() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1379() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1380() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1382() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1384() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1385() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1386() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1387() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1389() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1390() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1391() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1392() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1393() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1394() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1395() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1396() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1398() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1399() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1400() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1401() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1402() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1404() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 49, 50, 99, 49, 102, 101, 48, 98, 114] => lookup_1405_0(acc),
            [120, 110, 45, 45, 49, 50, 99, 102, 105, 56, 105, 120, 98, 56, 108] => {
                lookup_1405_1(acc)
            }
            [120, 110, 45, 45, 49, 50, 99, 111, 48, 99, 51, 98, 52, 101, 118, 97] => {
                lookup_1405_2(acc)
            }
            [120, 110, 45, 45, 104, 51, 99, 117, 122, 107, 49, 100, 105] => lookup_1405_3(acc),
            [120, 110, 45, 45, 109, 51, 99, 104, 48, 106, 51, 97] => lookup_1405_4(acc),
            [120, 110, 45, 45, 111, 51, 99, 121, 120, 50, 97] => lookup_1405_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1406() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1408<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 52, 49, 97] => lookup_1408_0(acc),
            [120, 110, 45, 45, 56, 48, 97, 97, 97, 48, 99, 118, 97, 99] => lookup_1408_1(acc),
            [120, 110, 45, 45, 57, 48, 97, 49, 97, 102] => lookup_1408_2(acc),
            [120, 110, 45, 45, 57, 48, 97, 109, 99] => lookup_1408_3(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1408_4(acc),
            [120, 110, 45, 45, 104, 49, 97, 104, 110] => lookup_1408_5(acc),
            [120, 110, 45, 45, 104, 49, 97, 108, 105, 122] => lookup_1408_6(acc),
            [120, 110, 45, 45, 106, 49, 97, 100, 112] => lookup_1408_7(acc),
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_1408_8(acc),
            [120, 110, 45, 45, 106, 49, 97, 101, 108, 56, 98] => lookup_1408_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1409() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1410() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1411() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1412() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1413() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1414() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1415() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1416() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1417() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1418() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1419() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1420() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1421() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1422() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1423() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1424() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1425() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1426() -> Info {
    Info {
        len: 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1427() -> Info {
    Info {
        len: 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1428() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1429() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1430() -> Info {
    Info {
        len: 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1431() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1432() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1434() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1435() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1436() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1437() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1438() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1439() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1440() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1441() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1442_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1442_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1442_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1442_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1442_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1442_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1442_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1442<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_1442_0(acc),
            [99, 114, 97, 102, 116, 105, 110, 103] => lookup_1442_1(acc),
            [108, 111, 99, 97, 108, 122, 111, 110, 101] => lookup_1442_2(acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_1442_3(info, labels, acc),
            [122, 97, 112, 116, 111] => lookup_1442_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1443() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1444() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1445() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1447_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1447_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1447_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1447_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1447_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1447_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1447<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1447_0(acc),
            [101, 100, 117] => lookup_1447_1(acc),
            [103, 111, 118] => lookup_1447_2(acc),
            [109, 105, 108] => lookup_1447_3(acc),
            [110, 101, 116] => lookup_1447_4(acc),
            [111, 114, 103] => lookup_1447_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1448() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1450() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1452() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1453_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1453<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1453_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1454() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1455_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1455_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1455_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1455_0(acc),
            [97, 103, 114, 105, 99] => lookup_1455_1(acc),
            [97, 108, 116] => lookup_1455_2(acc),
            [99, 111] => lookup_1455_3(labels, acc),
            [101, 100, 117] => lookup_1455_4(acc),
            [103, 111, 118] => lookup_1455_5(acc),
            [103, 114, 111, 110, 100, 97, 114] => lookup_1455_6(acc),
            [108, 97, 119] => lookup_1455_7(acc),
            [109, 105, 108] => lookup_1455_8(acc),
            [110, 101, 116] => lookup_1455_9(acc),
            [110, 103, 111] => lookup_1455_10(acc),
            [110, 105, 99] => lookup_1455_11(acc),
            [110, 105, 115] => lookup_1455_12(acc),
            [110, 111, 109] => lookup_1455_13(acc),
            [111, 114, 103] => lookup_1455_14(acc),
            [115, 99, 104, 111, 111, 108] => lookup_1455_15(acc),
            [116, 109] => lookup_1455_16(acc),
            [119, 101, 98] => lookup_1455_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1456() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1458() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1459() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1460_0(acc),
            [98, 105, 122] => lookup_1460_1(acc),
            [99, 111] => lookup_1460_2(acc),
            [99, 111, 109] => lookup_1460_3(acc),
            [101, 100, 117] => lookup_1460_4(acc),
            [103, 111, 118] => lookup_1460_5(acc),
            [105, 110, 102, 111] => lookup_1460_6(acc),
            [109, 105, 108] => lookup_1460_7(acc),
            [110, 101, 116] => lookup_1460_8(acc),
            [111, 114, 103] => lookup_1460_9(acc),
            [115, 99, 104] => lookup_1460_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1461_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1461_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1461_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1461_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1461_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1461_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1461<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 54, 54] => lookup_1461_0(acc),
            [104, 115] => lookup_1461_1(acc),
            [108, 105, 109, 97] => lookup_1461_2(acc),
            [116, 114, 105, 116, 111, 110] => lookup_1461_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1462() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1463_0(acc),
            [99, 111] => lookup_1463_1(acc),
            [103, 111, 118] => lookup_1463_2(acc),
            [109, 105, 108] => lookup_1463_3(acc),
            [111, 114, 103] => lookup_1463_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1464() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1465() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1466() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1467() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1468() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1469() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1470() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1472() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1473() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1474() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1475() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1476() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1477_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1477<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [208, 177, 208, 184, 208, 183] => lookup_1477_0(acc),
            [208, 186, 208, 190, 208, 188] => lookup_1477_1(acc),
            [208, 186, 209, 128, 209, 139, 208, 188] => lookup_1477_2(acc),
            [208, 188, 208, 184, 209, 128] => lookup_1477_3(acc),
            [208, 188, 209, 129, 208, 186] => lookup_1477_4(acc),
            [208, 190, 209, 128, 208, 179] => lookup_1477_5(acc),
            [209, 129, 208, 176, 208, 188, 208, 176, 209, 128, 208, 176] => lookup_1477_6(acc),
            [209, 129, 208, 190, 209, 135, 208, 184] => lookup_1477_7(acc),
            [209, 129, 208, 191, 208, 177] => lookup_1477_8(acc),
            [209, 143] => lookup_1477_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1478() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1479() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1480<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [208, 176, 208, 186] => lookup_1480_0(acc),
            [208, 190, 208, 177, 209, 128] => lookup_1480_1(acc),
            [208, 190, 208, 180] => lookup_1480_2(acc),
            [208, 190, 209, 128, 208, 179] => lookup_1480_3(acc),
            [208, 191, 209, 128] => lookup_1480_4(acc),
            [209, 131, 208, 191, 209, 128] => lookup_1480_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1481() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1482() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1483() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1484_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1484_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1484_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1484_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1484<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [215, 144, 215, 167, 215, 147, 215, 158, 215, 153, 215, 148] => lookup_1484_0(acc),
            [215, 153, 215, 169, 215, 149, 215, 145] => lookup_1484_1(acc),
            [215, 158, 215, 158, 215, 169, 215, 156] => lookup_1484_2(acc),
            [215, 166, 215, 148, 215, 156] => lookup_1484_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1485() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1487() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1488() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1490() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1491() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1492() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1493() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1494() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1496() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1497() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1498() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1499() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1500() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1503() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1504() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1506() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1507() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1508() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1509() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1510() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1511() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1512() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1513() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1514() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1517() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1518() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1519() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1520() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1521() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1522() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1523() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1524() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1525() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1526() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1527() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1529() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1530() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1532() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1534() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1535() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1536() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1537() -> Info {
    Info {
        len: 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1538() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1539() -> Info {
    Info {
        len: 33usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1540() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1541() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1543() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1544() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1545_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1545_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1545_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1545_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1545_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1545_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1545<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [224, 184, 151, 224, 184, 171, 224, 184, 178, 224, 184, 163] => lookup_1545_0(acc),
            [224, 184, 152, 224, 184, 184, 224, 184, 163, 224, 184, 129, 224, 184, 180, 224, 184, 136] => {
                lookup_1545_1(acc)
            }
            [224, 184, 163, 224, 184, 177, 224, 184, 144, 224, 184, 154, 224, 184, 178, 224, 184, 165] => {
                lookup_1545_2(acc)
            }
            [224, 184, 168, 224, 184, 182, 224, 184, 129, 224, 184, 169, 224, 184, 178] => {
                lookup_1545_3(acc)
            }
            [224, 184, 173, 224, 184, 135, 224, 184, 132, 224, 185, 140, 224, 184, 129, 224, 184, 163] => {
                lookup_1545_4(acc)
            }
            [224, 185, 128, 224, 184, 153, 224, 185, 135, 224, 184, 149] => lookup_1545_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1546() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1548() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1549() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1551() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1552() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1553() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1554() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1556() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1557() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1558() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1560() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1561() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1562() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1563() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1564() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1565() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1567() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1569() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1570() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1573() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1574() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1575() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1576() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1577() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1578() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1581() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1583() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1584() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1585() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1586() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1587() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1588() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1589() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1590() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1591() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1592() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1593() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1594() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1595() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1596() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1597() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1598() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1599() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1600() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1603() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1604() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1605() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1606() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1607() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1608() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1610() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1611() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1612() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1613() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1614() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1615() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1616() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [229, 128, 139, 228, 186, 186] => lookup_1617_0(acc),
            [229, 133, 172, 229, 143, 184] => lookup_1617_1(acc),
            [230, 148, 191, 229, 186, 156] => lookup_1617_2(acc),
            [230, 149, 153, 232, 130, 178] => lookup_1617_3(acc),
            [231, 181, 132, 231, 185, 148] => lookup_1617_4(acc),
            [231, 182, 178, 231, 181, 161] => lookup_1617_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1618() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1619() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1621() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
