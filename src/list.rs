//! This file is automatically @generated by cargo-make.
//! It is not intended for manual editing.

#![allow(clippy::all)] // TODO lint this code?

use crate::{Info, Type};
#[inline]
pub(super) fn lookup<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let mut info = Info { len: 0, typ: None };
    match labels.next() {
        Some(label) => match label {
            [97, 97, 97] => lookup_0(),
            [97, 97, 114, 112] => lookup_1(),
            [97, 98, 97, 114, 116, 104] => lookup_2(),
            [97, 98, 98] => lookup_3(),
            [97, 98, 98, 111, 116, 116] => lookup_4(),
            [97, 98, 98, 118, 105, 101] => lookup_5(),
            [97, 98, 99] => lookup_6(),
            [97, 98, 108, 101] => lookup_7(),
            [97, 98, 111, 103, 97, 100, 111] => lookup_8(),
            [97, 98, 117, 100, 104, 97, 98, 105] => lookup_9(),
            [97, 99] => lookup_10(labels),
            [97, 99, 97, 100, 101, 109, 121] => lookup_11(labels),
            [97, 99, 99, 101, 110, 116, 117, 114, 101] => lookup_12(),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => lookup_13(),
            [97, 99, 99, 111, 117, 110, 116, 97, 110, 116, 115] => lookup_14(),
            [97, 99, 111] => lookup_15(),
            [97, 99, 116, 111, 114] => lookup_16(),
            [97, 100] => lookup_17(labels),
            [97, 100, 115] => lookup_18(),
            [97, 100, 117, 108, 116] => lookup_19(),
            [97, 101] => lookup_20(labels),
            [97, 101, 103] => lookup_21(),
            [97, 101, 114, 111] => lookup_22(labels),
            [97, 101, 116, 110, 97] => lookup_23(),
            [97, 102] => lookup_24(labels),
            [97, 102, 108] => lookup_25(),
            [97, 102, 114, 105, 99, 97] => lookup_26(),
            [97, 103] => lookup_27(labels),
            [97, 103, 97, 107, 104, 97, 110] => lookup_28(),
            [97, 103, 101, 110, 99, 121] => lookup_29(),
            [97, 105] => lookup_30(labels),
            [97, 105, 103] => lookup_31(),
            [97, 105, 114, 98, 117, 115] => lookup_32(),
            [97, 105, 114, 102, 111, 114, 99, 101] => lookup_33(),
            [97, 105, 114, 116, 101, 108] => lookup_34(),
            [97, 107, 100, 110] => lookup_35(),
            [97, 108] => lookup_36(labels),
            [97, 108, 102, 97, 114, 111, 109, 101, 111] => lookup_37(),
            [97, 108, 105, 98, 97, 98, 97] => lookup_38(),
            [97, 108, 105, 112, 97, 121] => lookup_39(),
            [97, 108, 108, 102, 105, 110, 97, 110, 122] => lookup_40(),
            [97, 108, 108, 115, 116, 97, 116, 101] => lookup_41(),
            [97, 108, 108, 121] => lookup_42(),
            [97, 108, 115, 97, 99, 101] => lookup_43(),
            [97, 108, 115, 116, 111, 109] => lookup_44(),
            [97, 109] => lookup_45(labels),
            [97, 109, 97, 122, 111, 110] => lookup_46(),
            [97, 109, 101, 114, 105, 99, 97, 110, 101, 120, 112, 114, 101, 115, 115] => lookup_47(),
            [97, 109, 101, 114, 105, 99, 97, 110, 102, 97, 109, 105, 108, 121] => lookup_48(),
            [97, 109, 101, 120] => lookup_49(),
            [97, 109, 102, 97, 109] => lookup_50(),
            [97, 109, 105, 99, 97] => lookup_51(),
            [97, 109, 115, 116, 101, 114, 100, 97, 109] => lookup_52(),
            [97, 110, 97, 108, 121, 116, 105, 99, 115] => lookup_53(),
            [97, 110, 100, 114, 111, 105, 100] => lookup_54(),
            [97, 110, 113, 117, 97, 110] => lookup_55(),
            [97, 110, 122] => lookup_56(),
            [97, 111] => lookup_57(labels),
            [97, 111, 108] => lookup_58(),
            [97, 112, 97, 114, 116, 109, 101, 110, 116, 115] => lookup_59(),
            [97, 112, 112] => lookup_60(labels),
            [97, 112, 112, 108, 101] => lookup_61(),
            [97, 113] => lookup_62(),
            [97, 113, 117, 97, 114, 101, 108, 108, 101] => lookup_63(),
            [97, 114] => lookup_64(labels),
            [97, 114, 97, 98] => lookup_65(),
            [97, 114, 97, 109, 99, 111] => lookup_66(),
            [97, 114, 99, 104, 105] => lookup_67(),
            [97, 114, 109, 121] => lookup_68(),
            [97, 114, 112, 97] => lookup_69(labels),
            [97, 114, 116] => lookup_70(),
            [97, 114, 116, 101] => lookup_71(),
            [97, 115] => lookup_72(labels),
            [97, 115, 100, 97] => lookup_73(),
            [97, 115, 105, 97] => lookup_74(labels),
            [97, 115, 115, 111, 99, 105, 97, 116, 101, 115] => lookup_75(),
            [97, 116] => lookup_76(labels),
            [97, 116, 104, 108, 101, 116, 97] => lookup_77(),
            [97, 116, 116, 111, 114, 110, 101, 121] => lookup_78(),
            [97, 117] => lookup_79(labels),
            [97, 117, 99, 116, 105, 111, 110] => lookup_80(),
            [97, 117, 100, 105] => lookup_81(),
            [97, 117, 100, 105, 98, 108, 101] => lookup_82(),
            [97, 117, 100, 105, 111] => lookup_83(),
            [97, 117, 115, 112, 111, 115, 116] => lookup_84(),
            [97, 117, 116, 104, 111, 114] => lookup_85(),
            [97, 117, 116, 111] => lookup_86(),
            [97, 117, 116, 111, 115] => lookup_87(),
            [97, 118, 105, 97, 110, 99, 97] => lookup_88(),
            [97, 119] => lookup_89(labels),
            [97, 119, 115] => lookup_90(),
            [97, 120] => lookup_91(labels),
            [97, 120, 97] => lookup_92(),
            [97, 122] => lookup_93(labels),
            [97, 122, 117, 114, 101] => lookup_94(),
            [98, 97] => lookup_95(labels),
            [98, 97, 98, 121] => lookup_96(),
            [98, 97, 105, 100, 117] => lookup_97(),
            [98, 97, 110, 97, 109, 101, 120] => lookup_98(),
            [98, 97, 110, 97, 110, 97, 114, 101, 112, 117, 98, 108, 105, 99] => lookup_99(),
            [98, 97, 110, 100] => lookup_100(),
            [98, 97, 110, 107] => lookup_101(),
            [98, 97, 114] => lookup_102(),
            [98, 97, 114, 99, 101, 108, 111, 110, 97] => lookup_103(),
            [98, 97, 114, 99, 108, 97, 121, 99, 97, 114, 100] => lookup_104(),
            [98, 97, 114, 99, 108, 97, 121, 115] => lookup_105(),
            [98, 97, 114, 101, 102, 111, 111, 116] => lookup_106(),
            [98, 97, 114, 103, 97, 105, 110, 115] => lookup_107(),
            [98, 97, 115, 101, 98, 97, 108, 108] => lookup_108(),
            [98, 97, 115, 107, 101, 116, 98, 97, 108, 108] => lookup_109(labels),
            [98, 97, 117, 104, 97, 117, 115] => lookup_110(),
            [98, 97, 121, 101, 114, 110] => lookup_111(),
            [98, 98] => lookup_112(labels),
            [98, 98, 99] => lookup_113(),
            [98, 98, 116] => lookup_114(),
            [98, 98, 118, 97] => lookup_115(),
            [98, 99, 103] => lookup_116(),
            [98, 99, 110] => lookup_117(),
            [98, 100] => lookup_118(info, labels),
            [98, 101] => lookup_119(labels),
            [98, 101, 97, 116, 115] => lookup_120(),
            [98, 101, 97, 117, 116, 121] => lookup_121(),
            [98, 101, 101, 114] => lookup_122(),
            [98, 101, 110, 116, 108, 101, 121] => lookup_123(),
            [98, 101, 114, 108, 105, 110] => lookup_124(),
            [98, 101, 115, 116] => lookup_125(),
            [98, 101, 115, 116, 98, 117, 121] => lookup_126(),
            [98, 101, 116] => lookup_127(),
            [98, 102] => lookup_128(labels),
            [98, 103] => lookup_129(labels),
            [98, 104] => lookup_130(labels),
            [98, 104, 97, 114, 116, 105] => lookup_131(),
            [98, 105] => lookup_132(labels),
            [98, 105, 98, 108, 101] => lookup_133(),
            [98, 105, 100] => lookup_134(),
            [98, 105, 107, 101] => lookup_135(),
            [98, 105, 110, 103] => lookup_136(),
            [98, 105, 110, 103, 111] => lookup_137(),
            [98, 105, 111] => lookup_138(),
            [98, 105, 122] => lookup_139(labels),
            [98, 106] => lookup_140(labels),
            [98, 108, 97, 99, 107] => lookup_141(),
            [98, 108, 97, 99, 107, 102, 114, 105, 100, 97, 121] => lookup_142(),
            [98, 108, 111, 99, 107, 98, 117, 115, 116, 101, 114] => lookup_143(),
            [98, 108, 111, 103] => lookup_144(),
            [98, 108, 111, 111, 109, 98, 101, 114, 103] => lookup_145(),
            [98, 108, 117, 101] => lookup_146(),
            [98, 109] => lookup_147(labels),
            [98, 109, 115] => lookup_148(),
            [98, 109, 119] => lookup_149(),
            [98, 110] => lookup_150(labels),
            [98, 110, 112, 112, 97, 114, 105, 98, 97, 115] => lookup_151(),
            [98, 111] => lookup_152(labels),
            [98, 111, 97, 116, 115] => lookup_153(),
            [98, 111, 101, 104, 114, 105, 110, 103, 101, 114] => lookup_154(),
            [98, 111, 102, 97] => lookup_155(),
            [98, 111, 109] => lookup_156(),
            [98, 111, 110, 100] => lookup_157(),
            [98, 111, 111] => lookup_158(),
            [98, 111, 111, 107] => lookup_159(),
            [98, 111, 111, 107, 105, 110, 103] => lookup_160(),
            [98, 111, 115, 99, 104] => lookup_161(),
            [98, 111, 115, 116, 105, 107] => lookup_162(),
            [98, 111, 115, 116, 111, 110] => lookup_163(),
            [98, 111, 116] => lookup_164(),
            [98, 111, 117, 116, 105, 113, 117, 101] => lookup_165(),
            [98, 111, 120] => lookup_166(),
            [98, 114] => lookup_167(labels),
            [98, 114, 97, 100, 101, 115, 99, 111] => lookup_168(),
            [98, 114, 105, 100, 103, 101, 115, 116, 111, 110, 101] => lookup_169(),
            [98, 114, 111, 97, 100, 119, 97, 121] => lookup_170(),
            [98, 114, 111, 107, 101, 114] => lookup_171(),
            [98, 114, 111, 116, 104, 101, 114] => lookup_172(),
            [98, 114, 117, 115, 115, 101, 108, 115] => lookup_173(),
            [98, 115] => lookup_174(labels),
            [98, 116] => lookup_175(labels),
            [98, 117, 105, 108, 100] => lookup_176(),
            [98, 117, 105, 108, 100, 101, 114, 115] => lookup_177(labels),
            [98, 117, 115, 105, 110, 101, 115, 115] => lookup_178(labels),
            [98, 117, 121] => lookup_179(),
            [98, 117, 122, 122] => lookup_180(),
            [98, 118] => lookup_181(),
            [98, 119] => lookup_182(labels),
            [98, 121] => lookup_183(labels),
            [98, 122] => lookup_184(labels),
            [98, 122, 104] => lookup_185(),
            [99, 97] => lookup_186(labels),
            [99, 97, 98] => lookup_187(),
            [99, 97, 102, 101] => lookup_188(),
            [99, 97, 108] => lookup_189(),
            [99, 97, 108, 108] => lookup_190(),
            [99, 97, 108, 118, 105, 110, 107, 108, 101, 105, 110] => lookup_191(),
            [99, 97, 109] => lookup_192(),
            [99, 97, 109, 101, 114, 97] => lookup_193(),
            [99, 97, 109, 112] => lookup_194(),
            [99, 97, 110, 111, 110] => lookup_195(),
            [99, 97, 112, 101, 116, 111, 119, 110] => lookup_196(),
            [99, 97, 112, 105, 116, 97, 108] => lookup_197(),
            [99, 97, 112, 105, 116, 97, 108, 111, 110, 101] => lookup_198(),
            [99, 97, 114] => lookup_199(),
            [99, 97, 114, 97, 118, 97, 110] => lookup_200(),
            [99, 97, 114, 100, 115] => lookup_201(),
            [99, 97, 114, 101] => lookup_202(),
            [99, 97, 114, 101, 101, 114] => lookup_203(),
            [99, 97, 114, 101, 101, 114, 115] => lookup_204(),
            [99, 97, 114, 115] => lookup_205(),
            [99, 97, 115, 97] => lookup_206(labels),
            [99, 97, 115, 101] => lookup_207(),
            [99, 97, 115, 104] => lookup_208(),
            [99, 97, 115, 105, 110, 111] => lookup_209(),
            [99, 97, 116] => lookup_210(),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_211(),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_212(),
            [99, 98, 97] => lookup_213(),
            [99, 98, 110] => lookup_214(),
            [99, 98, 114, 101] => lookup_215(),
            [99, 98, 115] => lookup_216(),
            [99, 99] => lookup_217(labels),
            [99, 100] => lookup_218(labels),
            [99, 101, 110, 116, 101, 114] => lookup_219(),
            [99, 101, 111] => lookup_220(),
            [99, 101, 114, 110] => lookup_221(),
            [99, 102] => lookup_222(labels),
            [99, 102, 97] => lookup_223(),
            [99, 102, 100] => lookup_224(),
            [99, 103] => lookup_225(),
            [99, 104] => lookup_226(labels),
            [99, 104, 97, 110, 101, 108] => lookup_227(),
            [99, 104, 97, 110, 110, 101, 108] => lookup_228(),
            [99, 104, 97, 114, 105, 116, 121] => lookup_229(),
            [99, 104, 97, 115, 101] => lookup_230(),
            [99, 104, 97, 116] => lookup_231(),
            [99, 104, 101, 97, 112] => lookup_232(),
            [99, 104, 105, 110, 116, 97, 105] => lookup_233(),
            [99, 104, 114, 105, 115, 116, 109, 97, 115] => lookup_234(),
            [99, 104, 114, 111, 109, 101] => lookup_235(),
            [99, 104, 117, 114, 99, 104] => lookup_236(),
            [99, 105] => lookup_237(labels),
            [99, 105, 112, 114, 105, 97, 110, 105] => lookup_238(),
            [99, 105, 114, 99, 108, 101] => lookup_239(),
            [99, 105, 115, 99, 111] => lookup_240(),
            [99, 105, 116, 97, 100, 101, 108] => lookup_241(),
            [99, 105, 116, 105] => lookup_242(),
            [99, 105, 116, 105, 99] => lookup_243(),
            [99, 105, 116, 121] => lookup_244(),
            [99, 105, 116, 121, 101, 97, 116, 115] => lookup_245(),
            [99, 107] => lookup_246(info, labels),
            [99, 108] => lookup_247(labels),
            [99, 108, 97, 105, 109, 115] => lookup_248(),
            [99, 108, 101, 97, 110, 105, 110, 103] => lookup_249(),
            [99, 108, 105, 99, 107] => lookup_250(),
            [99, 108, 105, 110, 105, 99] => lookup_251(),
            [99, 108, 105, 110, 105, 113, 117, 101] => lookup_252(),
            [99, 108, 111, 116, 104, 105, 110, 103] => lookup_253(),
            [99, 108, 111, 117, 100] => lookup_254(labels),
            [99, 108, 117, 98] => lookup_255(labels),
            [99, 108, 117, 98, 109, 101, 100] => lookup_256(),
            [99, 109] => lookup_257(labels),
            [99, 110] => lookup_258(labels),
            [99, 111] => lookup_259(labels),
            [99, 111, 97, 99, 104] => lookup_260(),
            [99, 111, 100, 101, 115] => lookup_261(labels),
            [99, 111, 102, 102, 101, 101] => lookup_262(),
            [99, 111, 108, 108, 101, 103, 101] => lookup_263(),
            [99, 111, 108, 111, 103, 110, 101] => lookup_264(),
            [99, 111, 109] => lookup_265(labels),
            [99, 111, 109, 99, 97, 115, 116] => lookup_266(),
            [99, 111, 109, 109, 98, 97, 110, 107] => lookup_267(),
            [99, 111, 109, 109, 117, 110, 105, 116, 121] => lookup_268(labels),
            [99, 111, 109, 112, 97, 110, 121] => lookup_269(),
            [99, 111, 109, 112, 97, 114, 101] => lookup_270(),
            [99, 111, 109, 112, 117, 116, 101, 114] => lookup_271(),
            [99, 111, 109, 115, 101, 99] => lookup_272(),
            [99, 111, 110, 100, 111, 115] => lookup_273(),
            [99, 111, 110, 115, 116, 114, 117, 99, 116, 105, 111, 110] => lookup_274(),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_275(),
            [99, 111, 110, 116, 97, 99, 116] => lookup_276(),
            [99, 111, 110, 116, 114, 97, 99, 116, 111, 114, 115] => lookup_277(),
            [99, 111, 111, 107, 105, 110, 103] => lookup_278(),
            [99, 111, 111, 107, 105, 110, 103, 99, 104, 97, 110, 110, 101, 108] => lookup_279(),
            [99, 111, 111, 108] => lookup_280(labels),
            [99, 111, 111, 112] => lookup_281(),
            [99, 111, 114, 115, 105, 99, 97] => lookup_282(),
            [99, 111, 117, 110, 116, 114, 121] => lookup_283(),
            [99, 111, 117, 112, 111, 110] => lookup_284(),
            [99, 111, 117, 112, 111, 110, 115] => lookup_285(),
            [99, 111, 117, 114, 115, 101, 115] => lookup_286(),
            [99, 112, 97] => lookup_287(),
            [99, 114] => lookup_288(labels),
            [99, 114, 101, 100, 105, 116] => lookup_289(),
            [99, 114, 101, 100, 105, 116, 99, 97, 114, 100] => lookup_290(),
            [99, 114, 101, 100, 105, 116, 117, 110, 105, 111, 110] => lookup_291(),
            [99, 114, 105, 99, 107, 101, 116] => lookup_292(),
            [99, 114, 111, 119, 110] => lookup_293(),
            [99, 114, 115] => lookup_294(),
            [99, 114, 117, 105, 115, 101] => lookup_295(),
            [99, 114, 117, 105, 115, 101, 115] => lookup_296(),
            [99, 117] => lookup_297(labels),
            [99, 117, 105, 115, 105, 110, 101, 108, 108, 97] => lookup_298(),
            [99, 118] => lookup_299(labels),
            [99, 119] => lookup_300(labels),
            [99, 120] => lookup_301(labels),
            [99, 121] => lookup_302(labels),
            [99, 121, 109, 114, 117] => lookup_303(),
            [99, 121, 111, 117] => lookup_304(),
            [99, 122] => lookup_305(labels),
            [100, 97, 98, 117, 114] => lookup_306(),
            [100, 97, 100] => lookup_307(),
            [100, 97, 110, 99, 101] => lookup_308(),
            [100, 97, 116, 97] => lookup_309(),
            [100, 97, 116, 101] => lookup_310(),
            [100, 97, 116, 105, 110, 103] => lookup_311(),
            [100, 97, 116, 115, 117, 110] => lookup_312(),
            [100, 97, 121] => lookup_313(),
            [100, 99, 108, 107] => lookup_314(),
            [100, 100, 115] => lookup_315(),
            [100, 101] => lookup_316(labels),
            [100, 101, 97, 108] => lookup_317(),
            [100, 101, 97, 108, 101, 114] => lookup_318(),
            [100, 101, 97, 108, 115] => lookup_319(),
            [100, 101, 103, 114, 101, 101] => lookup_320(),
            [100, 101, 108, 105, 118, 101, 114, 121] => lookup_321(),
            [100, 101, 108, 108] => lookup_322(),
            [100, 101, 108, 111, 105, 116, 116, 101] => lookup_323(),
            [100, 101, 108, 116, 97] => lookup_324(),
            [100, 101, 109, 111, 99, 114, 97, 116] => lookup_325(),
            [100, 101, 110, 116, 97, 108] => lookup_326(),
            [100, 101, 110, 116, 105, 115, 116] => lookup_327(),
            [100, 101, 115, 105] => lookup_328(),
            [100, 101, 115, 105, 103, 110] => lookup_329(labels),
            [100, 101, 118] => lookup_330(labels),
            [100, 104, 108] => lookup_331(),
            [100, 105, 97, 109, 111, 110, 100, 115] => lookup_332(),
            [100, 105, 101, 116] => lookup_333(),
            [100, 105, 103, 105, 116, 97, 108] => lookup_334(labels),
            [100, 105, 114, 101, 99, 116] => lookup_335(),
            [100, 105, 114, 101, 99, 116, 111, 114, 121] => lookup_336(),
            [100, 105, 115, 99, 111, 117, 110, 116] => lookup_337(),
            [100, 105, 115, 99, 111, 118, 101, 114] => lookup_338(),
            [100, 105, 115, 104] => lookup_339(),
            [100, 105, 121] => lookup_340(),
            [100, 106] => lookup_341(),
            [100, 107] => lookup_342(labels),
            [100, 109] => lookup_343(labels),
            [100, 110, 112] => lookup_344(),
            [100, 111] => lookup_345(labels),
            [100, 111, 99, 115] => lookup_346(),
            [100, 111, 99, 116, 111, 114] => lookup_347(),
            [100, 111, 103] => lookup_348(),
            [100, 111, 109, 97, 105, 110, 115] => lookup_349(),
            [100, 111, 116] => lookup_350(),
            [100, 111, 119, 110, 108, 111, 97, 100] => lookup_351(),
            [100, 114, 105, 118, 101] => lookup_352(),
            [100, 116, 118] => lookup_353(),
            [100, 117, 98, 97, 105] => lookup_354(),
            [100, 117, 110, 108, 111, 112] => lookup_355(),
            [100, 117, 112, 111, 110, 116] => lookup_356(),
            [100, 117, 114, 98, 97, 110] => lookup_357(),
            [100, 118, 97, 103] => lookup_358(),
            [100, 118, 114] => lookup_359(),
            [100, 122] => lookup_360(labels),
            [101, 97, 114, 116, 104] => lookup_361(labels),
            [101, 97, 116] => lookup_362(),
            [101, 99] => lookup_363(labels),
            [101, 99, 111] => lookup_364(),
            [101, 100, 101, 107, 97] => lookup_365(),
            [101, 100, 117] => lookup_366(labels),
            [101, 100, 117, 99, 97, 116, 105, 111, 110] => lookup_367(labels),
            [101, 101] => lookup_368(labels),
            [101, 103] => lookup_369(labels),
            [101, 109, 97, 105, 108] => lookup_370(),
            [101, 109, 101, 114, 99, 107] => lookup_371(),
            [101, 110, 101, 114, 103, 121] => lookup_372(),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_373(),
            [101, 110, 103, 105, 110, 101, 101, 114, 105, 110, 103] => lookup_374(),
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 115] => lookup_375(),
            [101, 112, 115, 111, 110] => lookup_376(),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_377(),
            [101, 114] => lookup_378(info, labels),
            [101, 114, 105, 99, 115, 115, 111, 110] => lookup_379(),
            [101, 114, 110, 105] => lookup_380(),
            [101, 115] => lookup_381(labels),
            [101, 115, 113] => lookup_382(),
            [101, 115, 116, 97, 116, 101] => lookup_383(labels),
            [101, 116] => lookup_384(labels),
            [101, 116, 105, 115, 97, 108, 97, 116] => lookup_385(),
            [101, 117] => lookup_386(labels),
            [101, 117, 114, 111, 118, 105, 115, 105, 111, 110] => lookup_387(),
            [101, 117, 115] => lookup_388(labels),
            [101, 118, 101, 110, 116, 115] => lookup_389(labels),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_390(),
            [101, 120, 112, 101, 114, 116] => lookup_391(),
            [101, 120, 112, 111, 115, 101, 100] => lookup_392(),
            [101, 120, 112, 114, 101, 115, 115] => lookup_393(),
            [101, 120, 116, 114, 97, 115, 112, 97, 99, 101] => lookup_394(),
            [102, 97, 103, 101] => lookup_395(),
            [102, 97, 105, 108] => lookup_396(),
            [102, 97, 105, 114, 119, 105, 110, 100, 115] => lookup_397(),
            [102, 97, 105, 116, 104] => lookup_398(labels),
            [102, 97, 109, 105, 108, 121] => lookup_399(),
            [102, 97, 110] => lookup_400(),
            [102, 97, 110, 115] => lookup_401(),
            [102, 97, 114, 109] => lookup_402(labels),
            [102, 97, 114, 109, 101, 114, 115] => lookup_403(),
            [102, 97, 115, 104, 105, 111, 110] => lookup_404(),
            [102, 97, 115, 116] => lookup_405(),
            [102, 101, 100, 101, 120] => lookup_406(),
            [102, 101, 101, 100, 98, 97, 99, 107] => lookup_407(),
            [102, 101, 114, 114, 97, 114, 105] => lookup_408(),
            [102, 101, 114, 114, 101, 114, 111] => lookup_409(),
            [102, 105] => lookup_410(labels),
            [102, 105, 97, 116] => lookup_411(),
            [102, 105, 100, 101, 108, 105, 116, 121] => lookup_412(),
            [102, 105, 100, 111] => lookup_413(),
            [102, 105, 108, 109] => lookup_414(),
            [102, 105, 110, 97, 108] => lookup_415(),
            [102, 105, 110, 97, 110, 99, 101] => lookup_416(),
            [102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_417(labels),
            [102, 105, 114, 101] => lookup_418(),
            [102, 105, 114, 101, 115, 116, 111, 110, 101] => lookup_419(),
            [102, 105, 114, 109, 100, 97, 108, 101] => lookup_420(),
            [102, 105, 115, 104] => lookup_421(),
            [102, 105, 115, 104, 105, 110, 103] => lookup_422(),
            [102, 105, 116] => lookup_423(),
            [102, 105, 116, 110, 101, 115, 115] => lookup_424(),
            [102, 106] => lookup_425(labels),
            [102, 107] => lookup_426(info, labels),
            [102, 108, 105, 99, 107, 114] => lookup_427(),
            [102, 108, 105, 103, 104, 116, 115] => lookup_428(),
            [102, 108, 105, 114] => lookup_429(),
            [102, 108, 111, 114, 105, 115, 116] => lookup_430(),
            [102, 108, 111, 119, 101, 114, 115] => lookup_431(),
            [102, 108, 121] => lookup_432(),
            [102, 109] => lookup_433(labels),
            [102, 111] => lookup_434(),
            [102, 111, 111] => lookup_435(),
            [102, 111, 111, 100] => lookup_436(),
            [102, 111, 111, 100, 110, 101, 116, 119, 111, 114, 107] => lookup_437(),
            [102, 111, 111, 116, 98, 97, 108, 108] => lookup_438(),
            [102, 111, 114, 100] => lookup_439(),
            [102, 111, 114, 101, 120] => lookup_440(),
            [102, 111, 114, 115, 97, 108, 101] => lookup_441(),
            [102, 111, 114, 117, 109] => lookup_442(),
            [102, 111, 117, 110, 100, 97, 116, 105, 111, 110] => lookup_443(),
            [102, 111, 120] => lookup_444(),
            [102, 114] => lookup_445(labels),
            [102, 114, 101, 101] => lookup_446(),
            [102, 114, 101, 115, 101, 110, 105, 117, 115] => lookup_447(),
            [102, 114, 108] => lookup_448(),
            [102, 114, 111, 103, 97, 110, 115] => lookup_449(),
            [102, 114, 111, 110, 116, 100, 111, 111, 114] => lookup_450(),
            [102, 114, 111, 110, 116, 105, 101, 114] => lookup_451(),
            [102, 116, 114] => lookup_452(),
            [102, 117, 106, 105, 116, 115, 117] => lookup_453(),
            [102, 117, 110] => lookup_454(),
            [102, 117, 110, 100] => lookup_455(),
            [102, 117, 114, 110, 105, 116, 117, 114, 101] => lookup_456(),
            [102, 117, 116, 98, 111, 108] => lookup_457(),
            [102, 121, 105] => lookup_458(),
            [103, 97] => lookup_459(),
            [103, 97, 108] => lookup_460(),
            [103, 97, 108, 108, 101, 114, 121] => lookup_461(),
            [103, 97, 108, 108, 111] => lookup_462(),
            [103, 97, 108, 108, 117, 112] => lookup_463(),
            [103, 97, 109, 101] => lookup_464(),
            [103, 97, 109, 101, 115] => lookup_465(),
            [103, 97, 112] => lookup_466(),
            [103, 97, 114, 100, 101, 110] => lookup_467(),
            [103, 97, 121] => lookup_468(),
            [103, 98] => lookup_469(),
            [103, 98, 105, 122] => lookup_470(),
            [103, 100] => lookup_471(labels),
            [103, 100, 110] => lookup_472(labels),
            [103, 101] => lookup_473(labels),
            [103, 101, 97] => lookup_474(),
            [103, 101, 110, 116] => lookup_475(),
            [103, 101, 110, 116, 105, 110, 103] => lookup_476(),
            [103, 101, 111, 114, 103, 101] => lookup_477(),
            [103, 102] => lookup_478(),
            [103, 103] => lookup_479(labels),
            [103, 103, 101, 101] => lookup_480(),
            [103, 104] => lookup_481(labels),
            [103, 105] => lookup_482(labels),
            [103, 105, 102, 116] => lookup_483(),
            [103, 105, 102, 116, 115] => lookup_484(),
            [103, 105, 118, 101, 115] => lookup_485(),
            [103, 105, 118, 105, 110, 103] => lookup_486(),
            [103, 108] => lookup_487(labels),
            [103, 108, 97, 115, 115] => lookup_488(),
            [103, 108, 101] => lookup_489(),
            [103, 108, 111, 98, 97, 108] => lookup_490(),
            [103, 108, 111, 98, 111] => lookup_491(),
            [103, 109] => lookup_492(),
            [103, 109, 97, 105, 108] => lookup_493(),
            [103, 109, 98, 104] => lookup_494(),
            [103, 109, 111] => lookup_495(),
            [103, 109, 120] => lookup_496(),
            [103, 110] => lookup_497(labels),
            [103, 111, 100, 97, 100, 100, 121] => lookup_498(),
            [103, 111, 108, 100] => lookup_499(),
            [103, 111, 108, 100, 112, 111, 105, 110, 116] => lookup_500(),
            [103, 111, 108, 102] => lookup_501(),
            [103, 111, 111] => lookup_502(),
            [103, 111, 111, 100, 121, 101, 97, 114] => lookup_503(),
            [103, 111, 111, 103] => lookup_504(labels),
            [103, 111, 111, 103, 108, 101] => lookup_505(),
            [103, 111, 112] => lookup_506(),
            [103, 111, 116] => lookup_507(),
            [103, 111, 118] => lookup_508(),
            [103, 112] => lookup_509(labels),
            [103, 113] => lookup_510(),
            [103, 114] => lookup_511(labels),
            [103, 114, 97, 105, 110, 103, 101, 114] => lookup_512(),
            [103, 114, 97, 112, 104, 105, 99, 115] => lookup_513(),
            [103, 114, 97, 116, 105, 115] => lookup_514(),
            [103, 114, 101, 101, 110] => lookup_515(),
            [103, 114, 105, 112, 101] => lookup_516(),
            [103, 114, 111, 99, 101, 114, 121] => lookup_517(),
            [103, 114, 111, 117, 112] => lookup_518(labels),
            [103, 115] => lookup_519(),
            [103, 116] => lookup_520(labels),
            [103, 117] => lookup_521(labels),
            [103, 117, 97, 114, 100, 105, 97, 110] => lookup_522(),
            [103, 117, 99, 99, 105] => lookup_523(),
            [103, 117, 103, 101] => lookup_524(),
            [103, 117, 105, 100, 101] => lookup_525(),
            [103, 117, 105, 116, 97, 114, 115] => lookup_526(),
            [103, 117, 114, 117] => lookup_527(),
            [103, 119] => lookup_528(),
            [103, 121] => lookup_529(labels),
            [104, 97, 105, 114] => lookup_530(),
            [104, 97, 109, 98, 117, 114, 103] => lookup_531(),
            [104, 97, 110, 103, 111, 117, 116] => lookup_532(),
            [104, 97, 117, 115] => lookup_533(),
            [104, 98, 111] => lookup_534(),
            [104, 100, 102, 99] => lookup_535(),
            [104, 100, 102, 99, 98, 97, 110, 107] => lookup_536(),
            [104, 101, 97, 108, 116, 104] => lookup_537(labels),
            [104, 101, 97, 108, 116, 104, 99, 97, 114, 101] => lookup_538(),
            [104, 101, 108, 112] => lookup_539(),
            [104, 101, 108, 115, 105, 110, 107, 105] => lookup_540(),
            [104, 101, 114, 101] => lookup_541(),
            [104, 101, 114, 109, 101, 115] => lookup_542(),
            [104, 103, 116, 118] => lookup_543(),
            [104, 105, 112, 104, 111, 112] => lookup_544(),
            [104, 105, 115, 97, 109, 105, 116, 115, 117] => lookup_545(),
            [104, 105, 116, 97, 99, 104, 105] => lookup_546(),
            [104, 105, 118] => lookup_547(),
            [104, 107] => lookup_548(labels),
            [104, 107, 116] => lookup_549(),
            [104, 109] => lookup_550(),
            [104, 110] => lookup_551(labels),
            [104, 111, 99, 107, 101, 121] => lookup_552(),
            [104, 111, 108, 100, 105, 110, 103, 115] => lookup_553(),
            [104, 111, 108, 105, 100, 97, 121] => lookup_554(),
            [104, 111, 109, 101, 100, 101, 112, 111, 116] => lookup_555(),
            [104, 111, 109, 101, 103, 111, 111, 100, 115] => lookup_556(),
            [104, 111, 109, 101, 115] => lookup_557(),
            [104, 111, 109, 101, 115, 101, 110, 115, 101] => lookup_558(),
            [104, 111, 110, 100, 97] => lookup_559(),
            [104, 111, 114, 115, 101] => lookup_560(),
            [104, 111, 115, 112, 105, 116, 97, 108] => lookup_561(),
            [104, 111, 115, 116] => lookup_562(labels),
            [104, 111, 115, 116, 105, 110, 103] => lookup_563(labels),
            [104, 111, 116] => lookup_564(),
            [104, 111, 116, 101, 108, 101, 115] => lookup_565(),
            [104, 111, 116, 101, 108, 115] => lookup_566(),
            [104, 111, 116, 109, 97, 105, 108] => lookup_567(),
            [104, 111, 117, 115, 101] => lookup_568(),
            [104, 111, 119] => lookup_569(),
            [104, 114] => lookup_570(labels),
            [104, 115, 98, 99] => lookup_571(),
            [104, 116] => lookup_572(labels),
            [104, 117] => lookup_573(labels),
            [104, 117, 103, 104, 101, 115] => lookup_574(),
            [104, 121, 97, 116, 116] => lookup_575(),
            [104, 121, 117, 110, 100, 97, 105] => lookup_576(),
            [105, 98, 109] => lookup_577(),
            [105, 99, 98, 99] => lookup_578(),
            [105, 99, 101] => lookup_579(),
            [105, 99, 117] => lookup_580(),
            [105, 100] => lookup_581(labels),
            [105, 101] => lookup_582(labels),
            [105, 101, 101, 101] => lookup_583(),
            [105, 102, 109] => lookup_584(),
            [105, 107, 97, 110, 111] => lookup_585(),
            [105, 108] => lookup_586(labels),
            [105, 109] => lookup_587(labels),
            [105, 109, 97, 109, 97, 116] => lookup_588(),
            [105, 109, 100, 98] => lookup_589(),
            [105, 109, 109, 111] => lookup_590(),
            [105, 109, 109, 111, 98, 105, 108, 105, 101, 110] => lookup_591(),
            [105, 110] => lookup_592(labels),
            [105, 110, 99] => lookup_593(),
            [105, 110, 100, 117, 115, 116, 114, 105, 101, 115] => lookup_594(),
            [105, 110, 102, 105, 110, 105, 116, 105] => lookup_595(),
            [105, 110, 102, 111] => lookup_596(labels),
            [105, 110, 103] => lookup_597(),
            [105, 110, 107] => lookup_598(),
            [105, 110, 115, 116, 105, 116, 117, 116, 101] => lookup_599(),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_600(),
            [105, 110, 115, 117, 114, 101] => lookup_601(),
            [105, 110, 116] => lookup_602(labels),
            [105, 110, 116, 101, 114, 110, 97, 116, 105, 111, 110, 97, 108] => lookup_603(),
            [105, 110, 116, 117, 105, 116] => lookup_604(),
            [105, 110, 118, 101, 115, 116, 109, 101, 110, 116, 115] => lookup_605(),
            [105, 111] => lookup_606(labels),
            [105, 112, 105, 114, 97, 110, 103, 97] => lookup_607(),
            [105, 113] => lookup_608(labels),
            [105, 114] => lookup_609(labels),
            [105, 114, 105, 115, 104] => lookup_610(),
            [105, 115] => lookup_611(labels),
            [105, 115, 109, 97, 105, 108, 105] => lookup_612(),
            [105, 115, 116] => lookup_613(),
            [105, 115, 116, 97, 110, 98, 117, 108] => lookup_614(),
            [105, 116] => lookup_615(labels),
            [105, 116, 97, 117] => lookup_616(),
            [105, 116, 118] => lookup_617(),
            [106, 97, 103, 117, 97, 114] => lookup_618(),
            [106, 97, 118, 97] => lookup_619(),
            [106, 99, 98] => lookup_620(),
            [106, 101] => lookup_621(labels),
            [106, 101, 101, 112] => lookup_622(),
            [106, 101, 116, 122, 116] => lookup_623(),
            [106, 101, 119, 101, 108, 114, 121] => lookup_624(),
            [106, 105, 111] => lookup_625(),
            [106, 108, 108] => lookup_626(),
            [106, 109] => lookup_627(info, labels),
            [106, 109, 112] => lookup_628(),
            [106, 110, 106] => lookup_629(),
            [106, 111] => lookup_630(labels),
            [106, 111, 98, 115] => lookup_631(),
            [106, 111, 98, 117, 114, 103] => lookup_632(),
            [106, 111, 116] => lookup_633(),
            [106, 111, 121] => lookup_634(),
            [106, 112] => lookup_635(labels),
            [106, 112, 109, 111, 114, 103, 97, 110] => lookup_636(),
            [106, 112, 114, 115] => lookup_637(),
            [106, 117, 101, 103, 111, 115] => lookup_638(),
            [106, 117, 110, 105, 112, 101, 114] => lookup_639(),
            [107, 97, 117, 102, 101, 110] => lookup_640(),
            [107, 100, 100, 105] => lookup_641(),
            [107, 101] => lookup_642(labels),
            [107, 101, 114, 114, 121, 104, 111, 116, 101, 108, 115] => lookup_643(),
            [107, 101, 114, 114, 121, 108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_644(),
            [107, 101, 114, 114, 121, 112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => {
                lookup_645()
            }
            [107, 102, 104] => lookup_646(),
            [107, 103] => lookup_647(labels),
            [107, 104] => lookup_648(info, labels),
            [107, 105] => lookup_649(labels),
            [107, 105, 97] => lookup_650(),
            [107, 105, 100, 115] => lookup_651(),
            [107, 105, 109] => lookup_652(),
            [107, 105, 110, 100, 101, 114] => lookup_653(),
            [107, 105, 110, 100, 108, 101] => lookup_654(),
            [107, 105, 116, 99, 104, 101, 110] => lookup_655(),
            [107, 105, 119, 105] => lookup_656(),
            [107, 109] => lookup_657(labels),
            [107, 110] => lookup_658(labels),
            [107, 111, 101, 108, 110] => lookup_659(),
            [107, 111, 109, 97, 116, 115, 117] => lookup_660(),
            [107, 111, 115, 104, 101, 114] => lookup_661(),
            [107, 112] => lookup_662(labels),
            [107, 112, 109, 103] => lookup_663(),
            [107, 112, 110] => lookup_664(),
            [107, 114] => lookup_665(labels),
            [107, 114, 100] => lookup_666(labels),
            [107, 114, 101, 100] => lookup_667(),
            [107, 117, 111, 107, 103, 114, 111, 117, 112] => lookup_668(),
            [107, 119] => lookup_669(labels),
            [107, 121] => lookup_670(labels),
            [107, 121, 111, 116, 111] => lookup_671(),
            [107, 122] => lookup_672(labels),
            [108, 97] => lookup_673(labels),
            [108, 97, 99, 97, 105, 120, 97] => lookup_674(),
            [108, 97, 109, 98, 111, 114, 103, 104, 105, 110, 105] => lookup_675(),
            [108, 97, 109, 101, 114] => lookup_676(),
            [108, 97, 110, 99, 97, 115, 116, 101, 114] => lookup_677(),
            [108, 97, 110, 99, 105, 97] => lookup_678(),
            [108, 97, 110, 100] => lookup_679(labels),
            [108, 97, 110, 100, 114, 111, 118, 101, 114] => lookup_680(),
            [108, 97, 110, 120, 101, 115, 115] => lookup_681(),
            [108, 97, 115, 97, 108, 108, 101] => lookup_682(),
            [108, 97, 116] => lookup_683(),
            [108, 97, 116, 105, 110, 111] => lookup_684(),
            [108, 97, 116, 114, 111, 98, 101] => lookup_685(),
            [108, 97, 119] => lookup_686(),
            [108, 97, 119, 121, 101, 114] => lookup_687(),
            [108, 98] => lookup_688(labels),
            [108, 99] => lookup_689(labels),
            [108, 100, 115] => lookup_690(),
            [108, 101, 97, 115, 101] => lookup_691(),
            [108, 101, 99, 108, 101, 114, 99] => lookup_692(),
            [108, 101, 102, 114, 97, 107] => lookup_693(),
            [108, 101, 103, 97, 108] => lookup_694(),
            [108, 101, 103, 111] => lookup_695(),
            [108, 101, 120, 117, 115] => lookup_696(),
            [108, 103, 98, 116] => lookup_697(),
            [108, 105] => lookup_698(labels),
            [108, 105, 100, 108] => lookup_699(),
            [108, 105, 102, 101] => lookup_700(),
            [108, 105, 102, 101, 105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_701(),
            [108, 105, 102, 101, 115, 116, 121, 108, 101] => lookup_702(),
            [108, 105, 103, 104, 116, 105, 110, 103] => lookup_703(),
            [108, 105, 107, 101] => lookup_704(),
            [108, 105, 108, 108, 121] => lookup_705(),
            [108, 105, 109, 105, 116, 101, 100] => lookup_706(),
            [108, 105, 109, 111] => lookup_707(),
            [108, 105, 110, 99, 111, 108, 110] => lookup_708(),
            [108, 105, 110, 107] => lookup_709(labels),
            [108, 105, 112, 115, 121] => lookup_710(),
            [108, 105, 118, 101] => lookup_711(labels),
            [108, 105, 118, 105, 110, 103] => lookup_712(),
            [108, 107] => lookup_713(labels),
            [108, 108, 99] => lookup_714(),
            [108, 108, 112] => lookup_715(),
            [108, 111, 97, 110] => lookup_716(),
            [108, 111, 97, 110, 115] => lookup_717(),
            [108, 111, 99, 107, 101, 114] => lookup_718(),
            [108, 111, 99, 117, 115] => lookup_719(),
            [108, 111, 108] => lookup_720(labels),
            [108, 111, 110, 100, 111, 110] => lookup_721(),
            [108, 111, 116, 116, 101] => lookup_722(),
            [108, 111, 116, 116, 111] => lookup_723(),
            [108, 111, 118, 101] => lookup_724(),
            [108, 112, 108] => lookup_725(),
            [108, 112, 108, 102, 105, 110, 97, 110, 99, 105, 97, 108] => lookup_726(),
            [108, 114] => lookup_727(labels),
            [108, 115] => lookup_728(labels),
            [108, 116] => lookup_729(labels),
            [108, 116, 100] => lookup_730(),
            [108, 116, 100, 97] => lookup_731(),
            [108, 117] => lookup_732(labels),
            [108, 117, 110, 100, 98, 101, 99, 107] => lookup_733(),
            [108, 117, 120, 101] => lookup_734(),
            [108, 117, 120, 117, 114, 121] => lookup_735(),
            [108, 118] => lookup_736(labels),
            [108, 121] => lookup_737(labels),
            [109, 97] => lookup_738(labels),
            [109, 97, 100, 114, 105, 100] => lookup_739(),
            [109, 97, 105, 102] => lookup_740(),
            [109, 97, 105, 115, 111, 110] => lookup_741(),
            [109, 97, 107, 101, 117, 112] => lookup_742(),
            [109, 97, 110] => lookup_743(),
            [109, 97, 110, 97, 103, 101, 109, 101, 110, 116] => lookup_744(labels),
            [109, 97, 110, 103, 111] => lookup_745(),
            [109, 97, 112] => lookup_746(),
            [109, 97, 114, 107, 101, 116] => lookup_747(),
            [109, 97, 114, 107, 101, 116, 105, 110, 103] => lookup_748(),
            [109, 97, 114, 107, 101, 116, 115] => lookup_749(),
            [109, 97, 114, 114, 105, 111, 116, 116] => lookup_750(),
            [109, 97, 114, 115, 104, 97, 108, 108, 115] => lookup_751(),
            [109, 97, 115, 101, 114, 97, 116, 105] => lookup_752(),
            [109, 97, 116, 116, 101, 108] => lookup_753(),
            [109, 98, 97] => lookup_754(),
            [109, 99] => lookup_755(labels),
            [109, 99, 107, 105, 110, 115, 101, 121] => lookup_756(),
            [109, 100] => lookup_757(labels),
            [109, 101] => lookup_758(labels),
            [109, 101, 100] => lookup_759(),
            [109, 101, 100, 105, 97] => lookup_760(labels),
            [109, 101, 101, 116] => lookup_761(),
            [109, 101, 108, 98, 111, 117, 114, 110, 101] => lookup_762(),
            [109, 101, 109, 101] => lookup_763(),
            [109, 101, 109, 111, 114, 105, 97, 108] => lookup_764(),
            [109, 101, 110] => lookup_765(),
            [109, 101, 110, 117] => lookup_766(labels),
            [109, 101, 114, 99, 107, 109, 115, 100] => lookup_767(),
            [109, 103] => lookup_768(labels),
            [109, 104] => lookup_769(),
            [109, 105, 97, 109, 105] => lookup_770(),
            [109, 105, 99, 114, 111, 115, 111, 102, 116] => lookup_771(),
            [109, 105, 108] => lookup_772(),
            [109, 105, 110, 105] => lookup_773(),
            [109, 105, 110, 116] => lookup_774(),
            [109, 105, 116] => lookup_775(),
            [109, 105, 116, 115, 117, 98, 105, 115, 104, 105] => lookup_776(),
            [109, 107] => lookup_777(labels),
            [109, 108] => lookup_778(labels),
            [109, 108, 98] => lookup_779(),
            [109, 108, 115] => lookup_780(),
            [109, 109] => lookup_781(info, labels),
            [109, 109, 97] => lookup_782(),
            [109, 110] => lookup_783(labels),
            [109, 111] => lookup_784(labels),
            [109, 111, 98, 105] => lookup_785(labels),
            [109, 111, 98, 105, 108, 101] => lookup_786(),
            [109, 111, 100, 97] => lookup_787(),
            [109, 111, 101] => lookup_788(),
            [109, 111, 105] => lookup_789(),
            [109, 111, 109] => lookup_790(),
            [109, 111, 110, 97, 115, 104] => lookup_791(),
            [109, 111, 110, 101, 121] => lookup_792(),
            [109, 111, 110, 115, 116, 101, 114] => lookup_793(),
            [109, 111, 114, 109, 111, 110] => lookup_794(),
            [109, 111, 114, 116, 103, 97, 103, 101] => lookup_795(),
            [109, 111, 115, 99, 111, 119] => lookup_796(),
            [109, 111, 116, 111] => lookup_797(),
            [109, 111, 116, 111, 114, 99, 121, 99, 108, 101, 115] => lookup_798(),
            [109, 111, 118] => lookup_799(),
            [109, 111, 118, 105, 101] => lookup_800(),
            [109, 112] => lookup_801(labels),
            [109, 113] => lookup_802(),
            [109, 114] => lookup_803(labels),
            [109, 115] => lookup_804(labels),
            [109, 115, 100] => lookup_805(),
            [109, 116] => lookup_806(labels),
            [109, 116, 110] => lookup_807(),
            [109, 116, 114] => lookup_808(),
            [109, 117] => lookup_809(labels),
            [109, 117, 115, 101, 117, 109] => lookup_810(),
            [109, 117, 115, 105, 99] => lookup_811(),
            [109, 117, 116, 117, 97, 108] => lookup_812(),
            [109, 118] => lookup_813(labels),
            [109, 119] => lookup_814(labels),
            [109, 120] => lookup_815(labels),
            [109, 121] => lookup_816(labels),
            [109, 122] => lookup_817(labels),
            [110, 97] => lookup_818(labels),
            [110, 97, 98] => lookup_819(),
            [110, 97, 103, 111, 121, 97] => lookup_820(),
            [110, 97, 109, 101] => lookup_821(labels),
            [110, 97, 116, 117, 114, 97] => lookup_822(),
            [110, 97, 118, 121] => lookup_823(),
            [110, 98, 97] => lookup_824(),
            [110, 99] => lookup_825(labels),
            [110, 101] => lookup_826(),
            [110, 101, 99] => lookup_827(),
            [110, 101, 116] => lookup_828(labels),
            [110, 101, 116, 98, 97, 110, 107] => lookup_829(),
            [110, 101, 116, 102, 108, 105, 120] => lookup_830(),
            [110, 101, 116, 119, 111, 114, 107] => lookup_831(labels),
            [110, 101, 117, 115, 116, 97, 114] => lookup_832(),
            [110, 101, 119] => lookup_833(),
            [110, 101, 119, 115] => lookup_834(labels),
            [110, 101, 120, 116] => lookup_835(),
            [110, 101, 120, 116, 100, 105, 114, 101, 99, 116] => lookup_836(),
            [110, 101, 120, 117, 115] => lookup_837(),
            [110, 102] => lookup_838(labels),
            [110, 102, 108] => lookup_839(),
            [110, 103] => lookup_840(labels),
            [110, 103, 111] => lookup_841(),
            [110, 104, 107] => lookup_842(),
            [110, 105] => lookup_843(labels),
            [110, 105, 99, 111] => lookup_844(),
            [110, 105, 107, 101] => lookup_845(),
            [110, 105, 107, 111, 110] => lookup_846(),
            [110, 105, 110, 106, 97] => lookup_847(),
            [110, 105, 115, 115, 97, 110] => lookup_848(),
            [110, 105, 115, 115, 97, 121] => lookup_849(),
            [110, 108] => lookup_850(labels),
            [110, 111] => lookup_851(labels),
            [110, 111, 107, 105, 97] => lookup_852(),
            [110, 111, 114, 116, 104, 119, 101, 115, 116, 101, 114, 110, 109, 117, 116, 117, 97, 108] => {
                lookup_853()
            }
            [110, 111, 114, 116, 111, 110] => lookup_854(),
            [110, 111, 119] => lookup_855(),
            [110, 111, 119, 114, 117, 122] => lookup_856(),
            [110, 111, 119, 116, 118] => lookup_857(),
            [110, 112] => lookup_858(info, labels),
            [110, 114] => lookup_859(labels),
            [110, 114, 97] => lookup_860(),
            [110, 114, 119] => lookup_861(),
            [110, 116, 116] => lookup_862(),
            [110, 117] => lookup_863(labels),
            [110, 121, 99] => lookup_864(),
            [110, 122] => lookup_865(labels),
            [111, 98, 105] => lookup_866(),
            [111, 98, 115, 101, 114, 118, 101, 114] => lookup_867(),
            [111, 102, 102, 105, 99, 101] => lookup_868(),
            [111, 107, 105, 110, 97, 119, 97] => lookup_869(),
            [111, 108, 97, 121, 97, 110] => lookup_870(),
            [111, 108, 97, 121, 97, 110, 103, 114, 111, 117, 112] => lookup_871(),
            [111, 108, 100, 110, 97, 118, 121] => lookup_872(),
            [111, 108, 108, 111] => lookup_873(),
            [111, 109] => lookup_874(labels),
            [111, 109, 101, 103, 97] => lookup_875(),
            [111, 110, 101] => lookup_876(labels),
            [111, 110, 103] => lookup_877(),
            [111, 110, 105, 111, 110] => lookup_878(),
            [111, 110, 108] => lookup_879(),
            [111, 110, 108, 105, 110, 101] => lookup_880(labels),
            [111, 111, 111] => lookup_881(),
            [111, 112, 101, 110] => lookup_882(),
            [111, 114, 97, 99, 108, 101] => lookup_883(),
            [111, 114, 97, 110, 103, 101] => lookup_884(labels),
            [111, 114, 103] => lookup_885(labels),
            [111, 114, 103, 97, 110, 105, 99] => lookup_886(),
            [111, 114, 105, 103, 105, 110, 115] => lookup_887(),
            [111, 115, 97, 107, 97] => lookup_888(),
            [111, 116, 115, 117, 107, 97] => lookup_889(),
            [111, 116, 116] => lookup_890(),
            [111, 118, 104] => lookup_891(labels),
            [112, 97] => lookup_892(labels),
            [112, 97, 103, 101] => lookup_893(labels),
            [112, 97, 110, 97, 115, 111, 110, 105, 99] => lookup_894(),
            [112, 97, 114, 105, 115] => lookup_895(),
            [112, 97, 114, 115] => lookup_896(),
            [112, 97, 114, 116, 110, 101, 114, 115] => lookup_897(),
            [112, 97, 114, 116, 115] => lookup_898(),
            [112, 97, 114, 116, 121] => lookup_899(labels),
            [112, 97, 115, 115, 97, 103, 101, 110, 115] => lookup_900(),
            [112, 97, 121] => lookup_901(),
            [112, 99, 99, 119] => lookup_902(),
            [112, 101] => lookup_903(labels),
            [112, 101, 116] => lookup_904(),
            [112, 102] => lookup_905(labels),
            [112, 102, 105, 122, 101, 114] => lookup_906(),
            [112, 103] => lookup_907(info, labels),
            [112, 104] => lookup_908(labels),
            [112, 104, 97, 114, 109, 97, 99, 121] => lookup_909(),
            [112, 104, 100] => lookup_910(),
            [112, 104, 105, 108, 105, 112, 115] => lookup_911(),
            [112, 104, 111, 110, 101] => lookup_912(),
            [112, 104, 111, 116, 111] => lookup_913(),
            [112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 121] => lookup_914(),
            [112, 104, 111, 116, 111, 115] => lookup_915(labels),
            [112, 104, 121, 115, 105, 111] => lookup_916(),
            [112, 105, 99, 115] => lookup_917(),
            [112, 105, 99, 116, 101, 116] => lookup_918(),
            [112, 105, 99, 116, 117, 114, 101, 115] => lookup_919(labels),
            [112, 105, 100] => lookup_920(),
            [112, 105, 110] => lookup_921(),
            [112, 105, 110, 103] => lookup_922(),
            [112, 105, 110, 107] => lookup_923(),
            [112, 105, 111, 110, 101, 101, 114] => lookup_924(),
            [112, 105, 122, 122, 97] => lookup_925(labels),
            [112, 107] => lookup_926(labels),
            [112, 108] => lookup_927(labels),
            [112, 108, 97, 99, 101] => lookup_928(labels),
            [112, 108, 97, 121] => lookup_929(),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110] => lookup_930(),
            [112, 108, 117, 109, 98, 105, 110, 103] => lookup_931(),
            [112, 108, 117, 115] => lookup_932(),
            [112, 109] => lookup_933(labels),
            [112, 110] => lookup_934(labels),
            [112, 110, 99] => lookup_935(),
            [112, 111, 104, 108] => lookup_936(),
            [112, 111, 107, 101, 114] => lookup_937(),
            [112, 111, 108, 105, 116, 105, 101] => lookup_938(),
            [112, 111, 114, 110] => lookup_939(labels),
            [112, 111, 115, 116] => lookup_940(),
            [112, 114] => lookup_941(labels),
            [112, 114, 97, 109, 101, 114, 105, 99, 97] => lookup_942(),
            [112, 114, 97, 120, 105] => lookup_943(),
            [112, 114, 101, 115, 115] => lookup_944(),
            [112, 114, 105, 109, 101] => lookup_945(),
            [112, 114, 111] => lookup_946(labels),
            [112, 114, 111, 100] => lookup_947(),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110, 115] => lookup_948(),
            [112, 114, 111, 102] => lookup_949(),
            [112, 114, 111, 103, 114, 101, 115, 115, 105, 118, 101] => lookup_950(),
            [112, 114, 111, 109, 111] => lookup_951(),
            [112, 114, 111, 112, 101, 114, 116, 105, 101, 115] => lookup_952(),
            [112, 114, 111, 112, 101, 114, 116, 121] => lookup_953(),
            [112, 114, 111, 116, 101, 99, 116, 105, 111, 110] => lookup_954(),
            [112, 114, 117] => lookup_955(),
            [112, 114, 117, 100, 101, 110, 116, 105, 97, 108] => lookup_956(),
            [112, 115] => lookup_957(labels),
            [112, 116] => lookup_958(labels),
            [112, 117, 98] => lookup_959(labels),
            [112, 119] => lookup_960(labels),
            [112, 119, 99] => lookup_961(),
            [112, 121] => lookup_962(labels),
            [113, 97] => lookup_963(labels),
            [113, 112, 111, 110] => lookup_964(),
            [113, 117, 101, 98, 101, 99] => lookup_965(),
            [113, 117, 101, 115, 116] => lookup_966(),
            [114, 97, 99, 105, 110, 103] => lookup_967(),
            [114, 97, 100, 105, 111] => lookup_968(),
            [114, 101] => lookup_969(labels),
            [114, 101, 97, 100] => lookup_970(),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_971(),
            [114, 101, 97, 108, 116, 111, 114] => lookup_972(),
            [114, 101, 97, 108, 116, 121] => lookup_973(),
            [114, 101, 99, 105, 112, 101, 115] => lookup_974(),
            [114, 101, 100] => lookup_975(),
            [114, 101, 100, 115, 116, 111, 110, 101] => lookup_976(),
            [114, 101, 100, 117, 109, 98, 114, 101, 108, 108, 97] => lookup_977(),
            [114, 101, 104, 97, 98] => lookup_978(),
            [114, 101, 105, 115, 101] => lookup_979(),
            [114, 101, 105, 115, 101, 110] => lookup_980(),
            [114, 101, 105, 116] => lookup_981(),
            [114, 101, 108, 105, 97, 110, 99, 101] => lookup_982(),
            [114, 101, 110] => lookup_983(),
            [114, 101, 110, 116] => lookup_984(),
            [114, 101, 110, 116, 97, 108, 115] => lookup_985(),
            [114, 101, 112, 97, 105, 114] => lookup_986(),
            [114, 101, 112, 111, 114, 116] => lookup_987(),
            [114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => lookup_988(),
            [114, 101, 115, 116] => lookup_989(),
            [114, 101, 115, 116, 97, 117, 114, 97, 110, 116] => lookup_990(),
            [114, 101, 118, 105, 101, 119] => lookup_991(labels),
            [114, 101, 118, 105, 101, 119, 115] => lookup_992(),
            [114, 101, 120, 114, 111, 116, 104] => lookup_993(),
            [114, 105, 99, 104] => lookup_994(),
            [114, 105, 99, 104, 97, 114, 100, 108, 105] => lookup_995(),
            [114, 105, 99, 111, 104] => lookup_996(),
            [114, 105, 108] => lookup_997(),
            [114, 105, 111] => lookup_998(),
            [114, 105, 112] => lookup_999(labels),
            [114, 111] => lookup_1000(labels),
            [114, 111, 99, 104, 101, 114] => lookup_1001(),
            [114, 111, 99, 107, 115] => lookup_1002(labels),
            [114, 111, 100, 101, 111] => lookup_1003(),
            [114, 111, 103, 101, 114, 115] => lookup_1004(),
            [114, 111, 111, 109] => lookup_1005(),
            [114, 115] => lookup_1006(labels),
            [114, 115, 118, 112] => lookup_1007(),
            [114, 117] => lookup_1008(labels),
            [114, 117, 103, 98, 121] => lookup_1009(),
            [114, 117, 104, 114] => lookup_1010(),
            [114, 117, 110] => lookup_1011(labels),
            [114, 119] => lookup_1012(labels),
            [114, 119, 101] => lookup_1013(),
            [114, 121, 117, 107, 121, 117] => lookup_1014(),
            [115, 97] => lookup_1015(labels),
            [115, 97, 97, 114, 108, 97, 110, 100] => lookup_1016(),
            [115, 97, 102, 101] => lookup_1017(),
            [115, 97, 102, 101, 116, 121] => lookup_1018(),
            [115, 97, 107, 117, 114, 97] => lookup_1019(),
            [115, 97, 108, 101] => lookup_1020(),
            [115, 97, 108, 111, 110] => lookup_1021(),
            [115, 97, 109, 115, 99, 108, 117, 98] => lookup_1022(),
            [115, 97, 109, 115, 117, 110, 103] => lookup_1023(),
            [115, 97, 110, 100, 118, 105, 107] => lookup_1024(),
            [115, 97, 110, 100, 118, 105, 107, 99, 111, 114, 111, 109, 97, 110, 116] => {
                lookup_1025()
            }
            [115, 97, 110, 111, 102, 105] => lookup_1026(),
            [115, 97, 112] => lookup_1027(),
            [115, 97, 114, 108] => lookup_1028(),
            [115, 97, 115] => lookup_1029(),
            [115, 97, 118, 101] => lookup_1030(),
            [115, 97, 120, 111] => lookup_1031(),
            [115, 98] => lookup_1032(labels),
            [115, 98, 105] => lookup_1033(),
            [115, 98, 115] => lookup_1034(),
            [115, 99] => lookup_1035(labels),
            [115, 99, 97] => lookup_1036(),
            [115, 99, 98] => lookup_1037(),
            [115, 99, 104, 97, 101, 102, 102, 108, 101, 114] => lookup_1038(),
            [115, 99, 104, 109, 105, 100, 116] => lookup_1039(),
            [115, 99, 104, 111, 108, 97, 114, 115, 104, 105, 112, 115] => lookup_1040(),
            [115, 99, 104, 111, 111, 108] => lookup_1041(),
            [115, 99, 104, 117, 108, 101] => lookup_1042(),
            [115, 99, 104, 119, 97, 114, 122] => lookup_1043(),
            [115, 99, 105, 101, 110, 99, 101] => lookup_1044(labels),
            [115, 99, 111, 116] => lookup_1045(labels),
            [115, 100] => lookup_1046(labels),
            [115, 101] => lookup_1047(labels),
            [115, 101, 97, 114, 99, 104] => lookup_1048(),
            [115, 101, 97, 116] => lookup_1049(),
            [115, 101, 99, 117, 114, 101] => lookup_1050(),
            [115, 101, 99, 117, 114, 105, 116, 121] => lookup_1051(),
            [115, 101, 101, 107] => lookup_1052(),
            [115, 101, 108, 101, 99, 116] => lookup_1053(),
            [115, 101, 110, 101, 114] => lookup_1054(),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_1055(labels),
            [115, 101, 118, 101, 110] => lookup_1056(),
            [115, 101, 119] => lookup_1057(),
            [115, 101, 120] => lookup_1058(),
            [115, 101, 120, 121] => lookup_1059(),
            [115, 102, 114] => lookup_1060(),
            [115, 103] => lookup_1061(labels),
            [115, 104] => lookup_1062(labels),
            [115, 104, 97, 110, 103, 114, 105, 108, 97] => lookup_1063(),
            [115, 104, 97, 114, 112] => lookup_1064(),
            [115, 104, 97, 119] => lookup_1065(),
            [115, 104, 101, 108, 108] => lookup_1066(),
            [115, 104, 105, 97] => lookup_1067(),
            [115, 104, 105, 107, 115, 104, 97] => lookup_1068(),
            [115, 104, 111, 101, 115] => lookup_1069(),
            [115, 104, 111, 112] => lookup_1070(labels),
            [115, 104, 111, 112, 112, 105, 110, 103] => lookup_1071(),
            [115, 104, 111, 117, 106, 105] => lookup_1072(),
            [115, 104, 111, 119] => lookup_1073(),
            [115, 104, 111, 119, 116, 105, 109, 101] => lookup_1074(),
            [115, 105] => lookup_1075(labels),
            [115, 105, 108, 107] => lookup_1076(),
            [115, 105, 110, 97] => lookup_1077(),
            [115, 105, 110, 103, 108, 101, 115] => lookup_1078(),
            [115, 105, 116, 101] => lookup_1079(labels),
            [115, 106] => lookup_1080(),
            [115, 107] => lookup_1081(labels),
            [115, 107, 105] => lookup_1082(),
            [115, 107, 105, 110] => lookup_1083(),
            [115, 107, 121] => lookup_1084(),
            [115, 107, 121, 112, 101] => lookup_1085(),
            [115, 108] => lookup_1086(labels),
            [115, 108, 105, 110, 103] => lookup_1087(),
            [115, 109] => lookup_1088(),
            [115, 109, 97, 114, 116] => lookup_1089(),
            [115, 109, 105, 108, 101] => lookup_1090(),
            [115, 110] => lookup_1091(labels),
            [115, 110, 99, 102] => lookup_1092(),
            [115, 111] => lookup_1093(labels),
            [115, 111, 99, 99, 101, 114] => lookup_1094(),
            [115, 111, 99, 105, 97, 108] => lookup_1095(),
            [115, 111, 102, 116, 98, 97, 110, 107] => lookup_1096(),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_1097(),
            [115, 111, 104, 117] => lookup_1098(),
            [115, 111, 108, 97, 114] => lookup_1099(),
            [115, 111, 108, 117, 116, 105, 111, 110, 115] => lookup_1100(labels),
            [115, 111, 110, 103] => lookup_1101(),
            [115, 111, 110, 121] => lookup_1102(),
            [115, 111, 121] => lookup_1103(),
            [115, 112, 97] => lookup_1104(),
            [115, 112, 97, 99, 101] => lookup_1105(labels),
            [115, 112, 111, 114, 116] => lookup_1106(),
            [115, 112, 111, 116] => lookup_1107(),
            [115, 114] => lookup_1108(),
            [115, 114, 108] => lookup_1109(),
            [115, 115] => lookup_1110(labels),
            [115, 116] => lookup_1111(labels),
            [115, 116, 97, 100, 97] => lookup_1112(),
            [115, 116, 97, 112, 108, 101, 115] => lookup_1113(),
            [115, 116, 97, 114] => lookup_1114(),
            [115, 116, 97, 116, 101, 98, 97, 110, 107] => lookup_1115(),
            [115, 116, 97, 116, 101, 102, 97, 114, 109] => lookup_1116(),
            [115, 116, 99] => lookup_1117(),
            [115, 116, 99, 103, 114, 111, 117, 112] => lookup_1118(),
            [115, 116, 111, 99, 107, 104, 111, 108, 109] => lookup_1119(),
            [115, 116, 111, 114, 97, 103, 101] => lookup_1120(),
            [115, 116, 111, 114, 101] => lookup_1121(labels),
            [115, 116, 114, 101, 97, 109] => lookup_1122(),
            [115, 116, 117, 100, 105, 111] => lookup_1123(),
            [115, 116, 117, 100, 121] => lookup_1124(),
            [115, 116, 121, 108, 101] => lookup_1125(),
            [115, 117] => lookup_1126(labels),
            [115, 117, 99, 107, 115] => lookup_1127(),
            [115, 117, 112, 112, 108, 105, 101, 115] => lookup_1128(),
            [115, 117, 112, 112, 108, 121] => lookup_1129(),
            [115, 117, 112, 112, 111, 114, 116] => lookup_1130(labels),
            [115, 117, 114, 102] => lookup_1131(),
            [115, 117, 114, 103, 101, 114, 121] => lookup_1132(),
            [115, 117, 122, 117, 107, 105] => lookup_1133(),
            [115, 118] => lookup_1134(labels),
            [115, 119, 97, 116, 99, 104] => lookup_1135(),
            [115, 119, 105, 115, 115] => lookup_1136(),
            [115, 120] => lookup_1137(labels),
            [115, 121] => lookup_1138(labels),
            [115, 121, 100, 110, 101, 121] => lookup_1139(),
            [115, 121, 115, 116, 101, 109, 115] => lookup_1140(labels),
            [115, 122] => lookup_1141(labels),
            [116, 97, 98] => lookup_1142(),
            [116, 97, 105, 112, 101, 105] => lookup_1143(),
            [116, 97, 108, 107] => lookup_1144(),
            [116, 97, 111, 98, 97, 111] => lookup_1145(),
            [116, 97, 114, 103, 101, 116] => lookup_1146(),
            [116, 97, 116, 97, 109, 111, 116, 111, 114, 115] => lookup_1147(),
            [116, 97, 116, 97, 114] => lookup_1148(),
            [116, 97, 116, 116, 111, 111] => lookup_1149(),
            [116, 97, 120] => lookup_1150(),
            [116, 97, 120, 105] => lookup_1151(),
            [116, 99] => lookup_1152(labels),
            [116, 99, 105] => lookup_1153(),
            [116, 100] => lookup_1154(labels),
            [116, 100, 107] => lookup_1155(),
            [116, 101, 97, 109] => lookup_1156(labels),
            [116, 101, 99, 104] => lookup_1157(),
            [116, 101, 99, 104, 110, 111, 108, 111, 103, 121] => lookup_1158(labels),
            [116, 101, 108] => lookup_1159(),
            [116, 101, 109, 97, 115, 101, 107] => lookup_1160(),
            [116, 101, 110, 110, 105, 115] => lookup_1161(),
            [116, 101, 118, 97] => lookup_1162(),
            [116, 102] => lookup_1163(labels),
            [116, 103] => lookup_1164(),
            [116, 104] => lookup_1165(labels),
            [116, 104, 100] => lookup_1166(),
            [116, 104, 101, 97, 116, 101, 114] => lookup_1167(),
            [116, 104, 101, 97, 116, 114, 101] => lookup_1168(),
            [116, 105, 97, 97] => lookup_1169(),
            [116, 105, 99, 107, 101, 116, 115] => lookup_1170(),
            [116, 105, 101, 110, 100, 97] => lookup_1171(),
            [116, 105, 102, 102, 97, 110, 121] => lookup_1172(),
            [116, 105, 112, 115] => lookup_1173(),
            [116, 105, 114, 101, 115] => lookup_1174(),
            [116, 105, 114, 111, 108] => lookup_1175(),
            [116, 106] => lookup_1176(labels),
            [116, 106, 109, 97, 120, 120] => lookup_1177(),
            [116, 106, 120] => lookup_1178(),
            [116, 107] => lookup_1179(),
            [116, 107, 109, 97, 120, 120] => lookup_1180(),
            [116, 108] => lookup_1181(labels),
            [116, 109] => lookup_1182(labels),
            [116, 109, 97, 108, 108] => lookup_1183(),
            [116, 110] => lookup_1184(labels),
            [116, 111] => lookup_1185(labels),
            [116, 111, 100, 97, 121] => lookup_1186(labels),
            [116, 111, 107, 121, 111] => lookup_1187(),
            [116, 111, 111, 108, 115] => lookup_1188(),
            [116, 111, 112] => lookup_1189(labels),
            [116, 111, 114, 97, 121] => lookup_1190(),
            [116, 111, 115, 104, 105, 98, 97] => lookup_1191(),
            [116, 111, 116, 97, 108] => lookup_1192(),
            [116, 111, 117, 114, 115] => lookup_1193(),
            [116, 111, 119, 110] => lookup_1194(),
            [116, 111, 121, 111, 116, 97] => lookup_1195(),
            [116, 111, 121, 115] => lookup_1196(),
            [116, 114] => lookup_1197(labels),
            [116, 114, 97, 100, 101] => lookup_1198(labels),
            [116, 114, 97, 100, 105, 110, 103] => lookup_1199(),
            [116, 114, 97, 105, 110, 105, 110, 103] => lookup_1200(),
            [116, 114, 97, 118, 101, 108] => lookup_1201(),
            [116, 114, 97, 118, 101, 108, 99, 104, 97, 110, 110, 101, 108] => lookup_1202(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115] => lookup_1203(),
            [116, 114, 97, 118, 101, 108, 101, 114, 115, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_1204()
            }
            [116, 114, 117, 115, 116] => lookup_1205(),
            [116, 114, 118] => lookup_1206(),
            [116, 116] => lookup_1207(labels),
            [116, 117, 98, 101] => lookup_1208(),
            [116, 117, 105] => lookup_1209(),
            [116, 117, 110, 101, 115] => lookup_1210(),
            [116, 117, 115, 104, 117] => lookup_1211(),
            [116, 118] => lookup_1212(labels),
            [116, 118, 115] => lookup_1213(),
            [116, 119] => lookup_1214(labels),
            [116, 122] => lookup_1215(labels),
            [117, 97] => lookup_1216(labels),
            [117, 98, 97, 110, 107] => lookup_1217(),
            [117, 98, 115] => lookup_1218(),
            [117, 103] => lookup_1219(labels),
            [117, 107] => lookup_1220(labels),
            [117, 110, 105, 99, 111, 109] => lookup_1221(),
            [117, 110, 105, 118, 101, 114, 115, 105, 116, 121] => lookup_1222(),
            [117, 110, 111] => lookup_1223(),
            [117, 111, 108] => lookup_1224(),
            [117, 112, 115] => lookup_1225(),
            [117, 115] => lookup_1226(labels),
            [117, 121] => lookup_1227(labels),
            [117, 122] => lookup_1228(labels),
            [118, 97] => lookup_1229(),
            [118, 97, 99, 97, 116, 105, 111, 110, 115] => lookup_1230(),
            [118, 97, 110, 97] => lookup_1231(),
            [118, 97, 110, 103, 117, 97, 114, 100] => lookup_1232(),
            [118, 99] => lookup_1233(labels),
            [118, 101] => lookup_1234(labels),
            [118, 101, 103, 97, 115] => lookup_1235(),
            [118, 101, 110, 116, 117, 114, 101, 115] => lookup_1236(),
            [118, 101, 114, 105, 115, 105, 103, 110] => lookup_1237(),
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114] => {
                lookup_1238()
            }
            [118, 101, 114, 109, 195, 182, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103] => {
                lookup_1239()
            }
            [118, 101, 114, 115, 105, 99, 104, 101, 114, 117, 110, 103] => lookup_1240(),
            [118, 101, 116] => lookup_1241(),
            [118, 103] => lookup_1242(labels),
            [118, 105] => lookup_1243(labels),
            [118, 105, 97, 106, 101, 115] => lookup_1244(),
            [118, 105, 100, 101, 111] => lookup_1245(),
            [118, 105, 103] => lookup_1246(),
            [118, 105, 107, 105, 110, 103] => lookup_1247(),
            [118, 105, 108, 108, 97, 115] => lookup_1248(),
            [118, 105, 110] => lookup_1249(),
            [118, 105, 112] => lookup_1250(),
            [118, 105, 114, 103, 105, 110] => lookup_1251(),
            [118, 105, 115, 97] => lookup_1252(),
            [118, 105, 115, 105, 111, 110] => lookup_1253(),
            [118, 105, 118, 97] => lookup_1254(),
            [118, 105, 118, 111] => lookup_1255(),
            [118, 108, 97, 97, 110, 100, 101, 114, 101, 110] => lookup_1256(),
            [118, 110] => lookup_1257(labels),
            [118, 111, 100, 107, 97] => lookup_1258(),
            [118, 111, 108, 107, 115, 119, 97, 103, 101, 110] => lookup_1259(),
            [118, 111, 108, 118, 111] => lookup_1260(),
            [118, 111, 116, 101] => lookup_1261(),
            [118, 111, 116, 105, 110, 103] => lookup_1262(),
            [118, 111, 116, 111] => lookup_1263(),
            [118, 111, 121, 97, 103, 101] => lookup_1264(),
            [118, 117] => lookup_1265(labels),
            [118, 117, 101, 108, 111, 115] => lookup_1266(),
            [119, 97, 108, 101, 115] => lookup_1267(),
            [119, 97, 108, 109, 97, 114, 116] => lookup_1268(),
            [119, 97, 108, 116, 101, 114] => lookup_1269(),
            [119, 97, 110, 103] => lookup_1270(),
            [119, 97, 110, 103, 103, 111, 117] => lookup_1271(),
            [119, 97, 116, 99, 104] => lookup_1272(),
            [119, 97, 116, 99, 104, 101, 115] => lookup_1273(),
            [119, 101, 97, 116, 104, 101, 114] => lookup_1274(),
            [119, 101, 97, 116, 104, 101, 114, 99, 104, 97, 110, 110, 101, 108] => lookup_1275(),
            [119, 101, 98, 99, 97, 109] => lookup_1276(),
            [119, 101, 98, 101, 114] => lookup_1277(),
            [119, 101, 98, 115, 105, 116, 101] => lookup_1278(labels),
            [119, 101, 100, 100, 105, 110, 103] => lookup_1279(),
            [119, 101, 105, 98, 111] => lookup_1280(),
            [119, 101, 105, 114] => lookup_1281(),
            [119, 102] => lookup_1282(labels),
            [119, 104, 111, 115, 119, 104, 111] => lookup_1283(),
            [119, 105, 101, 110] => lookup_1284(),
            [119, 105, 107, 105] => lookup_1285(labels),
            [119, 105, 108, 108, 105, 97, 109, 104, 105, 108, 108] => lookup_1286(),
            [119, 105, 110] => lookup_1287(),
            [119, 105, 110, 100, 111, 119, 115] => lookup_1288(),
            [119, 105, 110, 101] => lookup_1289(),
            [119, 105, 110, 110, 101, 114, 115] => lookup_1290(),
            [119, 109, 101] => lookup_1291(),
            [119, 111, 108, 116, 101, 114, 115, 107, 108, 117, 119, 101, 114] => lookup_1292(),
            [119, 111, 111, 100, 115, 105, 100, 101] => lookup_1293(),
            [119, 111, 114, 107] => lookup_1294(),
            [119, 111, 114, 107, 115] => lookup_1295(),
            [119, 111, 114, 108, 100] => lookup_1296(),
            [119, 111, 119] => lookup_1297(),
            [119, 115] => lookup_1298(labels),
            [119, 116, 99] => lookup_1299(),
            [119, 116, 102] => lookup_1300(),
            [120, 98, 111, 120] => lookup_1301(),
            [120, 101, 114, 111, 120] => lookup_1302(),
            [120, 102, 105, 110, 105, 116, 121] => lookup_1303(),
            [120, 105, 104, 117, 97, 110] => lookup_1304(),
            [120, 105, 110] => lookup_1305(),
            [120, 110, 45, 45, 49, 49, 98, 52, 99, 51, 100] => lookup_1306(),
            [120, 110, 45, 45, 49, 99, 107, 50, 101, 49, 98] => lookup_1307(),
            [120, 110, 45, 45, 49, 113, 113, 119, 50, 51, 97] => lookup_1308(),
            [120, 110, 45, 45, 50, 115, 99, 114, 106, 57, 99] => lookup_1309(),
            [120, 110, 45, 45, 51, 48, 114, 114, 55, 121] => lookup_1310(),
            [120, 110, 45, 45, 51, 98, 115, 116, 48, 48, 109] => lookup_1311(),
            [120, 110, 45, 45, 51, 100, 115, 52, 52, 51, 103] => lookup_1312(),
            [120, 110, 45, 45, 51, 101, 48, 98, 55, 48, 55, 101] => lookup_1313(),
            [120, 110, 45, 45, 51, 104, 99, 114, 106, 57, 99] => lookup_1314(),
            [120, 110, 45, 45, 51, 112, 120, 117, 56, 107] => lookup_1315(),
            [120, 110, 45, 45, 52, 50, 99, 50, 100, 57, 97] => lookup_1316(),
            [120, 110, 45, 45, 52, 53, 98, 114, 53, 99, 121, 108] => lookup_1317(),
            [120, 110, 45, 45, 52, 53, 98, 114, 106, 57, 99] => lookup_1318(),
            [120, 110, 45, 45, 52, 53, 113, 49, 49, 99] => lookup_1319(),
            [120, 110, 45, 45, 52, 100, 98, 114, 107, 48, 99, 101] => lookup_1320(labels),
            [120, 110, 45, 45, 52, 103, 98, 114, 105, 109] => lookup_1321(),
            [120, 110, 45, 45, 53, 52, 98, 55, 102, 116, 97, 48, 99, 99] => lookup_1322(),
            [120, 110, 45, 45, 53, 53, 113, 119, 52, 50, 103] => lookup_1323(),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1324(),
            [120, 110, 45, 45, 53, 115, 117, 51, 52, 106, 57, 51, 54, 98, 103, 115, 103] => {
                lookup_1325()
            }
            [120, 110, 45, 45, 53, 116, 122, 109, 53, 103] => lookup_1326(),
            [120, 110, 45, 45, 54, 102, 114, 122, 56, 50, 103] => lookup_1327(),
            [120, 110, 45, 45, 54, 113, 113, 57, 56, 54, 98, 51, 120, 108] => lookup_1328(),
            [120, 110, 45, 45, 56, 48, 97, 100, 120, 104, 107, 115] => lookup_1329(),
            [120, 110, 45, 45, 56, 48, 97, 111, 50, 49, 97] => lookup_1330(),
            [120, 110, 45, 45, 56, 48, 97, 113, 101, 99, 100, 114, 49, 97] => lookup_1331(),
            [120, 110, 45, 45, 56, 48, 97, 115, 101, 104, 100, 98] => lookup_1332(),
            [120, 110, 45, 45, 56, 48, 97, 115, 119, 103] => lookup_1333(),
            [120, 110, 45, 45, 56, 121, 48, 97, 48, 54, 51, 97] => lookup_1334(),
            [120, 110, 45, 45, 57, 48, 97, 51, 97, 99] => lookup_1335(labels),
            [120, 110, 45, 45, 57, 48, 97, 101] => lookup_1336(),
            [120, 110, 45, 45, 57, 48, 97, 105, 115] => lookup_1337(),
            [120, 110, 45, 45, 57, 100, 98, 113, 50, 97] => lookup_1338(),
            [120, 110, 45, 45, 57, 101, 116, 53, 50, 117] => lookup_1339(),
            [120, 110, 45, 45, 57, 107, 114, 116, 48, 48, 97] => lookup_1340(),
            [120, 110, 45, 45, 98, 52, 119, 54, 48, 53, 102, 101, 114, 100] => lookup_1341(),
            [120, 110, 45, 45, 98, 99, 107, 49, 98, 57, 97, 53, 100, 114, 101, 52, 99] => {
                lookup_1342()
            }
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1343(),
            [120, 110, 45, 45, 99, 50, 98, 114, 55, 103] => lookup_1344(),
            [120, 110, 45, 45, 99, 99, 107, 50, 98, 51, 98] => lookup_1345(),
            [120, 110, 45, 45, 99, 99, 107, 119, 99, 120, 101, 116, 100] => lookup_1346(),
            [120, 110, 45, 45, 99, 103, 52, 98, 107, 105] => lookup_1347(),
            [120, 110, 45, 45, 99, 108, 99, 104, 99, 48, 101, 97, 48, 98, 50, 103, 50, 97, 57, 103, 99, 100] => {
                lookup_1348()
            }
            [120, 110, 45, 45, 99, 122, 114, 54, 57, 52, 98] => lookup_1349(),
            [120, 110, 45, 45, 99, 122, 114, 115, 48, 116] => lookup_1350(),
            [120, 110, 45, 45, 99, 122, 114, 117, 50, 100] => lookup_1351(),
            [120, 110, 45, 45, 100, 49, 97, 99, 106, 51, 98] => lookup_1352(),
            [120, 110, 45, 45, 100, 49, 97, 108, 102] => lookup_1353(),
            [120, 110, 45, 45, 101, 49, 97, 52, 99] => lookup_1354(),
            [120, 110, 45, 45, 101, 99, 107, 118, 100, 116, 99, 57, 100] => lookup_1355(),
            [120, 110, 45, 45, 101, 102, 118, 121, 56, 56, 104] => lookup_1356(),
            [120, 110, 45, 45, 102, 99, 116, 52, 50, 57, 107] => lookup_1357(),
            [120, 110, 45, 45, 102, 104, 98, 101, 105] => lookup_1358(),
            [120, 110, 45, 45, 102, 105, 113, 50, 50, 56, 99, 53, 104, 115] => lookup_1359(),
            [120, 110, 45, 45, 102, 105, 113, 54, 52, 98] => lookup_1360(),
            [120, 110, 45, 45, 102, 105, 113, 115, 56, 115] => lookup_1361(),
            [120, 110, 45, 45, 102, 105, 113, 122, 57, 115] => lookup_1362(),
            [120, 110, 45, 45, 102, 106, 113, 55, 50, 48, 97] => lookup_1363(),
            [120, 110, 45, 45, 102, 108, 119, 51, 53, 49, 101] => lookup_1364(),
            [120, 110, 45, 45, 102, 112, 99, 114, 106, 57, 99, 51, 100] => lookup_1365(),
            [120, 110, 45, 45, 102, 122, 99, 50, 99, 57, 101, 50, 99] => lookup_1366(),
            [120, 110, 45, 45, 102, 122, 121, 115, 56, 100, 54, 57, 117, 118, 103, 109] => {
                lookup_1367()
            }
            [120, 110, 45, 45, 103, 50, 120, 120, 52, 56, 99] => lookup_1368(),
            [120, 110, 45, 45, 103, 99, 107, 114, 51, 102, 48, 102] => lookup_1369(),
            [120, 110, 45, 45, 103, 101, 99, 114, 106, 57, 99] => lookup_1370(),
            [120, 110, 45, 45, 103, 107, 51, 97, 116, 49, 101] => lookup_1371(),
            [120, 110, 45, 45, 104, 50, 98, 114, 101, 103, 51, 101, 118, 101] => lookup_1372(),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99] => lookup_1373(),
            [120, 110, 45, 45, 104, 50, 98, 114, 106, 57, 99, 56, 99] => lookup_1374(),
            [120, 110, 45, 45, 104, 120, 116, 56, 49, 52, 101] => lookup_1375(),
            [120, 110, 45, 45, 105, 49, 98, 54, 98, 49, 97, 54, 97, 50, 101] => lookup_1376(),
            [120, 110, 45, 45, 105, 109, 114, 53, 49, 51, 110] => lookup_1377(),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_1378(),
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_1379(),
            [120, 110, 45, 45, 106, 49, 97, 109, 104] => lookup_1380(),
            [120, 110, 45, 45, 106, 54, 119, 49, 57, 51, 103] => lookup_1381(labels),
            [120, 110, 45, 45, 106, 108, 113, 52, 56, 48, 110, 50, 114, 103] => lookup_1382(),
            [120, 110, 45, 45, 106, 118, 114, 49, 56, 57, 109] => lookup_1383(),
            [120, 110, 45, 45, 107, 99, 114, 120, 55, 55, 100, 49, 120, 52, 97] => lookup_1384(),
            [120, 110, 45, 45, 107, 112, 114, 119, 49, 51, 100] => lookup_1385(),
            [120, 110, 45, 45, 107, 112, 114, 121, 53, 55, 100] => lookup_1386(),
            [120, 110, 45, 45, 107, 112, 117, 116, 51, 105] => lookup_1387(),
            [120, 110, 45, 45, 108, 49, 97, 99, 99] => lookup_1388(),
            [120, 110, 45, 45, 108, 103, 98, 98, 97, 116, 49, 97, 100, 56, 106] => lookup_1389(),
            [120, 110, 45, 45, 109, 103, 98, 50, 100, 100, 101, 115] => lookup_1390(),
            [120, 110, 45, 45, 109, 103, 98, 57, 97, 119, 98, 102] => lookup_1391(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 51, 101, 106, 116] => lookup_1392(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_1393(),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_1394(),
            [120, 110, 45, 45, 109, 103, 98, 97, 55, 99, 48, 98, 98, 110, 48, 97] => lookup_1395(),
            [120, 110, 45, 45, 109, 103, 98, 97, 97, 107, 99, 55, 100, 118, 102] => lookup_1396(),
            [120, 110, 45, 45, 109, 103, 98, 97, 97, 109, 55, 97, 56, 104] => lookup_1397(),
            [120, 110, 45, 45, 109, 103, 98, 97, 98, 50, 98, 100] => lookup_1398(),
            [120, 110, 45, 45, 109, 103, 98, 97, 104, 49, 97, 51, 104, 106, 107, 114, 100] => {
                lookup_1399()
            }
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 53, 101, 118, 97, 48, 48, 98] => {
                lookup_1400()
            }
            [120, 110, 45, 45, 109, 103, 98, 97, 105, 57, 97, 122, 103, 113, 112, 54, 106] => {
                lookup_1401()
            }
            [120, 110, 45, 45, 109, 103, 98, 97, 121, 104, 55, 103, 112, 97] => lookup_1402(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97] => lookup_1403(),
            [120, 110, 45, 45, 109, 103, 98, 98, 104, 49, 97, 55, 49, 101] => lookup_1404(),
            [120, 110, 45, 45, 109, 103, 98, 99, 48, 97, 57, 97, 122, 99, 103] => lookup_1405(),
            [120, 110, 45, 45, 109, 103, 98, 99, 97, 55, 100, 122, 100, 111] => lookup_1406(),
            [120, 110, 45, 45, 109, 103, 98, 99, 112, 113, 54, 103, 112, 97, 49, 97] => {
                lookup_1407()
            }
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 56, 55, 103] => {
                lookup_1408()
            }
            [120, 110, 45, 45, 109, 103, 98, 101, 114, 112, 52, 97, 53, 100, 52, 97, 114] => {
                lookup_1409()
            }
            [120, 110, 45, 45, 109, 103, 98, 103, 117, 56, 50, 97] => lookup_1410(),
            [120, 110, 45, 45, 109, 103, 98, 105, 52, 101, 99, 101, 120, 112] => lookup_1411(),
            [120, 110, 45, 45, 109, 103, 98, 112, 108, 50, 102, 104] => lookup_1412(),
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 48, 97, 54, 55, 102, 98, 99] => {
                lookup_1413()
            }
            [120, 110, 45, 45, 109, 103, 98, 113, 108, 121, 55, 99, 118, 97, 102, 114] => {
                lookup_1414()
            }
            [120, 110, 45, 45, 109, 103, 98, 116, 51, 100, 104, 100] => lookup_1415(),
            [120, 110, 45, 45, 109, 103, 98, 116, 102, 56, 102, 108] => lookup_1416(),
            [120, 110, 45, 45, 109, 103, 98, 116, 120, 50, 98] => lookup_1417(),
            [120, 110, 45, 45, 109, 103, 98, 120, 52, 99, 100, 48, 97, 98] => lookup_1418(),
            [120, 110, 45, 45, 109, 105, 120, 48, 56, 50, 102] => lookup_1419(),
            [120, 110, 45, 45, 109, 105, 120, 56, 57, 49, 102] => lookup_1420(),
            [120, 110, 45, 45, 109, 107, 49, 98, 117, 52, 52, 99] => lookup_1421(),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_1422(),
            [120, 110, 45, 45, 110, 103, 98, 99, 53, 97, 122, 100] => lookup_1423(),
            [120, 110, 45, 45, 110, 103, 98, 101, 57, 101, 48, 97] => lookup_1424(),
            [120, 110, 45, 45, 110, 103, 98, 114, 120] => lookup_1425(),
            [120, 110, 45, 45, 110, 110, 120, 51, 56, 56, 97] => lookup_1426(),
            [120, 110, 45, 45, 110, 111, 100, 101] => lookup_1427(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102] => lookup_1428(),
            [120, 110, 45, 45, 110, 113, 118, 55, 102, 115, 48, 48, 101, 109, 97] => lookup_1429(),
            [120, 110, 45, 45, 110, 121, 113, 121, 50, 54, 97] => lookup_1430(),
            [120, 110, 45, 45, 111, 51, 99, 119, 52, 104] => lookup_1431(labels),
            [120, 110, 45, 45, 111, 103, 98, 112, 102, 56, 102, 108] => lookup_1432(),
            [120, 110, 45, 45, 111, 116, 117, 55, 57, 54, 100] => lookup_1433(),
            [120, 110, 45, 45, 112, 49, 97, 99, 102] => lookup_1434(labels),
            [120, 110, 45, 45, 112, 49, 97, 105] => lookup_1435(),
            [120, 110, 45, 45, 112, 103, 98, 115, 48, 100, 104] => lookup_1436(),
            [120, 110, 45, 45, 112, 115, 115, 121, 50, 117] => lookup_1437(),
            [120, 110, 45, 45, 113, 55, 99, 101, 54, 97] => lookup_1438(),
            [120, 110, 45, 45, 113, 57, 106, 121, 98, 52, 99] => lookup_1439(),
            [120, 110, 45, 45, 113, 99, 107, 97, 49, 112, 109, 99] => lookup_1440(),
            [120, 110, 45, 45, 113, 120, 97, 54, 97] => lookup_1441(),
            [120, 110, 45, 45, 113, 120, 97, 109] => lookup_1442(),
            [120, 110, 45, 45, 114, 104, 113, 118, 57, 54, 103] => lookup_1443(),
            [120, 110, 45, 45, 114, 111, 118, 117, 56, 56, 98] => lookup_1444(),
            [120, 110, 45, 45, 114, 118, 99, 49, 101, 48, 97, 109, 51, 101] => lookup_1445(),
            [120, 110, 45, 45, 115, 57, 98, 114, 106, 57, 99] => lookup_1446(),
            [120, 110, 45, 45, 115, 101, 115, 53, 53, 52, 103] => lookup_1447(),
            [120, 110, 45, 45, 116, 54, 48, 98, 53, 54, 97] => lookup_1448(),
            [120, 110, 45, 45, 116, 99, 107, 119, 101] => lookup_1449(),
            [120, 110, 45, 45, 116, 105, 113, 52, 57, 120, 113, 121, 106] => lookup_1450(),
            [120, 110, 45, 45, 117, 110, 117, 112, 52, 121] => lookup_1451(),
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 101, 114, 45, 99, 116, 98] => {
                lookup_1452()
            }
            [120, 110, 45, 45, 118, 101, 114, 109, 103, 101, 110, 115, 98, 101, 114, 97, 116, 117, 110, 103, 45, 112, 119, 98] => {
                lookup_1453()
            }
            [120, 110, 45, 45, 118, 104, 113, 117, 118] => lookup_1454(),
            [120, 110, 45, 45, 118, 117, 113, 56, 54, 49, 98] => lookup_1455(),
            [120, 110, 45, 45, 119, 52, 114, 56, 53, 101, 108, 56, 102, 104, 117, 53, 100, 110, 114, 97] => {
                lookup_1456()
            }
            [120, 110, 45, 45, 119, 52, 114, 115, 52, 48, 108] => lookup_1457(),
            [120, 110, 45, 45, 119, 103, 98, 104, 49, 99] => lookup_1458(),
            [120, 110, 45, 45, 119, 103, 98, 108, 54, 97] => lookup_1459(),
            [120, 110, 45, 45, 120, 104, 113, 53, 50, 49, 98] => lookup_1460(),
            [120, 110, 45, 45, 120, 107, 99, 50, 97, 108, 51, 104, 121, 101, 50, 97] => {
                lookup_1461()
            }
            [120, 110, 45, 45, 120, 107, 99, 50, 100, 108, 51, 97, 53, 101, 101, 48, 104] => {
                lookup_1462()
            }
            [120, 110, 45, 45, 121, 57, 97, 51, 97, 113] => lookup_1463(),
            [120, 110, 45, 45, 121, 102, 114, 111, 52, 105, 54, 55, 111] => lookup_1464(),
            [120, 110, 45, 45, 121, 103, 98, 105, 50, 97, 109, 109, 120] => lookup_1465(),
            [120, 110, 45, 45, 122, 102, 114, 49, 54, 52, 98] => lookup_1466(),
            [120, 120, 120] => lookup_1467(),
            [120, 121, 122] => lookup_1468(labels),
            [121, 97, 99, 104, 116, 115] => lookup_1469(),
            [121, 97, 104, 111, 111] => lookup_1470(),
            [121, 97, 109, 97, 120, 117, 110] => lookup_1471(),
            [121, 97, 110, 100, 101, 120] => lookup_1472(),
            [121, 101] => lookup_1473(labels),
            [121, 111, 100, 111, 98, 97, 115, 104, 105] => lookup_1474(),
            [121, 111, 103, 97] => lookup_1475(),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_1476(),
            [121, 111, 117] => lookup_1477(),
            [121, 111, 117, 116, 117, 98, 101] => lookup_1478(),
            [121, 116] => lookup_1479(labels),
            [121, 117, 110] => lookup_1480(),
            [122, 97] => lookup_1481(info, labels),
            [122, 97, 112, 112, 111, 115] => lookup_1482(),
            [122, 97, 114, 97] => lookup_1483(),
            [122, 101, 114, 111] => lookup_1484(),
            [122, 105, 112] => lookup_1485(),
            [122, 109] => lookup_1486(labels),
            [122, 111, 110, 101] => lookup_1487(labels),
            [122, 117, 101, 114, 105, 99, 104] => lookup_1488(),
            [122, 119] => lookup_1489(labels),
            [206, 181, 206, 187] => lookup_1490(),
            [206, 181, 207, 133] => lookup_1491(),
            [208, 177, 208, 179] => lookup_1492(),
            [208, 177, 208, 181, 208, 187] => lookup_1493(),
            [208, 180, 208, 181, 209, 130, 208, 184] => lookup_1494(),
            [208, 181, 209, 142] => lookup_1495(),
            [208, 186, 208, 176, 209, 130, 208, 190, 208, 187, 208, 184, 208, 186] => lookup_1496(),
            [208, 186, 208, 190, 208, 188] => lookup_1497(),
            [208, 188, 208, 186, 208, 180] => lookup_1498(),
            [208, 188, 208, 190, 208, 189] => lookup_1499(),
            [208, 188, 208, 190, 209, 129, 208, 186, 208, 178, 208, 176] => lookup_1500(),
            [208, 190, 208, 189, 208, 187, 208, 176, 208, 185, 208, 189] => lookup_1501(),
            [208, 190, 209, 128, 208, 179] => lookup_1502(),
            [209, 128, 209, 131, 209, 129] => lookup_1503(labels),
            [209, 128, 209, 132] => lookup_1504(),
            [209, 129, 208, 176, 208, 185, 209, 130] => lookup_1505(),
            [209, 129, 209, 128, 208, 177] => lookup_1506(labels),
            [209, 131, 208, 186, 209, 128] => lookup_1507(),
            [210, 155, 208, 176, 208, 183] => lookup_1508(),
            [213, 176, 213, 161, 213, 181] => lookup_1509(),
            [215, 153, 215, 169, 215, 168, 215, 144, 215, 156] => lookup_1510(labels),
            [215, 167, 215, 149, 215, 157] => lookup_1511(),
            [216, 167, 216, 168, 217, 136, 216, 184, 216, 168, 217, 138] => lookup_1512(),
            [216, 167, 216, 170, 216, 181, 216, 167, 217, 132, 216, 167, 216, 170] => lookup_1513(),
            [216, 167, 216, 177, 216, 167, 217, 133, 217, 131, 217, 136] => lookup_1514(),
            [216, 167, 217, 132, 216, 167, 216, 177, 216, 175, 217, 134] => lookup_1515(),
            [216, 167, 217, 132, 216, 168, 216, 173, 216, 177, 217, 138, 217, 134] => lookup_1516(),
            [216, 167, 217, 132, 216, 172, 216, 178, 216, 167, 216, 166, 216, 177] => lookup_1517(),
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 216, 169] => {
                lookup_1518()
            }
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 217, 138, 217, 135] => {
                lookup_1519()
            }
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 216, 169] => {
                lookup_1520()
            }
            [216, 167, 217, 132, 216, 179, 216, 185, 217, 136, 216, 175, 219, 140, 219, 131] => {
                lookup_1521()
            }
            [216, 167, 217, 132, 216, 185, 217, 132, 217, 138, 216, 167, 217, 134] => lookup_1522(),
            [216, 167, 217, 132, 217, 133, 216, 186, 216, 177, 216, 168] => lookup_1523(),
            [216, 167, 217, 132, 217, 138, 217, 133, 217, 134] => lookup_1524(),
            [216, 167, 217, 133, 216, 167, 216, 177, 216, 167, 216, 170] => lookup_1525(),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_1526(),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_1527(),
            [216, 168, 216, 167, 216, 177, 216, 170] => lookup_1528(),
            [216, 168, 216, 167, 216, 178, 216, 167, 216, 177] => lookup_1529(),
            [216, 168, 217, 138, 216, 170, 217, 131] => lookup_1530(),
            [216, 168, 218, 190, 216, 167, 216, 177, 216, 170] => lookup_1531(),
            [216, 170, 217, 136, 217, 134, 216, 179] => lookup_1532(),
            [216, 179, 217, 136, 216, 175, 216, 167, 217, 134] => lookup_1533(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 167] => lookup_1534(),
            [216, 179, 217, 136, 216, 177, 217, 138, 216, 169] => lookup_1535(),
            [216, 180, 216, 168, 217, 131, 216, 169] => lookup_1536(),
            [216, 185, 216, 177, 216, 167, 217, 130] => lookup_1537(),
            [216, 185, 216, 177, 216, 168] => lookup_1538(),
            [216, 185, 217, 133, 216, 167, 217, 134] => lookup_1539(),
            [217, 129, 217, 132, 216, 179, 216, 183, 217, 138, 217, 134] => lookup_1540(),
            [217, 130, 216, 183, 216, 177] => lookup_1541(),
            [217, 131, 216, 167, 216, 171, 217, 136, 217, 132, 217, 138, 217, 131] => lookup_1542(),
            [217, 131, 217, 136, 217, 133] => lookup_1543(),
            [217, 133, 216, 181, 216, 177] => lookup_1544(),
            [217, 133, 217, 132, 217, 138, 216, 179, 217, 138, 216, 167] => lookup_1545(),
            [217, 133, 217, 136, 216, 177, 217, 138, 216, 170, 216, 167, 217, 134, 217, 138, 216, 167] => {
                lookup_1546()
            }
            [217, 133, 217, 136, 217, 130, 216, 185] => lookup_1547(),
            [217, 135, 217, 133, 216, 177, 216, 167, 217, 135] => lookup_1548(),
            [217, 190, 216, 167, 217, 131, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_1549(),
            [217, 190, 216, 167, 218, 169, 216, 179, 216, 170, 216, 167, 217, 134] => lookup_1550(),
            [218, 128, 216, 167, 216, 177, 216, 170] => lookup_1551(),
            [224, 164, 149, 224, 165, 137, 224, 164, 174] => lookup_1552(),
            [224, 164, 168, 224, 165, 135, 224, 164, 159] => lookup_1553(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164] => lookup_1554(),
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 164, 164, 224, 164, 174, 224, 165, 141] => {
                lookup_1555()
            }
            [224, 164, 173, 224, 164, 190, 224, 164, 176, 224, 165, 139, 224, 164, 164] => {
                lookup_1556()
            }
            [224, 164, 184, 224, 164, 130, 224, 164, 151, 224, 164, 160, 224, 164, 168] => {
                lookup_1557()
            }
            [224, 166, 172, 224, 166, 190, 224, 166, 130, 224, 166, 178, 224, 166, 190] => {
                lookup_1558()
            }
            [224, 166, 173, 224, 166, 190, 224, 166, 176, 224, 166, 164] => lookup_1559(),
            [224, 166, 173, 224, 166, 190, 224, 167, 176, 224, 166, 164] => lookup_1560(),
            [224, 168, 173, 224, 168, 190, 224, 168, 176, 224, 168, 164] => lookup_1561(),
            [224, 170, 173, 224, 170, 190, 224, 170, 176, 224, 170, 164] => lookup_1562(),
            [224, 172, 173, 224, 172, 190, 224, 172, 176, 224, 172, 164] => lookup_1563(),
            [224, 174, 135, 224, 174, 168, 224, 175, 141, 224, 174, 164, 224, 174, 191, 224, 174, 175, 224, 174, 190] => {
                lookup_1564()
            }
            [224, 174, 135, 224, 174, 178, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 175, 136] => {
                lookup_1565()
            }
            [224, 174, 154, 224, 174, 191, 224, 174, 153, 224, 175, 141, 224, 174, 149, 224, 174, 170, 224, 175, 141, 224, 174, 170, 224, 175, 130, 224, 174, 176, 224, 175, 141] => {
                lookup_1566()
            }
            [224, 176, 173, 224, 176, 190, 224, 176, 176, 224, 176, 164, 224, 177, 141] => {
                lookup_1567()
            }
            [224, 178, 173, 224, 178, 190, 224, 178, 176, 224, 178, 164] => lookup_1568(),
            [224, 180, 173, 224, 180, 190, 224, 180, 176, 224, 180, 164, 224, 180, 130] => {
                lookup_1569()
            }
            [224, 182, 189, 224, 182, 130, 224, 182, 154, 224, 183, 143] => lookup_1570(),
            [224, 184, 132, 224, 184, 173, 224, 184, 161] => lookup_1571(),
            [224, 185, 132, 224, 184, 151, 224, 184, 162] => lookup_1572(labels),
            [224, 186, 165, 224, 186, 178, 224, 186, 167] => lookup_1573(),
            [225, 131, 146, 225, 131, 148] => lookup_1574(),
            [227, 129, 191, 227, 130, 147, 227, 129, 170] => lookup_1575(),
            [227, 130, 162, 227, 131, 158, 227, 130, 190, 227, 131, 179] => lookup_1576(),
            [227, 130, 175, 227, 131, 169, 227, 130, 166, 227, 131, 137] => lookup_1577(),
            [227, 130, 176, 227, 131, 188, 227, 130, 176, 227, 131, 171] => lookup_1578(),
            [227, 130, 179, 227, 131, 160] => lookup_1579(),
            [227, 130, 185, 227, 131, 136, 227, 130, 162] => lookup_1580(),
            [227, 130, 187, 227, 131, 188, 227, 131, 171] => lookup_1581(),
            [227, 131, 149, 227, 130, 161, 227, 131, 131, 227, 130, 183, 227, 131, 167, 227, 131, 179] => {
                lookup_1582()
            }
            [227, 131, 157, 227, 130, 164, 227, 131, 179, 227, 131, 136] => lookup_1583(),
            [228, 184, 150, 231, 149, 140] => lookup_1584(),
            [228, 184, 173, 228, 191, 161] => lookup_1585(),
            [228, 184, 173, 229, 155, 189] => lookup_1586(),
            [228, 184, 173, 229, 156, 139] => lookup_1587(),
            [228, 184, 173, 230, 150, 135, 231, 189, 145] => lookup_1588(),
            [228, 186, 154, 233, 169, 172, 233, 128, 138] => lookup_1589(),
            [228, 188, 129, 228, 184, 154] => lookup_1590(),
            [228, 189, 155, 229, 177, 177] => lookup_1591(),
            [228, 191, 161, 230, 129, 175] => lookup_1592(),
            [229, 129, 165, 229, 186, 183] => lookup_1593(),
            [229, 133, 171, 229, 141, 166] => lookup_1594(),
            [229, 133, 172, 229, 143, 184] => lookup_1595(),
            [229, 133, 172, 231, 155, 138] => lookup_1596(),
            [229, 143, 176, 230, 185, 190] => lookup_1597(),
            [229, 143, 176, 231, 129, 163] => lookup_1598(),
            [229, 149, 134, 229, 159, 142] => lookup_1599(),
            [229, 149, 134, 229, 186, 151] => lookup_1600(),
            [229, 149, 134, 230, 160, 135] => lookup_1601(),
            [229, 152, 137, 233, 135, 140] => lookup_1602(),
            [229, 152, 137, 233, 135, 140, 229, 164, 167, 233, 133, 146, 229, 186, 151] => {
                lookup_1603()
            }
            [229, 156, 168, 231, 186, 191] => lookup_1604(),
            [229, 164, 167, 230, 139, 191] => lookup_1605(),
            [229, 164, 169, 228, 184, 187, 230, 149, 153] => lookup_1606(),
            [229, 168, 177, 228, 185, 144] => lookup_1607(),
            [229, 174, 182, 233, 155, 187] => lookup_1608(),
            [229, 185, 191, 228, 184, 156] => lookup_1609(),
            [229, 190, 174, 229, 141, 154] => lookup_1610(),
            [230, 133, 136, 229, 150, 132] => lookup_1611(),
            [230, 136, 145, 231, 136, 177, 228, 189, 160] => lookup_1612(),
            [230, 137, 139, 230, 156, 186] => lookup_1613(),
            [230, 139, 155, 232, 129, 152] => lookup_1614(),
            [230, 148, 191, 229, 138, 161] => lookup_1615(),
            [230, 148, 191, 229, 186, 156] => lookup_1616(),
            [230, 150, 176, 229, 138, 160, 229, 157, 161] => lookup_1617(),
            [230, 150, 176, 233, 151, 187] => lookup_1618(),
            [230, 151, 182, 229, 176, 154] => lookup_1619(),
            [230, 155, 184, 231, 177, 141] => lookup_1620(),
            [230, 156, 186, 230, 158, 132] => lookup_1621(),
            [230, 183, 161, 233, 169, 172, 233, 148, 161] => lookup_1622(),
            [230, 184, 184, 230, 136, 143] => lookup_1623(),
            [230, 190, 179, 233, 150, 128] => lookup_1624(),
            [230, 190, 179, 233, 151, 168] => lookup_1625(),
            [231, 130, 185, 231, 156, 139] => lookup_1626(),
            [231, 167, 187, 229, 138, 168] => lookup_1627(),
            [231, 187, 132, 231, 187, 135, 230, 156, 186, 230, 158, 132] => lookup_1628(),
            [231, 189, 145, 229, 157, 128] => lookup_1629(),
            [231, 189, 145, 229, 186, 151] => lookup_1630(),
            [231, 189, 145, 231, 171, 153] => lookup_1631(),
            [231, 189, 145, 231, 187, 156] => lookup_1632(),
            [232, 129, 148, 233, 128, 154] => lookup_1633(),
            [232, 135, 186, 231, 129, 163] => lookup_1634(),
            [232, 176, 183, 230, 173, 140] => lookup_1635(),
            [232, 180, 173, 231, 137, 169] => lookup_1636(),
            [233, 128, 154, 232, 178, 169] => lookup_1637(),
            [233, 155, 134, 229, 155, 162] => lookup_1638(),
            [233, 155, 187, 232, 168, 138, 231, 155, 136, 231, 167, 145] => lookup_1639(),
            [233, 163, 158, 229, 136, 169, 230, 181, 166] => lookup_1640(),
            [233, 163, 159, 229, 147, 129] => lookup_1641(),
            [233, 164, 144, 229, 142, 133] => lookup_1642(),
            [233, 166, 153, 230, 160, 188, 233, 135, 140, 230, 139, 137] => lookup_1643(),
            [233, 166, 153, 230, 184, 175] => lookup_1644(labels),
            [235, 139, 183, 235, 132, 183] => lookup_1645(),
            [235, 139, 183, 236, 187, 180] => lookup_1646(),
            [236, 130, 188, 236, 132, 177] => lookup_1647(),
            [237, 149, 156, 234, 181, 173] => lookup_1648(),
            wild => {
                info.len = wild.len();
                info
            }
        },
        None => info,
    }
}
#[inline]
fn lookup_0() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_2() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_3() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_4() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_5() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_6() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_7() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_8() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_9() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_10<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_10_0(acc),
            [100, 114, 114] => lookup_10_1(acc),
            [101, 100, 117] => lookup_10_2(acc),
            [103, 111, 118] => lookup_10_3(acc),
            [109, 105, 108] => lookup_10_4(acc),
            [110, 101, 116] => lookup_10_5(acc),
            [111, 114, 103] => lookup_10_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_11<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 102, 102, 105, 99, 105, 97, 108] => lookup_11_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_12() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_13() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_14() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_15() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_16() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_17<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 109] => lookup_17_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_18() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_19() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_20_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_20<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_20_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_20_1(acc),
            [99, 111] => lookup_20_2(acc),
            [103, 111, 118] => lookup_20_3(acc),
            [109, 105, 108] => lookup_20_4(acc),
            [110, 101, 116] => lookup_20_5(acc),
            [111, 114, 103] => lookup_20_6(acc),
            [115, 99, 104] => lookup_20_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_21() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_22<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 105, 110, 118, 101, 115, 116, 105, 103, 97, 116, 105, 111, 110] => {
                lookup_22_0(acc)
            }
            [97, 99, 99, 105, 100, 101, 110, 116, 45, 112, 114, 101, 118, 101, 110, 116, 105, 111, 110] => {
                lookup_22_1(acc)
            }
            [97, 101, 114, 111, 98, 97, 116, 105, 99] => lookup_22_2(acc),
            [97, 101, 114, 111, 99, 108, 117, 98] => lookup_22_3(acc),
            [97, 101, 114, 111, 100, 114, 111, 109, 101] => lookup_22_4(acc),
            [97, 103, 101, 110, 116, 115] => lookup_22_5(acc),
            [97, 105, 114, 45, 115, 117, 114, 118, 101, 105, 108, 108, 97, 110, 99, 101] => {
                lookup_22_6(acc)
            }
            [97, 105, 114, 45, 116, 114, 97, 102, 102, 105, 99, 45, 99, 111, 110, 116, 114, 111, 108] => {
                lookup_22_7(acc)
            }
            [97, 105, 114, 99, 114, 97, 102, 116] => lookup_22_8(acc),
            [97, 105, 114, 108, 105, 110, 101] => lookup_22_9(acc),
            [97, 105, 114, 112, 111, 114, 116] => lookup_22_10(acc),
            [97, 105, 114, 116, 114, 97, 102, 102, 105, 99] => lookup_22_11(acc),
            [97, 109, 98, 117, 108, 97, 110, 99, 101] => lookup_22_12(acc),
            [97, 109, 117, 115, 101, 109, 101, 110, 116] => lookup_22_13(acc),
            [97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => lookup_22_14(acc),
            [97, 117, 116, 104, 111, 114] => lookup_22_15(acc),
            [98, 97, 108, 108, 111, 111, 110, 105, 110, 103] => lookup_22_16(acc),
            [98, 114, 111, 107, 101, 114] => lookup_22_17(acc),
            [99, 97, 97] => lookup_22_18(acc),
            [99, 97, 114, 103, 111] => lookup_22_19(acc),
            [99, 97, 116, 101, 114, 105, 110, 103] => lookup_22_20(acc),
            [99, 101, 114, 116, 105, 102, 105, 99, 97, 116, 105, 111, 110] => lookup_22_21(acc),
            [99, 104, 97, 109, 112, 105, 111, 110, 115, 104, 105, 112] => lookup_22_22(acc),
            [99, 104, 97, 114, 116, 101, 114] => lookup_22_23(acc),
            [99, 105, 118, 105, 108, 97, 118, 105, 97, 116, 105, 111, 110] => lookup_22_24(acc),
            [99, 108, 117, 98] => lookup_22_25(acc),
            [99, 111, 110, 102, 101, 114, 101, 110, 99, 101] => lookup_22_26(acc),
            [99, 111, 110, 115, 117, 108, 116, 97, 110, 116] => lookup_22_27(acc),
            [99, 111, 110, 115, 117, 108, 116, 105, 110, 103] => lookup_22_28(acc),
            [99, 111, 110, 116, 114, 111, 108] => lookup_22_29(acc),
            [99, 111, 117, 110, 99, 105, 108] => lookup_22_30(acc),
            [99, 114, 101, 119] => lookup_22_31(acc),
            [100, 101, 115, 105, 103, 110] => lookup_22_32(acc),
            [100, 103, 99, 97] => lookup_22_33(acc),
            [101, 100, 117, 99, 97, 116, 111, 114] => lookup_22_34(acc),
            [101, 109, 101, 114, 103, 101, 110, 99, 121] => lookup_22_35(acc),
            [101, 110, 103, 105, 110, 101] => lookup_22_36(acc),
            [101, 110, 103, 105, 110, 101, 101, 114] => lookup_22_37(acc),
            [101, 110, 116, 101, 114, 116, 97, 105, 110, 109, 101, 110, 116] => lookup_22_38(acc),
            [101, 113, 117, 105, 112, 109, 101, 110, 116] => lookup_22_39(acc),
            [101, 120, 99, 104, 97, 110, 103, 101] => lookup_22_40(acc),
            [101, 120, 112, 114, 101, 115, 115] => lookup_22_41(acc),
            [102, 101, 100, 101, 114, 97, 116, 105, 111, 110] => lookup_22_42(acc),
            [102, 108, 105, 103, 104, 116] => lookup_22_43(acc),
            [102, 117, 101, 108] => lookup_22_44(acc),
            [103, 108, 105, 100, 105, 110, 103] => lookup_22_45(acc),
            [103, 111, 118, 101, 114, 110, 109, 101, 110, 116] => lookup_22_46(acc),
            [103, 114, 111, 117, 110, 100, 104, 97, 110, 100, 108, 105, 110, 103] => {
                lookup_22_47(acc)
            }
            [103, 114, 111, 117, 112] => lookup_22_48(acc),
            [104, 97, 110, 103, 103, 108, 105, 100, 105, 110, 103] => lookup_22_49(acc),
            [104, 111, 109, 101, 98, 117, 105, 108, 116] => lookup_22_50(acc),
            [105, 110, 115, 117, 114, 97, 110, 99, 101] => lookup_22_51(acc),
            [106, 111, 117, 114, 110, 97, 108] => lookup_22_52(acc),
            [106, 111, 117, 114, 110, 97, 108, 105, 115, 116] => lookup_22_53(acc),
            [108, 101, 97, 115, 105, 110, 103] => lookup_22_54(acc),
            [108, 111, 103, 105, 115, 116, 105, 99, 115] => lookup_22_55(acc),
            [109, 97, 103, 97, 122, 105, 110, 101] => lookup_22_56(acc),
            [109, 97, 105, 110, 116, 101, 110, 97, 110, 99, 101] => lookup_22_57(acc),
            [109, 101, 100, 105, 97] => lookup_22_58(acc),
            [109, 105, 99, 114, 111, 108, 105, 103, 104, 116] => lookup_22_59(acc),
            [109, 111, 100, 101, 108, 108, 105, 110, 103] => lookup_22_60(acc),
            [110, 97, 118, 105, 103, 97, 116, 105, 111, 110] => lookup_22_61(acc),
            [112, 97, 114, 97, 99, 104, 117, 116, 105, 110, 103] => lookup_22_62(acc),
            [112, 97, 114, 97, 103, 108, 105, 100, 105, 110, 103] => lookup_22_63(acc),
            [112, 97, 115, 115, 101, 110, 103, 101, 114, 45, 97, 115, 115, 111, 99, 105, 97, 116, 105, 111, 110] => {
                lookup_22_64(acc)
            }
            [112, 105, 108, 111, 116] => lookup_22_65(acc),
            [112, 114, 101, 115, 115] => lookup_22_66(acc),
            [112, 114, 111, 100, 117, 99, 116, 105, 111, 110] => lookup_22_67(acc),
            [114, 101, 99, 114, 101, 97, 116, 105, 111, 110] => lookup_22_68(acc),
            [114, 101, 112, 98, 111, 100, 121] => lookup_22_69(acc),
            [114, 101, 115] => lookup_22_70(acc),
            [114, 101, 115, 101, 97, 114, 99, 104] => lookup_22_71(acc),
            [114, 111, 116, 111, 114, 99, 114, 97, 102, 116] => lookup_22_72(acc),
            [115, 97, 102, 101, 116, 121] => lookup_22_73(acc),
            [115, 99, 105, 101, 110, 116, 105, 115, 116] => lookup_22_74(acc),
            [115, 101, 114, 118, 105, 99, 101, 115] => lookup_22_75(acc),
            [115, 104, 111, 119] => lookup_22_76(acc),
            [115, 107, 121, 100, 105, 118, 105, 110, 103] => lookup_22_77(acc),
            [115, 111, 102, 116, 119, 97, 114, 101] => lookup_22_78(acc),
            [115, 116, 117, 100, 101, 110, 116] => lookup_22_79(acc),
            [116, 114, 97, 100, 101, 114] => lookup_22_80(acc),
            [116, 114, 97, 100, 105, 110, 103] => lookup_22_81(acc),
            [116, 114, 97, 105, 110, 101, 114] => lookup_22_82(acc),
            [117, 110, 105, 111, 110] => lookup_22_83(acc),
            [119, 111, 114, 107, 105, 110, 103, 103, 114, 111, 117, 112] => lookup_22_84(acc),
            [119, 111, 114, 107, 115] => lookup_22_85(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_23() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_24_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_24_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_24_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_24_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_24<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_24_0(acc),
            [101, 100, 117] => lookup_24_1(acc),
            [103, 111, 118] => lookup_24_2(acc),
            [110, 101, 116] => lookup_24_3(acc),
            [111, 114, 103] => lookup_24_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_25() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_26() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_27<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_27_0(acc),
            [99, 111, 109] => lookup_27_1(acc),
            [110, 101, 116] => lookup_27_2(acc),
            [110, 111, 109] => lookup_27_3(acc),
            [111, 114, 103] => lookup_27_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_28() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_29() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_30_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_30_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_30_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_30_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_30<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_30_0(acc),
            [110, 101, 116] => lookup_30_1(acc),
            [111, 102, 102] => lookup_30_2(acc),
            [111, 114, 103] => lookup_30_3(acc),
            [117, 119, 117] => lookup_30_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_31() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_32() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_33() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_34() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_35() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_36_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_36_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_36_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_36_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_36_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_36_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_36<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_36_0(acc),
            [99, 111, 109] => lookup_36_1(acc),
            [101, 100, 117] => lookup_36_2(acc),
            [103, 111, 118] => lookup_36_3(acc),
            [109, 105, 108] => lookup_36_4(acc),
            [110, 101, 116] => lookup_36_5(acc),
            [111, 114, 103] => lookup_36_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_37() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_38() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_39() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_40() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_41() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_42() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_43() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_44() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_45_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_45_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_45_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_45_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_45_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_45_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_45_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_45_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_45<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_45_0(acc),
            [99, 111] => lookup_45_1(acc),
            [99, 111, 109] => lookup_45_2(acc),
            [99, 111, 109, 109, 117, 110, 101] => lookup_45_3(acc),
            [110, 101, 107, 111] => lookup_45_4(acc),
            [110, 101, 116] => lookup_45_5(acc),
            [110, 121, 97, 97] => lookup_45_6(acc),
            [111, 114, 103] => lookup_45_7(acc),
            [114, 97, 100, 105, 111] => lookup_45_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_46() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_47() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_48() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_49() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_50() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_51() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_52() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_53() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_54() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_55() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_56() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_57<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_57_0(acc),
            [101, 100] => lookup_57_1(acc),
            [103, 118] => lookup_57_2(acc),
            [105, 116] => lookup_57_3(acc),
            [111, 103] => lookup_57_4(acc),
            [112, 98] => lookup_57_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_58() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_59() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_60_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_60_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_60_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_60_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_60_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_18_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_60_18_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_60_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_22<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_60_22_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_60_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 105, 118, 97, 116, 101, 108, 105, 110, 107] => lookup_60_23_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_60_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_60<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 103, 101, 116] => lookup_60_0(info, labels, acc),
            [98, 111, 111, 107, 111, 110, 108, 105, 110, 101] => lookup_60_1(acc),
            [99, 108, 101, 114, 107] => lookup_60_2(acc),
            [99, 108, 101, 114, 107, 115, 116, 97, 103, 101] => lookup_60_3(acc),
            [100, 101, 116, 97] => lookup_60_4(acc),
            [100, 101, 118, 101, 108, 111, 112, 101, 114] => lookup_60_5(info, labels, acc),
            [101, 97, 115, 121, 112, 97, 110, 101, 108] => lookup_60_6(acc),
            [101, 100, 103, 101, 99, 111, 109, 112, 117, 116, 101] => lookup_60_7(acc),
            [101, 110, 99, 114] => lookup_60_8(acc),
            [102, 105, 114, 101, 119, 101, 98] => lookup_60_9(acc),
            [102, 114, 97, 109, 101, 114] => lookup_60_10(acc),
            [104, 97, 115, 117, 114, 97] => lookup_60_11(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_60_12(acc),
            [109, 101, 115, 115, 101, 114, 108, 105] => lookup_60_13(acc),
            [110, 101, 116, 108, 105, 102, 121] => lookup_60_14(acc),
            [110, 103, 114, 111, 107] => lookup_60_15(acc),
            [110, 103, 114, 111, 107, 45, 102, 114, 101, 101] => lookup_60_16(acc),
            [110, 111, 111, 112] => lookup_60_17(acc),
            [110, 111, 114, 116, 104, 102, 108, 97, 110, 107] => lookup_60_18(info, labels, acc),
            [111, 110, 100, 105, 103, 105, 116, 97, 108, 111, 99, 101, 97, 110] => {
                lookup_60_19(acc)
            }
            [111, 110, 102, 108, 97, 115, 104, 100, 114, 105, 118, 101] => lookup_60_20(acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 48] => lookup_60_21(acc),
            [114, 117, 110] => lookup_60_22(labels, acc),
            [115, 110, 111, 119, 102, 108, 97, 107, 101] => lookup_60_23(labels, acc),
            [115, 116, 114, 101, 97, 109, 108, 105, 116] => lookup_60_24(acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_60_25(acc),
            [116, 121, 112, 101, 100, 114, 101, 97, 109] => lookup_60_26(acc),
            [118, 101, 114, 99, 101, 108] => lookup_60_27(acc),
            [119, 101, 98] => lookup_60_28(acc),
            [119, 110, 101, 120, 116] => lookup_60_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_61() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_62() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_63() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_64_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_64_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_64_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_64<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116] => lookup_64_0(acc),
            [99, 111, 109] => lookup_64_1(labels, acc),
            [99, 111, 111, 112] => lookup_64_2(acc),
            [101, 100, 117] => lookup_64_3(acc),
            [103, 111, 98] => lookup_64_4(acc),
            [103, 111, 118] => lookup_64_5(acc),
            [105, 110, 116] => lookup_64_6(acc),
            [109, 105, 108] => lookup_64_7(acc),
            [109, 117, 115, 105, 99, 97] => lookup_64_8(acc),
            [109, 117, 116, 117, 97, 108] => lookup_64_9(acc),
            [110, 101, 116] => lookup_64_10(acc),
            [111, 114, 103] => lookup_64_11(acc),
            [115, 101, 110, 97, 115, 97] => lookup_64_12(acc),
            [116, 117, 114] => lookup_64_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_65() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_66() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_67() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_68() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_69_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_69_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_69_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_69_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_69_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_69_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_69<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 49, 54, 52] => lookup_69_0(acc),
            [105, 110, 45, 97, 100, 100, 114] => lookup_69_1(acc),
            [105, 112, 54] => lookup_69_2(acc),
            [105, 114, 105, 115] => lookup_69_3(acc),
            [117, 114, 105] => lookup_69_4(acc),
            [117, 114, 110] => lookup_69_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_70() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_71() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_72_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_72<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_72_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_73() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_74_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_74<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_74_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_75() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_76_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_76_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 104] => lookup_76_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_76_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_76_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_76_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [119, 105, 101, 110] => lookup_76_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_76_8_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_8_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_8_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_76_8_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_76_8_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_8_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_76_8_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_76_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [101, 120] => lookup_76_8_1(info, labels, acc),
            [105, 110] => lookup_76_8_2(info, labels, acc),
            wild => lookup_76_8_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_76_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_76_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_76_16_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_16_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_76_16_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_76_16_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76_16_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_76_16_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_76_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 120] => lookup_76_16_0(info, labels, acc),
            [107, 117, 110, 100, 101, 110] => lookup_76_16_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_76_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_76<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 101, 105, 116, 101] => lookup_76_0(acc),
            [49, 50, 104, 112] => lookup_76_1(acc),
            [50, 105, 120] => lookup_76_2(acc),
            [52, 108, 105, 109, 97] => lookup_76_3(acc),
            [97, 99] => lookup_76_4(labels, acc),
            [98, 105, 122] => lookup_76_5(acc),
            [99, 111] => lookup_76_6(labels, acc),
            [102, 117, 110, 107, 102, 101, 117, 101, 114] => lookup_76_7(info, labels, acc),
            [102, 117, 116, 117, 114, 101, 99, 109, 115] => lookup_76_8(info, labels, acc),
            [102, 117, 116, 117, 114, 101, 104, 111, 115, 116, 105, 110, 103] => lookup_76_9(acc),
            [102, 117, 116, 117, 114, 101, 109, 97, 105, 108, 105, 110, 103] => lookup_76_10(acc),
            [103, 118] => lookup_76_11(acc),
            [105, 110, 102, 111] => lookup_76_12(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_76_13(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_76_14(acc),
            [111, 114] => lookup_76_15(acc),
            [111, 114, 116, 115, 105, 110, 102, 111] => lookup_76_16(info, labels, acc),
            [112, 114, 105, 118] => lookup_76_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_77() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_78() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_79_2_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_79_2_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 108] => lookup_79_2_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_79_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_79_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_79_2_0(acc),
            [99, 108, 111, 117, 100, 108, 101, 116, 115] => lookup_79_2_1(info, labels, acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_79_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_79_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_4_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_4_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104, 111, 111, 108, 115] => lookup_79_4_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_79_4_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_4_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_4_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_4_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_4_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_4_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 116] => lookup_79_4_0(acc),
            [99, 97, 116, 104, 111, 108, 105, 99] => lookup_79_4_1(acc),
            [110, 115, 119] => lookup_79_4_2(labels, acc),
            [110, 116] => lookup_79_4_3(acc),
            [113, 108, 100] => lookup_79_4_4(acc),
            [115, 97] => lookup_79_4_5(acc),
            [116, 97, 115] => lookup_79_4_6(acc),
            [118, 105, 99] => lookup_79_4_7(acc),
            [119, 97] => lookup_79_4_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_79_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_5_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_5_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [113, 108, 100] => lookup_79_5_0(acc),
            [115, 97] => lookup_79_5_1(acc),
            [116, 97, 115] => lookup_79_5_2(acc),
            [118, 105, 99] => lookup_79_5_3(acc),
            [119, 97] => lookup_79_5_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_79_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_79<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 116] => lookup_79_0(acc),
            [97, 115, 110] => lookup_79_1(acc),
            [99, 111, 109] => lookup_79_2(labels, acc),
            [99, 111, 110, 102] => lookup_79_3(acc),
            [101, 100, 117] => lookup_79_4(labels, acc),
            [103, 111, 118] => lookup_79_5(labels, acc),
            [105, 100] => lookup_79_6(acc),
            [105, 110, 102, 111] => lookup_79_7(acc),
            [110, 101, 116] => lookup_79_8(acc),
            [110, 115, 119] => lookup_79_9(acc),
            [110, 116] => lookup_79_10(acc),
            [111, 114, 103] => lookup_79_11(acc),
            [111, 122] => lookup_79_12(acc),
            [113, 108, 100] => lookup_79_13(acc),
            [115, 97] => lookup_79_14(acc),
            [116, 97, 115] => lookup_79_15(acc),
            [118, 105, 99] => lookup_79_16(acc),
            [119, 97] => lookup_79_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_80() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_81() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_82() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_83() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_84() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_85() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_86() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_87() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_88() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_89_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_89<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_89_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_90() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_91_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_91_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_91_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_91_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_91_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_91_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_91_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_91_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_91<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101] => lookup_91_0(acc),
            [99, 97, 116] => lookup_91_1(acc),
            [101, 115] => lookup_91_2(acc),
            [101, 117] => lookup_91_3(acc),
            [103, 103] => lookup_91_4(acc),
            [109, 99] => lookup_91_5(acc),
            [117, 115] => lookup_91_6(acc),
            [120, 121] => lookup_91_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_92() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_93<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_93_0(acc),
            [99, 111, 109] => lookup_93_1(acc),
            [101, 100, 117] => lookup_93_2(acc),
            [103, 111, 118] => lookup_93_3(acc),
            [105, 110, 102, 111] => lookup_93_4(acc),
            [105, 110, 116] => lookup_93_5(acc),
            [109, 105, 108] => lookup_93_6(acc),
            [110, 97, 109, 101] => lookup_93_7(acc),
            [110, 101, 116] => lookup_93_8(acc),
            [111, 114, 103] => lookup_93_9(acc),
            [112, 112] => lookup_93_10(acc),
            [112, 114, 111] => lookup_93_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_94() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_95_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_95_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_95_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_95_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_95_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_95_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_95_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_95_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_95<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_95_0(acc),
            [99, 111, 109] => lookup_95_1(acc),
            [101, 100, 117] => lookup_95_2(acc),
            [103, 111, 118] => lookup_95_3(acc),
            [109, 105, 108] => lookup_95_4(acc),
            [110, 101, 116] => lookup_95_5(acc),
            [111, 114, 103] => lookup_95_6(acc),
            [114, 115] => lookup_95_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_96() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_97() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_98() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_99() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_100() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_101() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_102() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_103() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_104() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_105() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_106() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_107() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_108() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_109_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_109_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_109<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 117, 115] => lookup_109_0(acc),
            [110, 122] => lookup_109_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_110() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_111() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_112<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_112_0(acc),
            [99, 111] => lookup_112_1(acc),
            [99, 111, 109] => lookup_112_2(acc),
            [101, 100, 117] => lookup_112_3(acc),
            [103, 111, 118] => lookup_112_4(acc),
            [105, 110, 102, 111] => lookup_112_5(acc),
            [110, 101, 116] => lookup_112_6(acc),
            [111, 114, 103] => lookup_112_7(acc),
            [115, 116, 111, 114, 101] => lookup_112_8(acc),
            [116, 118] => lookup_112_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_113() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_114() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_115() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_116() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_117() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_118_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_118<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_118_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_119_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_119_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_119_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_119_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_119_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_119_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_119_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_119_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 122, 112, 114, 111, 120, 121] => lookup_119_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_119_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_119_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_119_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_119_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_119_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_119<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 105, 116, 101] => lookup_119_0(acc),
            [97, 99] => lookup_119_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_119_2(acc),
            [105, 110, 116, 101, 114, 104, 111, 115, 116, 115, 111, 108, 117, 116, 105, 111, 110, 115] => {
                lookup_119_3(info, labels, acc)
            }
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_119_4(info, labels, acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_119_5(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_119_6(info, labels, acc),
            [119, 101, 98, 104, 111, 115, 116, 105, 110, 103] => lookup_119_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_120() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_121() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_122() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_123() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_124() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_125() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_126() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_127() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_128_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_128<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_128_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_129_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_129_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_129_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_129<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48] => lookup_129_0(acc),
            [49] => lookup_129_1(acc),
            [50] => lookup_129_2(acc),
            [51] => lookup_129_3(acc),
            [52] => lookup_129_4(acc),
            [53] => lookup_129_5(acc),
            [54] => lookup_129_6(acc),
            [55] => lookup_129_7(acc),
            [56] => lookup_129_8(acc),
            [57] => lookup_129_9(acc),
            [97] => lookup_129_10(acc),
            [98] => lookup_129_11(acc),
            [98, 97, 114, 115, 121] => lookup_129_12(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_129_13(acc),
            [99] => lookup_129_14(acc),
            [100] => lookup_129_15(acc),
            [101] => lookup_129_16(acc),
            [102] => lookup_129_17(acc),
            [103] => lookup_129_18(acc),
            [104] => lookup_129_19(acc),
            [105] => lookup_129_20(acc),
            [106] => lookup_129_21(acc),
            [107] => lookup_129_22(acc),
            [108] => lookup_129_23(acc),
            [109] => lookup_129_24(acc),
            [110] => lookup_129_25(acc),
            [111] => lookup_129_26(acc),
            [112] => lookup_129_27(acc),
            [113] => lookup_129_28(acc),
            [114] => lookup_129_29(acc),
            [115] => lookup_129_30(acc),
            [116] => lookup_129_31(acc),
            [117] => lookup_129_32(acc),
            [118] => lookup_129_33(acc),
            [119] => lookup_129_34(acc),
            [120] => lookup_129_35(acc),
            [121] => lookup_129_36(acc),
            [122] => lookup_129_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_130<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_130_0(acc),
            [101, 100, 117] => lookup_130_1(acc),
            [103, 111, 118] => lookup_130_2(acc),
            [110, 101, 116] => lookup_130_3(acc),
            [111, 114, 103] => lookup_130_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_131() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_132<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_132_0(acc),
            [99, 111, 109] => lookup_132_1(acc),
            [101, 100, 117] => lookup_132_2(acc),
            [111, 114] => lookup_132_3(acc),
            [111, 114, 103] => lookup_132_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_133() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_134() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_135() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_136() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_137() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_138() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_139_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_139<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 116, 105, 118, 101, 116, 114, 97, 105, 108] => lookup_139_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_139_1(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_139_2(acc),
            [100, 121, 110, 100, 110, 115] => lookup_139_3(acc),
            [102, 111, 114, 45, 98, 101, 116, 116, 101, 114] => lookup_139_4(acc),
            [102, 111, 114, 45, 109, 111, 114, 101] => lookup_139_5(acc),
            [102, 111, 114, 45, 115, 111, 109, 101] => lookup_139_6(acc),
            [102, 111, 114, 45, 116, 104, 101] => lookup_139_7(acc),
            [106, 111, 122, 105] => lookup_139_8(acc),
            [109, 109, 97, 102, 97, 110] => lookup_139_9(acc),
            [109, 121, 102, 116, 112] => lookup_139_10(acc),
            [110, 111, 45, 105, 112] => lookup_139_11(acc),
            [111, 114, 120] => lookup_139_12(acc),
            [115, 101, 108, 102, 105, 112] => lookup_139_13(acc),
            [119, 101, 98, 104, 111, 112] => lookup_139_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_140_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_140_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_140<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 102, 114, 105, 99, 97] => lookup_140_0(acc),
            [97, 103, 114, 111] => lookup_140_1(acc),
            [97, 114, 99, 104, 105, 116, 101, 99, 116, 101, 115] => lookup_140_2(acc),
            [97, 115, 115, 117, 114] => lookup_140_3(acc),
            [97, 118, 111, 99, 97, 116, 115] => lookup_140_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_140_5(acc),
            [99, 111] => lookup_140_6(acc),
            [99, 111, 109] => lookup_140_7(acc),
            [101, 99, 111] => lookup_140_8(acc),
            [101, 99, 111, 110, 111] => lookup_140_9(acc),
            [101, 100, 117] => lookup_140_10(acc),
            [105, 110, 102, 111] => lookup_140_11(acc),
            [108, 111, 105, 115, 105, 114, 115] => lookup_140_12(acc),
            [109, 111, 110, 101, 121] => lookup_140_13(acc),
            [110, 101, 116] => lookup_140_14(acc),
            [111, 114, 103] => lookup_140_15(acc),
            [111, 116, 101] => lookup_140_16(acc),
            [114, 101, 115, 116, 97, 117, 114, 97, 110, 116] => lookup_140_17(acc),
            [114, 101, 115, 116, 111] => lookup_140_18(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_140_19(acc),
            [117, 110, 105, 118] => lookup_140_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_141() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_142() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_143() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_144() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_145() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_146() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_147<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_147_0(acc),
            [101, 100, 117] => lookup_147_1(acc),
            [103, 111, 118] => lookup_147_2(acc),
            [110, 101, 116] => lookup_147_3(acc),
            [111, 114, 103] => lookup_147_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_148() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_149() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_150_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_150<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_150_0(acc),
            [99, 111, 109] => lookup_150_1(acc),
            [101, 100, 117] => lookup_150_2(acc),
            [103, 111, 118] => lookup_150_3(acc),
            [110, 101, 116] => lookup_150_4(acc),
            [111, 114, 103] => lookup_150_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_151() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_152<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 97, 100, 101, 109, 105, 97] => lookup_152_0(acc),
            [97, 103, 114, 111] => lookup_152_1(acc),
            [97, 114, 116, 101] => lookup_152_2(acc),
            [98, 108, 111, 103] => lookup_152_3(acc),
            [98, 111, 108, 105, 118, 105, 97] => lookup_152_4(acc),
            [99, 105, 101, 110, 99, 105, 97] => lookup_152_5(acc),
            [99, 111, 109] => lookup_152_6(acc),
            [99, 111, 111, 112, 101, 114, 97, 116, 105, 118, 97] => lookup_152_7(acc),
            [100, 101, 109, 111, 99, 114, 97, 99, 105, 97] => lookup_152_8(acc),
            [100, 101, 112, 111, 114, 116, 101] => lookup_152_9(acc),
            [101, 99, 111, 108, 111, 103, 105, 97] => lookup_152_10(acc),
            [101, 99, 111, 110, 111, 109, 105, 97] => lookup_152_11(acc),
            [101, 100, 117] => lookup_152_12(acc),
            [101, 109, 112, 114, 101, 115, 97] => lookup_152_13(acc),
            [103, 111, 98] => lookup_152_14(acc),
            [105, 110, 100, 105, 103, 101, 110, 97] => lookup_152_15(acc),
            [105, 110, 100, 117, 115, 116, 114, 105, 97] => lookup_152_16(acc),
            [105, 110, 102, 111] => lookup_152_17(acc),
            [105, 110, 116] => lookup_152_18(acc),
            [109, 101, 100, 105, 99, 105, 110, 97] => lookup_152_19(acc),
            [109, 105, 108] => lookup_152_20(acc),
            [109, 111, 118, 105, 109, 105, 101, 110, 116, 111] => lookup_152_21(acc),
            [109, 117, 115, 105, 99, 97] => lookup_152_22(acc),
            [110, 97, 116, 117, 114, 97, 108] => lookup_152_23(acc),
            [110, 101, 116] => lookup_152_24(acc),
            [110, 111, 109, 98, 114, 101] => lookup_152_25(acc),
            [110, 111, 116, 105, 99, 105, 97, 115] => lookup_152_26(acc),
            [111, 114, 103] => lookup_152_27(acc),
            [112, 97, 116, 114, 105, 97] => lookup_152_28(acc),
            [112, 108, 117, 114, 105, 110, 97, 99, 105, 111, 110, 97, 108] => lookup_152_29(acc),
            [112, 111, 108, 105, 116, 105, 99, 97] => lookup_152_30(acc),
            [112, 114, 111, 102, 101, 115, 105, 111, 110, 97, 108] => lookup_152_31(acc),
            [112, 117, 101, 98, 108, 111] => lookup_152_32(acc),
            [114, 101, 118, 105, 115, 116, 97] => lookup_152_33(acc),
            [115, 97, 108, 117, 100] => lookup_152_34(acc),
            [116, 101, 99, 110, 111, 108, 111, 103, 105, 97] => lookup_152_35(acc),
            [116, 107, 115, 97, 116] => lookup_152_36(acc),
            [116, 114, 97, 110, 115, 112, 111, 114, 116, 101] => lookup_152_37(acc),
            [116, 118] => lookup_152_38(acc),
            [119, 101, 98] => lookup_152_39(acc),
            [119, 105, 107, 105] => lookup_152_40(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_153() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_154() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_155() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_156() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_157() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_158() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_159() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_160() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_161() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_162() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_163() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_164() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_165() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_166() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_29_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_29_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114, 115] => lookup_167_29_2_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_167_29_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [115, 99, 97, 108, 101] => lookup_167_29_2_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_167_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_167_29_0(acc),
            [115, 105, 109, 112, 108, 101, 115, 105, 116, 101] => lookup_167_29_1(acc),
            [118, 105, 114, 116, 117, 97, 108, 99, 108, 111, 117, 100] => {
                lookup_167_29_2(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_167_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_63<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_167_63_0(acc),
            [97, 108] => lookup_167_63_1(acc),
            [97, 109] => lookup_167_63_2(acc),
            [97, 112] => lookup_167_63_3(acc),
            [98, 97] => lookup_167_63_4(acc),
            [99, 101] => lookup_167_63_5(acc),
            [100, 102] => lookup_167_63_6(acc),
            [101, 115] => lookup_167_63_7(acc),
            [103, 111] => lookup_167_63_8(acc),
            [109, 97] => lookup_167_63_9(acc),
            [109, 103] => lookup_167_63_10(acc),
            [109, 115] => lookup_167_63_11(acc),
            [109, 116] => lookup_167_63_12(acc),
            [112, 97] => lookup_167_63_13(acc),
            [112, 98] => lookup_167_63_14(acc),
            [112, 101] => lookup_167_63_15(acc),
            [112, 105] => lookup_167_63_16(acc),
            [112, 114] => lookup_167_63_17(acc),
            [114, 106] => lookup_167_63_18(acc),
            [114, 110] => lookup_167_63_19(acc),
            [114, 111] => lookup_167_63_20(acc),
            [114, 114] => lookup_167_63_21(acc),
            [114, 115] => lookup_167_63_22(acc),
            [115, 99] => lookup_167_63_23(acc),
            [115, 101] => lookup_167_63_24(acc),
            [115, 112] => lookup_167_63_25(acc),
            [116, 111] => lookup_167_63_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_167_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_74_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_167_74<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_167_74_0(acc),
            [97, 108] => lookup_167_74_1(acc),
            [97, 109] => lookup_167_74_2(acc),
            [97, 112] => lookup_167_74_3(acc),
            [98, 97] => lookup_167_74_4(acc),
            [99, 101] => lookup_167_74_5(acc),
            [100, 102] => lookup_167_74_6(acc),
            [101, 115] => lookup_167_74_7(acc),
            [103, 111] => lookup_167_74_8(acc),
            [109, 97] => lookup_167_74_9(acc),
            [109, 103] => lookup_167_74_10(acc),
            [109, 115] => lookup_167_74_11(acc),
            [109, 116] => lookup_167_74_12(acc),
            [112, 97] => lookup_167_74_13(acc),
            [112, 98] => lookup_167_74_14(acc),
            [112, 101] => lookup_167_74_15(acc),
            [112, 105] => lookup_167_74_16(acc),
            [112, 114] => lookup_167_74_17(acc),
            [114, 106] => lookup_167_74_18(acc),
            [114, 110] => lookup_167_74_19(acc),
            [114, 111] => lookup_167_74_20(acc),
            [114, 114] => lookup_167_74_21(acc),
            [114, 115] => lookup_167_74_22(acc),
            [115, 99] => lookup_167_74_23(acc),
            [115, 101] => lookup_167_74_24(acc),
            [115, 112] => lookup_167_74_25(acc),
            [116, 111] => lookup_167_74_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_167_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_91_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_91<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_167_91_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_167_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_167<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [57, 103, 117, 97, 99, 117] => lookup_167_0(acc),
            [97, 98, 99] => lookup_167_1(acc),
            [97, 100, 109] => lookup_167_2(acc),
            [97, 100, 118] => lookup_167_3(acc),
            [97, 103, 114] => lookup_167_4(acc),
            [97, 106, 117] => lookup_167_5(acc),
            [97, 109] => lookup_167_6(acc),
            [97, 110, 97, 110, 105] => lookup_167_7(acc),
            [97, 112, 97, 114, 101, 99, 105, 100, 97] => lookup_167_8(acc),
            [97, 112, 112] => lookup_167_9(acc),
            [97, 114, 113] => lookup_167_10(acc),
            [97, 114, 116] => lookup_167_11(acc),
            [97, 116, 111] => lookup_167_12(acc),
            [98] => lookup_167_13(acc),
            [98, 97, 114, 117, 101, 114, 105] => lookup_167_14(acc),
            [98, 101, 108, 101, 109] => lookup_167_15(acc),
            [98, 104, 122] => lookup_167_16(acc),
            [98, 105, 98] => lookup_167_17(acc),
            [98, 105, 111] => lookup_167_18(acc),
            [98, 108, 111, 103] => lookup_167_19(acc),
            [98, 109, 100] => lookup_167_20(acc),
            [98, 111, 97, 118, 105, 115, 116, 97] => lookup_167_21(acc),
            [98, 115, 98] => lookup_167_22(acc),
            [99, 97, 109, 112, 105, 110, 97, 103, 114, 97, 110, 100, 101] => lookup_167_23(acc),
            [99, 97, 109, 112, 105, 110, 97, 115] => lookup_167_24(acc),
            [99, 97, 120, 105, 97, 115] => lookup_167_25(acc),
            [99, 105, 109] => lookup_167_26(acc),
            [99, 110, 103] => lookup_167_27(acc),
            [99, 110, 116] => lookup_167_28(acc),
            [99, 111, 109] => lookup_167_29(labels, acc),
            [99, 111, 110, 116, 97, 103, 101, 109] => lookup_167_30(acc),
            [99, 111, 111, 112] => lookup_167_31(acc),
            [99, 111, 122] => lookup_167_32(acc),
            [99, 114, 105] => lookup_167_33(acc),
            [99, 117, 105, 97, 98, 97] => lookup_167_34(acc),
            [99, 117, 114, 105, 116, 105, 98, 97] => lookup_167_35(acc),
            [100, 101, 102] => lookup_167_36(acc),
            [100, 101, 115] => lookup_167_37(acc),
            [100, 101, 116] => lookup_167_38(acc),
            [100, 101, 118] => lookup_167_39(acc),
            [101, 99, 110] => lookup_167_40(acc),
            [101, 99, 111] => lookup_167_41(acc),
            [101, 100, 117] => lookup_167_42(acc),
            [101, 109, 112] => lookup_167_43(acc),
            [101, 110, 102] => lookup_167_44(acc),
            [101, 110, 103] => lookup_167_45(acc),
            [101, 115, 112] => lookup_167_46(acc),
            [101, 116, 99] => lookup_167_47(acc),
            [101, 116, 105] => lookup_167_48(acc),
            [102, 97, 114] => lookup_167_49(acc),
            [102, 101, 105, 114, 97] => lookup_167_50(acc),
            [102, 108, 111, 103] => lookup_167_51(acc),
            [102, 108, 111, 114, 105, 112, 97] => lookup_167_52(acc),
            [102, 109] => lookup_167_53(acc),
            [102, 110, 100] => lookup_167_54(acc),
            [102, 111, 114, 116, 97, 108] => lookup_167_55(acc),
            [102, 111, 116] => lookup_167_56(acc),
            [102, 111, 122] => lookup_167_57(acc),
            [102, 115, 116] => lookup_167_58(acc),
            [103, 49, 50] => lookup_167_59(acc),
            [103, 101, 111] => lookup_167_60(acc),
            [103, 103, 102] => lookup_167_61(acc),
            [103, 111, 105, 97, 110, 105, 97] => lookup_167_62(acc),
            [103, 111, 118] => lookup_167_63(labels, acc),
            [103, 114, 117] => lookup_167_64(acc),
            [105, 109, 98] => lookup_167_65(acc),
            [105, 110, 100] => lookup_167_66(acc),
            [105, 110, 102] => lookup_167_67(acc),
            [106, 97, 98] => lookup_167_68(acc),
            [106, 97, 109, 112, 97] => lookup_167_69(acc),
            [106, 100, 102] => lookup_167_70(acc),
            [106, 111, 105, 110, 118, 105, 108, 108, 101] => lookup_167_71(acc),
            [106, 111, 114] => lookup_167_72(acc),
            [106, 117, 115] => lookup_167_73(acc),
            [108, 101, 103] => lookup_167_74(labels, acc),
            [108, 101, 108] => lookup_167_75(acc),
            [108, 111, 103] => lookup_167_76(acc),
            [108, 111, 110, 100, 114, 105, 110, 97] => lookup_167_77(acc),
            [109, 97, 99, 97, 112, 97] => lookup_167_78(acc),
            [109, 97, 99, 101, 105, 111] => lookup_167_79(acc),
            [109, 97, 110, 97, 117, 115] => lookup_167_80(acc),
            [109, 97, 114, 105, 110, 103, 97] => lookup_167_81(acc),
            [109, 97, 116] => lookup_167_82(acc),
            [109, 101, 100] => lookup_167_83(acc),
            [109, 105, 108] => lookup_167_84(acc),
            [109, 111, 114, 101, 110, 97] => lookup_167_85(acc),
            [109, 112] => lookup_167_86(acc),
            [109, 117, 115] => lookup_167_87(acc),
            [110, 97, 116, 97, 108] => lookup_167_88(acc),
            [110, 101, 116] => lookup_167_89(acc),
            [110, 105, 116, 101, 114, 111, 105] => lookup_167_90(acc),
            [110, 111, 109] => lookup_167_91(info, labels, acc),
            [110, 111, 116] => lookup_167_92(acc),
            [110, 116, 114] => lookup_167_93(acc),
            [111, 100, 111] => lookup_167_94(acc),
            [111, 110, 103] => lookup_167_95(acc),
            [111, 114, 103] => lookup_167_96(acc),
            [111, 115, 97, 115, 99, 111] => lookup_167_97(acc),
            [112, 97, 108, 109, 97, 115] => lookup_167_98(acc),
            [112, 111, 97] => lookup_167_99(acc),
            [112, 112, 103] => lookup_167_100(acc),
            [112, 114, 111] => lookup_167_101(acc),
            [112, 115, 99] => lookup_167_102(acc),
            [112, 115, 105] => lookup_167_103(acc),
            [112, 118, 104] => lookup_167_104(acc),
            [113, 115, 108] => lookup_167_105(acc),
            [114, 97, 100, 105, 111] => lookup_167_106(acc),
            [114, 101, 99] => lookup_167_107(acc),
            [114, 101, 99, 105, 102, 101] => lookup_167_108(acc),
            [114, 101, 112] => lookup_167_109(acc),
            [114, 105, 98, 101, 105, 114, 97, 111] => lookup_167_110(acc),
            [114, 105, 111] => lookup_167_111(acc),
            [114, 105, 111, 98, 114, 97, 110, 99, 111] => lookup_167_112(acc),
            [114, 105, 111, 112, 114, 101, 116, 111] => lookup_167_113(acc),
            [115, 97, 108, 118, 97, 100, 111, 114] => lookup_167_114(acc),
            [115, 97, 109, 112, 97] => lookup_167_115(acc),
            [115, 97, 110, 116, 97, 109, 97, 114, 105, 97] => lookup_167_116(acc),
            [115, 97, 110, 116, 111, 97, 110, 100, 114, 101] => lookup_167_117(acc),
            [115, 97, 111, 98, 101, 114, 110, 97, 114, 100, 111] => lookup_167_118(acc),
            [115, 97, 111, 103, 111, 110, 99, 97] => lookup_167_119(acc),
            [115, 101, 103] => lookup_167_120(acc),
            [115, 106, 99] => lookup_167_121(acc),
            [115, 108, 103] => lookup_167_122(acc),
            [115, 108, 122] => lookup_167_123(acc),
            [115, 111, 114, 111, 99, 97, 98, 97] => lookup_167_124(acc),
            [115, 114, 118] => lookup_167_125(acc),
            [116, 97, 120, 105] => lookup_167_126(acc),
            [116, 99] => lookup_167_127(acc),
            [116, 101, 99] => lookup_167_128(acc),
            [116, 101, 111] => lookup_167_129(acc),
            [116, 104, 101] => lookup_167_130(acc),
            [116, 109, 112] => lookup_167_131(acc),
            [116, 114, 100] => lookup_167_132(acc),
            [116, 117, 114] => lookup_167_133(acc),
            [116, 118] => lookup_167_134(acc),
            [117, 100, 105] => lookup_167_135(acc),
            [118, 101, 116] => lookup_167_136(acc),
            [118, 105, 120] => lookup_167_137(acc),
            [118, 108, 111, 103] => lookup_167_138(acc),
            [119, 105, 107, 105] => lookup_167_139(acc),
            [122, 108, 103] => lookup_167_140(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_168() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_169() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_170() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_171() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_172() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_173() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_174_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_174_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_174_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_174_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_174_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_174_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_174<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_174_0(acc),
            [101, 100, 117] => lookup_174_1(acc),
            [103, 111, 118] => lookup_174_2(acc),
            [110, 101, 116] => lookup_174_3(acc),
            [111, 114, 103] => lookup_174_4(acc),
            [119, 101] => lookup_174_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_175_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_175_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_175_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_175_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_175_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_175<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_175_0(acc),
            [101, 100, 117] => lookup_175_1(acc),
            [103, 111, 118] => lookup_175_2(acc),
            [110, 101, 116] => lookup_175_3(acc),
            [111, 114, 103] => lookup_175_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_176() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_177_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_177<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 115, 105, 116, 101] => lookup_177_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_178_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_178<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_178_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_179() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_180() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_181() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_182<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_182_0(acc),
            [111, 114, 103] => lookup_182_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_183_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_183_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_183_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_183_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_183_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_183_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_183<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_183_0(labels, acc),
            [103, 111, 118] => lookup_183_1(acc),
            [109, 101, 100, 105, 97, 116, 101, 99, 104] => lookup_183_2(acc),
            [109, 105, 108] => lookup_183_3(acc),
            [109, 121, 99, 108, 111, 117, 100] => lookup_183_4(acc),
            [111, 102] => lookup_183_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_184_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_184_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_184_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_184<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_184_0(acc),
            [101, 100, 117] => lookup_184_1(acc),
            [103, 111, 118] => lookup_184_2(acc),
            [103, 115, 106] => lookup_184_3(acc),
            [110, 101, 116] => lookup_184_4(acc),
            [111, 114, 103] => lookup_184_5(acc),
            [122, 97] => lookup_184_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_185() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_186_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_186_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_186_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_186<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98] => lookup_186_0(acc),
            [97, 119, 100, 101, 118] => lookup_186_1(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_186_2(acc),
            [98, 99] => lookup_186_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_186_4(acc),
            [99, 111] => lookup_186_5(acc),
            [103, 99] => lookup_186_6(acc),
            [109, 98] => lookup_186_7(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_186_8(acc),
            [110, 98] => lookup_186_9(acc),
            [110, 102] => lookup_186_10(acc),
            [110, 108] => lookup_186_11(acc),
            [110, 111, 45, 105, 112] => lookup_186_12(acc),
            [110, 115] => lookup_186_13(acc),
            [110, 116] => lookup_186_14(acc),
            [110, 117] => lookup_186_15(acc),
            [111, 110] => lookup_186_16(acc),
            [112, 101] => lookup_186_17(acc),
            [113, 99] => lookup_186_18(acc),
            [115, 107] => lookup_186_19(acc),
            [121, 107] => lookup_186_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_187() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_188() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_189() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_190() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_191() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_192() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_193() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_194() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_195() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_196() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_197() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_198() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_199() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_200() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_201() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_202() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_203() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_204() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_205() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_206_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_206_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 105] => lookup_206_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_206<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 98, 117] => lookup_206_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_207() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_208() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_209() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_210() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_211() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_212() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_213() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_214() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_215() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_216() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_217_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_217_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_217_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_217_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_217_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_217_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_217_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_217_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_217_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [105, 110, 115, 116, 97, 110, 99, 101, 115] => lookup_217_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_217_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_217<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 110, 115] => lookup_217_0(acc),
            [99, 115, 120] => lookup_217_1(acc),
            [102, 97, 110, 116, 97, 115, 121, 108, 101, 97, 103, 117, 101] => lookup_217_2(acc),
            [102, 116, 112, 97, 99, 99, 101, 115, 115] => lookup_217_3(acc),
            [103, 97, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_217_4(acc),
            [109, 121, 112, 104, 111, 116, 111, 115] => lookup_217_5(acc),
            [115, 99, 114, 97, 112, 112, 105, 110, 103] => lookup_217_6(acc),
            [115, 112, 97, 119, 110] => lookup_217_7(info, labels, acc),
            [116, 119, 109, 97, 105, 108] => lookup_217_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_218_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_218<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_218_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_219() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_220() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_221() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_222_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_222<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_222_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_223() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_224() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_225() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_226_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_6_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_6_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_226_6_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_226_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 118, 99] => lookup_226_6_1(info, labels, acc),
            wild => lookup_226_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_226_7_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_7_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 108, 112, 49] => lookup_226_7_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_226_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 101] => lookup_226_7_0(info, labels, acc),
            [97, 112, 112, 101, 110, 103, 105, 110, 101] => lookup_226_7_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_226_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_226<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 105, 116, 101] => lookup_226_0(acc),
            [49, 50, 104, 112] => lookup_226_1(acc),
            [50, 105, 120] => lookup_226_2(acc),
            [52, 108, 105, 109, 97] => lookup_226_3(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_226_4(acc),
            [100, 110, 115, 107, 105, 110, 103] => lookup_226_5(acc),
            [102, 105, 114, 101, 110, 101, 116] => lookup_226_6(info, labels, acc),
            [102, 108, 111, 119] => lookup_226_7(info, labels, acc),
            [103, 111, 116, 100, 110, 115] => lookup_226_8(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_226_9(acc),
            [108, 105, 110, 107, 121, 97, 114, 100, 45, 99, 108, 111, 117, 100] => {
                lookup_226_10(acc)
            }
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_226_11(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_226_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_227() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_228() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_229() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_230() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_231() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_232() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_233() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_234() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_235() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_236() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_237_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_237_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_237<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_237_0(acc),
            [97, 115, 115, 111] => lookup_237_1(acc),
            [97, 195, 169, 114, 111, 112, 111, 114, 116] => lookup_237_2(acc),
            [99, 111] => lookup_237_3(acc),
            [99, 111, 109] => lookup_237_4(acc),
            [101, 100] => lookup_237_5(acc),
            [101, 100, 117] => lookup_237_6(acc),
            [102, 105, 110] => lookup_237_7(acc),
            [103, 111] => lookup_237_8(acc),
            [103, 111, 117, 118] => lookup_237_9(acc),
            [105, 110, 116] => lookup_237_10(acc),
            [109, 100] => lookup_237_11(acc),
            [110, 101, 116] => lookup_237_12(acc),
            [110, 108] => lookup_237_13(acc),
            [111, 114] => lookup_237_14(acc),
            [111, 114, 103] => lookup_237_15(acc),
            [112, 114, 101, 115, 115, 101] => lookup_237_16(acc),
            [120, 110, 45, 45, 97, 114, 111, 112, 111, 114, 116, 45, 98, 121, 97] => {
                lookup_237_17(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_238() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_239() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_240() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_241() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_242() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_243() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_244() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_245() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_246_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_246_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_246<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [119, 119, 119] => lookup_246_0(acc),
            wild => lookup_246_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_247_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_247_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_247<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_247_0(acc),
            [99, 111] => lookup_247_1(acc),
            [103, 111, 98] => lookup_247_2(acc),
            [103, 111, 118] => lookup_247_3(acc),
            [109, 105, 108] => lookup_247_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_248() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_249() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_250() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_251() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_252() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_253() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_254_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [101, 115, 45, 49] => lookup_254_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_254_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_254_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_254_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 105, 112] => lookup_254_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_7_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_7_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116, 49] => lookup_254_7_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_7_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117, 114] => lookup_254_7_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [97, 114, 117, 98, 97] => lookup_254_7_0(info, labels, acc),
            [105, 116, 49] => lookup_254_7_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 115] => lookup_254_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_12_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_254_12_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_254_13_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_254_13_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_254_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_14_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 110] => lookup_254_14_0(acc),
            [117, 107] => lookup_254_14_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_16<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 107] => lookup_254_16_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_18_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_18_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 97] => lookup_254_18_0(acc),
            [117, 107] => lookup_254_18_1(acc),
            [117, 115] => lookup_254_18_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_19_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [102, 114, 45, 112, 97, 114, 45, 49] => lookup_254_19_0_0(acc),
            [102, 114, 45, 112, 97, 114, 45, 50] => lookup_254_19_0_1(acc),
            [110, 108, 45, 97, 109, 115, 45, 49] => lookup_254_19_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_19_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_1_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 110, 99, 116, 105, 111, 110, 115] => lookup_254_19_1_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_19_1_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_1_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 100, 101, 115] => lookup_254_19_1_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_19_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_1_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_1_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [102, 110, 99] => lookup_254_19_1_0(labels, acc),
            [107, 56, 115] => lookup_254_19_1_1(labels, acc),
            [115, 51] => lookup_254_19_1_2(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_254_19_1_3(acc),
            [119, 104, 109] => lookup_254_19_1_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_19_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 105, 118] => lookup_254_19_2_0(acc),
            [112, 117, 98] => lookup_254_19_2_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_19_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_4_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_4_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 100, 101, 115] => lookup_254_19_4_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_19_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_4_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [107, 56, 115] => lookup_254_19_4_0(labels, acc),
            [115, 51] => lookup_254_19_4_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_254_19_4_2(acc),
            [119, 104, 109] => lookup_254_19_4_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_19_5_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_5_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 100, 101, 115] => lookup_254_19_5_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_19_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [107, 56, 115] => lookup_254_19_5_0(labels, acc),
            [115, 51] => lookup_254_19_5_1(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_254_19_5_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_19_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_19<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 101, 109, 101, 116, 97, 108] => lookup_254_19_0(info, labels, acc),
            [102, 114, 45, 112, 97, 114] => lookup_254_19_1(info, labels, acc),
            [105, 110, 115, 116, 97, 110, 99, 101, 115] => lookup_254_19_2(info, labels, acc),
            [107, 56, 115] => lookup_254_19_3(acc),
            [110, 108, 45, 97, 109, 115] => lookup_254_19_4(info, labels, acc),
            [112, 108, 45, 119, 97, 119] => lookup_254_19_5(info, labels, acc),
            [115, 99, 97, 108, 101, 98, 111, 111, 107] => lookup_254_19_6(acc),
            [115, 109, 97, 114, 116, 108, 97, 98, 101, 108, 105, 110, 103] => lookup_254_19_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_20_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_254_20_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_254_21_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_254_21_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_254_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 104] => lookup_254_23_0(acc),
            [100, 101] => lookup_254_23_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_254_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_254<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 120, 97, 114, 110, 101, 116] => lookup_254_0(info, labels, acc),
            [98, 97, 110, 122, 97, 105] => lookup_254_1(info, labels, acc),
            [100, 105, 97, 100, 101, 109] => lookup_254_2(acc),
            [101, 108, 101, 109, 101, 110, 116, 111, 114] => lookup_254_3(acc),
            [101, 110, 99, 111, 119, 97, 121] => lookup_254_4(info, labels, acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_254_5(info, labels, acc),
            [106, 101, 108, 101] => lookup_254_6(acc),
            [106, 101, 110, 118, 45, 97, 114, 117, 98, 97] => lookup_254_7(info, labels, acc),
            [106, 111, 116, 101, 108, 117, 108, 117] => lookup_254_8(acc),
            [107, 101, 108, 105, 119, 101, 98] => lookup_254_9(labels, acc),
            [107, 117, 108, 101, 117, 118, 101, 110] => lookup_254_10(acc),
            [108, 105, 110, 107, 121, 97, 114, 100] => lookup_254_11(acc),
            [109, 97, 103, 101, 110, 116, 111, 115, 105, 116, 101] => {
                lookup_254_12(info, labels, acc)
            }
            [111, 110, 45, 114, 97, 110, 99, 104, 101, 114] => lookup_254_13(info, labels, acc),
            [111, 120, 97] => lookup_254_14(labels, acc),
            [112, 101, 114, 115, 112, 101, 99, 116, 97] => lookup_254_15(acc),
            [112, 114, 105, 109, 101, 116, 101, 108] => lookup_254_16(labels, acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_254_17(acc),
            [114, 101, 99, 108, 97, 105, 109] => lookup_254_18(info, labels, acc),
            [115, 99, 119] => lookup_254_19(info, labels, acc),
            [115, 101, 110, 115, 105, 111, 115, 105, 116, 101] => lookup_254_20(info, labels, acc),
            [115, 116, 97, 116, 105, 99, 115] => lookup_254_21(info, labels, acc),
            [116, 114, 97, 102, 102, 105, 99, 112, 108, 101, 120] => lookup_254_22(acc),
            [116, 114, 101, 110, 100, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_254_23(info, labels, acc)
            }
            [117, 114, 111, 119, 110] => lookup_254_24(acc),
            [118, 97, 112, 111, 114] => lookup_254_25(acc),
            [118, 111, 111, 114, 108, 111, 112, 101, 114] => lookup_254_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_255_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_255_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_255_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_255<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_255_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_255_1(acc),
            [106, 101, 108, 101] => lookup_255_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_256() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_257<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_257_0(acc),
            [99, 111, 109] => lookup_257_1(acc),
            [103, 111, 118] => lookup_257_2(acc),
            [110, 101, 116] => lookup_257_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_4_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_4_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_258_4_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_4_0_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_4_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_258_4_0_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_258_4_0_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_4_0_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_4_0_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_258_4_0_2_0(acc),
            [99, 110, 45, 110, 111, 114, 116, 104, 119, 101, 115, 116, 45, 49] => {
                lookup_258_4_0_2_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_4_0_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_4_0_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_258_4_0_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_258_4_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_258_4_0_0(info, labels, acc),
            [99, 111, 109, 112, 117, 116, 101] => lookup_258_4_0_1(info, labels, acc),
            [101, 98] => lookup_258_4_0_2(info, labels, acc),
            [101, 108, 98] => lookup_258_4_0_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_258_4_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_258_32<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 105, 114, 101, 99, 116] => lookup_258_32_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_258_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_258<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_258_0(acc),
            [97, 104] => lookup_258_1(acc),
            [98, 106] => lookup_258_2(acc),
            [99, 97, 110, 118, 97, 45, 97, 112, 112, 115] => lookup_258_3(acc),
            [99, 111, 109] => lookup_258_4(labels, acc),
            [99, 113] => lookup_258_5(acc),
            [101, 100, 117] => lookup_258_6(acc),
            [102, 106] => lookup_258_7(acc),
            [103, 100] => lookup_258_8(acc),
            [103, 111, 118] => lookup_258_9(acc),
            [103, 115] => lookup_258_10(acc),
            [103, 120] => lookup_258_11(acc),
            [103, 122] => lookup_258_12(acc),
            [104, 97] => lookup_258_13(acc),
            [104, 98] => lookup_258_14(acc),
            [104, 101] => lookup_258_15(acc),
            [104, 105] => lookup_258_16(acc),
            [104, 107] => lookup_258_17(acc),
            [104, 108] => lookup_258_18(acc),
            [104, 110] => lookup_258_19(acc),
            [105, 110, 115, 116, 97, 110, 116, 99, 108, 111, 117, 100] => lookup_258_20(acc),
            [106, 108] => lookup_258_21(acc),
            [106, 115] => lookup_258_22(acc),
            [106, 120] => lookup_258_23(acc),
            [108, 110] => lookup_258_24(acc),
            [109, 105, 108] => lookup_258_25(acc),
            [109, 111] => lookup_258_26(acc),
            [110, 101, 116] => lookup_258_27(acc),
            [110, 109] => lookup_258_28(acc),
            [110, 120] => lookup_258_29(acc),
            [111, 114, 103] => lookup_258_30(acc),
            [113, 104] => lookup_258_31(acc),
            [113, 117, 105, 99, 107, 99, 111, 110, 110, 101, 99, 116] => {
                lookup_258_32(info, labels, acc)
            }
            [115, 99] => lookup_258_33(acc),
            [115, 100] => lookup_258_34(acc),
            [115, 104] => lookup_258_35(acc),
            [115, 110] => lookup_258_36(acc),
            [115, 120] => lookup_258_37(acc),
            [116, 106] => lookup_258_38(acc),
            [116, 119] => lookup_258_39(acc),
            [120, 106] => lookup_258_40(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_258_41(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_258_42(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_258_43(acc),
            [120, 122] => lookup_258_44(acc),
            [121, 110] => lookup_258_45(acc),
            [122, 106] => lookup_258_46(acc),
            [229, 133, 172, 229, 143, 184] => lookup_258_47(acc),
            [231, 182, 178, 231, 181, 161] => lookup_258_48(acc),
            [231, 189, 145, 231, 187, 156] => lookup_258_49(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_259_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_259_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_18_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_259_18_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_259_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_259_20_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_259_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_259_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_259<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_259_0(acc),
            [99, 97, 114, 114, 100] => lookup_259_1(acc),
            [99, 111, 109] => lookup_259_2(labels, acc),
            [99, 114, 100] => lookup_259_3(acc),
            [101, 100, 117] => lookup_259_4(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 101, 100, 114, 101, 112, 108, 105, 116] => {
                lookup_259_5(labels, acc)
            }
            [102, 105, 114, 109] => lookup_259_6(acc),
            [103, 111, 118] => lookup_259_7(acc),
            [105, 110, 102, 111] => lookup_259_8(acc),
            [105, 110, 116] => lookup_259_9(acc),
            [108, 101, 97, 100, 112, 97, 103, 101, 115] => lookup_259_10(acc),
            [108, 112, 97, 103, 101, 115] => lookup_259_11(acc),
            [109, 105, 108] => lookup_259_12(acc),
            [109, 121, 112, 105] => lookup_259_13(acc),
            [110, 52, 116] => lookup_259_14(acc),
            [110, 101, 116] => lookup_259_15(acc),
            [110, 111, 109] => lookup_259_16(acc),
            [111, 114, 103] => lookup_259_17(acc),
            [111, 116, 97, 112] => lookup_259_18(info, labels, acc),
            [114, 101, 99] => lookup_259_19(acc),
            [114, 101, 112, 108] => lookup_259_20(labels, acc),
            [115, 117, 112, 97, 98, 97, 115, 101] => lookup_259_21(acc),
            [119, 101, 98] => lookup_259_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_260() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_261_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_261_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_261_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_261<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 119, 111] => lookup_261_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_262() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_263() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_264() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_265_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_6_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_6_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_6_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_265_6_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_0_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_0_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_0_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_1_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_1_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_1_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_1_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_1_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_1_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_2_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_2_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_2_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_2_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_2_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_265_12_2_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_2_0(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_265_12_2_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_3_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_3_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_3_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_3_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_3_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_3_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_265_12_3_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_3_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_3_0(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_265_12_3_1(info, labels, acc),
            [115, 51] => lookup_265_12_3_2(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_265_12_3_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_4_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_4_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_4_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_4_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_4_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_4_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_5_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_5_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_5_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_5_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_5_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_5_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_5_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_265_12_5_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_5_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_5_0(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_265_12_5_1(info, labels, acc),
            [115, 51] => lookup_265_12_5_2(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_265_12_5_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_6_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_6_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_6_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_6_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_6_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_6_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_6_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_265_12_6_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_6_0(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_265_12_6_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_7_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_7_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_7_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_7_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_7_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_7_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_7_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_265_12_7_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_7_0(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_265_12_7_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_8_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_8_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_8_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_8_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_8_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_8_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_8_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_265_12_8_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_8_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_8_0(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_265_12_8_1(info, labels, acc),
            [115, 51] => lookup_265_12_8_2(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_265_12_8_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_9_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_12_9_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_10_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_12_10_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_11_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_12_11_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_12_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_12_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_12_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_12_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_12_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_12_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_12_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_265_12_12_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_12_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_12_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_12_0(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_265_12_12_1(info, labels, acc),
            [115, 51] => lookup_265_12_12_2(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_265_12_12_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_13_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_13_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_13_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_13_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_13_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_13_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_14_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_14_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_14_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_14_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_14_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_14_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_15_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_15_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_15_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_15_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_15_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_15_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_15_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_265_12_15_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_15<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_15_0(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_265_12_15_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_16_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_16_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_16_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_16_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_16_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_16_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_16_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_265_12_16_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_16_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_16_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_16_0(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_265_12_16_1(info, labels, acc),
            [115, 51] => lookup_265_12_16_2(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_265_12_16_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_17_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_17_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_17_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_17_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_17_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_17_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_17_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_265_12_17_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_17_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_17_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_17_0(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_265_12_17_1(info, labels, acc),
            [115, 51] => lookup_265_12_17_2(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_265_12_17_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_18_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_18_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_18_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_18_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_18_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_18_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_45_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_45_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_45_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_45_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_45_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_45_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_45_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_265_12_45_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_45<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_45_0(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_265_12_45_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_46_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_46_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_46_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_46_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_46_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_46_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_46_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_265_12_46_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_46<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_46_0(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_265_12_46_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_47_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_47_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_47_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_47_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_47_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_47_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_47_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_265_12_47_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_47_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_47_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_47<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_47_0(info, labels, acc),
            [100, 117, 97, 108, 115, 116, 97, 99, 107] => lookup_265_12_47_1(info, labels, acc),
            [115, 51] => lookup_265_12_47_2(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101] => lookup_265_12_47_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_48_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_48_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_48_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_48_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_48_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_48<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_48_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_49_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_49_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_12_49_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [118, 102, 115] => lookup_265_12_49_0_0(acc),
            [119, 101, 98, 118, 105, 101, 119, 45, 97, 115, 115, 101, 116, 115] => {
                lookup_265_12_49_0_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12_49<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 57] => lookup_265_12_49_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [97, 102, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_265_12_0(info, labels, acc),
            [97, 112, 45, 101, 97, 115, 116, 45, 49] => lookup_265_12_1(info, labels, acc),
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_265_12_2(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_265_12_3(info, labels, acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_265_12_4(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_265_12_5(info, labels, acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_265_12_6(info, labels, acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_265_12_7(info, labels, acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_265_12_8(info, labels, acc)
            }
            [99, 111, 109, 112, 117, 116, 101] => lookup_265_12_9(info, labels, acc),
            [99, 111, 109, 112, 117, 116, 101, 45, 49] => lookup_265_12_10(info, labels, acc),
            [101, 108, 98] => lookup_265_12_11(info, labels, acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_265_12_12(info, labels, acc)
            }
            [101, 117, 45, 110, 111, 114, 116, 104, 45, 49] => lookup_265_12_13(info, labels, acc),
            [101, 117, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_265_12_14(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_265_12_15(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_265_12_16(info, labels, acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_265_12_17(info, labels, acc),
            [109, 101, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_265_12_18(info, labels, acc),
            [115, 51] => lookup_265_12_19(acc),
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_265_12_20(acc)
            }
            [115, 51, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_265_12_21(acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_265_12_22(acc),
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_265_12_23(acc)
            }
            [115, 51, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_265_12_24(acc)
            }
            [115, 51, 45, 99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_265_12_25(acc)
            }
            [115, 51, 45, 101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => {
                lookup_265_12_26(acc)
            }
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_265_12_27(acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_265_12_28(acc),
            [115, 51, 45, 101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_265_12_29(acc),
            [115, 51, 45, 101, 120, 116, 101, 114, 110, 97, 108, 45, 49] => lookup_265_12_30(acc),
            [115, 51, 45, 102, 105, 112, 115, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_265_12_31(acc)
            }
            [115, 51, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_265_12_32(acc),
            [115, 51, 45, 117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_265_12_33(acc),
            [115, 51, 45, 117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_265_12_34(acc)
            }
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_265_12_35(acc),
            [115, 51, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_265_12_36(acc),
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_265_12_37(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_265_12_38(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_265_12_39(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 101, 117, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_265_12_40(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 115, 97, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_265_12_41(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 101, 97, 115, 116, 45, 49] => {
                lookup_265_12_42(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 49] => {
                lookup_265_12_43(acc)
            }
            [115, 51, 45, 119, 101, 98, 115, 105, 116, 101, 45, 117, 115, 45, 119, 101, 115, 116, 45, 50] => {
                lookup_265_12_44(acc)
            }
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_265_12_45(info, labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_265_12_46(labels, acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_265_12_47(info, labels, acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_265_12_48(info, labels, acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_265_12_49(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_18_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_18_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 1usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_18_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_18<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_265_18_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_32_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_32<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108, 112, 104, 97] => lookup_265_32_0(acc),
            [98, 101, 116, 97] => lookup_265_32_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_48_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_48_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_48_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_48_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_48_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_48_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_48_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_48_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_48_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_48<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [98, 117, 105, 108, 100, 101, 114] => lookup_265_48_0(info, labels, acc),
            [100, 101, 118, 45, 98, 117, 105, 108, 100, 101, 114] => {
                lookup_265_48_1(info, labels, acc)
            }
            [115, 116, 103, 45, 98, 117, 105, 108, 100, 101, 114] => {
                lookup_265_48_2(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_50_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_50_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_50_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_50_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_50_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_50_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_50_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_50_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_50_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_50_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_50<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 99, 105] => lookup_265_50_1(info, labels, acc),
            [111, 99, 112] => lookup_265_50_2(info, labels, acc),
            [111, 99, 115] => lookup_265_50_3(info, labels, acc),
            wild => lookup_265_50_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_52_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_52<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_265_52_0(acc),
            [105, 110, 115, 116, 97, 110, 99, 101] => lookup_265_52_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_63_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_63<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_63_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_64_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_64<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_64_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_96<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_265_96_0(acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_265_96_1(acc)
            }
            [97, 112, 45, 110, 111, 114, 116, 104, 101, 97, 115, 116, 45, 51] => {
                lookup_265_96_2(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 45, 49] => lookup_265_96_3(acc),
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 49] => {
                lookup_265_96_4(acc)
            }
            [97, 112, 45, 115, 111, 117, 116, 104, 101, 97, 115, 116, 45, 50] => {
                lookup_265_96_5(acc)
            }
            [99, 97, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_265_96_6(acc),
            [101, 117, 45, 99, 101, 110, 116, 114, 97, 108, 45, 49] => lookup_265_96_7(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 49] => lookup_265_96_8(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 50] => lookup_265_96_9(acc),
            [101, 117, 45, 119, 101, 115, 116, 45, 51] => lookup_265_96_10(acc),
            [115, 97, 45, 101, 97, 115, 116, 45, 49] => lookup_265_96_11(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 49] => lookup_265_96_12(acc),
            [117, 115, 45, 101, 97, 115, 116, 45, 50] => lookup_265_96_13(acc),
            [117, 115, 45, 103, 111, 118, 45, 119, 101, 115, 116, 45, 49] => lookup_265_96_14(acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 49] => lookup_265_96_15(acc),
            [117, 115, 45, 119, 101, 115, 116, 45, 50] => lookup_265_96_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_103_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_103_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_103_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_103_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_103_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_103_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_103_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_103_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_103<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [101, 117, 45, 49] => lookup_265_103_0(acc),
            [101, 117, 45, 50] => lookup_265_103_1(acc),
            [101, 117, 45, 51] => lookup_265_103_2(acc),
            [101, 117, 45, 52] => lookup_265_103_3(acc),
            [117, 115, 45, 49] => lookup_265_103_4(acc),
            [117, 115, 45, 50] => lookup_265_103_5(acc),
            [117, 115, 45, 51] => lookup_265_103_6(acc),
            [117, 115, 45, 52] => lookup_265_103_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_108_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_108<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_265_108_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_186_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_186<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 18usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_265_186_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_188_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_188_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_188<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [114, 97, 103, 45, 99, 108, 111, 117, 100] => lookup_265_188_0(acc),
            [114, 97, 103, 45, 99, 108, 111, 117, 100, 45, 99, 104] => lookup_265_188_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_192_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_192_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_192<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99, 108, 111, 117, 100] => lookup_265_192_0(acc),
            [106, 99, 108, 111, 117, 100, 45, 118, 101, 114, 45, 106, 112, 99] => {
                lookup_265_192_1(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_255_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_255<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_265_255_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_256_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_256_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_256_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_256<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 110, 115] => lookup_265_256_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_266_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_266_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_266_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_266_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_266<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [109, 101, 109, 98, 101, 114, 115] => lookup_265_266_0(acc),
            [110, 111, 100, 101, 98, 97, 108, 97, 110, 99, 101, 114] => {
                lookup_265_266_1(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_267_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_267<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_267_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_268_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_268<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 17usize;
    match labels.next() {
        Some(label) => match label {
            [105, 112] => lookup_265_268_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_269_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_269<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_265_269_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_273_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_273<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_265_273_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_276_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_276<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_265_276_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_291_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_291_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_291_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_291_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_291_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_291_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_291_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_291_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_291_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_291_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_291_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_291<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [99, 97, 114, 97, 99, 97, 108] => lookup_265_291_0(acc),
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_265_291_1(acc),
            [102, 101, 110, 116, 105, 103, 101, 114] => lookup_265_291_2(acc),
            [108, 121, 110, 120] => lookup_265_291_3(acc),
            [111, 99, 101, 108, 111, 116] => lookup_265_291_4(acc),
            [111, 110, 99, 105, 108, 108, 97] => lookup_265_291_5(acc),
            [111, 110, 122, 97] => lookup_265_291_6(acc),
            [115, 112, 104, 105, 110, 120] => lookup_265_291_7(acc),
            [118, 115] => lookup_265_291_8(acc),
            [120] => lookup_265_291_9(acc),
            [121, 97, 108, 105] => lookup_265_291_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_298_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_298<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_265_298_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_299_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_299<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 21usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_265_299_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_312_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_312<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_312_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_320_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_320<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [120, 101, 110] => lookup_265_320_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_322_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_322<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_265_322_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_328_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_328<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_328_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_331_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_331<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_265_331_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_369_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_369<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 105] => lookup_265_369_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_372_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_372<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 105, 116, 101] => lookup_265_372_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_381_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_381<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111] => lookup_265_381_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_387_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_387<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_265_387_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_265_388_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_388_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_388_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_388<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 100] => lookup_265_388_0(acc),
            [108, 111, 110] => lookup_265_388_1(acc),
            [114, 121, 100] => lookup_265_388_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_390_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_390<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_265_390_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_397_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_397<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 115] => lookup_265_397_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_402_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_402_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_402<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117, 50] => lookup_265_402_0(acc),
            [117, 50, 45, 108, 111, 99, 97, 108] => lookup_265_402_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_265_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_265<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48, 48, 49, 119, 119, 119] => lookup_265_0(acc),
            [48, 101, 109, 109] => lookup_265_1(info, labels, acc),
            [49, 56, 48, 114] => lookup_265_2(acc),
            [49, 107, 97, 112, 112] => lookup_265_3(acc),
            [51, 117, 116, 105, 108, 105, 116, 105, 101, 115] => lookup_265_4(acc),
            [52, 117] => lookup_265_5(acc),
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => {
                lookup_265_6(labels, acc)
            }
            [97, 102, 114, 105, 99, 97] => lookup_265_7(acc),
            [97, 105, 114, 107, 105, 116, 97, 112, 112, 115] => lookup_265_8(acc),
            [97, 105, 114, 107, 105, 116, 97, 112, 112, 115, 45, 97, 117] => lookup_265_9(acc),
            [97, 105, 118, 101, 110, 99, 108, 111, 117, 100] => lookup_265_10(acc),
            [97, 108, 112, 104, 97, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_265_11(acc)
            }
            [97, 109, 97, 122, 111, 110, 97, 119, 115] => lookup_265_12(info, labels, acc),
            [97, 109, 115, 99, 111, 109, 112, 117, 116, 101] => lookup_265_13(acc),
            [97, 112, 112, 99, 104, 105, 122, 105] => lookup_265_14(acc),
            [97, 112, 112, 108, 105, 110, 122, 105] => lookup_265_15(acc),
            [97, 112, 112, 115, 112, 97, 99, 101, 104, 111, 115, 116, 101, 100] => {
                lookup_265_16(acc)
            }
            [97, 112, 112, 115, 112, 97, 99, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_265_17(acc)
            }
            [97, 112, 112, 115, 112, 111, 116] => lookup_265_18(labels, acc),
            [97, 114] => lookup_265_19(acc),
            [97, 117, 116, 104, 103, 101, 97, 114, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_265_20(acc)
            }
            [97, 117, 116, 104, 103, 101, 97, 114, 97, 112, 112, 115] => lookup_265_21(acc),
            [97, 119, 115, 103, 108, 111, 98, 97, 108, 97, 99, 99, 101, 108, 101, 114, 97, 116, 111, 114] => {
                lookup_265_22(acc)
            }
            [97, 119, 115, 109, 112, 112, 108] => lookup_265_23(acc),
            [98, 97, 108, 101, 110, 97, 45, 100, 101, 118, 105, 99, 101, 115] => lookup_265_24(acc),
            [98, 97, 114, 115, 121, 99, 101, 110, 116, 101, 114] => lookup_265_25(acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_265_26(acc),
            [98, 101, 116, 97, 105, 110, 97, 98, 111, 120] => lookup_265_27(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_265_28(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_265_29(acc),
            [98, 108, 111, 103, 115, 121, 116, 101] => lookup_265_30(acc),
            [98, 108, 111, 120, 99, 109, 115] => lookup_265_31(acc),
            [98, 111, 117, 110, 116, 121, 45, 102, 117, 108, 108] => lookup_265_32(labels, acc),
            [98, 111, 117, 116, 105, 114] => lookup_265_33(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_265_34(acc),
            [98, 114] => lookup_265_35(acc),
            [98, 117, 105, 108, 116, 119, 105, 116, 104, 100, 97, 114, 107] => lookup_265_36(acc),
            [99, 97, 102, 106, 115] => lookup_265_37(acc),
            [99, 97, 110, 118, 97, 45, 97, 112, 112, 115] => lookup_265_38(acc),
            [99, 101, 99, 104, 105, 114, 101] => lookup_265_39(acc),
            [99, 102, 45, 105, 112, 102, 115] => lookup_265_40(acc),
            [99, 105, 115, 99, 111, 102, 114, 101, 97, 107] => lookup_265_41(acc),
            [99, 108, 105, 99, 107, 101, 116, 99, 108, 111, 117, 100] => lookup_265_42(acc),
            [99, 108, 111, 117, 100, 99, 111, 110, 116, 114, 111, 108, 97, 112, 112] => {
                lookup_265_43(acc)
            }
            [99, 108, 111, 117, 100, 99, 111, 110, 116, 114, 111, 108, 108, 101, 100] => {
                lookup_265_44(acc)
            }
            [99, 108, 111, 117, 100, 102, 108, 97, 114, 101, 45, 105, 112, 102, 115] => {
                lookup_265_45(acc)
            }
            [99, 110] => lookup_265_46(acc),
            [99, 111] => lookup_265_47(acc),
            [99, 111, 100, 101] => lookup_265_48(info, labels, acc),
            [99, 111, 100, 101, 115, 112, 111, 116] => lookup_265_49(acc),
            [99, 117, 115, 116, 111, 109, 101, 114, 45, 111, 99, 105] => {
                lookup_265_50(info, labels, acc)
            }
            [100, 97, 109, 110, 115, 101, 114, 118, 101, 114] => lookup_265_51(acc),
            [100, 97, 116, 97, 100, 101, 116, 101, 99, 116] => lookup_265_52(info, labels, acc),
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_265_53(acc),
            [100, 97, 116, 116, 111, 114, 101, 108, 97, 121] => lookup_265_54(acc),
            [100, 97, 116, 116, 111, 119, 101, 98] => lookup_265_55(acc),
            [100, 100, 110, 115, 53] => lookup_265_56(acc),
            [100, 100, 110, 115, 102, 114, 101, 101] => lookup_265_57(acc),
            [100, 100, 110, 115, 103, 101, 101, 107] => lookup_265_58(acc),
            [100, 100, 110, 115, 107, 105, 110, 103] => lookup_265_59(acc),
            [100, 100, 110, 115, 108, 105, 118, 101] => lookup_265_60(acc),
            [100, 101] => lookup_265_61(acc),
            [100, 101, 118, 45, 109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => {
                lookup_265_62(acc)
            }
            [100, 101, 118, 99, 100, 110, 97, 99, 99, 101, 115, 115, 111] => {
                lookup_265_63(info, labels, acc)
            }
            [100, 105, 103, 105, 116, 97, 108, 111, 99, 101, 97, 110, 115, 112, 97, 99, 101, 115] => {
                lookup_265_64(info, labels, acc)
            }
            [100, 105, 115, 99, 111, 114, 100, 115, 97, 121, 115] => lookup_265_65(acc),
            [100, 105, 115, 99, 111, 114, 100, 115, 101, 122] => lookup_265_66(acc),
            [100, 105, 116, 99, 104, 121, 111, 117, 114, 105, 112] => lookup_265_67(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_265_68(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_265_69(acc),
            [100, 110, 115, 105, 115, 107, 105, 110, 107, 121] => lookup_265_70(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_265_71(acc),
            [100, 111, 106, 105, 110] => lookup_265_72(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_265_73(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_265_74(acc),
            [100, 111, 112, 97, 97, 115] => lookup_265_75(acc),
            [100, 114, 97, 121, 100, 100, 110, 115] => lookup_265_76(acc),
            [100, 114, 101, 97, 109, 104, 111, 115, 116, 101, 114, 115] => lookup_265_77(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_265_78(acc),
            [100, 121, 110, 45, 111, 45, 115, 97, 117, 114] => lookup_265_79(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_265_80(acc),
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 104, 111, 109, 101] => {
                lookup_265_81(acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 97, 116, 45, 119, 111, 114, 107] => {
                lookup_265_82(acc)
            }
            [100, 121, 110, 100, 110, 115, 45, 98, 108, 111, 103] => lookup_265_83(acc),
            [100, 121, 110, 100, 110, 115, 45, 102, 114, 101, 101] => lookup_265_84(acc),
            [100, 121, 110, 100, 110, 115, 45, 104, 111, 109, 101] => lookup_265_85(acc),
            [100, 121, 110, 100, 110, 115, 45, 105, 112] => lookup_265_86(acc),
            [100, 121, 110, 100, 110, 115, 45, 109, 97, 105, 108] => lookup_265_87(acc),
            [100, 121, 110, 100, 110, 115, 45, 111, 102, 102, 105, 99, 101] => lookup_265_88(acc),
            [100, 121, 110, 100, 110, 115, 45, 112, 105, 99, 115] => lookup_265_89(acc),
            [100, 121, 110, 100, 110, 115, 45, 114, 101, 109, 111, 116, 101] => lookup_265_90(acc),
            [100, 121, 110, 100, 110, 115, 45, 115, 101, 114, 118, 101, 114] => lookup_265_91(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 101, 98] => lookup_265_92(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 105, 107, 105] => lookup_265_93(acc),
            [100, 121, 110, 100, 110, 115, 45, 119, 111, 114, 107] => lookup_265_94(acc),
            [100, 121, 110, 110, 115] => lookup_265_95(acc),
            [101, 108, 97, 115, 116, 105, 99, 98, 101, 97, 110, 115, 116, 97, 108, 107] => {
                lookup_265_96(labels, acc)
            }
            [101, 110, 99, 111, 114, 101, 97, 112, 105] => lookup_265_97(acc),
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 105, 115, 111, 110] => {
                lookup_265_98(acc)
            }
            [101, 115, 116, 45, 97, 45, 108, 97, 45, 109, 97, 115, 105, 111, 110] => {
                lookup_265_99(acc)
            }
            [101, 115, 116, 45, 108, 101, 45, 112, 97, 116, 114, 111, 110] => lookup_265_100(acc),
            [101, 115, 116, 45, 109, 111, 110, 45, 98, 108, 111, 103, 117, 101, 117, 114] => {
                lookup_265_101(acc)
            }
            [101, 117] => lookup_265_102(acc),
            [101, 118, 101, 110, 110, 111, 100, 101] => lookup_265_103(info, labels, acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_265_104(acc),
            [102, 97, 115, 116, 108, 121, 45, 101, 100, 103, 101] => lookup_265_105(acc),
            [102, 97, 115, 116, 108, 121, 45, 116, 101, 114, 114, 97, 114, 105, 117, 109] => {
                lookup_265_106(acc)
            }
            [102, 97, 115, 116, 118, 112, 115, 45, 115, 101, 114, 118, 101, 114] => {
                lookup_265_107(acc)
            }
            [102, 98, 115, 98, 120] => lookup_265_108(info, labels, acc),
            [102, 105, 114, 101, 98, 97, 115, 101, 97, 112, 112] => lookup_265_109(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_265_110(acc)
            }
            [102, 108, 100, 114, 118] => lookup_265_111(acc),
            [102, 111, 114, 103, 101, 98, 108, 111, 99, 107, 115] => lookup_265_112(acc),
            [102, 114, 97, 109, 101, 114, 99, 97, 110, 118, 97, 115] => lookup_265_113(acc),
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_265_114(acc),
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_265_115(acc),
            [102, 114, 101, 101, 109, 121, 105, 112] => lookup_265_116(acc),
            [102, 114, 111, 109, 45, 97, 107] => lookup_265_117(acc),
            [102, 114, 111, 109, 45, 97, 108] => lookup_265_118(acc),
            [102, 114, 111, 109, 45, 97, 114] => lookup_265_119(acc),
            [102, 114, 111, 109, 45, 99, 97] => lookup_265_120(acc),
            [102, 114, 111, 109, 45, 99, 116] => lookup_265_121(acc),
            [102, 114, 111, 109, 45, 100, 99] => lookup_265_122(acc),
            [102, 114, 111, 109, 45, 100, 101] => lookup_265_123(acc),
            [102, 114, 111, 109, 45, 102, 108] => lookup_265_124(acc),
            [102, 114, 111, 109, 45, 103, 97] => lookup_265_125(acc),
            [102, 114, 111, 109, 45, 104, 105] => lookup_265_126(acc),
            [102, 114, 111, 109, 45, 105, 97] => lookup_265_127(acc),
            [102, 114, 111, 109, 45, 105, 100] => lookup_265_128(acc),
            [102, 114, 111, 109, 45, 105, 108] => lookup_265_129(acc),
            [102, 114, 111, 109, 45, 105, 110] => lookup_265_130(acc),
            [102, 114, 111, 109, 45, 107, 115] => lookup_265_131(acc),
            [102, 114, 111, 109, 45, 107, 121] => lookup_265_132(acc),
            [102, 114, 111, 109, 45, 109, 97] => lookup_265_133(acc),
            [102, 114, 111, 109, 45, 109, 100] => lookup_265_134(acc),
            [102, 114, 111, 109, 45, 109, 105] => lookup_265_135(acc),
            [102, 114, 111, 109, 45, 109, 110] => lookup_265_136(acc),
            [102, 114, 111, 109, 45, 109, 111] => lookup_265_137(acc),
            [102, 114, 111, 109, 45, 109, 115] => lookup_265_138(acc),
            [102, 114, 111, 109, 45, 109, 116] => lookup_265_139(acc),
            [102, 114, 111, 109, 45, 110, 99] => lookup_265_140(acc),
            [102, 114, 111, 109, 45, 110, 100] => lookup_265_141(acc),
            [102, 114, 111, 109, 45, 110, 101] => lookup_265_142(acc),
            [102, 114, 111, 109, 45, 110, 104] => lookup_265_143(acc),
            [102, 114, 111, 109, 45, 110, 106] => lookup_265_144(acc),
            [102, 114, 111, 109, 45, 110, 109] => lookup_265_145(acc),
            [102, 114, 111, 109, 45, 110, 118] => lookup_265_146(acc),
            [102, 114, 111, 109, 45, 111, 104] => lookup_265_147(acc),
            [102, 114, 111, 109, 45, 111, 107] => lookup_265_148(acc),
            [102, 114, 111, 109, 45, 111, 114] => lookup_265_149(acc),
            [102, 114, 111, 109, 45, 112, 97] => lookup_265_150(acc),
            [102, 114, 111, 109, 45, 112, 114] => lookup_265_151(acc),
            [102, 114, 111, 109, 45, 114, 105] => lookup_265_152(acc),
            [102, 114, 111, 109, 45, 115, 99] => lookup_265_153(acc),
            [102, 114, 111, 109, 45, 115, 100] => lookup_265_154(acc),
            [102, 114, 111, 109, 45, 116, 110] => lookup_265_155(acc),
            [102, 114, 111, 109, 45, 116, 120] => lookup_265_156(acc),
            [102, 114, 111, 109, 45, 117, 116] => lookup_265_157(acc),
            [102, 114, 111, 109, 45, 118, 97] => lookup_265_158(acc),
            [102, 114, 111, 109, 45, 118, 116] => lookup_265_159(acc),
            [102, 114, 111, 109, 45, 119, 97] => lookup_265_160(acc),
            [102, 114, 111, 109, 45, 119, 105] => lookup_265_161(acc),
            [102, 114, 111, 109, 45, 119, 118] => lookup_265_162(acc),
            [102, 114, 111, 109, 45, 119, 121] => lookup_265_163(acc),
            [103, 101, 101, 107, 103, 97, 108, 97, 120, 121] => lookup_265_164(acc),
            [103, 101, 110, 116, 97, 112, 112, 115] => lookup_265_165(acc),
            [103, 101, 110, 116, 108, 101, 110, 116, 97, 112, 105, 115] => lookup_265_166(acc),
            [103, 101, 116, 109, 121, 105, 112] => lookup_265_167(acc),
            [103, 105, 105, 122, 101] => lookup_265_168(acc),
            [103, 105, 116, 104, 117, 98, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_265_169(acc)
            }
            [103, 108, 101, 101, 122, 101] => lookup_265_170(acc),
            [103, 111, 111, 103, 108, 101, 97, 112, 105, 115] => lookup_265_171(acc),
            [103, 111, 111, 103, 108, 101, 99, 111, 100, 101] => lookup_265_172(acc),
            [103, 111, 116, 100, 110, 115] => lookup_265_173(acc),
            [103, 111, 116, 112, 97, 110, 116, 104, 101, 111, 110] => lookup_265_174(acc),
            [103, 114] => lookup_265_175(acc),
            [104, 101, 97, 108, 116, 104, 45, 99, 97, 114, 101, 114, 101, 102, 111, 114, 109] => {
                lookup_265_176(acc)
            }
            [104, 101, 114, 111, 107, 117, 97, 112, 112] => lookup_265_177(acc),
            [104, 101, 114, 111, 107, 117, 115, 115, 108] => lookup_265_178(acc),
            [104, 105, 100, 111, 114, 97] => lookup_265_179(acc),
            [104, 107] => lookup_265_180(acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_265_181(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_265_182(acc),
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 109, 97, 99] => {
                lookup_265_183(acc)
            }
            [104, 111, 109, 101, 115, 101, 99, 117, 114, 105, 116, 121, 112, 99] => {
                lookup_265_184(acc)
            }
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_265_185(acc),
            [104, 111, 115, 116, 101, 100, 45, 98, 121, 45, 112, 114, 101, 118, 105, 100, 101, 114] => {
                lookup_265_186(info, labels, acc)
            }
            [104, 111, 115, 116, 101, 100, 112, 105] => lookup_265_187(acc),
            [104, 111, 115, 116, 101, 117, 114] => lookup_265_188(info, labels, acc),
            [104, 111, 116, 101, 108, 119, 105, 116, 104, 102, 108, 105, 103, 104, 116] => {
                lookup_265_189(acc)
            }
            [104, 117] => lookup_265_190(acc),
            [105, 97, 109, 97, 108, 108, 97, 109, 97] => lookup_265_191(acc),
            [105, 107, 45, 115, 101, 114, 118, 101, 114] => lookup_265_192(info, labels, acc),
            [105, 109, 112, 101, 114, 116, 114, 105, 120] => lookup_265_193(acc),
            [105, 109, 112, 101, 114, 116, 114, 105, 120, 99, 100, 110] => lookup_265_194(acc),
            [105, 115, 45, 97, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => lookup_265_195(acc),
            [105, 115, 45, 97, 45, 98, 108, 111, 103, 103, 101, 114] => lookup_265_196(acc),
            [105, 115, 45, 97, 45, 98, 111, 111, 107, 107, 101, 101, 112, 101, 114] => {
                lookup_265_197(acc)
            }
            [105, 115, 45, 97, 45, 98, 117, 108, 108, 115, 45, 102, 97, 110] => lookup_265_198(acc),
            [105, 115, 45, 97, 45, 99, 97, 116, 101, 114, 101, 114] => lookup_265_199(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_265_200(acc),
            [105, 115, 45, 97, 45, 99, 111, 110, 115, 101, 114, 118, 97, 116, 105, 118, 101] => {
                lookup_265_201(acc)
            }
            [105, 115, 45, 97, 45, 99, 112, 97] => lookup_265_202(acc),
            [105, 115, 45, 97, 45, 99, 117, 98, 105, 99, 108, 101, 45, 115, 108, 97, 118, 101] => {
                lookup_265_203(acc)
            }
            [105, 115, 45, 97, 45, 100, 101, 109, 111, 99, 114, 97, 116] => lookup_265_204(acc),
            [105, 115, 45, 97, 45, 100, 101, 115, 105, 103, 110, 101, 114] => lookup_265_205(acc),
            [105, 115, 45, 97, 45, 100, 111, 99, 116, 111, 114] => lookup_265_206(acc),
            [105, 115, 45, 97, 45, 102, 105, 110, 97, 110, 99, 105, 97, 108, 97, 100, 118, 105, 115, 111, 114] => {
                lookup_265_207(acc)
            }
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_265_208(acc),
            [105, 115, 45, 97, 45, 103, 114, 101, 101, 110] => lookup_265_209(acc),
            [105, 115, 45, 97, 45, 103, 117, 114, 117] => lookup_265_210(acc),
            [105, 115, 45, 97, 45, 104, 97, 114, 100, 45, 119, 111, 114, 107, 101, 114] => {
                lookup_265_211(acc)
            }
            [105, 115, 45, 97, 45, 104, 117, 110, 116, 101, 114] => lookup_265_212(acc),
            [105, 115, 45, 97, 45, 108, 97, 110, 100, 115, 99, 97, 112, 101, 114] => {
                lookup_265_213(acc)
            }
            [105, 115, 45, 97, 45, 108, 97, 119, 121, 101, 114] => lookup_265_214(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 97, 108] => lookup_265_215(acc),
            [105, 115, 45, 97, 45, 108, 105, 98, 101, 114, 116, 97, 114, 105, 97, 110] => {
                lookup_265_216(acc)
            }
            [105, 115, 45, 97, 45, 108, 108, 97, 109, 97] => lookup_265_217(acc),
            [105, 115, 45, 97, 45, 109, 117, 115, 105, 99, 105, 97, 110] => lookup_265_218(acc),
            [105, 115, 45, 97, 45, 110, 97, 115, 99, 97, 114, 102, 97, 110] => lookup_265_219(acc),
            [105, 115, 45, 97, 45, 110, 117, 114, 115, 101] => lookup_265_220(acc),
            [105, 115, 45, 97, 45, 112, 97, 105, 110, 116, 101, 114] => lookup_265_221(acc),
            [105, 115, 45, 97, 45, 112, 101, 114, 115, 111, 110, 97, 108, 116, 114, 97, 105, 110, 101, 114] => {
                lookup_265_222(acc)
            }
            [105, 115, 45, 97, 45, 112, 104, 111, 116, 111, 103, 114, 97, 112, 104, 101, 114] => {
                lookup_265_223(acc)
            }
            [105, 115, 45, 97, 45, 112, 108, 97, 121, 101, 114] => lookup_265_224(acc),
            [105, 115, 45, 97, 45, 114, 101, 112, 117, 98, 108, 105, 99, 97, 110] => {
                lookup_265_225(acc)
            }
            [105, 115, 45, 97, 45, 114, 111, 99, 107, 115, 116, 97, 114] => lookup_265_226(acc),
            [105, 115, 45, 97, 45, 115, 111, 99, 105, 97, 108, 105, 115, 116] => {
                lookup_265_227(acc)
            }
            [105, 115, 45, 97, 45, 115, 116, 117, 100, 101, 110, 116] => lookup_265_228(acc),
            [105, 115, 45, 97, 45, 116, 101, 97, 99, 104, 101, 114] => lookup_265_229(acc),
            [105, 115, 45, 97, 45, 116, 101, 99, 104, 105, 101] => lookup_265_230(acc),
            [105, 115, 45, 97, 45, 116, 104, 101, 114, 97, 112, 105, 115, 116] => {
                lookup_265_231(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 99, 99, 111, 117, 110, 116, 97, 110, 116] => {
                lookup_265_232(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 111, 114] => lookup_265_233(acc),
            [105, 115, 45, 97, 110, 45, 97, 99, 116, 114, 101, 115, 115] => lookup_265_234(acc),
            [105, 115, 45, 97, 110, 45, 97, 110, 97, 114, 99, 104, 105, 115, 116] => {
                lookup_265_235(acc)
            }
            [105, 115, 45, 97, 110, 45, 97, 114, 116, 105, 115, 116] => lookup_265_236(acc),
            [105, 115, 45, 97, 110, 45, 101, 110, 103, 105, 110, 101, 101, 114] => {
                lookup_265_237(acc)
            }
            [105, 115, 45, 97, 110, 45, 101, 110, 116, 101, 114, 116, 97, 105, 110, 101, 114] => {
                lookup_265_238(acc)
            }
            [105, 115, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => lookup_265_239(acc),
            [105, 115, 45, 103, 111, 110, 101] => lookup_265_240(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 97, 110, 105, 109, 101] => lookup_265_241(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 115] => lookup_265_242(acc),
            [105, 115, 45, 105, 110, 116, 111, 45, 99, 97, 114, 116, 111, 111, 110, 115] => {
                lookup_265_243(acc)
            }
            [105, 115, 45, 105, 110, 116, 111, 45, 103, 97, 109, 101, 115] => lookup_265_244(acc),
            [105, 115, 45, 108, 101, 101, 116] => lookup_265_245(acc),
            [105, 115, 45, 110, 111, 116, 45, 99, 101, 114, 116, 105, 102, 105, 101, 100] => {
                lookup_265_246(acc)
            }
            [105, 115, 45, 115, 108, 105, 99, 107] => lookup_265_247(acc),
            [105, 115, 45, 117, 98, 101, 114, 108, 101, 101, 116] => lookup_265_248(acc),
            [105, 115, 45, 119, 105, 116, 104, 45, 116, 104, 101, 98, 97, 110, 100] => {
                lookup_265_249(acc)
            }
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_265_250(acc),
            [105, 115, 97, 45, 104, 111, 99, 107, 101, 121, 110, 117, 116] => lookup_265_251(acc),
            [105, 115, 115, 109, 97, 114, 116, 101, 114, 116, 104, 97, 110, 121, 111, 117] => {
                lookup_265_252(acc)
            }
            [105, 116] => lookup_265_253(acc),
            [106, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_265_254(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_265_255(info, labels, acc),
            [106, 111, 121, 101, 110, 116] => lookup_265_256(info, labels, acc),
            [106, 112, 110] => lookup_265_257(acc),
            [107, 97, 115, 115, 101, 114, 118, 101, 114] => lookup_265_258(acc),
            [107, 105, 108, 97, 116, 105, 114, 111, 110] => lookup_265_259(acc),
            [107, 111, 122, 111, 119] => lookup_265_260(acc),
            [107, 114] => lookup_265_261(acc),
            [107, 116, 105, 115, 116, 111, 114, 121] => lookup_265_262(acc),
            [108, 97, 100, 101, 115, 107] => lookup_265_263(acc),
            [108, 105, 107, 101, 115, 45, 112, 105, 101] => lookup_265_264(acc),
            [108, 105, 107, 101, 115, 99, 97, 110, 100, 121] => lookup_265_265(acc),
            [108, 105, 110, 111, 100, 101] => lookup_265_266(info, labels, acc),
            [108, 105, 110, 111, 100, 101, 111, 98, 106, 101, 99, 116, 115] => {
                lookup_265_267(info, labels, acc)
            }
            [108, 105, 110, 111, 100, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_265_268(info, labels, acc)
            }
            [108, 109, 112, 109] => lookup_265_269(info, labels, acc),
            [108, 111, 103, 111, 105, 112] => lookup_265_270(acc),
            [108, 111, 115, 101, 121, 111, 117, 114, 105, 112] => lookup_265_271(acc),
            [108, 112, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_265_272(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_265_273(info, labels, acc)
            }
            [109, 97, 122, 101, 112, 108, 97, 121] => lookup_265_274(acc),
            [109, 101, 115, 115, 119, 105, 116, 104, 100, 110, 115] => lookup_265_275(acc),
            [109, 101, 116, 101, 111, 114, 97, 112, 112] => lookup_265_276(labels, acc),
            [109, 101, 120] => lookup_265_277(acc),
            [109, 105, 110, 105, 115, 101, 114, 118, 101, 114] => lookup_265_278(acc),
            [109, 121, 97, 99, 116, 105, 118, 101, 100, 105, 114, 101, 99, 116, 111, 114, 121] => {
                lookup_265_279(acc)
            }
            [109, 121, 97, 115, 117, 115, 116, 111, 114] => lookup_265_280(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_265_281(acc),
            [109, 121, 100, 111, 98, 105, 115, 115] => lookup_265_282(acc),
            [109, 121, 100, 114, 111, 98, 111] => lookup_265_283(acc),
            [109, 121, 105, 112, 104, 111, 115, 116] => lookup_265_284(acc),
            [109, 121, 113, 110, 97, 112, 99, 108, 111, 117, 100] => lookup_265_285(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_265_286(acc)
            }
            [109, 121, 115, 104, 111, 112, 98, 108, 111, 99, 107, 115] => lookup_265_287(acc),
            [109, 121, 115, 104, 111, 112, 105, 102, 121] => lookup_265_288(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_265_289(acc),
            [109, 121, 116, 97, 98, 105, 116] => lookup_265_290(acc),
            [109, 121, 116, 104, 105, 99, 45, 98, 101, 97, 115, 116, 115] => {
                lookup_265_291(info, labels, acc)
            }
            [109, 121, 116, 117, 108, 101, 97, 112] => lookup_265_292(acc),
            [109, 121, 118, 110, 99] => lookup_265_293(acc),
            [110, 101, 97, 116, 45, 117, 114, 108] => lookup_265_294(acc),
            [110, 101, 116, 45, 102, 114, 101, 97, 107, 115] => lookup_265_295(acc),
            [110, 102, 115, 104, 111, 115, 116] => lookup_265_296(acc),
            [110, 111] => lookup_265_297(acc),
            [110, 111, 115, 112, 97, 109, 112, 114, 111, 120, 121] => {
                lookup_265_298(info, labels, acc)
            }
            [111, 98, 115, 101, 114, 118, 97, 98, 108, 101, 117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_265_299(info, labels, acc)
            }
            [111, 110, 45, 97, 112, 116, 105, 98, 108, 101] => lookup_265_300(acc),
            [111, 110, 102, 97, 98, 114, 105, 99, 97] => lookup_265_301(acc),
            [111, 110, 114, 101, 110, 100, 101, 114] => lookup_265_302(acc),
            [111, 110, 116, 104, 101, 119, 105, 102, 105] => lookup_265_303(acc),
            [111, 111, 103, 117, 121] => lookup_265_304(acc),
            [111, 112, 101, 114, 97, 117, 110, 105, 116, 101] => lookup_265_305(acc),
            [111, 114, 115, 105, 116, 101, 115] => lookup_265_306(acc),
            [111, 117, 116, 115, 121, 115, 116, 101, 109, 115, 99, 108, 111, 117, 100] => {
                lookup_265_307(acc)
            }
            [111, 119, 110, 112, 114, 111, 118, 105, 100, 101, 114] => lookup_265_308(acc),
            [112, 97, 103, 101, 102, 114, 111, 110, 116, 97, 112, 112] => lookup_265_309(acc),
            [112, 97, 103, 101, 115, 112, 101, 101, 100, 109, 111, 98, 105, 108, 105, 122, 101, 114] => {
                lookup_265_310(acc)
            }
            [112, 97, 103, 101, 120, 108] => lookup_265_311(acc),
            [112, 97, 121, 119, 104, 105, 114, 108] => lookup_265_312(info, labels, acc),
            [112, 103, 102, 111, 103] => lookup_265_313(acc),
            [112, 105, 120, 111, 108, 105, 110, 111] => lookup_265_314(acc),
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_265_315(acc),
            [112, 108, 97, 121, 115, 116, 97, 116, 105, 111, 110, 45, 99, 108, 111, 117, 100] => {
                lookup_265_316(acc)
            }
            [112, 108, 101, 115, 107, 110, 115] => lookup_265_317(acc),
            [112, 111, 105, 110, 116, 50, 116, 104, 105, 115] => lookup_265_318(acc),
            [112, 111, 115, 116, 109, 97, 110, 45, 101, 99, 104, 111] => lookup_265_319(acc),
            [112, 114, 103, 109, 114] => lookup_265_320(info, labels, acc),
            [112, 117, 98, 108, 105, 115, 104, 112, 114, 111, 120, 121] => lookup_265_321(acc),
            [112, 121, 116, 104, 111, 110, 97, 110, 121, 119, 104, 101, 114, 101] => {
                lookup_265_322(labels, acc)
            }
            [113, 97, 50] => lookup_265_323(acc),
            [113, 98, 117, 115, 101, 114] => lookup_265_324(acc),
            [113, 99] => lookup_265_325(acc),
            [113, 117, 97, 108, 105, 102, 105, 111, 97, 112, 112] => lookup_265_326(acc),
            [113, 117, 105, 99, 107, 115, 121, 116, 101, 115] => lookup_265_327(acc),
            [113, 117, 105, 112, 101, 108, 101, 109, 101, 110, 116, 115] => {
                lookup_265_328(info, labels, acc)
            }
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_265_329(acc),
            [114, 101, 109, 111, 116, 101, 119, 100] => lookup_265_330(acc),
            [114, 101, 110, 100, 101, 114] => lookup_265_331(info, labels, acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_265_332(acc),
            [114, 101, 115, 101, 114, 118, 101, 45, 111, 110, 108, 105, 110, 101] => {
                lookup_265_333(acc)
            }
            [114, 104, 99, 108, 111, 117, 100] => lookup_265_334(acc),
            [114, 117] => lookup_265_335(acc),
            [115, 97] => lookup_265_336(acc),
            [115, 97, 107, 117, 114, 97, 116, 97, 110] => lookup_265_337(acc),
            [115, 97, 107, 117, 114, 97, 119, 101, 98] => lookup_265_338(acc),
            [115, 97, 118, 101, 115, 45, 116, 104, 101, 45, 119, 104, 97, 108, 101, 115] => {
                lookup_265_339(acc)
            }
            [115, 99, 114, 121, 115, 101, 99] => lookup_265_340(acc),
            [115, 101, 99, 117, 114, 105, 116, 121, 116, 97, 99, 116, 105, 99, 115] => {
                lookup_265_341(acc)
            }
            [115, 101, 108, 102, 105, 112] => lookup_265_342(acc),
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 108, 101, 115, 115] => {
                lookup_265_343(acc)
            }
            [115, 101, 108, 108, 115, 45, 102, 111, 114, 45, 117] => lookup_265_344(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_265_345(acc),
            [115, 101, 114, 118, 101, 98, 101, 101, 114] => lookup_265_346(acc),
            [115, 101, 114, 118, 101, 99, 111, 117, 110, 116, 101, 114, 115, 116, 114, 105, 107, 101] => {
                lookup_265_347(acc)
            }
            [115, 101, 114, 118, 101, 101, 120, 99, 104, 97, 110, 103, 101] => lookup_265_348(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_265_349(acc),
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_265_350(acc),
            [115, 101, 114, 118, 101, 104, 97, 108, 102, 108, 105, 102, 101] => lookup_265_351(acc),
            [115, 101, 114, 118, 101, 104, 116, 116, 112] => lookup_265_352(acc),
            [115, 101, 114, 118, 101, 104, 117, 109, 111, 117, 114] => lookup_265_353(acc),
            [115, 101, 114, 118, 101, 105, 114, 99] => lookup_265_354(acc),
            [115, 101, 114, 118, 101, 109, 112, 51] => lookup_265_355(acc),
            [115, 101, 114, 118, 101, 112, 50, 112] => lookup_265_356(acc),
            [115, 101, 114, 118, 101, 112, 105, 99, 115] => lookup_265_357(acc),
            [115, 101, 114, 118, 101, 113, 117, 97, 107, 101] => lookup_265_358(acc),
            [115, 101, 114, 118, 101, 115, 97, 114, 99, 97, 115, 109] => lookup_265_359(acc),
            [115, 104, 111, 112, 105, 116, 115, 105, 116, 101] => lookup_265_360(acc),
            [115, 105, 105, 105, 116, 101, 115] => lookup_265_361(acc),
            [115, 105, 109, 112, 108, 101, 45, 117, 114, 108] => lookup_265_362(acc),
            [115, 105, 109, 112, 108, 101, 115, 105, 116, 101] => lookup_265_363(acc),
            [115, 105, 110, 97, 97, 112, 112] => lookup_265_364(acc),
            [115, 107, 121, 103, 101, 97, 114, 97, 112, 112] => lookup_265_365(acc),
            [115, 109, 117, 115, 104, 99, 100, 110] => lookup_265_366(acc),
            [115, 112, 97, 99, 101, 45, 116, 111, 45, 114, 101, 110, 116] => lookup_265_367(acc),
            [115, 116, 97, 99, 107, 104, 101, 114, 111, 45, 110, 101, 116, 119, 111, 114, 107] => {
                lookup_265_368(acc)
            }
            [115, 116, 100, 108, 105, 98] => lookup_265_369(info, labels, acc),
            [115, 116, 114, 101, 97, 109, 108, 105, 116, 97, 112, 112] => lookup_265_370(acc),
            [115, 116, 117, 102, 102, 116, 111, 114, 101, 97, 100] => lookup_265_371(acc),
            [116, 98, 45, 104, 111, 115, 116, 105, 110, 103] => lookup_265_372(info, labels, acc),
            [116, 101, 97, 99, 104, 101, 115, 45, 121, 111, 103, 97] => lookup_265_373(acc),
            [116, 101, 109, 112, 45, 100, 110, 115] => lookup_265_374(acc),
            [116, 104, 101, 119, 111, 114, 107, 112, 99] => lookup_265_375(acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116, 100, 97, 116, 97] => lookup_265_376(acc),
            [116, 111, 119, 110, 110, 101, 119, 115, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_265_377(acc)
            }
            [116, 114, 121, 45, 115, 110, 111, 119, 112, 108, 111, 119] => lookup_265_378(acc),
            [116, 114, 121, 99, 108, 111, 117, 100, 102, 108, 97, 114, 101] => lookup_265_379(acc),
            [116, 117, 108, 101, 97, 112, 45, 112, 97, 114, 116, 110, 101, 114, 115] => {
                lookup_265_380(acc)
            }
            [116, 121, 112, 101, 102, 111, 114, 109] => lookup_265_381(info, labels, acc),
            [117, 107] => lookup_265_382(acc),
            [117, 110, 117, 115, 117, 97, 108, 112, 101, 114, 115, 111, 110] => lookup_265_383(acc),
            [117, 115] => lookup_265_384(acc),
            [117, 121] => lookup_265_385(acc),
            [118, 105, 112, 115, 105, 110, 97, 97, 112, 112] => lookup_265_386(acc),
            [118, 117, 108, 116, 114, 111, 98, 106, 101, 99, 116, 115] => {
                lookup_265_387(info, labels, acc)
            }
            [119, 97, 102, 97, 105, 99, 108, 111, 117, 100] => lookup_265_388(info, labels, acc),
            [119, 97, 102, 102, 108, 101, 99, 101, 108, 108] => lookup_265_389(acc),
            [119, 105, 97, 114, 100, 119, 101, 98] => lookup_265_390(info, labels, acc),
            [119, 105, 116, 104, 103, 111, 111, 103, 108, 101] => lookup_265_391(acc),
            [119, 105, 116, 104, 121, 111, 117, 116, 117, 98, 101] => lookup_265_392(acc),
            [119, 105, 120, 115, 105, 116, 101] => lookup_265_393(acc),
            [119, 111, 108, 116, 108, 97, 98, 45, 100, 101, 109, 111] => lookup_265_394(acc),
            [119, 111, 114, 107, 105, 115, 98, 111, 114, 105, 110, 103] => lookup_265_395(acc),
            [119, 112, 100, 101, 118, 99, 108, 111, 117, 100] => lookup_265_396(acc),
            [119, 112, 101, 110, 103, 105, 110, 101, 112, 111, 119, 101, 114, 101, 100] => {
                lookup_265_397(labels, acc)
            }
            [119, 112, 104, 111, 115, 116, 101, 100, 109, 97, 105, 108] => lookup_265_398(acc),
            [119, 112, 109, 117, 99, 100, 110] => lookup_265_399(acc),
            [119, 114, 105, 116, 101, 115, 116, 104, 105, 115, 98, 108, 111, 103] => {
                lookup_265_400(acc)
            }
            [120, 48] => lookup_265_401(acc),
            [120, 110, 98, 97, 121] => lookup_265_402(labels, acc),
            [121, 111, 108, 97, 115, 105, 116, 101] => lookup_265_403(acc),
            [122, 97] => lookup_265_404(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_266() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_267() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_268_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_268_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_268_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_268<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 102, 111, 114, 117, 109] => lookup_268_0(acc),
            [110, 111, 103] => lookup_268_1(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_268_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_269() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_270() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_271() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_272() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_273() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_274() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_275() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_276() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_277() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_278() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_279() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_280_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_280_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_280<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101] => lookup_280_0(acc),
            [101, 108, 101, 109, 101, 110, 116, 111, 114] => lookup_280_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_281() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_282() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_283() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_284() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_285() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_286() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_287() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_288_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_288_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_288_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_288_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_288_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_288_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_288_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_288<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_288_0(acc),
            [99, 111] => lookup_288_1(acc),
            [101, 100] => lookup_288_2(acc),
            [102, 105] => lookup_288_3(acc),
            [103, 111] => lookup_288_4(acc),
            [111, 114] => lookup_288_5(acc),
            [115, 97] => lookup_288_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_289() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_290() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_291() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_292() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_293() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_294() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_295() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_296() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_297<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_297_0(acc),
            [101, 100, 117] => lookup_297_1(acc),
            [103, 111, 118] => lookup_297_2(acc),
            [105, 110, 102] => lookup_297_3(acc),
            [110, 101, 116] => lookup_297_4(acc),
            [111, 114, 103] => lookup_297_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_298() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_299_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_299_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_299_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_299_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_299_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_299_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_299<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_299_0(acc),
            [99, 111, 109] => lookup_299_1(acc),
            [101, 100, 117] => lookup_299_2(acc),
            [105, 110, 116] => lookup_299_3(acc),
            [110, 111, 109, 101] => lookup_299_4(acc),
            [111, 114, 103] => lookup_299_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_300_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_300_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_300_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_300_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_300<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_300_0(acc),
            [101, 100, 117] => lookup_300_1(acc),
            [110, 101, 116] => lookup_300_2(acc),
            [111, 114, 103] => lookup_300_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_301_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_301_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_301_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_301<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116, 104] => lookup_301_0(acc),
            [103, 111, 118] => lookup_301_1(acc),
            [105, 110, 102, 111] => lookup_301_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_302_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_302_2_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_302_2_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_302_2_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_302_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_302_2_0(acc),
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_302_2_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_302_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_302<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_302_0(acc),
            [98, 105, 122] => lookup_302_1(acc),
            [99, 111, 109] => lookup_302_2(labels, acc),
            [101, 107, 108, 111, 103, 101, 115] => lookup_302_3(acc),
            [103, 111, 118] => lookup_302_4(acc),
            [108, 116, 100] => lookup_302_5(acc),
            [109, 105, 108] => lookup_302_6(acc),
            [110, 101, 116] => lookup_302_7(acc),
            [111, 114, 103] => lookup_302_8(acc),
            [112, 114, 101, 115, 115] => lookup_302_9(acc),
            [112, 114, 111] => lookup_302_10(acc),
            [116, 109] => lookup_302_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_303() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_304() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_305_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_305_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_305_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_305_3_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_305_3_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_305_3_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_305_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_305_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_305_3_0(info, labels, acc),
            [99, 117, 115, 116, 111, 109] => lookup_305_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_305_4_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_305_4_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_305_4_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [102, 108, 116] => lookup_305_4_0_0(acc),
            [117, 115, 114] => lookup_305_4_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_305_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_305_4_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_305_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_305<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_305_0(acc),
            [99, 111] => lookup_305_1(acc),
            [101, 52] => lookup_305_2(acc),
            [109, 101, 116, 97, 99, 101, 110, 116, 114, 117, 109] => {
                lookup_305_3(info, labels, acc)
            }
            [109, 117, 110, 105] => lookup_305_4(info, labels, acc),
            [114, 101, 97, 108, 109] => lookup_305_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_306() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_307() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_308() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_309() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_310() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_311() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_312() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_313() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_314() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_315() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_316_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_316_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_316_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_11<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_316_11_0(acc),
            [100, 121, 110, 100, 110, 115] => lookup_316_11_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_316_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_24_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_24<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_316_24_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_316_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110] => lookup_316_30_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_316_31_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_31_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_316_31_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_316_31<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [105, 116] => lookup_316_31_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_316_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_59<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116, 111, 109, 101, 114] => lookup_316_59_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_316_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_68_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_68<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_316_68_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_316_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_316<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 101, 105, 116, 101] => lookup_316_0(acc),
            [49, 50, 104, 112] => lookup_316_1(acc),
            [50, 105, 120] => lookup_316_2(acc),
            [52, 108, 105, 109, 97] => lookup_316_3(acc),
            [98, 97, 114, 115, 121] => lookup_316_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_316_5(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_316_6(acc),
            [99, 111, 109] => lookup_316_7(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_316_8(acc),
            [99, 111, 115, 105, 100, 110, 115] => lookup_316_9(info, labels, acc),
            [100, 100, 45, 100, 110, 115] => lookup_316_10(acc),
            [100, 100, 110, 115, 115] => lookup_316_11(labels, acc),
            [100, 105, 115, 107, 117, 115, 115, 105, 111, 110, 115, 98, 101, 114, 101, 105, 99, 104] => {
                lookup_316_12(acc)
            }
            [100, 110, 115, 104, 111, 109, 101] => lookup_316_13(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101, 114] => lookup_316_14(acc),
            [100, 114, 97, 121, 45, 100, 110, 115] => lookup_316_15(acc),
            [100, 114, 97, 121, 100, 110, 115] => lookup_316_16(acc),
            [100, 121, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_316_17(acc),
            [100, 121, 110, 45, 105, 112, 50, 52] => lookup_316_18(acc),
            [100, 121, 110, 45, 118, 112, 110] => lookup_316_19(acc),
            [100, 121, 110, 97, 109, 105, 115, 99, 104, 101, 115, 45, 100, 110, 115] => {
                lookup_316_20(acc)
            }
            [100, 121, 110, 100, 110, 115, 49] => lookup_316_21(acc),
            [100, 121, 110, 118, 112, 110] => lookup_316_22(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_316_23(acc)
            }
            [102, 114, 117, 115, 107, 121] => lookup_316_24(info, labels, acc),
            [102, 117, 101, 116, 116, 101, 114, 116, 100, 97, 115, 110, 101, 116, 122] => {
                lookup_316_25(acc)
            }
            [103, 105, 116, 45, 114, 101, 112, 111, 115] => lookup_316_26(acc),
            [103, 111, 105, 112] => lookup_316_27(acc),
            [103, 195, 188, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110] => {
                lookup_316_28(acc)
            }
            [103, 195, 188, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110] => {
                lookup_316_29(acc)
            }
            [104, 111, 109, 101, 45, 119, 101, 98, 115, 101, 114, 118, 101, 114] => {
                lookup_316_30(labels, acc)
            }
            [104, 115, 45, 104, 101, 105, 108, 98, 114, 111, 110, 110] => {
                lookup_316_31(info, labels, acc)
            }
            [105, 110, 45, 98, 101, 114, 108, 105, 110] => lookup_316_32(acc),
            [105, 110, 45, 98, 114, 98] => lookup_316_33(acc),
            [105, 110, 45, 98, 117, 116, 116, 101, 114] => lookup_316_34(acc),
            [105, 110, 45, 100, 115, 108] => lookup_316_35(acc),
            [105, 110, 45, 118, 112, 110] => lookup_316_36(acc),
            [105, 110, 116, 101, 114, 110, 101, 116, 45, 100, 110, 115] => lookup_316_37(acc),
            [105, 115, 101, 114, 118, 115, 99, 104, 117, 108, 101] => lookup_316_38(acc),
            [105, 115, 116, 101, 105, 110, 103, 101, 101, 107] => lookup_316_39(acc),
            [105, 115, 116, 109, 101, 105, 110] => lookup_316_40(acc),
            [107, 101, 121, 109, 97, 99, 104, 105, 110, 101] => lookup_316_41(acc),
            [108, 45, 111, 45, 103, 45, 105, 45, 110] => lookup_316_42(acc),
            [108, 99, 117, 98, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_316_43(acc),
            [108, 101, 98, 116, 105, 109, 110, 101, 116, 122] => lookup_316_44(acc),
            [108, 101, 105, 116, 117, 110, 103, 115, 101, 110] => lookup_316_45(acc),
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_316_46(acc),
            [108, 111, 103, 111, 105, 112] => lookup_316_47(acc),
            [109, 101, 105, 110, 45, 105, 115, 101, 114, 118] => lookup_316_48(acc),
            [109, 101, 105, 110, 45, 118, 105, 103, 111, 114] => lookup_316_49(acc),
            [109, 121, 45, 103, 97, 116, 101, 119, 97, 121] => lookup_316_50(acc),
            [109, 121, 45, 114, 111, 117, 116, 101, 114] => lookup_316_51(acc),
            [109, 121, 45, 118, 105, 103, 111, 114] => lookup_316_52(acc),
            [109, 121, 45, 119, 97, 110] => lookup_316_53(acc),
            [109, 121, 104, 111, 109, 101, 45, 115, 101, 114, 118, 101, 114] => lookup_316_54(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_316_55(acc),
            [115, 99, 104, 117, 108, 112, 108, 97, 116, 116, 102, 111, 114, 109] => {
                lookup_316_56(acc)
            }
            [115, 99, 104, 117, 108, 115, 101, 114, 118, 101, 114] => lookup_316_57(acc),
            [115, 112, 100, 110, 115] => lookup_316_58(acc),
            [115, 112, 101, 101, 100, 112, 97, 114, 116, 110, 101, 114] => {
                lookup_316_59(info, labels, acc)
            }
            [115, 113, 117, 97, 114, 101, 55] => lookup_316_60(acc),
            [115, 118, 110, 45, 114, 101, 112, 111, 115] => lookup_316_61(acc),
            [115, 121, 110, 111, 45, 100, 115] => lookup_316_62(acc),
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => {
                lookup_316_63(acc)
            }
            [115, 121, 110, 111, 108, 111, 103, 121, 45, 100, 115] => lookup_316_64(acc),
            [116, 97, 105, 102, 117, 110, 45, 100, 110, 115] => lookup_316_65(acc),
            [116, 101, 115, 116, 45, 105, 115, 101, 114, 118] => lookup_316_66(acc),
            [116, 114, 97, 101, 117, 109, 116, 103, 101, 114, 97, 100, 101] => lookup_316_67(acc),
            [117, 98, 101, 114, 115, 112, 97, 99, 101] => lookup_316_68(info, labels, acc),
            [118, 105, 114, 116, 117, 97, 108, 45, 117, 115, 101, 114] => lookup_316_69(acc),
            [118, 105, 114, 116, 117, 97, 108, 117, 115, 101, 114] => lookup_316_70(acc),
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 98, 101, 115, 116, 101, 108, 108, 101, 110, 45, 122, 118, 98] => {
                lookup_316_71(acc)
            }
            [120, 110, 45, 45, 103, 110, 115, 116, 105, 103, 108, 105, 101, 102, 101, 114, 110, 45, 119, 111, 98] => {
                lookup_316_72(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_317() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_318() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_319() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_320() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_321() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_322() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_323() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_324() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_325() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_326() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_327() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_328() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_329_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_329<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 115, 115] => lookup_329_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_330_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_6_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_6<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_330_6_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_330_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_9_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_330_9_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_330_10_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_330_10_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_330_11_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_11_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_330_11_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_330_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_330_11_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_330_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_20_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_20<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_330_20_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_330_21_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_21<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_330_21_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_330_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_23_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330_23<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_330_23_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_330_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_330<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 117, 116, 111, 99, 111, 100, 101] => lookup_330_0(acc),
            [99, 117, 114, 118] => lookup_330_1(acc),
            [100, 101, 110, 111] => lookup_330_2(acc),
            [100, 101, 110, 111, 45, 115, 116, 97, 103, 105, 110, 103] => lookup_330_3(acc),
            [100, 101, 116, 97] => lookup_330_4(acc),
            [102, 108, 121] => lookup_330_5(acc),
            [103, 97, 116, 101, 119, 97, 121] => lookup_330_6(info, labels, acc),
            [103, 105, 116, 104, 117, 98, 112, 114, 101, 118, 105, 101, 119] => lookup_330_7(acc),
            [105, 115, 101, 114, 118] => lookup_330_8(acc),
            [108, 99, 108] => lookup_330_9(info, labels, acc),
            [108, 99, 108, 115, 116, 97, 103, 101] => lookup_330_10(info, labels, acc),
            [108, 111, 99, 97, 108, 99, 101, 114, 116] => lookup_330_11(info, labels, acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_330_12(acc),
            [109, 101, 100, 105, 97, 116, 101, 99, 104] => lookup_330_13(acc),
            [110, 103, 114, 111, 107] => lookup_330_14(acc),
            [110, 103, 114, 111, 107, 45, 102, 114, 101, 101] => lookup_330_15(acc),
            [112, 97, 103, 101, 115] => lookup_330_16(acc),
            [112, 108, 97, 116, 116, 101, 114, 45, 97, 112, 112] => lookup_330_17(acc),
            [114, 50] => lookup_330_18(acc),
            [115, 104, 105, 102, 116, 99, 114, 121, 112, 116, 111] => lookup_330_19(acc),
            [115, 116, 103] => lookup_330_20(info, labels, acc),
            [115, 116, 103, 115, 116, 97, 103, 101] => lookup_330_21(info, labels, acc),
            [118, 101, 114, 99, 101, 108] => lookup_330_22(acc),
            [119, 101, 98, 104, 97, 114, 101] => lookup_330_23(info, labels, acc),
            [119, 111, 114, 107, 101, 114, 115] => lookup_330_24(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_331() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_332() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_333() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_334_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_334_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 110, 100, 111, 110] => lookup_334_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_334<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 97, 112, 112, 115] => lookup_334_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_335() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_336() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_337() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_338() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_339() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_340() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_341() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_342_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_342_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_342_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_342_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_342_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_342_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_342_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_342_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_342<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 104, 106, 101, 109, 109, 101, 115, 105, 100, 101] => lookup_342_0(acc),
            [98, 105, 122] => lookup_342_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_342_2(acc),
            [99, 111] => lookup_342_3(acc),
            [102, 105, 114, 109] => lookup_342_4(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_342_5(acc),
            [114, 101, 103] => lookup_342_6(acc),
            [115, 116, 111, 114, 101] => lookup_342_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_343_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_343<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_343_0(acc),
            [101, 100, 117] => lookup_343_1(acc),
            [103, 111, 118] => lookup_343_2(acc),
            [110, 101, 116] => lookup_343_3(acc),
            [111, 114, 103] => lookup_343_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_344() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_345<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_345_0(acc),
            [99, 111, 109] => lookup_345_1(acc),
            [101, 100, 117] => lookup_345_2(acc),
            [103, 111, 98] => lookup_345_3(acc),
            [103, 111, 118] => lookup_345_4(acc),
            [109, 105, 108] => lookup_345_5(acc),
            [110, 101, 116] => lookup_345_6(acc),
            [111, 114, 103] => lookup_345_7(acc),
            [115, 108, 100] => lookup_345_8(acc),
            [119, 101, 98] => lookup_345_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_346() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_347() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_348() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_349() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_350() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_351() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_352() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_353() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_354() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_355() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_356() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_357() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_358() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_359() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_360<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_360_0(acc),
            [97, 115, 115, 111] => lookup_360_1(acc),
            [99, 111, 109] => lookup_360_2(acc),
            [101, 100, 117] => lookup_360_3(acc),
            [103, 111, 118] => lookup_360_4(acc),
            [110, 101, 116] => lookup_360_5(acc),
            [111, 114, 103] => lookup_360_6(acc),
            [112, 111, 108] => lookup_360_7(acc),
            [115, 111, 99] => lookup_360_8(acc),
            [116, 109] => lookup_360_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_361_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_361_0_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_361_0_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_361_0_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_361_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [98, 122, 122] => lookup_361_0_1(info, labels, acc),
            wild => lookup_361_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_361<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 112, 112, 115] => lookup_361_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_362() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_363_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_363_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_363<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 115, 101] => lookup_363_0(acc),
            [99, 111, 109] => lookup_363_1(acc),
            [101, 100, 117] => lookup_363_2(acc),
            [102, 105, 110] => lookup_363_3(acc),
            [103, 111, 98] => lookup_363_4(acc),
            [103, 111, 118] => lookup_363_5(acc),
            [105, 110, 102, 111] => lookup_363_6(acc),
            [107, 49, 50] => lookup_363_7(acc),
            [109, 101, 100] => lookup_363_8(acc),
            [109, 105, 108] => lookup_363_9(acc),
            [110, 101, 116] => lookup_363_10(acc),
            [111, 102, 102, 105, 99, 105, 97, 108] => lookup_363_11(acc),
            [111, 114, 103] => lookup_363_12(acc),
            [112, 114, 111] => lookup_363_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_364() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_365() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_366_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_366_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [103, 105, 116, 45, 112, 97, 103, 101, 115] => lookup_366_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_366<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 105, 116] => lookup_366_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_367_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_367<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_367_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_368_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_368_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_368_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_368_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_368<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 112] => lookup_368_0(acc),
            [99, 111, 109] => lookup_368_1(labels, acc),
            [101, 100, 117] => lookup_368_2(acc),
            [102, 105, 101] => lookup_368_3(acc),
            [103, 111, 118] => lookup_368_4(acc),
            [108, 105, 98] => lookup_368_5(acc),
            [109, 101, 100] => lookup_368_6(acc),
            [111, 114, 103] => lookup_368_7(acc),
            [112, 114, 105] => lookup_368_8(acc),
            [114, 105, 105, 107] => lookup_368_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_369_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_369_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_369_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_369_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_369<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_369_0(labels, acc),
            [101, 100, 117] => lookup_369_1(acc),
            [101, 117, 110] => lookup_369_2(acc),
            [103, 111, 118] => lookup_369_3(acc),
            [109, 105, 108] => lookup_369_4(acc),
            [110, 97, 109, 101] => lookup_369_5(acc),
            [110, 101, 116] => lookup_369_6(acc),
            [111, 114, 103] => lookup_369_7(acc),
            [115, 99, 105] => lookup_369_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_370() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_371() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_372() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_373() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_374() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_375() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_376() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_377() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_378<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_378_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_379() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_380() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_381_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_381_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_381_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_381_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_381_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_381_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_381_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_381_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_381_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_381<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 109, 105, 119, 101, 98] => lookup_381_0(acc),
            [99, 111, 109] => lookup_381_1(labels, acc),
            [101, 100, 117] => lookup_381_2(acc),
            [103, 111, 98] => lookup_381_3(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_381_4(acc),
            [110, 111, 109] => lookup_381_5(acc),
            [111, 114, 103] => lookup_381_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_382() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_383_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_383_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_383_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_383<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109, 112, 117, 116, 101] => lookup_383_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_384_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_384<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_384_0(acc),
            [99, 111, 109] => lookup_384_1(acc),
            [101, 100, 117] => lookup_384_2(acc),
            [103, 111, 118] => lookup_384_3(acc),
            [105, 110, 102, 111] => lookup_384_4(acc),
            [110, 97, 109, 101] => lookup_384_5(acc),
            [110, 101, 116] => lookup_384_6(acc),
            [111, 114, 103] => lookup_384_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_385() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_386_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_386_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_386_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_386_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_386_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_386_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_386_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_386_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_386_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_386_7_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_386_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_386_7_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_386_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_386<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 114, 107, 105, 116, 97, 112, 112, 115] => lookup_386_0(acc),
            [98, 97, 114, 115, 121] => lookup_386_1(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_386_2(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_386_3(acc),
            [100, 111, 103, 97, 100, 111] => lookup_386_4(info, labels, acc),
            [109, 121, 99, 100] => lookup_386_5(acc),
            [115, 112, 100, 110, 115] => lookup_386_6(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_386_7(info, labels, acc),
            [119, 101, 108, 108, 98, 101, 105, 110, 103, 122, 111, 110, 101] => lookup_386_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_387() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_388_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_388_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_388_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_388<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 114, 116, 121] => lookup_388_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_389_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_389_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_389<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_389_0(acc),
            [107, 111, 111, 98, 105, 110] => lookup_389_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_390() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_391() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_392() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_393() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_394() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_395() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_396() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_397() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_398_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_398<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_398_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_399() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_400() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_401() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_402_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_402<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 106] => lookup_402_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_403() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_404() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_405() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_406() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_407() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_408() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_409() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_410_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [102, 105] => lookup_410_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_410_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 109, 111] => lookup_410_4_0(acc),
            [112, 97, 97, 115] => lookup_410_4_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_410_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_410<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 107, 111, 116, 105, 115, 105, 118, 117] => lookup_410_0(acc),
            [97, 108, 97, 110, 100] => lookup_410_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_410_2(acc),
            [99, 108, 111, 117, 100, 112, 108, 97, 116, 102, 111, 114, 109] => {
                lookup_410_3(info, labels, acc)
            }
            [100, 97, 116, 97, 99, 101, 110, 116, 101, 114] => lookup_410_4(info, labels, acc),
            [100, 121] => lookup_410_5(acc),
            [104, 195, 164, 107, 107, 105, 110, 101, 110] => lookup_410_6(acc),
            [105, 107, 105] => lookup_410_7(acc),
            [107, 97, 112, 115, 105] => lookup_410_8(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_410_9(acc),
            [120, 110, 45, 45, 104, 107, 107, 105, 110, 101, 110, 45, 53, 119, 97] => {
                lookup_410_10(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_411() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_412() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_413() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_414() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_415() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_416() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_417_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_417<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_417_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_418() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_419() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_420() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_421() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_422() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_423() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_424() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_425<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_425_0(acc),
            [98, 105, 122] => lookup_425_1(acc),
            [99, 111, 109] => lookup_425_2(acc),
            [103, 111, 118] => lookup_425_3(acc),
            [105, 110, 102, 111] => lookup_425_4(acc),
            [109, 105, 108] => lookup_425_5(acc),
            [110, 97, 109, 101] => lookup_425_6(acc),
            [110, 101, 116] => lookup_425_7(acc),
            [111, 114, 103] => lookup_425_8(acc),
            [112, 114, 111] => lookup_425_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_426_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_426<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_426_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_427() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_428() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_429() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_430() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_431() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_432() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_433_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_433_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_433_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_433<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_433_0(acc),
            [101, 100, 117] => lookup_433_1(acc),
            [110, 101, 116] => lookup_433_2(acc),
            [111, 114, 103] => lookup_433_3(acc),
            [114, 97, 100, 105, 111] => lookup_433_4(acc),
            [117, 115, 101, 114] => lookup_433_5(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_434() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_435() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_436() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_437() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_438() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_439() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_440() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_441() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_442() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_443() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_444() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_445_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_445_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 31usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_445_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_445_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_445_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_445_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_445_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_445_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_445_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_445_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_445_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_445_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_445_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_445<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 115, 105, 116, 101, 119, 101, 98] => lookup_445_0(acc),
            [97, 101, 114, 111, 112, 111, 114, 116] => lookup_445_1(acc),
            [97, 115, 115, 111] => lookup_445_2(acc),
            [97, 118, 111, 99, 97, 116] => lookup_445_3(acc),
            [97, 118, 111, 117, 101, 115] => lookup_445_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_445_5(acc),
            [99, 99, 105] => lookup_445_6(acc),
            [99, 104, 97, 109, 98, 97, 103, 114, 105] => lookup_445_7(acc),
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115] => {
                lookup_445_8(acc)
            }
            [99, 104, 105, 114, 117, 114, 103, 105, 101, 110, 115, 45, 100, 101, 110, 116, 105, 115, 116, 101, 115, 45, 101, 110, 45, 102, 114, 97, 110, 99, 101] => {
                lookup_445_9(acc)
            }
            [99, 111, 109] => lookup_445_10(acc),
            [100, 101, 100, 105, 98, 111, 120] => lookup_445_11(acc),
            [101, 110, 45, 114, 111, 111, 116] => lookup_445_12(acc),
            [101, 120, 112, 101, 114, 116, 115, 45, 99, 111, 109, 112, 116, 97, 98, 108, 101, 115] => {
                lookup_445_13(acc)
            }
            [102, 98, 120, 45, 111, 115] => lookup_445_14(acc),
            [102, 98, 120, 111, 115] => lookup_445_15(acc),
            [102, 114, 101, 101, 98, 111, 120, 45, 111, 115] => lookup_445_16(acc),
            [102, 114, 101, 101, 98, 111, 120, 111, 115] => lookup_445_17(acc),
            [103, 101, 111, 109, 101, 116, 114, 101, 45, 101, 120, 112, 101, 114, 116] => {
                lookup_445_18(acc)
            }
            [103, 111, 117, 112, 105, 108, 101] => lookup_445_19(acc),
            [103, 111, 117, 118] => lookup_445_20(acc),
            [103, 114, 101, 116, 97] => lookup_445_21(acc),
            [104, 117, 105, 115, 115, 105, 101, 114, 45, 106, 117, 115, 116, 105, 99, 101] => {
                lookup_445_22(acc)
            }
            [109, 101, 100, 101, 99, 105, 110] => lookup_445_23(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_445_24(acc),
            [110, 111, 109] => lookup_445_25(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_445_26(acc),
            [111, 110, 45, 119, 101, 98] => lookup_445_27(acc),
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110] => lookup_445_28(acc),
            [112, 111, 114, 116] => lookup_445_29(acc),
            [112, 114, 100] => lookup_445_30(acc),
            [116, 109] => lookup_445_31(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_445_32(acc),
            [121, 110, 104] => lookup_445_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_446() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_447() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_448() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_449() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_450() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_451() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_452() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_453() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_454() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_455() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_456() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_457() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_458() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_459() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_460() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_461() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_462() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_463() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_464() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_465() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_466() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_467() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_468() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_469() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_470() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_471<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_471_0(acc),
            [103, 111, 118] => lookup_471_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_472_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_472<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 110, 112, 121] => lookup_472_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_473_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_473<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_473_0(acc),
            [101, 100, 117] => lookup_473_1(acc),
            [103, 111, 118] => lookup_473_2(acc),
            [109, 105, 108] => lookup_473_3(acc),
            [110, 101, 116] => lookup_473_4(acc),
            [111, 114, 103] => lookup_473_5(acc),
            [112, 118, 116] => lookup_473_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_474() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_475() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_476() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_477() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_478() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_479_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_479_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_479_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_479_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_479_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_479_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_479_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 97, 101, 109, 111, 110] => lookup_479_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_479<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_479_0(acc),
            [99, 121, 97] => lookup_479_1(acc),
            [107, 97, 97, 115] => lookup_479_2(acc),
            [110, 101, 116] => lookup_479_3(acc),
            [111, 114, 103] => lookup_479_4(acc),
            [112, 97, 110, 101, 108] => lookup_479_5(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_480() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_481_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_481_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_481_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_481_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_481_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_481<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_481_0(acc),
            [101, 100, 117] => lookup_481_1(acc),
            [103, 111, 118] => lookup_481_2(acc),
            [109, 105, 108] => lookup_481_3(acc),
            [111, 114, 103] => lookup_481_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_482_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_482<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_482_0(acc),
            [101, 100, 117] => lookup_482_1(acc),
            [103, 111, 118] => lookup_482_2(acc),
            [108, 116, 100] => lookup_482_3(acc),
            [109, 111, 100] => lookup_482_4(acc),
            [111, 114, 103] => lookup_482_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_483() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_484() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_485() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_486() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_487_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_487_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_487<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_487_0(acc),
            [99, 111] => lookup_487_1(acc),
            [99, 111, 109] => lookup_487_2(acc),
            [101, 100, 117] => lookup_487_3(acc),
            [110, 101, 116] => lookup_487_4(acc),
            [111, 114, 103] => lookup_487_5(acc),
            [120, 120] => lookup_487_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_488() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_489() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_490() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_491() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_492() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_493() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_494() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_495() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_496() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_497<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_497_0(acc),
            [99, 111, 109] => lookup_497_1(acc),
            [101, 100, 117] => lookup_497_2(acc),
            [103, 111, 118] => lookup_497_3(acc),
            [110, 101, 116] => lookup_497_4(acc),
            [111, 114, 103] => lookup_497_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_498() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_499() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_500() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_501() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_502() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_503() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_504_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_504_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_504_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_504_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_504_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_504<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_504_0(acc),
            [116, 114, 97, 110, 115, 108, 97, 116, 101] => lookup_504_1(acc),
            [117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => {
                lookup_504_2(info, labels, acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_505() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_506() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_507() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_508() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_509_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_509<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_509_0(acc),
            [97, 115, 115, 111] => lookup_509_1(acc),
            [99, 111, 109] => lookup_509_2(acc),
            [101, 100, 117] => lookup_509_3(acc),
            [109, 111, 98, 105] => lookup_509_4(acc),
            [110, 101, 116] => lookup_509_5(acc),
            [111, 114, 103] => lookup_509_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_510() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_511_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_511_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_511<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_511_0(acc),
            [99, 111, 109] => lookup_511_1(acc),
            [101, 100, 117] => lookup_511_2(acc),
            [103, 111, 118] => lookup_511_3(acc),
            [110, 101, 116] => lookup_511_4(acc),
            [111, 114, 103] => lookup_511_5(acc),
            [115, 105, 109, 112, 108, 101, 115, 105, 116, 101] => lookup_511_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_512() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_513() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_514() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_515() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_516() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_517() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_518_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_518<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_518_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_519() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_520_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_520_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_520_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_520_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_520_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_520_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_520_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_520_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_520_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_520_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_520<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103] => lookup_520_0(acc),
            [99, 111, 109] => lookup_520_1(acc),
            [100, 101] => lookup_520_2(acc),
            [101, 100, 117] => lookup_520_3(acc),
            [103, 111, 98] => lookup_520_4(acc),
            [105, 110, 100] => lookup_520_5(acc),
            [109, 105, 108] => lookup_520_6(acc),
            [110, 101, 116] => lookup_520_7(acc),
            [111, 114, 103] => lookup_520_8(acc),
            [116, 111] => lookup_520_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_521_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_521_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_521_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_521_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_521_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_521_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_521_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_521_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_521<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_521_0(acc),
            [101, 100, 117] => lookup_521_1(acc),
            [103, 111, 118] => lookup_521_2(acc),
            [103, 117, 97, 109] => lookup_521_3(acc),
            [105, 110, 102, 111] => lookup_521_4(acc),
            [110, 101, 116] => lookup_521_5(acc),
            [111, 114, 103] => lookup_521_6(acc),
            [119, 101, 98] => lookup_521_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_522() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_523() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_524() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_525() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_526() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_527() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_528() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_529_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_529_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_529_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_529_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_529_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_529_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_529_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_529<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101] => lookup_529_0(acc),
            [99, 111] => lookup_529_1(acc),
            [99, 111, 109] => lookup_529_2(acc),
            [101, 100, 117] => lookup_529_3(acc),
            [103, 111, 118] => lookup_529_4(acc),
            [110, 101, 116] => lookup_529_5(acc),
            [111, 114, 103] => lookup_529_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_530() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_531() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_532() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_533() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_534() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_535() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_536() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_537_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_537<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 114, 97] => lookup_537_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_538() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_539() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_540() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_541() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_542() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_543() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_544() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_545() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_546() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_547() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_548_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_548_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_548_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_548_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_548<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_548_0(acc),
            [99, 111, 109] => lookup_548_1(acc),
            [101, 100, 117] => lookup_548_2(acc),
            [103, 111, 118] => lookup_548_3(acc),
            [105, 100, 118] => lookup_548_4(acc),
            [105, 110, 99] => lookup_548_5(acc),
            [108, 116, 100] => lookup_548_6(acc),
            [110, 101, 116] => lookup_548_7(acc),
            [111, 114, 103] => lookup_548_8(acc),
            [115, 101, 99, 97, 97, 115] => lookup_548_9(acc),
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_548_10(acc),
            [120, 110, 45, 45, 99, 105, 113, 112, 110] => lookup_548_11(acc),
            [120, 110, 45, 45, 103, 109, 113, 48, 53, 48, 105] => lookup_548_12(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_548_13(acc),
            [120, 110, 45, 45, 105, 111, 48, 97, 55, 105] => lookup_548_14(acc),
            [120, 110, 45, 45, 108, 99, 118, 114, 51, 50, 100] => lookup_548_15(acc),
            [120, 110, 45, 45, 109, 107, 48, 97, 120, 105] => lookup_548_16(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_548_17(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_548_18(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 113, 51, 98] => lookup_548_19(acc),
            [120, 110, 45, 45, 116, 110, 48, 97, 103] => lookup_548_20(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_548_21(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 121, 52, 97] => lookup_548_22(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_548_23(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 118, 120] => lookup_548_24(acc),
            [228, 184, 170, 228, 186, 186] => lookup_548_25(acc),
            [229, 128, 139, 228, 186, 186] => lookup_548_26(acc),
            [229, 133, 172, 229, 143, 184] => lookup_548_27(acc),
            [230, 148, 191, 229, 186, 156] => lookup_548_28(acc),
            [230, 149, 142, 232, 130, 178] => lookup_548_29(acc),
            [230, 149, 153, 232, 130, 178] => lookup_548_30(acc),
            [231, 174, 135, 228, 186, 186] => lookup_548_31(acc),
            [231, 181, 132, 231, 185, 148] => lookup_548_32(acc),
            [231, 181, 132, 231, 187, 135] => lookup_548_33(acc),
            [231, 182, 178, 231, 181, 161] => lookup_548_34(acc),
            [231, 182, 178, 231, 187, 156] => lookup_548_35(acc),
            [231, 187, 132, 231, 185, 148] => lookup_548_36(acc),
            [231, 187, 132, 231, 187, 135] => lookup_548_37(acc),
            [231, 189, 145, 231, 181, 161] => lookup_548_38(acc),
            [231, 189, 145, 231, 187, 156] => lookup_548_39(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_549() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_550() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_551_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_551_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_551_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_551_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_551_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_551_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_551_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_551<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_551_0(acc),
            [99, 111, 109] => lookup_551_1(acc),
            [101, 100, 117] => lookup_551_2(acc),
            [103, 111, 98] => lookup_551_3(acc),
            [109, 105, 108] => lookup_551_4(acc),
            [110, 101, 116] => lookup_551_5(acc),
            [111, 114, 103] => lookup_551_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_552() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_553() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_554() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_555() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_556() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_557() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_558() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_559() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_560() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_561() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_562_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_562_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_562_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_562_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_562_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_562_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_562_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_562_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_562_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_562_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_562_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_562<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_562_0(acc),
            [101, 97, 115, 121, 112, 97, 110, 101, 108] => lookup_562_1(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_562_2(acc),
            [102, 114, 101, 101, 115, 105, 116, 101] => lookup_562_3(acc),
            [104, 97, 108, 102] => lookup_562_4(acc),
            [106, 101, 108, 101] => lookup_562_5(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_562_6(acc),
            [109, 121, 102, 97, 115, 116] => lookup_562_7(acc),
            [112, 99, 108, 111, 117, 100] => lookup_562_8(acc),
            [116, 101, 109, 112, 117, 114, 108] => lookup_562_9(acc),
            [119, 112, 109, 117, 100, 101, 118] => lookup_562_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_563_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_563<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110, 99, 114, 97, 102, 116] => lookup_563_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_564() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_565() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_566() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_567() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_568() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_569() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_570_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_570_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_570<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_570_0(acc),
            [99, 111, 109] => lookup_570_1(acc),
            [102, 114, 101, 101] => lookup_570_2(acc),
            [102, 114, 111, 109] => lookup_570_3(acc),
            [105, 122] => lookup_570_4(acc),
            [110, 97, 109, 101] => lookup_570_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_571() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_572<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 117, 108, 116] => lookup_572_0(acc),
            [97, 114, 116] => lookup_572_1(acc),
            [97, 115, 115, 111] => lookup_572_2(acc),
            [99, 111, 109] => lookup_572_3(acc),
            [99, 111, 111, 112] => lookup_572_4(acc),
            [101, 100, 117] => lookup_572_5(acc),
            [102, 105, 114, 109] => lookup_572_6(acc),
            [103, 111, 117, 118] => lookup_572_7(acc),
            [105, 110, 102, 111] => lookup_572_8(acc),
            [109, 101, 100] => lookup_572_9(acc),
            [110, 101, 116] => lookup_572_10(acc),
            [111, 114, 103] => lookup_572_11(acc),
            [112, 101, 114, 115, 111] => lookup_572_12(acc),
            [112, 111, 108] => lookup_572_13(acc),
            [112, 114, 111] => lookup_572_14(acc),
            [114, 101, 108] => lookup_572_15(acc),
            [115, 104, 111, 112] => lookup_572_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_573_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_573_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_573<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [50, 48, 48, 48] => lookup_573_0(acc),
            [97, 103, 114, 97, 114] => lookup_573_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_573_2(acc),
            [98, 111, 108, 116] => lookup_573_3(acc),
            [99, 97, 115, 105, 110, 111] => lookup_573_4(acc),
            [99, 105, 116, 121] => lookup_573_5(acc),
            [99, 111] => lookup_573_6(acc),
            [101, 114, 111, 116, 105, 99, 97] => lookup_573_7(acc),
            [101, 114, 111, 116, 105, 107, 97] => lookup_573_8(acc),
            [102, 105, 108, 109] => lookup_573_9(acc),
            [102, 111, 114, 117, 109] => lookup_573_10(acc),
            [103, 97, 109, 101, 115] => lookup_573_11(acc),
            [104, 111, 116, 101, 108] => lookup_573_12(acc),
            [105, 110, 102, 111] => lookup_573_13(acc),
            [105, 110, 103, 97, 116, 108, 97, 110] => lookup_573_14(acc),
            [106, 111, 103, 97, 115, 122] => lookup_573_15(acc),
            [107, 111, 110, 121, 118, 101, 108, 111] => lookup_573_16(acc),
            [108, 97, 107, 97, 115] => lookup_573_17(acc),
            [109, 101, 100, 105, 97] => lookup_573_18(acc),
            [110, 101, 119, 115] => lookup_573_19(acc),
            [111, 114, 103] => lookup_573_20(acc),
            [112, 114, 105, 118] => lookup_573_21(acc),
            [114, 101, 107, 108, 97, 109] => lookup_573_22(acc),
            [115, 101, 120] => lookup_573_23(acc),
            [115, 104, 111, 112] => lookup_573_24(acc),
            [115, 112, 111, 114, 116] => lookup_573_25(acc),
            [115, 117, 108, 105] => lookup_573_26(acc),
            [115, 122, 101, 120] => lookup_573_27(acc),
            [116, 109] => lookup_573_28(acc),
            [116, 111, 122, 115, 100, 101] => lookup_573_29(acc),
            [117, 116, 97, 122, 97, 115] => lookup_573_30(acc),
            [118, 105, 100, 101, 111] => lookup_573_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_574() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_575() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_576() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_577() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_578() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_579() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_580() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_581_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_581_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_8_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_581_8_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_581_8_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_581_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 115, 115] => lookup_581_8_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_581_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_581<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_581_0(acc),
            [98, 105, 122] => lookup_581_1(acc),
            [99, 111] => lookup_581_2(labels, acc),
            [100, 101, 115, 97] => lookup_581_3(acc),
            [102, 108, 97, 112] => lookup_581_4(acc),
            [102, 111, 114, 116, 101] => lookup_581_5(acc),
            [103, 111] => lookup_581_6(acc),
            [109, 105, 108] => lookup_581_7(acc),
            [109, 121] => lookup_581_8(labels, acc),
            [110, 101, 116] => lookup_581_9(acc),
            [111, 114] => lookup_581_10(acc),
            [112, 111, 110, 112, 101, 115] => lookup_581_11(acc),
            [115, 99, 104] => lookup_581_12(acc),
            [119, 101, 98] => lookup_581_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_582_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_582_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_582_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_582<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_582_0(acc),
            [103, 111, 118] => lookup_582_1(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_582_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_583() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_584() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_585() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_586_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_586_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_586_1_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_586_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_586_1_0(acc),
            [109, 121, 116, 97, 98, 105, 116] => lookup_586_1_1(acc),
            [114, 97, 118, 112, 97, 103, 101] => lookup_586_1_2(acc),
            [116, 97, 98, 105, 116, 111, 114, 100, 101, 114] => lookup_586_1_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_586_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_586<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_586_0(acc),
            [99, 111] => lookup_586_1(labels, acc),
            [103, 111, 118] => lookup_586_2(acc),
            [105, 100, 102] => lookup_586_3(acc),
            [107, 49, 50] => lookup_586_4(acc),
            [109, 117, 110, 105] => lookup_586_5(acc),
            [110, 101, 116] => lookup_586_6(acc),
            [111, 114, 103] => lookup_586_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_587_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_587_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_587_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_587_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 116, 100] => lookup_587_1_0(acc),
            [112, 108, 99] => lookup_587_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_587_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_587_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_587_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_587_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_587_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_587_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_587<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_587_0(acc),
            [99, 111] => lookup_587_1(labels, acc),
            [99, 111, 109] => lookup_587_2(acc),
            [110, 101, 116] => lookup_587_3(acc),
            [111, 114, 103] => lookup_587_4(acc),
            [114, 111] => lookup_587_5(acc),
            [116, 116] => lookup_587_6(acc),
            [116, 118] => lookup_587_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_588() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_589() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_590() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_591() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_592_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_592_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_592_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_592_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_592_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_592<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [53, 103] => lookup_592_0(acc),
            [54, 103] => lookup_592_1(acc),
            [97, 99] => lookup_592_2(acc),
            [97, 105] => lookup_592_3(acc),
            [97, 109] => lookup_592_4(acc),
            [98, 97, 114, 115, 121] => lookup_592_5(acc),
            [98, 105, 104, 97, 114] => lookup_592_6(acc),
            [98, 105, 122] => lookup_592_7(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_592_8(acc),
            [98, 117, 115, 105, 110, 101, 115, 115] => lookup_592_9(acc),
            [99, 97] => lookup_592_10(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_592_11(acc),
            [99, 110] => lookup_592_12(acc),
            [99, 111] => lookup_592_13(acc),
            [99, 111, 109] => lookup_592_14(acc),
            [99, 111, 111, 112] => lookup_592_15(acc),
            [99, 115] => lookup_592_16(acc),
            [100, 101, 108, 104, 105] => lookup_592_17(acc),
            [100, 114] => lookup_592_18(acc),
            [101, 100, 117] => lookup_592_19(acc),
            [101, 114] => lookup_592_20(acc),
            [102, 105, 114, 109] => lookup_592_21(acc),
            [103, 101, 110] => lookup_592_22(acc),
            [103, 111, 118] => lookup_592_23(acc),
            [103, 117, 106, 97, 114, 97, 116] => lookup_592_24(acc),
            [105, 110, 100] => lookup_592_25(acc),
            [105, 110, 102, 111] => lookup_592_26(acc),
            [105, 110, 116] => lookup_592_27(acc),
            [105, 110, 116, 101, 114, 110, 101, 116] => lookup_592_28(acc),
            [105, 111] => lookup_592_29(acc),
            [109, 101] => lookup_592_30(acc),
            [109, 105, 108] => lookup_592_31(acc),
            [110, 101, 116] => lookup_592_32(acc),
            [110, 105, 99] => lookup_592_33(acc),
            [111, 114, 103] => lookup_592_34(acc),
            [112, 103] => lookup_592_35(acc),
            [112, 111, 115, 116] => lookup_592_36(acc),
            [112, 114, 111] => lookup_592_37(acc),
            [114, 101, 115] => lookup_592_38(acc),
            [115, 117, 112, 97, 98, 97, 115, 101] => lookup_592_39(acc),
            [116, 114, 97, 118, 101, 108] => lookup_592_40(acc),
            [116, 118] => lookup_592_41(acc),
            [117, 107] => lookup_592_42(acc),
            [117, 112] => lookup_592_43(acc),
            [117, 115] => lookup_592_44(acc),
            [119, 101, 98] => lookup_592_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_593() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_594() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_595() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_596_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_596<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 114, 101, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_596_0(acc)
            }
            [98, 97, 114, 114, 101, 108, 108, 45, 111, 102, 45, 107, 110, 111, 119, 108, 101, 100, 103, 101] => {
                lookup_596_1(acc)
            }
            [98, 97, 114, 115, 121] => lookup_596_2(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_596_3(acc),
            [100, 110, 115, 117, 112, 100, 97, 116, 101] => lookup_596_4(acc),
            [100, 118, 114, 99, 97, 109] => lookup_596_5(acc),
            [100, 121, 110, 97, 109, 105, 99, 45, 100, 110, 115] => lookup_596_6(acc),
            [100, 121, 110, 100, 110, 115] => lookup_596_7(acc),
            [102, 111, 114, 45, 111, 117, 114] => lookup_596_8(acc),
            [102, 111, 114, 117, 109, 122] => lookup_596_9(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 101] => lookup_596_10(acc),
            [103, 114, 111, 107, 115, 45, 116, 104, 105, 115] => lookup_596_11(acc),
            [104, 101, 114, 101, 45, 102, 111, 114, 45, 109, 111, 114, 101] => lookup_596_12(acc),
            [105, 108, 111, 118, 101, 99, 111, 108, 108, 101, 103, 101] => lookup_596_13(acc),
            [107, 110, 111, 119, 115, 105, 116, 97, 108, 108] => lookup_596_14(acc),
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_596_15(acc),
            [110, 111, 45, 105, 112] => lookup_596_16(acc),
            [110, 115, 117, 112, 100, 97, 116, 101] => lookup_596_17(acc),
            [115, 101, 108, 102, 105, 112] => lookup_596_18(acc),
            [118, 45, 105, 110, 102, 111] => lookup_596_19(acc),
            [119, 101, 98, 104, 111, 112] => lookup_596_20(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_597() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_598() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_599() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_600() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_601() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_602_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_602<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 117] => lookup_602_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_603() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_604() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_605() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_606_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_606_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_5_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_5_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_606_5_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_606_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_606_5_0(acc),
            [98, 97, 99, 107, 121, 97, 114, 100, 115] => lookup_606_5_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_606_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_10<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [115, 101, 107, 100, 49] => lookup_606_10_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [117, 107, 48] => lookup_606_11_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_606_18_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_18<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 121, 110, 100, 110, 115] => lookup_606_18_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_26_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_26<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [105, 100] => lookup_606_26_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_34_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_34<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112, 115] => lookup_606_34_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_38_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_38<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_606_38_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_606_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_40_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_40_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_40_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_40_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_40_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_40_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_40_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_40<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112] => lookup_606_40_0(acc),
            [97, 117] => lookup_606_40_1(acc),
            [101, 117] => lookup_606_40_2(acc),
            [105, 110] => lookup_606_40_3(acc),
            [106, 112] => lookup_606_40_4(acc),
            [115, 97] => lookup_606_40_5(acc),
            [117, 115] => lookup_606_40_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_42_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_42<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 101] => lookup_606_42_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_43_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_43<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_606_43_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_606_44_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_44<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_606_44_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_606_45_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_45<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_606_45_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_606_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_48_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_48<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 111, 99, 107] => lookup_606_48_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_49_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_49_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_606_49_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_606_49<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 121, 115] => lookup_606_49_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_53_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_53<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118, 105, 99, 101, 115] => lookup_606_53_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_54_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_54<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_606_54_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_606_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_60_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_60<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_606_60_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_606_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_62_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_62_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_62_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_606_62_0_0(acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_606_62_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_62_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_62_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_62_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_606_62_1_0(acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_606_62_1_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_62_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_62_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_606_62_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_62_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_62_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_62_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_606_62_3_0(acc),
            [114, 101, 115, 101, 114, 118, 100] => lookup_606_62_3_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_62<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_606_62_0(info, labels, acc),
            [100, 105, 115, 114, 101, 99] => lookup_606_62_1(info, labels, acc),
            [112, 114, 111, 100] => lookup_606_62_2(info, labels, acc),
            [116, 101, 115, 116, 105, 110, 103] => lookup_606_62_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_64<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 45, 102, 114, 49] => lookup_606_64_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_68_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_68<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [103] => lookup_606_68_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_606_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_606<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [50, 48, 51, 56] => lookup_606_0(acc),
            [97, 112, 105, 103, 101, 101] => lookup_606_1(acc),
            [97, 122, 117, 114, 101, 99, 111, 110, 116, 97, 105, 110, 101, 114] => {
                lookup_606_2(info, labels, acc)
            }
            [98, 45, 100, 97, 116, 97] => lookup_606_3(acc),
            [98, 97, 99, 107, 112, 108, 97, 110, 101, 97, 112, 112] => lookup_606_4(acc),
            [98, 97, 110, 122, 97, 105, 99, 108, 111, 117, 100] => lookup_606_5(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_606_6(acc),
            [98, 97, 115, 105, 99, 115, 101, 114, 118, 101, 114] => lookup_606_7(acc),
            [98, 101, 97, 103, 108, 101, 98, 111, 97, 114, 100] => lookup_606_8(acc),
            [98, 101, 101, 98, 121, 116, 101] => lookup_606_9(info, labels, acc),
            [98, 101, 101, 98, 121, 116, 101, 97, 112, 112] => lookup_606_10(info, labels, acc),
            [98, 105, 103, 118] => lookup_606_11(info, labels, acc),
            [98, 105, 116, 98, 117, 99, 107, 101, 116] => lookup_606_12(acc),
            [98, 108, 117, 101, 98, 105, 116, 101] => lookup_606_13(acc),
            [98, 111, 120, 102, 117, 115, 101] => lookup_606_14(acc),
            [98, 114, 111, 119, 115, 101, 114, 115, 97, 102, 101, 116, 121, 109, 97, 114, 107] => {
                lookup_606_15(acc)
            }
            [99, 108, 101, 118, 101, 114, 97, 112, 112, 115] => lookup_606_16(acc),
            [99, 111, 109] => lookup_606_17(acc),
            [100, 97, 112, 112, 110, 111, 100, 101] => lookup_606_18(info, labels, acc),
            [100, 101, 100, 121, 110] => lookup_606_19(acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_606_20(acc),
            [100, 114, 117, 100] => lookup_606_21(acc),
            [100, 121, 110, 53, 51] => lookup_606_22(acc),
            [101, 100, 105, 116, 111, 114, 120] => lookup_606_23(acc),
            [101, 100, 117, 103, 105, 116] => lookup_606_24(acc),
            [102, 104, 45, 109, 117, 101, 110, 115, 116, 101, 114] => lookup_606_25(acc),
            [102, 111, 114, 103, 101, 114, 111, 99, 107] => lookup_606_26(info, labels, acc),
            [103, 104, 111, 115, 116] => lookup_606_27(acc),
            [103, 105, 116, 104, 117, 98] => lookup_606_28(acc),
            [103, 105, 116, 108, 97, 98] => lookup_606_29(acc),
            [104, 97, 115, 117, 114, 97, 45, 97, 112, 112] => lookup_606_30(acc),
            [104, 111, 115, 116, 121, 104, 111, 115, 116, 105, 110, 103] => lookup_606_31(acc),
            [104, 122, 99] => lookup_606_32(acc),
            [106, 101, 108, 101] => lookup_606_33(acc),
            [108, 97, 105, 114] => lookup_606_34(info, labels, acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_606_35(acc),
            [108, 111, 108, 105, 112, 111, 112] => lookup_606_36(acc),
            [109, 111, 45, 115, 105, 101, 109, 101, 110, 115] => lookup_606_37(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_606_38(info, labels, acc),
            [109, 117, 115, 105, 99, 105, 97, 110] => lookup_606_39(acc),
            [110, 103, 114, 111, 107] => lookup_606_40(labels, acc),
            [110, 105, 100] => lookup_606_41(acc),
            [110, 111, 100, 101, 97, 114, 116] => lookup_606_42(info, labels, acc),
            [111, 110, 45, 97, 99, 111, 114, 110] => lookup_606_43(info, labels, acc),
            [111, 110, 45, 107, 51, 115] => lookup_606_44(info, labels, acc),
            [111, 110, 45, 114, 105, 111] => lookup_606_45(info, labels, acc),
            [112, 97, 110, 116, 104, 101, 111, 110, 115, 105, 116, 101] => lookup_606_46(acc),
            [112, 114, 111, 116, 111, 110, 101, 116] => lookup_606_47(acc),
            [112, 115, 116, 109, 110] => lookup_606_48(labels, acc),
            [113, 99, 120] => lookup_606_49(labels, acc),
            [113, 111, 116, 111] => lookup_606_50(acc),
            [114, 101, 97, 100, 116, 104, 101, 100, 111, 99, 115] => lookup_606_51(acc),
            [114, 101, 115, 105, 110, 100, 101, 118, 105, 99, 101] => lookup_606_52(acc),
            [114, 101, 115, 105, 110, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_606_53(info, labels, acc)
            }
            [115, 53, 121] => lookup_606_54(info, labels, acc),
            [115, 97, 110, 100, 99, 97, 116, 115] => lookup_606_55(acc),
            [115, 104, 105, 102, 116, 99, 114, 121, 112, 116, 111] => lookup_606_56(acc),
            [115, 104, 105, 102, 116, 101, 100, 105, 116] => lookup_606_57(acc),
            [115, 104, 119] => lookup_606_58(acc),
            [115, 112, 97, 99, 101, 107, 105, 116] => lookup_606_59(acc),
            [115, 116, 111, 108, 111, 115] => lookup_606_60(info, labels, acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_606_61(acc),
            [116, 104, 105, 110, 103, 100, 117, 115, 116] => lookup_606_62(info, labels, acc),
            [116, 105, 99, 107, 101, 116, 115] => lookup_606_63(acc),
            [117, 110, 105, 115, 112, 97, 99, 101] => lookup_606_64(info, labels, acc),
            [117, 112, 108, 105] => lookup_606_65(acc),
            [117, 116, 119, 101, 110, 116, 101] => lookup_606_66(acc),
            [118, 97, 112, 111, 114, 99, 108, 111, 117, 100] => lookup_606_67(acc),
            [118, 98, 114, 112, 108, 115, 98, 120] => lookup_606_68(info, labels, acc),
            [118, 105, 114, 116, 117, 97, 108, 115, 101, 114, 118, 101, 114] => lookup_606_69(acc),
            [119, 101, 98, 116, 104, 105, 110, 103, 115] => lookup_606_70(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_606_71(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_607() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_608_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_608_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_608_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_608_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_608_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_608_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_608<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_608_0(acc),
            [101, 100, 117] => lookup_608_1(acc),
            [103, 111, 118] => lookup_608_2(acc),
            [109, 105, 108] => lookup_608_3(acc),
            [110, 101, 116] => lookup_608_4(acc),
            [111, 114, 103] => lookup_608_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_609_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_609<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_609_0(acc),
            [99, 111] => lookup_609_1(acc),
            [103, 111, 118] => lookup_609_2(acc),
            [105, 100] => lookup_609_3(acc),
            [110, 101, 116] => lookup_609_4(acc),
            [111, 114, 103] => lookup_609_5(acc),
            [115, 99, 104] => lookup_609_6(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 49, 54, 97] => lookup_609_7(acc),
            [120, 110, 45, 45, 109, 103, 98, 97, 51, 97, 52, 102, 114, 97] => lookup_609_8(acc),
            [216, 167, 217, 138, 216, 177, 216, 167, 217, 134] => lookup_609_9(acc),
            [216, 167, 219, 140, 216, 177, 216, 167, 217, 134] => lookup_609_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_610() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_611_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_611<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_611_0(acc),
            [99, 111, 109] => lookup_611_1(acc),
            [99, 117, 112, 99, 97, 107, 101] => lookup_611_2(acc),
            [101, 100, 117] => lookup_611_3(acc),
            [103, 111, 118] => lookup_611_4(acc),
            [105, 110, 116] => lookup_611_5(acc),
            [110, 101, 116] => lookup_611_6(acc),
            [111, 114, 103] => lookup_611_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_612() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_613() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_614() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_219_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_219<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 99] => lookup_615_219_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_615_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_313_0_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_615_313_0_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_615_313_0_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_615_313_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_615_313_0_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_615_313<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 112, 101, 110] => lookup_615_313_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_615_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_382(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_389(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_398(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_417(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_423(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 25usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_429(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_434(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_435(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615_436(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_615<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 104, 111, 109, 101, 112, 97, 103, 101] => lookup_615_0(acc),
            [49, 54, 45, 98] => lookup_615_1(acc),
            [51, 50, 45, 98] => lookup_615_2(acc),
            [54, 52, 45, 98] => lookup_615_3(acc),
            [97, 98, 114] => lookup_615_4(acc),
            [97, 98, 114, 117, 122, 122, 111] => lookup_615_5(acc),
            [97, 103] => lookup_615_6(acc),
            [97, 103, 114, 105, 103, 101, 110, 116, 111] => lookup_615_7(acc),
            [97, 108] => lookup_615_8(acc),
            [97, 108, 101, 115, 115, 97, 110, 100, 114, 105, 97] => lookup_615_9(acc),
            [97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => lookup_615_10(acc),
            [97, 108, 116, 111, 97, 100, 105, 103, 101] => lookup_615_11(acc),
            [97, 110] => lookup_615_12(acc),
            [97, 110, 99, 111, 110, 97] => lookup_615_13(acc),
            [97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105] => {
                lookup_615_14(acc)
            }
            [97, 110, 100, 114, 105, 97, 45, 116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_615_15(acc)
            }
            [97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105] => {
                lookup_615_16(acc)
            }
            [97, 110, 100, 114, 105, 97, 116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_615_17(acc)
            }
            [97, 111] => lookup_615_18(acc),
            [97, 111, 115, 116, 97] => lookup_615_19(acc),
            [97, 111, 115, 116, 97, 45, 118, 97, 108, 108, 101, 121] => lookup_615_20(acc),
            [97, 111, 115, 116, 97, 118, 97, 108, 108, 101, 121] => lookup_615_21(acc),
            [97, 111, 115, 116, 101] => lookup_615_22(acc),
            [97, 112] => lookup_615_23(acc),
            [97, 113] => lookup_615_24(acc),
            [97, 113, 117, 105, 108, 97] => lookup_615_25(acc),
            [97, 114] => lookup_615_26(acc),
            [97, 114, 101, 122, 122, 111] => lookup_615_27(acc),
            [97, 115, 99, 111, 108, 105, 45, 112, 105, 99, 101, 110, 111] => lookup_615_28(acc),
            [97, 115, 99, 111, 108, 105, 112, 105, 99, 101, 110, 111] => lookup_615_29(acc),
            [97, 115, 116, 105] => lookup_615_30(acc),
            [97, 116] => lookup_615_31(acc),
            [97, 118] => lookup_615_32(acc),
            [97, 118, 101, 108, 108, 105, 110, 111] => lookup_615_33(acc),
            [98, 97] => lookup_615_34(acc),
            [98, 97, 108, 115, 97, 110] => lookup_615_35(acc),
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_615_36(acc)
            }
            [98, 97, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_615_37(acc)
            }
            [98, 97, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_615_38(acc)
            }
            [98, 97, 114, 105] => lookup_615_39(acc),
            [98, 97, 114, 108, 101, 116, 116, 97, 45, 116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_615_40(acc)
            }
            [98, 97, 114, 108, 101, 116, 116, 97, 116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97] => {
                lookup_615_41(acc)
            }
            [98, 97, 115] => lookup_615_42(acc),
            [98, 97, 115, 105, 108, 105, 99, 97, 116, 97] => lookup_615_43(acc),
            [98, 101, 108, 108, 117, 110, 111] => lookup_615_44(acc),
            [98, 101, 110, 101, 118, 101, 110, 116, 111] => lookup_615_45(acc),
            [98, 101, 114, 103, 97, 109, 111] => lookup_615_46(acc),
            [98, 103] => lookup_615_47(acc),
            [98, 105] => lookup_615_48(acc),
            [98, 105, 101, 108, 108, 97] => lookup_615_49(acc),
            [98, 108] => lookup_615_50(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_615_51(acc),
            [98, 110] => lookup_615_52(acc),
            [98, 111] => lookup_615_53(acc),
            [98, 111, 108, 111, 103, 110, 97] => lookup_615_54(acc),
            [98, 111, 108, 122, 97, 110, 111] => lookup_615_55(acc),
            [98, 111, 108, 122, 97, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_615_56(acc)
            }
            [98, 111, 122, 101, 110] => lookup_615_57(acc),
            [98, 111, 122, 101, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_615_58(acc)
            }
            [98, 111, 122, 101, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_615_59(acc)
            }
            [98, 111, 122, 101, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_615_60(acc)
            }
            [98, 114] => lookup_615_61(acc),
            [98, 114, 101, 115, 99, 105, 97] => lookup_615_62(acc),
            [98, 114, 105, 110, 100, 105, 115, 105] => lookup_615_63(acc),
            [98, 115] => lookup_615_64(acc),
            [98, 116] => lookup_615_65(acc),
            [98, 117, 108, 115, 97, 110] => lookup_615_66(acc),
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_615_67(acc)
            }
            [98, 117, 108, 115, 97, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_615_68(acc)
            }
            [98, 117, 108, 115, 97, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_615_69(acc)
            }
            [98, 122] => lookup_615_70(acc),
            [99, 97] => lookup_615_71(acc),
            [99, 97, 103, 108, 105, 97, 114, 105] => lookup_615_72(acc),
            [99, 97, 108] => lookup_615_73(acc),
            [99, 97, 108, 97, 98, 114, 105, 97] => lookup_615_74(acc),
            [99, 97, 108, 116, 97, 110, 105, 115, 115, 101, 116, 116, 97] => lookup_615_75(acc),
            [99, 97, 109] => lookup_615_76(acc),
            [99, 97, 109, 112, 97, 110, 105, 97] => lookup_615_77(acc),
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 45, 109, 101, 100, 105, 111] => {
                lookup_615_78(acc)
            }
            [99, 97, 109, 112, 105, 100, 97, 110, 111, 109, 101, 100, 105, 111] => {
                lookup_615_79(acc)
            }
            [99, 97, 109, 112, 111, 98, 97, 115, 115, 111] => lookup_615_80(acc),
            [99, 97, 114, 98, 111, 110, 105, 97, 45, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_615_81(acc)
            }
            [99, 97, 114, 98, 111, 110, 105, 97, 105, 103, 108, 101, 115, 105, 97, 115] => {
                lookup_615_82(acc)
            }
            [99, 97, 114, 114, 97, 114, 97, 45, 109, 97, 115, 115, 97] => lookup_615_83(acc),
            [99, 97, 114, 114, 97, 114, 97, 109, 97, 115, 115, 97] => lookup_615_84(acc),
            [99, 97, 115, 101, 114, 116, 97] => lookup_615_85(acc),
            [99, 97, 116, 97, 110, 105, 97] => lookup_615_86(acc),
            [99, 97, 116, 97, 110, 122, 97, 114, 111] => lookup_615_87(acc),
            [99, 98] => lookup_615_88(acc),
            [99, 101] => lookup_615_89(acc),
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 105] => lookup_615_90(acc),
            [99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 195, 172] => lookup_615_91(acc),
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 105] => lookup_615_92(acc),
            [99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 195, 172] => lookup_615_93(acc),
            [99, 104] => lookup_615_94(acc),
            [99, 104, 105, 101, 116, 105] => lookup_615_95(acc),
            [99, 105] => lookup_615_96(acc),
            [99, 108] => lookup_615_97(acc),
            [99, 110] => lookup_615_98(acc),
            [99, 111] => lookup_615_99(acc),
            [99, 111, 109, 111] => lookup_615_100(acc),
            [99, 111, 115, 101, 110, 122, 97] => lookup_615_101(acc),
            [99, 114] => lookup_615_102(acc),
            [99, 114, 101, 109, 111, 110, 97] => lookup_615_103(acc),
            [99, 114, 111, 116, 111, 110, 101] => lookup_615_104(acc),
            [99, 115] => lookup_615_105(acc),
            [99, 116] => lookup_615_106(acc),
            [99, 117, 110, 101, 111] => lookup_615_107(acc),
            [99, 122] => lookup_615_108(acc),
            [100, 101, 108, 108, 45, 111, 103, 108, 105, 97, 115, 116, 114, 97] => {
                lookup_615_109(acc)
            }
            [100, 101, 108, 108, 111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_615_110(acc),
            [101, 100, 117] => lookup_615_111(acc),
            [101, 109, 105, 108, 105, 97, 45, 114, 111, 109, 97, 103, 110, 97] => {
                lookup_615_112(acc)
            }
            [101, 109, 105, 108, 105, 97, 114, 111, 109, 97, 103, 110, 97] => lookup_615_113(acc),
            [101, 109, 114] => lookup_615_114(acc),
            [101, 110] => lookup_615_115(acc),
            [101, 110, 110, 97] => lookup_615_116(acc),
            [102, 99] => lookup_615_117(acc),
            [102, 101] => lookup_615_118(acc),
            [102, 101, 114, 109, 111] => lookup_615_119(acc),
            [102, 101, 114, 114, 97, 114, 97] => lookup_615_120(acc),
            [102, 103] => lookup_615_121(acc),
            [102, 105] => lookup_615_122(acc),
            [102, 105, 114, 101, 110, 122, 101] => lookup_615_123(acc),
            [102, 108, 111, 114, 101, 110, 99, 101] => lookup_615_124(acc),
            [102, 109] => lookup_615_125(acc),
            [102, 111, 103, 103, 105, 97] => lookup_615_126(acc),
            [102, 111, 114, 108, 105, 45, 99, 101, 115, 101, 110, 97] => lookup_615_127(acc),
            [102, 111, 114, 108, 105, 99, 101, 115, 101, 110, 97] => lookup_615_128(acc),
            [102, 111, 114, 108, 195, 172, 45, 99, 101, 115, 101, 110, 97] => lookup_615_129(acc),
            [102, 111, 114, 108, 195, 172, 99, 101, 115, 101, 110, 97] => lookup_615_130(acc),
            [102, 114] => lookup_615_131(acc),
            [102, 114, 105, 117, 108, 105, 45, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_615_132(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_615_133(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_615_134(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_615_135(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_615_136(acc)
            }
            [102, 114, 105, 117, 108, 105, 45, 118, 103, 105, 117, 108, 105, 97] => {
                lookup_615_137(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_615_138(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_615_139(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 103, 105, 117, 108, 105, 97] => {
                lookup_615_140(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 45, 103, 105, 117, 108, 105, 97] => {
                lookup_615_141(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 101, 110, 101, 122, 105, 97, 103, 105, 117, 108, 105, 97] => {
                lookup_615_142(acc)
            }
            [102, 114, 105, 117, 108, 105, 118, 103, 105, 117, 108, 105, 97] => lookup_615_143(acc),
            [102, 114, 111, 115, 105, 110, 111, 110, 101] => lookup_615_144(acc),
            [102, 118, 103] => lookup_615_145(acc),
            [103, 101] => lookup_615_146(acc),
            [103, 101, 110, 111, 97] => lookup_615_147(acc),
            [103, 101, 110, 111, 118, 97] => lookup_615_148(acc),
            [103, 111] => lookup_615_149(acc),
            [103, 111, 114, 105, 122, 105, 97] => lookup_615_150(acc),
            [103, 111, 118] => lookup_615_151(acc),
            [103, 114] => lookup_615_152(acc),
            [103, 114, 111, 115, 115, 101, 116, 111] => lookup_615_153(acc),
            [105, 98, 120, 111, 115] => lookup_615_154(acc),
            [105, 103, 108, 101, 115, 105, 97, 115, 45, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_615_155(acc)
            }
            [105, 103, 108, 101, 115, 105, 97, 115, 99, 97, 114, 98, 111, 110, 105, 97] => {
                lookup_615_156(acc)
            }
            [105, 108, 105, 97, 100, 98, 111, 120, 111, 115] => lookup_615_157(acc),
            [105, 109] => lookup_615_158(acc),
            [105, 109, 112, 101, 114, 105, 97] => lookup_615_159(acc),
            [105, 115] => lookup_615_160(acc),
            [105, 115, 101, 114, 110, 105, 97] => lookup_615_161(acc),
            [107, 114] => lookup_615_162(acc),
            [108, 97, 45, 115, 112, 101, 122, 105, 97] => lookup_615_163(acc),
            [108, 97, 113, 117, 105, 108, 97] => lookup_615_164(acc),
            [108, 97, 115, 112, 101, 122, 105, 97] => lookup_615_165(acc),
            [108, 97, 116, 105, 110, 97] => lookup_615_166(acc),
            [108, 97, 122] => lookup_615_167(acc),
            [108, 97, 122, 105, 111] => lookup_615_168(acc),
            [108, 99] => lookup_615_169(acc),
            [108, 101] => lookup_615_170(acc),
            [108, 101, 99, 99, 101] => lookup_615_171(acc),
            [108, 101, 99, 99, 111] => lookup_615_172(acc),
            [108, 105] => lookup_615_173(acc),
            [108, 105, 103] => lookup_615_174(acc),
            [108, 105, 103, 117, 114, 105, 97] => lookup_615_175(acc),
            [108, 105, 118, 111, 114, 110, 111] => lookup_615_176(acc),
            [108, 111] => lookup_615_177(acc),
            [108, 111, 100, 105] => lookup_615_178(acc),
            [108, 111, 109] => lookup_615_179(acc),
            [108, 111, 109, 98, 97, 114, 100, 105, 97] => lookup_615_180(acc),
            [108, 111, 109, 98, 97, 114, 100, 121] => lookup_615_181(acc),
            [108, 116] => lookup_615_182(acc),
            [108, 117] => lookup_615_183(acc),
            [108, 117, 99, 97, 110, 105, 97] => lookup_615_184(acc),
            [108, 117, 99, 99, 97] => lookup_615_185(acc),
            [109, 97, 99, 101, 114, 97, 116, 97] => lookup_615_186(acc),
            [109, 97, 110, 116, 111, 118, 97] => lookup_615_187(acc),
            [109, 97, 114] => lookup_615_188(acc),
            [109, 97, 114, 99, 104, 101] => lookup_615_189(acc),
            [109, 97, 115, 115, 97, 45, 99, 97, 114, 114, 97, 114, 97] => lookup_615_190(acc),
            [109, 97, 115, 115, 97, 99, 97, 114, 114, 97, 114, 97] => lookup_615_191(acc),
            [109, 97, 116, 101, 114, 97] => lookup_615_192(acc),
            [109, 98] => lookup_615_193(acc),
            [109, 99] => lookup_615_194(acc),
            [109, 101] => lookup_615_195(acc),
            [109, 101, 100, 105, 111, 45, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_615_196(acc)
            }
            [109, 101, 100, 105, 111, 99, 97, 109, 112, 105, 100, 97, 110, 111] => {
                lookup_615_197(acc)
            }
            [109, 101, 115, 115, 105, 110, 97] => lookup_615_198(acc),
            [109, 105] => lookup_615_199(acc),
            [109, 105, 108, 97, 110] => lookup_615_200(acc),
            [109, 105, 108, 97, 110, 111] => lookup_615_201(acc),
            [109, 110] => lookup_615_202(acc),
            [109, 111] => lookup_615_203(acc),
            [109, 111, 100, 101, 110, 97] => lookup_615_204(acc),
            [109, 111, 108] => lookup_615_205(acc),
            [109, 111, 108, 105, 115, 101] => lookup_615_206(acc),
            [109, 111, 110, 122, 97] => lookup_615_207(acc),
            [109, 111, 110, 122, 97, 45, 98, 114, 105, 97, 110, 122, 97] => lookup_615_208(acc),
            [109, 111, 110, 122, 97, 45, 101, 45, 100, 101, 108, 108, 97, 45, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_615_209(acc)
            }
            [109, 111, 110, 122, 97, 98, 114, 105, 97, 110, 122, 97] => lookup_615_210(acc),
            [109, 111, 110, 122, 97, 101, 98, 114, 105, 97, 110, 122, 97] => lookup_615_211(acc),
            [109, 111, 110, 122, 97, 101, 100, 101, 108, 108, 97, 98, 114, 105, 97, 110, 122, 97] => {
                lookup_615_212(acc)
            }
            [109, 115] => lookup_615_213(acc),
            [109, 116] => lookup_615_214(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_615_215(acc),
            [110, 97] => lookup_615_216(acc),
            [110, 97, 112, 108, 101, 115] => lookup_615_217(acc),
            [110, 97, 112, 111, 108, 105] => lookup_615_218(acc),
            [110, 101, 101, 110] => lookup_615_219(info, labels, acc),
            [110, 111] => lookup_615_220(acc),
            [110, 111, 118, 97, 114, 97] => lookup_615_221(acc),
            [110, 117] => lookup_615_222(acc),
            [110, 117, 111, 114, 111] => lookup_615_223(acc),
            [111, 103] => lookup_615_224(acc),
            [111, 103, 108, 105, 97, 115, 116, 114, 97] => lookup_615_225(acc),
            [111, 108, 98, 105, 97, 45, 116, 101, 109, 112, 105, 111] => lookup_615_226(acc),
            [111, 108, 98, 105, 97, 116, 101, 109, 112, 105, 111] => lookup_615_227(acc),
            [111, 114] => lookup_615_228(acc),
            [111, 114, 105, 115, 116, 97, 110, 111] => lookup_615_229(acc),
            [111, 116] => lookup_615_230(acc),
            [112, 97] => lookup_615_231(acc),
            [112, 97, 100, 111, 118, 97] => lookup_615_232(acc),
            [112, 97, 100, 117, 97] => lookup_615_233(acc),
            [112, 97, 108, 101, 114, 109, 111] => lookup_615_234(acc),
            [112, 97, 114, 109, 97] => lookup_615_235(acc),
            [112, 97, 118, 105, 97] => lookup_615_236(acc),
            [112, 99] => lookup_615_237(acc),
            [112, 100] => lookup_615_238(acc),
            [112, 101] => lookup_615_239(acc),
            [112, 101, 114, 117, 103, 105, 97] => lookup_615_240(acc),
            [112, 101, 115, 97, 114, 111, 45, 117, 114, 98, 105, 110, 111] => lookup_615_241(acc),
            [112, 101, 115, 97, 114, 111, 117, 114, 98, 105, 110, 111] => lookup_615_242(acc),
            [112, 101, 115, 99, 97, 114, 97] => lookup_615_243(acc),
            [112, 103] => lookup_615_244(acc),
            [112, 105] => lookup_615_245(acc),
            [112, 105, 97, 99, 101, 110, 122, 97] => lookup_615_246(acc),
            [112, 105, 101, 100, 109, 111, 110, 116] => lookup_615_247(acc),
            [112, 105, 101, 109, 111, 110, 116, 101] => lookup_615_248(acc),
            [112, 105, 115, 97] => lookup_615_249(acc),
            [112, 105, 115, 116, 111, 105, 97] => lookup_615_250(acc),
            [112, 109, 110] => lookup_615_251(acc),
            [112, 110] => lookup_615_252(acc),
            [112, 111] => lookup_615_253(acc),
            [112, 111, 114, 100, 101, 110, 111, 110, 101] => lookup_615_254(acc),
            [112, 111, 116, 101, 110, 122, 97] => lookup_615_255(acc),
            [112, 114] => lookup_615_256(acc),
            [112, 114, 97, 116, 111] => lookup_615_257(acc),
            [112, 116] => lookup_615_258(acc),
            [112, 117] => lookup_615_259(acc),
            [112, 117, 103] => lookup_615_260(acc),
            [112, 117, 103, 108, 105, 97] => lookup_615_261(acc),
            [112, 118] => lookup_615_262(acc),
            [112, 122] => lookup_615_263(acc),
            [114, 97] => lookup_615_264(acc),
            [114, 97, 103, 117, 115, 97] => lookup_615_265(acc),
            [114, 97, 118, 101, 110, 110, 97] => lookup_615_266(acc),
            [114, 99] => lookup_615_267(acc),
            [114, 101] => lookup_615_268(acc),
            [114, 101, 103, 103, 105, 111, 45, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_615_269(acc)
            }
            [114, 101, 103, 103, 105, 111, 45, 101, 109, 105, 108, 105, 97] => lookup_615_270(acc),
            [114, 101, 103, 103, 105, 111, 99, 97, 108, 97, 98, 114, 105, 97] => {
                lookup_615_271(acc)
            }
            [114, 101, 103, 103, 105, 111, 101, 109, 105, 108, 105, 97] => lookup_615_272(acc),
            [114, 103] => lookup_615_273(acc),
            [114, 105] => lookup_615_274(acc),
            [114, 105, 101, 116, 105] => lookup_615_275(acc),
            [114, 105, 109, 105, 110, 105] => lookup_615_276(acc),
            [114, 109] => lookup_615_277(acc),
            [114, 110] => lookup_615_278(acc),
            [114, 111] => lookup_615_279(acc),
            [114, 111, 109, 97] => lookup_615_280(acc),
            [114, 111, 109, 101] => lookup_615_281(acc),
            [114, 111, 118, 105, 103, 111] => lookup_615_282(acc),
            [115, 97] => lookup_615_283(acc),
            [115, 97, 108, 101, 114, 110, 111] => lookup_615_284(acc),
            [115, 97, 114] => lookup_615_285(acc),
            [115, 97, 114, 100, 101, 103, 110, 97] => lookup_615_286(acc),
            [115, 97, 114, 100, 105, 110, 105, 97] => lookup_615_287(acc),
            [115, 97, 115, 115, 97, 114, 105] => lookup_615_288(acc),
            [115, 97, 118, 111, 110, 97] => lookup_615_289(acc),
            [115, 105] => lookup_615_290(acc),
            [115, 105, 99] => lookup_615_291(acc),
            [115, 105, 99, 105, 108, 105, 97] => lookup_615_292(acc),
            [115, 105, 99, 105, 108, 121] => lookup_615_293(acc),
            [115, 105, 101, 110, 97] => lookup_615_294(acc),
            [115, 105, 114, 97, 99, 117, 115, 97] => lookup_615_295(acc),
            [115, 111] => lookup_615_296(acc),
            [115, 111, 110, 100, 114, 105, 111] => lookup_615_297(acc),
            [115, 112] => lookup_615_298(acc),
            [115, 114] => lookup_615_299(acc),
            [115, 115] => lookup_615_300(acc),
            [115, 117, 101, 100, 116, 105, 114, 111, 108] => lookup_615_301(acc),
            [115, 118] => lookup_615_302(acc),
            [115, 121, 110, 99, 108, 111, 117, 100] => lookup_615_303(acc),
            [115, 195, 188, 100, 116, 105, 114, 111, 108] => lookup_615_304(acc),
            [116, 97] => lookup_615_305(acc),
            [116, 97, 97] => lookup_615_306(acc),
            [116, 97, 114, 97, 110, 116, 111] => lookup_615_307(acc),
            [116, 101] => lookup_615_308(acc),
            [116, 101, 109, 112, 105, 111, 45, 111, 108, 98, 105, 97] => lookup_615_309(acc),
            [116, 101, 109, 112, 105, 111, 111, 108, 98, 105, 97] => lookup_615_310(acc),
            [116, 101, 114, 97, 109, 111] => lookup_615_311(acc),
            [116, 101, 114, 110, 105] => lookup_615_312(acc),
            [116, 105, 109] => lookup_615_313(info, labels, acc),
            [116, 110] => lookup_615_314(acc),
            [116, 111] => lookup_615_315(acc),
            [116, 111, 114, 105, 110, 111] => lookup_615_316(acc),
            [116, 111, 115] => lookup_615_317(acc),
            [116, 111, 115, 99, 97, 110, 97] => lookup_615_318(acc),
            [116, 112] => lookup_615_319(acc),
            [116, 114] => lookup_615_320(acc),
            [116, 114, 97, 110, 105, 45, 97, 110, 100, 114, 105, 97, 45, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_615_321(acc)
            }
            [116, 114, 97, 110, 105, 45, 98, 97, 114, 108, 101, 116, 116, 97, 45, 97, 110, 100, 114, 105, 97] => {
                lookup_615_322(acc)
            }
            [116, 114, 97, 110, 105, 97, 110, 100, 114, 105, 97, 98, 97, 114, 108, 101, 116, 116, 97] => {
                lookup_615_323(acc)
            }
            [116, 114, 97, 110, 105, 98, 97, 114, 108, 101, 116, 116, 97, 97, 110, 100, 114, 105, 97] => {
                lookup_615_324(acc)
            }
            [116, 114, 97, 112, 97, 110, 105] => lookup_615_325(acc),
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_615_326(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_615_327(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_615_328(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_615_329(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_615_330(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_615_331(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111] => lookup_615_332(acc),
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_615_333(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 97, 100, 105, 103, 101] => {
                lookup_615_334(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_615_335(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_615_336(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_615_337(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 116, 105, 114, 111, 108] => {
                lookup_615_338(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_615_339(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_615_340(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_615_341(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_615_342(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_615_343(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_615_344(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 45, 97, 100, 105, 103, 101] => {
                lookup_615_345(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 97, 100, 105, 103, 101] => {
                lookup_615_346(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 45, 97, 100, 105, 103, 101] => {
                lookup_615_347(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 97, 108, 116, 111, 97, 100, 105, 103, 101] => {
                lookup_615_348(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 45, 116, 105, 114, 111, 108] => {
                lookup_615_349(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 116, 105, 114, 111, 108] => {
                lookup_615_350(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_615_351(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_615_352(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_615_353(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_615_354(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_615_355(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 111, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_615_356(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_615_357(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 100, 116, 105, 114, 111, 108] => {
                lookup_615_358(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_615_359(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 117, 101, 100, 116, 105, 114, 111, 108] => {
                lookup_615_360(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 45, 116, 105, 114, 111, 108] => {
                lookup_615_361(acc)
            }
            [116, 114, 101, 110, 116, 105, 110, 115, 195, 188, 100, 116, 105, 114, 111, 108] => {
                lookup_615_362(acc)
            }
            [116, 114, 101, 110, 116, 111] => lookup_615_363(acc),
            [116, 114, 101, 118, 105, 115, 111] => lookup_615_364(acc),
            [116, 114, 105, 101, 115, 116, 101] => lookup_615_365(acc),
            [116, 115] => lookup_615_366(acc),
            [116, 117, 114, 105, 110] => lookup_615_367(acc),
            [116, 117, 115, 99, 97, 110, 121] => lookup_615_368(acc),
            [116, 118] => lookup_615_369(acc),
            [117, 100] => lookup_615_370(acc),
            [117, 100, 105, 110, 101] => lookup_615_371(acc),
            [117, 109, 98] => lookup_615_372(acc),
            [117, 109, 98, 114, 105, 97] => lookup_615_373(acc),
            [117, 114, 98, 105, 110, 111, 45, 112, 101, 115, 97, 114, 111] => lookup_615_374(acc),
            [117, 114, 98, 105, 110, 111, 112, 101, 115, 97, 114, 111] => lookup_615_375(acc),
            [118, 97] => lookup_615_376(acc),
            [118, 97, 108, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_615_377(acc),
            [118, 97, 108, 45, 100, 97, 111, 115, 116, 97] => lookup_615_378(acc),
            [118, 97, 108, 100, 45, 97, 111, 115, 116, 97] => lookup_615_379(acc),
            [118, 97, 108, 100, 97, 111, 115, 116, 97] => lookup_615_380(acc),
            [118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 97] => lookup_615_381(acc),
            [118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 97] => lookup_615_382(acc),
            [118, 97, 108, 108, 101, 45, 100, 97, 111, 115, 116, 97] => lookup_615_383(acc),
            [118, 97, 108, 108, 101, 97, 111, 115, 116, 97] => lookup_615_384(acc),
            [118, 97, 108, 108, 101, 100, 45, 97, 111, 115, 116, 97] => lookup_615_385(acc),
            [118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 97] => lookup_615_386(acc),
            [118, 97, 108, 108, 101, 101, 45, 97, 111, 115, 116, 101] => lookup_615_387(acc),
            [118, 97, 108, 108, 101, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_615_388(acc)
            }
            [118, 97, 108, 108, 101, 101, 97, 111, 115, 116, 101] => lookup_615_389(acc),
            [118, 97, 108, 108, 101, 101, 100, 97, 111, 115, 116, 101] => lookup_615_390(acc),
            [118, 97, 108, 108, 195, 169, 101, 45, 97, 111, 115, 116, 101] => lookup_615_391(acc),
            [118, 97, 108, 108, 195, 169, 101, 45, 100, 45, 97, 111, 115, 116, 101] => {
                lookup_615_392(acc)
            }
            [118, 97, 108, 108, 195, 169, 101, 97, 111, 115, 116, 101] => lookup_615_393(acc),
            [118, 97, 108, 108, 195, 169, 101, 100, 97, 111, 115, 116, 101] => lookup_615_394(acc),
            [118, 97, 111] => lookup_615_395(acc),
            [118, 97, 114, 101, 115, 101] => lookup_615_396(acc),
            [118, 98] => lookup_615_397(acc),
            [118, 99] => lookup_615_398(acc),
            [118, 100, 97] => lookup_615_399(acc),
            [118, 101] => lookup_615_400(acc),
            [118, 101, 110] => lookup_615_401(acc),
            [118, 101, 110, 101, 116, 111] => lookup_615_402(acc),
            [118, 101, 110, 101, 122, 105, 97] => lookup_615_403(acc),
            [118, 101, 110, 105, 99, 101] => lookup_615_404(acc),
            [118, 101, 114, 98, 97, 110, 105, 97] => lookup_615_405(acc),
            [118, 101, 114, 99, 101, 108, 108, 105] => lookup_615_406(acc),
            [118, 101, 114, 111, 110, 97] => lookup_615_407(acc),
            [118, 105] => lookup_615_408(acc),
            [118, 105, 98, 111, 45, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_615_409(acc),
            [118, 105, 98, 111, 118, 97, 108, 101, 110, 116, 105, 97] => lookup_615_410(acc),
            [118, 105, 99, 101, 110, 122, 97] => lookup_615_411(acc),
            [118, 105, 116, 101, 114, 98, 111] => lookup_615_412(acc),
            [118, 114] => lookup_615_413(acc),
            [118, 115] => lookup_615_414(acc),
            [118, 116] => lookup_615_415(acc),
            [118, 118] => lookup_615_416(acc),
            [120, 110, 45, 45, 98, 97, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_615_417(acc)
            }
            [120, 110, 45, 45, 98, 111, 122, 101, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 50, 111, 98] => {
                lookup_615_418(acc)
            }
            [120, 110, 45, 45, 98, 117, 108, 115, 97, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_615_419(acc)
            }
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 45, 102, 111, 114, 108, 45, 109, 99, 98] => {
                lookup_615_420(acc)
            }
            [120, 110, 45, 45, 99, 101, 115, 101, 110, 97, 102, 111, 114, 108, 45, 105, 56, 97] => {
                lookup_615_421(acc)
            }
            [120, 110, 45, 45, 102, 111, 114, 108, 45, 99, 101, 115, 101, 110, 97, 45, 102, 99, 98] => {
                lookup_615_422(acc)
            }
            [120, 110, 45, 45, 102, 111, 114, 108, 99, 101, 115, 101, 110, 97, 45, 99, 56, 97] => {
                lookup_615_423(acc)
            }
            [120, 110, 45, 45, 115, 100, 116, 105, 114, 111, 108, 45, 110, 50, 97] => {
                lookup_615_424(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_615_425(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 45, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_615_426(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 45, 116, 105, 114, 111, 108, 45, 99, 51, 98] => {
                lookup_615_427(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 45, 115, 100, 116, 105, 114, 111, 108, 45, 115, 122, 98] => {
                lookup_615_428(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 45, 116, 105, 114, 111, 108, 45, 114, 122, 98] => {
                lookup_615_429(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 111, 115, 100, 116, 105, 114, 111, 108, 45, 55, 118, 98] => {
                lookup_615_430(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 45, 116, 105, 114, 111, 108, 45, 54, 118, 98] => {
                lookup_615_431(acc)
            }
            [120, 110, 45, 45, 116, 114, 101, 110, 116, 105, 110, 115, 100, 116, 105, 114, 111, 108, 45, 110, 115, 98] => {
                lookup_615_432(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_615_433(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 45, 100, 45, 97, 111, 115, 116, 101, 45, 101, 104, 98] => {
                lookup_615_434(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 97, 111, 115, 116, 101, 45, 101, 55, 97] => {
                lookup_615_435(acc)
            }
            [120, 110, 45, 45, 118, 97, 108, 108, 101, 100, 97, 111, 115, 116, 101, 45, 101, 98, 98] => {
                lookup_615_436(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_616() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_617() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_618() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_619() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_620() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_621_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_621_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_621_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_621_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_621<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_621_0(acc),
            [110, 101, 116] => lookup_621_1(acc),
            [111, 102] => lookup_621_2(acc),
            [111, 114, 103] => lookup_621_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_622() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_623() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_624() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_625() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_626() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_627<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_627_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_628() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_629() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_630<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_630_0(acc),
            [101, 100, 117] => lookup_630_1(acc),
            [103, 111, 118] => lookup_630_2(acc),
            [109, 105, 108] => lookup_630_3(acc),
            [110, 97, 109, 101] => lookup_630_4(acc),
            [110, 101, 116] => lookup_630_5(acc),
            [111, 114, 103] => lookup_630_6(acc),
            [115, 99, 104] => lookup_630_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_631() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_632() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_633() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_634() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 115, 97, 105] => lookup_635_3_0(acc),
            [97, 109, 97] => lookup_635_3_1(acc),
            [97, 110, 106, 111] => lookup_635_3_2(acc),
            [97, 115, 117, 107, 101] => lookup_635_3_3(acc),
            [99, 104, 105, 114, 121, 117] => lookup_635_3_4(acc),
            [99, 104, 105, 116, 97] => lookup_635_3_5(acc),
            [102, 117, 115, 111] => lookup_635_3_6(acc),
            [103, 97, 109, 97, 103, 111, 114, 105] => lookup_635_3_7(acc),
            [104, 97, 110, 100, 97] => lookup_635_3_8(acc),
            [104, 97, 122, 117] => lookup_635_3_9(acc),
            [104, 101, 107, 105, 110, 97, 110] => lookup_635_3_10(acc),
            [104, 105, 103, 97, 115, 104, 105, 117, 114, 97] => lookup_635_3_11(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_635_3_12(acc),
            [105, 110, 97, 122, 97, 119, 97] => lookup_635_3_13(acc),
            [105, 110, 117, 121, 97, 109, 97] => lookup_635_3_14(acc),
            [105, 115, 115, 104, 105, 107, 105] => lookup_635_3_15(acc),
            [105, 119, 97, 107, 117, 114, 97] => lookup_635_3_16(acc),
            [107, 97, 110, 105, 101] => lookup_635_3_17(acc),
            [107, 97, 114, 105, 121, 97] => lookup_635_3_18(acc),
            [107, 97, 115, 117, 103, 97, 105] => lookup_635_3_19(acc),
            [107, 105, 114, 97] => lookup_635_3_20(acc),
            [107, 105, 121, 111, 115, 117] => lookup_635_3_21(acc),
            [107, 111, 109, 97, 107, 105] => lookup_635_3_22(acc),
            [107, 111, 110, 97, 110] => lookup_635_3_23(acc),
            [107, 111, 116, 97] => lookup_635_3_24(acc),
            [109, 105, 104, 97, 109, 97] => lookup_635_3_25(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_635_3_26(acc),
            [110, 105, 115, 104, 105, 111] => lookup_635_3_27(acc),
            [110, 105, 115, 115, 104, 105, 110] => lookup_635_3_28(acc),
            [111, 98, 117] => lookup_635_3_29(acc),
            [111, 103, 117, 99, 104, 105] => lookup_635_3_30(acc),
            [111, 104, 97, 114, 117] => lookup_635_3_31(acc),
            [111, 107, 97, 122, 97, 107, 105] => lookup_635_3_32(acc),
            [111, 119, 97, 114, 105, 97, 115, 97, 104, 105] => lookup_635_3_33(acc),
            [115, 101, 116, 111] => lookup_635_3_34(acc),
            [115, 104, 105, 107, 97, 116, 115, 117] => lookup_635_3_35(acc),
            [115, 104, 105, 110, 115, 104, 105, 114, 111] => lookup_635_3_36(acc),
            [115, 104, 105, 116, 97, 114, 97] => lookup_635_3_37(acc),
            [116, 97, 104, 97, 114, 97] => lookup_635_3_38(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_635_3_39(acc),
            [116, 111, 98, 105, 115, 104, 105, 109, 97] => lookup_635_3_40(acc),
            [116, 111, 101, 105] => lookup_635_3_41(acc),
            [116, 111, 103, 111] => lookup_635_3_42(acc),
            [116, 111, 107, 97, 105] => lookup_635_3_43(acc),
            [116, 111, 107, 111, 110, 97, 109, 101] => lookup_635_3_44(acc),
            [116, 111, 121, 111, 97, 107, 101] => lookup_635_3_45(acc),
            [116, 111, 121, 111, 104, 97, 115, 104, 105] => lookup_635_3_46(acc),
            [116, 111, 121, 111, 107, 97, 119, 97] => lookup_635_3_47(acc),
            [116, 111, 121, 111, 110, 101] => lookup_635_3_48(acc),
            [116, 111, 121, 111, 116, 97] => lookup_635_3_49(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_635_3_50(acc),
            [121, 97, 116, 111, 109, 105] => lookup_635_3_51(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 105, 116, 97] => lookup_635_4_0(acc),
            [100, 97, 105, 115, 101, 110] => lookup_635_4_1(acc),
            [102, 117, 106, 105, 115, 97, 116, 111] => lookup_635_4_2(acc),
            [103, 111, 106, 111, 109, 101] => lookup_635_4_3(acc),
            [104, 97, 99, 104, 105, 114, 111, 103, 97, 116, 97] => lookup_635_4_4(acc),
            [104, 97, 112, 112, 111, 117] => lookup_635_4_5(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 97, 114, 117, 115, 101] => lookup_635_4_6(acc),
            [104, 111, 110, 106, 111] => lookup_635_4_7(acc),
            [104, 111, 110, 106, 121, 111] => lookup_635_4_8(acc),
            [105, 107, 97, 119, 97] => lookup_635_4_9(acc),
            [107, 97, 109, 105, 107, 111, 97, 110, 105] => lookup_635_4_10(acc),
            [107, 97, 109, 105, 111, 107, 97] => lookup_635_4_11(acc),
            [107, 97, 116, 97, 103, 97, 109, 105] => lookup_635_4_12(acc),
            [107, 97, 122, 117, 110, 111] => lookup_635_4_13(acc),
            [107, 105, 116, 97, 97, 107, 105, 116, 97] => lookup_635_4_14(acc),
            [107, 111, 115, 97, 107, 97] => lookup_635_4_15(acc),
            [107, 121, 111, 119, 97] => lookup_635_4_16(acc),
            [109, 105, 115, 97, 116, 111] => lookup_635_4_17(acc),
            [109, 105, 116, 97, 110, 101] => lookup_635_4_18(acc),
            [109, 111, 114, 105, 121, 111, 115, 104, 105] => lookup_635_4_19(acc),
            [110, 105, 107, 97, 104, 111] => lookup_635_4_20(acc),
            [110, 111, 115, 104, 105, 114, 111] => lookup_635_4_21(acc),
            [111, 100, 97, 116, 101] => lookup_635_4_22(acc),
            [111, 103, 97] => lookup_635_4_23(acc),
            [111, 103, 97, 116, 97] => lookup_635_4_24(acc),
            [115, 101, 109, 98, 111, 107, 117] => lookup_635_4_25(acc),
            [121, 111, 107, 111, 116, 101] => lookup_635_4_26(acc),
            [121, 117, 114, 105, 104, 111, 110, 106, 111] => lookup_635_4_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 111, 109, 111, 114, 105] => lookup_635_6_0(acc),
            [103, 111, 110, 111, 104, 101] => lookup_635_6_1(acc),
            [104, 97, 99, 104, 105, 110, 111, 104, 101] => lookup_635_6_2(acc),
            [104, 97, 115, 104, 105, 107, 97, 109, 105] => lookup_635_6_3(acc),
            [104, 105, 114, 97, 110, 97, 105] => lookup_635_6_4(acc),
            [104, 105, 114, 111, 115, 97, 107, 105] => lookup_635_6_5(acc),
            [105, 116, 97, 121, 97, 110, 97, 103, 105] => lookup_635_6_6(acc),
            [107, 117, 114, 111, 105, 115, 104, 105] => lookup_635_6_7(acc),
            [109, 105, 115, 97, 119, 97] => lookup_635_6_8(acc),
            [109, 117, 116, 115, 117] => lookup_635_6_9(acc),
            [110, 97, 107, 97, 100, 111, 109, 97, 114, 105] => lookup_635_6_10(acc),
            [110, 111, 104, 101, 106, 105] => lookup_635_6_11(acc),
            [111, 105, 114, 97, 115, 101] => lookup_635_6_12(acc),
            [111, 119, 97, 110, 105] => lookup_635_6_13(acc),
            [114, 111, 107, 117, 110, 111, 104, 101] => lookup_635_6_14(acc),
            [115, 97, 110, 110, 111, 104, 101] => lookup_635_6_15(acc),
            [115, 104, 105, 99, 104, 105, 110, 111, 104, 101] => lookup_635_6_16(acc),
            [115, 104, 105, 110, 103, 111] => lookup_635_6_17(acc),
            [116, 97, 107, 107, 111] => lookup_635_6_18(acc),
            [116, 111, 119, 97, 100, 97] => lookup_635_6_19(acc),
            [116, 115, 117, 103, 97, 114, 117] => lookup_635_6_20(acc),
            [116, 115, 117, 114, 117, 116, 97] => lookup_635_6_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_24<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 105, 107, 111] => lookup_635_24_0(acc),
            [97, 115, 97, 104, 105] => lookup_635_24_1(acc),
            [99, 104, 111, 110, 97, 110] => lookup_635_24_2(acc),
            [99, 104, 111, 115, 101, 105] => lookup_635_24_3(acc),
            [99, 104, 111, 115, 104, 105] => lookup_635_24_4(acc),
            [99, 104, 117, 111] => lookup_635_24_5(acc),
            [102, 117, 110, 97, 98, 97, 115, 104, 105] => lookup_635_24_6(acc),
            [102, 117, 116, 116, 115, 117] => lookup_635_24_7(acc),
            [104, 97, 110, 97, 109, 105, 103, 97, 119, 97] => lookup_635_24_8(acc),
            [105, 99, 104, 105, 104, 97, 114, 97] => lookup_635_24_9(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_635_24_10(acc),
            [105, 99, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_635_24_11(acc),
            [105, 110, 122, 97, 105] => lookup_635_24_12(acc),
            [105, 115, 117, 109, 105] => lookup_635_24_13(acc),
            [107, 97, 109, 97, 103, 97, 121, 97] => lookup_635_24_14(acc),
            [107, 97, 109, 111, 103, 97, 119, 97] => lookup_635_24_15(acc),
            [107, 97, 115, 104, 105, 119, 97] => lookup_635_24_16(acc),
            [107, 97, 116, 111, 114, 105] => lookup_635_24_17(acc),
            [107, 97, 116, 115, 117, 117, 114, 97] => lookup_635_24_18(acc),
            [107, 105, 109, 105, 116, 115, 117] => lookup_635_24_19(acc),
            [107, 105, 115, 97, 114, 97, 122, 117] => lookup_635_24_20(acc),
            [107, 111, 122, 97, 107, 105] => lookup_635_24_21(acc),
            [107, 117, 106, 117, 107, 117, 114, 105] => lookup_635_24_22(acc),
            [107, 121, 111, 110, 97, 110] => lookup_635_24_23(acc),
            [109, 97, 116, 115, 117, 100, 111] => lookup_635_24_24(acc),
            [109, 105, 100, 111, 114, 105] => lookup_635_24_25(acc),
            [109, 105, 104, 97, 109, 97] => lookup_635_24_26(acc),
            [109, 105, 110, 97, 109, 105, 98, 111, 115, 111] => lookup_635_24_27(acc),
            [109, 111, 98, 97, 114, 97] => lookup_635_24_28(acc),
            [109, 117, 116, 115, 117, 122, 97, 119, 97] => lookup_635_24_29(acc),
            [110, 97, 103, 97, 114, 97] => lookup_635_24_30(acc),
            [110, 97, 103, 97, 114, 101, 121, 97, 109, 97] => lookup_635_24_31(acc),
            [110, 97, 114, 97, 115, 104, 105, 110, 111] => lookup_635_24_32(acc),
            [110, 97, 114, 105, 116, 97] => lookup_635_24_33(acc),
            [110, 111, 100, 97] => lookup_635_24_34(acc),
            [111, 97, 109, 105, 115, 104, 105, 114, 97, 115, 97, 116, 111] => lookup_635_24_35(acc),
            [111, 109, 105, 103, 97, 119, 97] => lookup_635_24_36(acc),
            [111, 110, 106, 117, 107, 117] => lookup_635_24_37(acc),
            [111, 116, 97, 107, 105] => lookup_635_24_38(acc),
            [115, 97, 107, 97, 101] => lookup_635_24_39(acc),
            [115, 97, 107, 117, 114, 97] => lookup_635_24_40(acc),
            [115, 104, 105, 109, 111, 102, 117, 115, 97] => lookup_635_24_41(acc),
            [115, 104, 105, 114, 97, 107, 111] => lookup_635_24_42(acc),
            [115, 104, 105, 114, 111, 105] => lookup_635_24_43(acc),
            [115, 104, 105, 115, 117, 105] => lookup_635_24_44(acc),
            [115, 111, 100, 101, 103, 97, 117, 114, 97] => lookup_635_24_45(acc),
            [115, 111, 115, 97] => lookup_635_24_46(acc),
            [116, 97, 107, 111] => lookup_635_24_47(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_635_24_48(acc),
            [116, 111, 103, 97, 110, 101] => lookup_635_24_49(acc),
            [116, 111, 104, 110, 111, 115, 104, 111] => lookup_635_24_50(acc),
            [116, 111, 109, 105, 115, 97, 116, 111] => lookup_635_24_51(acc),
            [117, 114, 97, 121, 97, 115, 117] => lookup_635_24_52(acc),
            [121, 97, 99, 104, 105, 109, 97, 116, 97] => lookup_635_24_53(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_635_24_54(acc),
            [121, 111, 107, 97, 105, 99, 104, 105, 98, 97] => lookup_635_24_55(acc),
            [121, 111, 107, 111, 115, 104, 105, 98, 97, 104, 105, 107, 97, 114, 105] => {
                lookup_635_24_56(acc)
            }
            [121, 111, 116, 115, 117, 107, 97, 105, 100, 111] => lookup_635_24_57(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_45<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 110, 97, 110] => lookup_635_45_0(acc),
            [104, 111, 110, 97, 105] => lookup_635_45_1(acc),
            [105, 107, 97, 116, 97] => lookup_635_45_2(acc),
            [105, 109, 97, 98, 97, 114, 105] => lookup_635_45_3(acc),
            [105, 121, 111] => lookup_635_45_4(acc),
            [107, 97, 109, 105, 106, 105, 109, 97] => lookup_635_45_5(acc),
            [107, 105, 104, 111, 107, 117] => lookup_635_45_6(acc),
            [107, 117, 109, 97, 107, 111, 103, 101, 110] => lookup_635_45_7(acc),
            [109, 97, 115, 97, 107, 105] => lookup_635_45_8(acc),
            [109, 97, 116, 115, 117, 110, 111] => lookup_635_45_9(acc),
            [109, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_635_45_10(acc),
            [110, 97, 109, 105, 107, 97, 116, 97] => lookup_635_45_11(acc),
            [110, 105, 105, 104, 97, 109, 97] => lookup_635_45_12(acc),
            [111, 122, 117] => lookup_635_45_13(acc),
            [115, 97, 105, 106, 111] => lookup_635_45_14(acc),
            [115, 101, 105, 121, 111] => lookup_635_45_15(acc),
            [115, 104, 105, 107, 111, 107, 117, 99, 104, 117, 111] => lookup_635_45_16(acc),
            [116, 111, 98, 101] => lookup_635_45_17(acc),
            [116, 111, 111, 110] => lookup_635_45_18(acc),
            [117, 99, 104, 105, 107, 111] => lookup_635_45_19(acc),
            [117, 119, 97, 106, 105, 109, 97] => lookup_635_45_20(acc),
            [121, 97, 119, 97, 116, 97, 104, 97, 109, 97] => lookup_635_45_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_54<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 99, 104, 105, 122, 101, 110] => lookup_635_54_0(acc),
            [101, 105, 104, 101, 105, 106, 105] => lookup_635_54_1(acc),
            [102, 117, 107, 117, 105] => lookup_635_54_2(acc),
            [105, 107, 101, 100, 97] => lookup_635_54_3(acc),
            [107, 97, 116, 115, 117, 121, 97, 109, 97] => lookup_635_54_4(acc),
            [109, 105, 104, 97, 109, 97] => lookup_635_54_5(acc),
            [109, 105, 110, 97, 109, 105, 101, 99, 104, 105, 122, 101, 110] => lookup_635_54_6(acc),
            [111, 98, 97, 109, 97] => lookup_635_54_7(acc),
            [111, 104, 105] => lookup_635_54_8(acc),
            [111, 110, 111] => lookup_635_54_9(acc),
            [115, 97, 98, 97, 101] => lookup_635_54_10(acc),
            [115, 97, 107, 97, 105] => lookup_635_54_11(acc),
            [116, 97, 107, 97, 104, 97, 109, 97] => lookup_635_54_12(acc),
            [116, 115, 117, 114, 117, 103, 97] => lookup_635_54_13(acc),
            [119, 97, 107, 97, 115, 97] => lookup_635_54_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 104, 105, 121, 97] => lookup_635_55_0(acc),
            [98, 117, 122, 101, 110] => lookup_635_55_1(acc),
            [99, 104, 105, 107, 117, 103, 111] => lookup_635_55_2(acc),
            [99, 104, 105, 107, 117, 104, 111] => lookup_635_55_3(acc),
            [99, 104, 105, 107, 117, 106, 111] => lookup_635_55_4(acc),
            [99, 104, 105, 107, 117, 115, 104, 105, 110, 111] => lookup_635_55_5(acc),
            [99, 104, 105, 107, 117, 122, 101, 110] => lookup_635_55_6(acc),
            [99, 104, 117, 111] => lookup_635_55_7(acc),
            [100, 97, 122, 97, 105, 102, 117] => lookup_635_55_8(acc),
            [102, 117, 107, 117, 99, 104, 105] => lookup_635_55_9(acc),
            [104, 97, 107, 97, 116, 97] => lookup_635_55_10(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_635_55_11(acc),
            [104, 105, 114, 111, 107, 97, 119, 97] => lookup_635_55_12(acc),
            [104, 105, 115, 97, 121, 97, 109, 97] => lookup_635_55_13(acc),
            [105, 105, 122, 117, 107, 97] => lookup_635_55_14(acc),
            [105, 110, 97, 116, 115, 117, 107, 105] => lookup_635_55_15(acc),
            [107, 97, 104, 111] => lookup_635_55_16(acc),
            [107, 97, 115, 117, 103, 97] => lookup_635_55_17(acc),
            [107, 97, 115, 117, 121, 97] => lookup_635_55_18(acc),
            [107, 97, 119, 97, 114, 97] => lookup_635_55_19(acc),
            [107, 101, 105, 115, 101, 110] => lookup_635_55_20(acc),
            [107, 111, 103, 97] => lookup_635_55_21(acc),
            [107, 117, 114, 97, 116, 101] => lookup_635_55_22(acc),
            [107, 117, 114, 111, 103, 105] => lookup_635_55_23(acc),
            [107, 117, 114, 117, 109, 101] => lookup_635_55_24(acc),
            [109, 105, 110, 97, 109, 105] => lookup_635_55_25(acc),
            [109, 105, 121, 97, 107, 111] => lookup_635_55_26(acc),
            [109, 105, 121, 97, 109, 97] => lookup_635_55_27(acc),
            [109, 105, 121, 97, 119, 97, 107, 97] => lookup_635_55_28(acc),
            [109, 105, 122, 117, 109, 97, 107, 105] => lookup_635_55_29(acc),
            [109, 117, 110, 97, 107, 97, 116, 97] => lookup_635_55_30(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_635_55_31(acc),
            [110, 97, 107, 97, 109, 97] => lookup_635_55_32(acc),
            [110, 105, 115, 104, 105] => lookup_635_55_33(acc),
            [110, 111, 103, 97, 116, 97] => lookup_635_55_34(acc),
            [111, 103, 111, 114, 105] => lookup_635_55_35(acc),
            [111, 107, 97, 103, 97, 107, 105] => lookup_635_55_36(acc),
            [111, 107, 97, 119, 97] => lookup_635_55_37(acc),
            [111, 107, 105] => lookup_635_55_38(acc),
            [111, 109, 117, 116, 97] => lookup_635_55_39(acc),
            [111, 110, 103, 97] => lookup_635_55_40(acc),
            [111, 110, 111, 106, 111] => lookup_635_55_41(acc),
            [111, 116, 111] => lookup_635_55_42(acc),
            [115, 97, 105, 103, 97, 119, 97] => lookup_635_55_43(acc),
            [115, 97, 115, 97, 103, 117, 114, 105] => lookup_635_55_44(acc),
            [115, 104, 105, 110, 103, 117] => lookup_635_55_45(acc),
            [115, 104, 105, 110, 121, 111, 115, 104, 105, 116, 111, 109, 105] => {
                lookup_635_55_46(acc)
            }
            [115, 104, 111, 110, 97, 105] => lookup_635_55_47(acc),
            [115, 111, 101, 100, 97] => lookup_635_55_48(acc),
            [115, 117, 101] => lookup_635_55_49(acc),
            [116, 97, 99, 104, 105, 97, 114, 97, 105] => lookup_635_55_50(acc),
            [116, 97, 103, 97, 119, 97] => lookup_635_55_51(acc),
            [116, 97, 107, 97, 116, 97] => lookup_635_55_52(acc),
            [116, 111, 104, 111] => lookup_635_55_53(acc),
            [116, 111, 121, 111, 116, 115, 117] => lookup_635_55_54(acc),
            [116, 115, 117, 105, 107, 105] => lookup_635_55_55(acc),
            [117, 107, 105, 104, 97] => lookup_635_55_56(acc),
            [117, 109, 105] => lookup_635_55_57(acc),
            [117, 115, 117, 105] => lookup_635_55_58(acc),
            [121, 97, 109, 97, 100, 97] => lookup_635_55_59(acc),
            [121, 97, 109, 101] => lookup_635_55_60(acc),
            [121, 97, 110, 97, 103, 97, 119, 97] => lookup_635_55_61(acc),
            [121, 117, 107, 117, 104, 97, 115, 104, 105] => lookup_635_55_62(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_56_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_56<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 122, 117, 98, 97, 110, 103, 101] => lookup_635_56_0(acc),
            [97, 105, 122, 117, 109, 105, 115, 97, 116, 111] => lookup_635_56_1(acc),
            [97, 105, 122, 117, 119, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_635_56_2(acc),
            [97, 115, 97, 107, 97, 119, 97] => lookup_635_56_3(acc),
            [98, 97, 110, 100, 97, 105] => lookup_635_56_4(acc),
            [100, 97, 116, 101] => lookup_635_56_5(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_635_56_6(acc),
            [102, 117, 114, 117, 100, 111, 110, 111] => lookup_635_56_7(acc),
            [102, 117, 116, 97, 98, 97] => lookup_635_56_8(acc),
            [104, 97, 110, 97, 119, 97] => lookup_635_56_9(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_635_56_10(acc),
            [104, 105, 114, 97, 116, 97] => lookup_635_56_11(acc),
            [104, 105, 114, 111, 110, 111] => lookup_635_56_12(acc),
            [105, 105, 116, 97, 116, 101] => lookup_635_56_13(acc),
            [105, 110, 97, 119, 97, 115, 104, 105, 114, 111] => lookup_635_56_14(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_635_56_15(acc),
            [105, 119, 97, 107, 105] => lookup_635_56_16(acc),
            [105, 122, 117, 109, 105, 122, 97, 107, 105] => lookup_635_56_17(acc),
            [107, 97, 103, 97, 109, 105, 105, 115, 104, 105] => lookup_635_56_18(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_635_56_19(acc),
            [107, 97, 119, 97, 109, 97, 116, 97] => lookup_635_56_20(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_635_56_21(acc),
            [107, 105, 116, 97, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_635_56_22(acc),
            [107, 111, 111, 114, 105] => lookup_635_56_23(acc),
            [107, 111, 114, 105, 121, 97, 109, 97] => lookup_635_56_24(acc),
            [107, 117, 110, 105, 109, 105] => lookup_635_56_25(acc),
            [109, 105, 104, 97, 114, 117] => lookup_635_56_26(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_635_56_27(acc),
            [110, 97, 109, 105, 101] => lookup_635_56_28(acc),
            [110, 97, 110, 103, 111] => lookup_635_56_29(acc),
            [110, 105, 115, 104, 105, 97, 105, 122, 117] => lookup_635_56_30(acc),
            [110, 105, 115, 104, 105, 103, 111] => lookup_635_56_31(acc),
            [111, 107, 117, 109, 97] => lookup_635_56_32(acc),
            [111, 109, 111, 116, 101, 103, 111] => lookup_635_56_33(acc),
            [111, 110, 111] => lookup_635_56_34(acc),
            [111, 116, 97, 109, 97] => lookup_635_56_35(acc),
            [115, 97, 109, 101, 103, 97, 119, 97] => lookup_635_56_36(acc),
            [115, 104, 105, 109, 111, 103, 111] => lookup_635_56_37(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_635_56_38(acc),
            [115, 104, 111, 119, 97] => lookup_635_56_39(acc),
            [115, 111, 109, 97] => lookup_635_56_40(acc),
            [115, 117, 107, 97, 103, 97, 119, 97] => lookup_635_56_41(acc),
            [116, 97, 105, 115, 104, 105, 110] => lookup_635_56_42(acc),
            [116, 97, 109, 97, 107, 97, 119, 97] => lookup_635_56_43(acc),
            [116, 97, 110, 97, 103, 117, 114, 97] => lookup_635_56_44(acc),
            [116, 101, 110, 101, 105] => lookup_635_56_45(acc),
            [121, 97, 98, 117, 107, 105] => lookup_635_56_46(acc),
            [121, 97, 109, 97, 116, 111] => lookup_635_56_47(acc),
            [121, 97, 109, 97, 116, 115, 117, 114, 105] => lookup_635_56_48(acc),
            [121, 97, 110, 97, 105, 122, 117] => lookup_635_56_49(acc),
            [121, 117, 103, 97, 119, 97] => lookup_635_56_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_57_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_57<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 112, 97, 99, 104, 105] => lookup_635_57_0(acc),
            [101, 110, 97] => lookup_635_57_1(acc),
            [103, 105, 102, 117] => lookup_635_57_2(acc),
            [103, 105, 110, 97, 110] => lookup_635_57_3(acc),
            [103, 111, 100, 111] => lookup_635_57_4(acc),
            [103, 117, 106, 111] => lookup_635_57_5(acc),
            [104, 97, 115, 104, 105, 109, 97] => lookup_635_57_6(acc),
            [104, 105, 99, 104, 105, 115, 111] => lookup_635_57_7(acc),
            [104, 105, 100, 97] => lookup_635_57_8(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 104, 105, 114, 97, 107, 97, 119, 97] => {
                lookup_635_57_9(acc)
            }
            [105, 98, 105, 103, 97, 119, 97] => lookup_635_57_10(acc),
            [105, 107, 101, 100, 97] => lookup_635_57_11(acc),
            [107, 97, 107, 97, 109, 105, 103, 97, 104, 97, 114, 97] => lookup_635_57_12(acc),
            [107, 97, 110, 105] => lookup_635_57_13(acc),
            [107, 97, 115, 97, 104, 97, 114, 97] => lookup_635_57_14(acc),
            [107, 97, 115, 97, 109, 97, 116, 115, 117] => lookup_635_57_15(acc),
            [107, 97, 119, 97, 117, 101] => lookup_635_57_16(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_635_57_17(acc),
            [109, 105, 110, 111] => lookup_635_57_18(acc),
            [109, 105, 110, 111, 107, 97, 109, 111] => lookup_635_57_19(acc),
            [109, 105, 116, 97, 107, 101] => lookup_635_57_20(acc),
            [109, 105, 122, 117, 110, 97, 109, 105] => lookup_635_57_21(acc),
            [109, 111, 116, 111, 115, 117] => lookup_635_57_22(acc),
            [110, 97, 107, 97, 116, 115, 117, 103, 97, 119, 97] => lookup_635_57_23(acc),
            [111, 103, 97, 107, 105] => lookup_635_57_24(acc),
            [115, 97, 107, 97, 104, 111, 103, 105] => lookup_635_57_25(acc),
            [115, 101, 107, 105] => lookup_635_57_26(acc),
            [115, 101, 107, 105, 103, 97, 104, 97, 114, 97] => lookup_635_57_27(acc),
            [115, 104, 105, 114, 97, 107, 97, 119, 97] => lookup_635_57_28(acc),
            [116, 97, 106, 105, 109, 105] => lookup_635_57_29(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_635_57_30(acc),
            [116, 97, 114, 117, 105] => lookup_635_57_31(acc),
            [116, 111, 107, 105] => lookup_635_57_32(acc),
            [116, 111, 109, 105, 107, 97] => lookup_635_57_33(acc),
            [119, 97, 110, 111, 117, 99, 104, 105] => lookup_635_57_34(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_635_57_35(acc),
            [121, 97, 111, 116, 115, 117] => lookup_635_57_36(acc),
            [121, 111, 114, 111] => lookup_635_57_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_65<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 110, 97, 107, 97] => lookup_635_65_0(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_635_65_1(acc),
            [102, 117, 106, 105, 111, 107, 97] => lookup_635_65_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 97, 103, 97, 116, 115, 117, 109, 97] => {
                lookup_635_65_3(acc)
            }
            [105, 115, 101, 115, 97, 107, 105] => lookup_635_65_4(acc),
            [105, 116, 97, 107, 117, 114, 97] => lookup_635_65_5(acc),
            [107, 97, 110, 110, 97] => lookup_635_65_6(acc),
            [107, 97, 110, 114, 97] => lookup_635_65_7(acc),
            [107, 97, 116, 97, 115, 104, 105, 110, 97] => lookup_635_65_8(acc),
            [107, 97, 119, 97, 98, 97] => lookup_635_65_9(acc),
            [107, 105, 114, 121, 117] => lookup_635_65_10(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_635_65_11(acc),
            [109, 97, 101, 98, 97, 115, 104, 105] => lookup_635_65_12(acc),
            [109, 101, 105, 119, 97] => lookup_635_65_13(acc),
            [109, 105, 100, 111, 114, 105] => lookup_635_65_14(acc),
            [109, 105, 110, 97, 107, 97, 109, 105] => lookup_635_65_15(acc),
            [110, 97, 103, 97, 110, 111, 104, 97, 114, 97] => lookup_635_65_16(acc),
            [110, 97, 107, 97, 110, 111, 106, 111] => lookup_635_65_17(acc),
            [110, 97, 110, 109, 111, 107, 117] => lookup_635_65_18(acc),
            [110, 117, 109, 97, 116, 97] => lookup_635_65_19(acc),
            [111, 105, 122, 117, 109, 105] => lookup_635_65_20(acc),
            [111, 114, 97] => lookup_635_65_21(acc),
            [111, 116, 97] => lookup_635_65_22(acc),
            [115, 104, 105, 98, 117, 107, 97, 119, 97] => lookup_635_65_23(acc),
            [115, 104, 105, 109, 111, 110, 105, 116, 97] => lookup_635_65_24(acc),
            [115, 104, 105, 110, 116, 111] => lookup_635_65_25(acc),
            [115, 104, 111, 119, 97] => lookup_635_65_26(acc),
            [116, 97, 107, 97, 115, 97, 107, 105] => lookup_635_65_27(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_635_65_28(acc),
            [116, 97, 109, 97, 109, 117, 114, 97] => lookup_635_65_29(acc),
            [116, 97, 116, 101, 98, 97, 121, 97, 115, 104, 105] => lookup_635_65_30(acc),
            [116, 111, 109, 105, 111, 107, 97] => lookup_635_65_31(acc),
            [116, 115, 117, 107, 105, 121, 111, 110, 111] => lookup_635_65_32(acc),
            [116, 115, 117, 109, 97, 103, 111, 105] => lookup_635_65_33(acc),
            [117, 101, 110, 111] => lookup_635_65_34(acc),
            [121, 111, 115, 104, 105, 111, 107, 97] => lookup_635_65_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_73_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_73<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 109, 105, 110, 97, 109, 105] => lookup_635_73_0(acc),
            [100, 97, 105, 119, 97] => lookup_635_73_1(acc),
            [101, 116, 97, 106, 105, 109, 97] => lookup_635_73_2(acc),
            [102, 117, 99, 104, 117] => lookup_635_73_3(acc),
            [102, 117, 107, 117, 121, 97, 109, 97] => lookup_635_73_4(acc),
            [104, 97, 116, 115, 117, 107, 97, 105, 99, 104, 105] => lookup_635_73_5(acc),
            [104, 105, 103, 97, 115, 104, 105, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_635_73_6(acc)
            }
            [104, 111, 110, 103, 111] => lookup_635_73_7(acc),
            [106, 105, 110, 115, 101, 107, 105, 107, 111, 103, 101, 110] => lookup_635_73_8(acc),
            [107, 97, 105, 116, 97] => lookup_635_73_9(acc),
            [107, 117, 105] => lookup_635_73_10(acc),
            [107, 117, 109, 97, 110, 111] => lookup_635_73_11(acc),
            [107, 117, 114, 101] => lookup_635_73_12(acc),
            [109, 105, 104, 97, 114, 97] => lookup_635_73_13(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_635_73_14(acc),
            [110, 97, 107, 97] => lookup_635_73_15(acc),
            [111, 110, 111, 109, 105, 99, 104, 105] => lookup_635_73_16(acc),
            [111, 115, 97, 107, 105, 107, 97, 109, 105, 106, 105, 109, 97] => lookup_635_73_17(acc),
            [111, 116, 97, 107, 101] => lookup_635_73_18(acc),
            [115, 97, 107, 97] => lookup_635_73_19(acc),
            [115, 101, 114, 97] => lookup_635_73_20(acc),
            [115, 101, 114, 97, 110, 105, 115, 104, 105] => lookup_635_73_21(acc),
            [115, 104, 105, 110, 105, 99, 104, 105] => lookup_635_73_22(acc),
            [115, 104, 111, 98, 97, 114, 97] => lookup_635_73_23(acc),
            [116, 97, 107, 101, 104, 97, 114, 97] => lookup_635_73_24(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_74_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_74<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 97, 115, 104, 105, 114, 105] => lookup_635_74_0(acc),
            [97, 98, 105, 114, 97] => lookup_635_74_1(acc),
            [97, 105, 98, 101, 116, 115, 117] => lookup_635_74_2(acc),
            [97, 107, 97, 98, 105, 114, 97] => lookup_635_74_3(acc),
            [97, 107, 107, 101, 115, 104, 105] => lookup_635_74_4(acc),
            [97, 115, 97, 104, 105, 107, 97, 119, 97] => lookup_635_74_5(acc),
            [97, 115, 104, 105, 98, 101, 116, 115, 117] => lookup_635_74_6(acc),
            [97, 115, 104, 111, 114, 111] => lookup_635_74_7(acc),
            [97, 115, 115, 97, 98, 117] => lookup_635_74_8(acc),
            [97, 116, 115, 117, 109, 97] => lookup_635_74_9(acc),
            [98, 105, 98, 97, 105] => lookup_635_74_10(acc),
            [98, 105, 101, 105] => lookup_635_74_11(acc),
            [98, 105, 102, 117, 107, 97] => lookup_635_74_12(acc),
            [98, 105, 104, 111, 114, 111] => lookup_635_74_13(acc),
            [98, 105, 114, 97, 116, 111, 114, 105] => lookup_635_74_14(acc),
            [99, 104, 105, 112, 112, 117, 98, 101, 116, 115, 117] => lookup_635_74_15(acc),
            [99, 104, 105, 116, 111, 115, 101] => lookup_635_74_16(acc),
            [100, 97, 116, 101] => lookup_635_74_17(acc),
            [101, 98, 101, 116, 115, 117] => lookup_635_74_18(acc),
            [101, 109, 98, 101, 116, 115, 117] => lookup_635_74_19(acc),
            [101, 110, 105, 119, 97] => lookup_635_74_20(acc),
            [101, 114, 105, 109, 111] => lookup_635_74_21(acc),
            [101, 115, 97, 110] => lookup_635_74_22(acc),
            [101, 115, 97, 115, 104, 105] => lookup_635_74_23(acc),
            [102, 117, 107, 97, 103, 97, 119, 97] => lookup_635_74_24(acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_635_74_25(acc),
            [102, 117, 114, 97, 110, 111] => lookup_635_74_26(acc),
            [102, 117, 114, 117, 98, 105, 114, 97] => lookup_635_74_27(acc),
            [104, 97, 98, 111, 114, 111] => lookup_635_74_28(acc),
            [104, 97, 107, 111, 100, 97, 116, 101] => lookup_635_74_29(acc),
            [104, 97, 109, 97, 116, 111, 110, 98, 101, 116, 115, 117] => lookup_635_74_30(acc),
            [104, 105, 100, 97, 107, 97] => lookup_635_74_31(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 117, 114, 97] => lookup_635_74_32(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 119, 97] => lookup_635_74_33(acc),
            [104, 105, 114, 111, 111] => lookup_635_74_34(acc),
            [104, 111, 107, 117, 114, 121, 117] => lookup_635_74_35(acc),
            [104, 111, 107, 117, 116, 111] => lookup_635_74_36(acc),
            [104, 111, 110, 98, 101, 116, 115, 117] => lookup_635_74_37(acc),
            [104, 111, 114, 111, 107, 97, 110, 97, 105] => lookup_635_74_38(acc),
            [104, 111, 114, 111, 110, 111, 98, 101] => lookup_635_74_39(acc),
            [105, 107, 101, 100, 97] => lookup_635_74_40(acc),
            [105, 109, 97, 107, 97, 110, 101] => lookup_635_74_41(acc),
            [105, 115, 104, 105, 107, 97, 114, 105] => lookup_635_74_42(acc),
            [105, 119, 97, 109, 105, 122, 97, 119, 97] => lookup_635_74_43(acc),
            [105, 119, 97, 110, 97, 105] => lookup_635_74_44(acc),
            [107, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_635_74_45(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_635_74_46(acc),
            [107, 97, 109, 105, 115, 104, 105, 104, 111, 114, 111] => lookup_635_74_47(acc),
            [107, 97, 109, 105, 115, 117, 110, 97, 103, 97, 119, 97] => lookup_635_74_48(acc),
            [107, 97, 109, 111, 101, 110, 97, 105] => lookup_635_74_49(acc),
            [107, 97, 121, 97, 98, 101] => lookup_635_74_50(acc),
            [107, 101, 109, 98, 117, 99, 104, 105] => lookup_635_74_51(acc),
            [107, 105, 107, 111, 110, 97, 105] => lookup_635_74_52(acc),
            [107, 105, 109, 111, 98, 101, 116, 115, 117] => lookup_635_74_53(acc),
            [107, 105, 116, 97, 104, 105, 114, 111, 115, 104, 105, 109, 97] => {
                lookup_635_74_54(acc)
            }
            [107, 105, 116, 97, 109, 105] => lookup_635_74_55(acc),
            [107, 105, 121, 111, 115, 97, 116, 111] => lookup_635_74_56(acc),
            [107, 111, 115, 104, 105, 109, 105, 122, 117] => lookup_635_74_57(acc),
            [107, 117, 110, 110, 101, 112, 112, 117] => lookup_635_74_58(acc),
            [107, 117, 114, 105, 121, 97, 109, 97] => lookup_635_74_59(acc),
            [107, 117, 114, 111, 109, 97, 116, 115, 117, 110, 97, 105] => lookup_635_74_60(acc),
            [107, 117, 115, 104, 105, 114, 111] => lookup_635_74_61(acc),
            [107, 117, 116, 99, 104, 97, 110] => lookup_635_74_62(acc),
            [107, 121, 111, 119, 97] => lookup_635_74_63(acc),
            [109, 97, 115, 104, 105, 107, 101] => lookup_635_74_64(acc),
            [109, 97, 116, 115, 117, 109, 97, 101] => lookup_635_74_65(acc),
            [109, 105, 107, 97, 115, 97] => lookup_635_74_66(acc),
            [109, 105, 110, 97, 109, 105, 102, 117, 114, 97, 110, 111] => lookup_635_74_67(acc),
            [109, 111, 109, 98, 101, 116, 115, 117] => lookup_635_74_68(acc),
            [109, 111, 115, 101, 117, 115, 104, 105] => lookup_635_74_69(acc),
            [109, 117, 107, 97, 119, 97] => lookup_635_74_70(acc),
            [109, 117, 114, 111, 114, 97, 110] => lookup_635_74_71(acc),
            [110, 97, 105, 101] => lookup_635_74_72(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_635_74_73(acc),
            [110, 97, 107, 97, 115, 97, 116, 115, 117, 110, 97, 105] => lookup_635_74_74(acc),
            [110, 97, 107, 97, 116, 111, 109, 98, 101, 116, 115, 117] => lookup_635_74_75(acc),
            [110, 97, 110, 97, 101] => lookup_635_74_76(acc),
            [110, 97, 110, 112, 111, 114, 111] => lookup_635_74_77(acc),
            [110, 97, 121, 111, 114, 111] => lookup_635_74_78(acc),
            [110, 101, 109, 117, 114, 111] => lookup_635_74_79(acc),
            [110, 105, 105, 107, 97, 112, 112, 117] => lookup_635_74_80(acc),
            [110, 105, 107, 105] => lookup_635_74_81(acc),
            [110, 105, 115, 104, 105, 111, 107, 111, 112, 112, 101] => lookup_635_74_82(acc),
            [110, 111, 98, 111, 114, 105, 98, 101, 116, 115, 117] => lookup_635_74_83(acc),
            [110, 117, 109, 97, 116, 97] => lookup_635_74_84(acc),
            [111, 98, 105, 104, 105, 114, 111] => lookup_635_74_85(acc),
            [111, 98, 105, 114, 97] => lookup_635_74_86(acc),
            [111, 107, 101, 116, 111] => lookup_635_74_87(acc),
            [111, 107, 111, 112, 112, 101] => lookup_635_74_88(acc),
            [111, 116, 97, 114, 117] => lookup_635_74_89(acc),
            [111, 116, 111, 98, 101] => lookup_635_74_90(acc),
            [111, 116, 111, 102, 117, 107, 101] => lookup_635_74_91(acc),
            [111, 116, 111, 105, 110, 101, 112, 112, 117] => lookup_635_74_92(acc),
            [111, 117, 109, 117] => lookup_635_74_93(acc),
            [111, 122, 111, 114, 97] => lookup_635_74_94(acc),
            [112, 105, 112, 112, 117] => lookup_635_74_95(acc),
            [114, 97, 110, 107, 111, 115, 104, 105] => lookup_635_74_96(acc),
            [114, 101, 98, 117, 110] => lookup_635_74_97(acc),
            [114, 105, 107, 117, 98, 101, 116, 115, 117] => lookup_635_74_98(acc),
            [114, 105, 115, 104, 105, 114, 105] => lookup_635_74_99(acc),
            [114, 105, 115, 104, 105, 114, 105, 102, 117, 106, 105] => lookup_635_74_100(acc),
            [115, 97, 114, 111, 109, 97] => lookup_635_74_101(acc),
            [115, 97, 114, 117, 102, 117, 116, 115, 117] => lookup_635_74_102(acc),
            [115, 104, 97, 107, 111, 116, 97, 110] => lookup_635_74_103(acc),
            [115, 104, 97, 114, 105] => lookup_635_74_104(acc),
            [115, 104, 105, 98, 101, 99, 104, 97] => lookup_635_74_105(acc),
            [115, 104, 105, 98, 101, 116, 115, 117] => lookup_635_74_106(acc),
            [115, 104, 105, 107, 97, 98, 101] => lookup_635_74_107(acc),
            [115, 104, 105, 107, 97, 111, 105] => lookup_635_74_108(acc),
            [115, 104, 105, 109, 97, 109, 97, 107, 105] => lookup_635_74_109(acc),
            [115, 104, 105, 109, 105, 122, 117] => lookup_635_74_110(acc),
            [115, 104, 105, 109, 111, 107, 97, 119, 97] => lookup_635_74_111(acc),
            [115, 104, 105, 110, 115, 104, 105, 110, 111, 116, 115, 117] => lookup_635_74_112(acc),
            [115, 104, 105, 110, 116, 111, 107, 117] => lookup_635_74_113(acc),
            [115, 104, 105, 114, 97, 110, 117, 107, 97] => lookup_635_74_114(acc),
            [115, 104, 105, 114, 97, 111, 105] => lookup_635_74_115(acc),
            [115, 104, 105, 114, 105, 117, 99, 104, 105] => lookup_635_74_116(acc),
            [115, 111, 98, 101, 116, 115, 117] => lookup_635_74_117(acc),
            [115, 117, 110, 97, 103, 97, 119, 97] => lookup_635_74_118(acc),
            [116, 97, 105, 107, 105] => lookup_635_74_119(acc),
            [116, 97, 107, 97, 115, 117] => lookup_635_74_120(acc),
            [116, 97, 107, 105, 107, 97, 119, 97] => lookup_635_74_121(acc),
            [116, 97, 107, 105, 110, 111, 117, 101] => lookup_635_74_122(acc),
            [116, 101, 115, 104, 105, 107, 97, 103, 97] => lookup_635_74_123(acc),
            [116, 111, 98, 101, 116, 115, 117] => lookup_635_74_124(acc),
            [116, 111, 104, 109, 97] => lookup_635_74_125(acc),
            [116, 111, 109, 97, 107, 111, 109, 97, 105] => lookup_635_74_126(acc),
            [116, 111, 109, 97, 114, 105] => lookup_635_74_127(acc),
            [116, 111, 121, 97] => lookup_635_74_128(acc),
            [116, 111, 121, 97, 107, 111] => lookup_635_74_129(acc),
            [116, 111, 121, 111, 116, 111, 109, 105] => lookup_635_74_130(acc),
            [116, 111, 121, 111, 117, 114, 97] => lookup_635_74_131(acc),
            [116, 115, 117, 98, 101, 116, 115, 117] => lookup_635_74_132(acc),
            [116, 115, 117, 107, 105, 103, 97, 116, 97] => lookup_635_74_133(acc),
            [117, 114, 97, 107, 97, 119, 97] => lookup_635_74_134(acc),
            [117, 114, 97, 117, 115, 117] => lookup_635_74_135(acc),
            [117, 114, 121, 117] => lookup_635_74_136(acc),
            [117, 116, 97, 115, 104, 105, 110, 97, 105] => lookup_635_74_137(acc),
            [119, 97, 107, 107, 97, 110, 97, 105] => lookup_635_74_138(acc),
            [119, 97, 115, 115, 97, 109, 117] => lookup_635_74_139(acc),
            [121, 97, 107, 117, 109, 111] => lookup_635_74_140(acc),
            [121, 111, 105, 99, 104, 105] => lookup_635_74_141(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_77_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_77<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 111, 105] => lookup_635_77_0(acc),
            [97, 107, 97, 115, 104, 105] => lookup_635_77_1(acc),
            [97, 107, 111] => lookup_635_77_2(acc),
            [97, 109, 97, 103, 97, 115, 97, 107, 105] => lookup_635_77_3(acc),
            [97, 111, 103, 97, 107, 105] => lookup_635_77_4(acc),
            [97, 115, 97, 103, 111] => lookup_635_77_5(acc),
            [97, 115, 104, 105, 121, 97] => lookup_635_77_6(acc),
            [97, 119, 97, 106, 105] => lookup_635_77_7(acc),
            [102, 117, 107, 117, 115, 97, 107, 105] => lookup_635_77_8(acc),
            [103, 111, 115, 104, 105, 107, 105] => lookup_635_77_9(acc),
            [104, 97, 114, 105, 109, 97] => lookup_635_77_10(acc),
            [104, 105, 109, 101, 106, 105] => lookup_635_77_11(acc),
            [105, 99, 104, 105, 107, 97, 119, 97] => lookup_635_77_12(acc),
            [105, 110, 97, 103, 97, 119, 97] => lookup_635_77_13(acc),
            [105, 116, 97, 109, 105] => lookup_635_77_14(acc),
            [107, 97, 107, 111, 103, 97, 119, 97] => lookup_635_77_15(acc),
            [107, 97, 109, 105, 103, 111, 114, 105] => lookup_635_77_16(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_635_77_17(acc),
            [107, 97, 115, 97, 105] => lookup_635_77_18(acc),
            [107, 97, 115, 117, 103, 97] => lookup_635_77_19(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_635_77_20(acc),
            [109, 105, 107, 105] => lookup_635_77_21(acc),
            [109, 105, 110, 97, 109, 105, 97, 119, 97, 106, 105] => lookup_635_77_22(acc),
            [110, 105, 115, 104, 105, 110, 111, 109, 105, 121, 97] => lookup_635_77_23(acc),
            [110, 105, 115, 104, 105, 119, 97, 107, 105] => lookup_635_77_24(acc),
            [111, 110, 111] => lookup_635_77_25(acc),
            [115, 97, 110, 100, 97] => lookup_635_77_26(acc),
            [115, 97, 110, 110, 97, 110] => lookup_635_77_27(acc),
            [115, 97, 115, 97, 121, 97, 109, 97] => lookup_635_77_28(acc),
            [115, 97, 121, 111] => lookup_635_77_29(acc),
            [115, 104, 105, 110, 103, 117] => lookup_635_77_30(acc),
            [115, 104, 105, 110, 111, 110, 115, 101, 110] => lookup_635_77_31(acc),
            [115, 104, 105, 115, 111] => lookup_635_77_32(acc),
            [115, 117, 109, 111, 116, 111] => lookup_635_77_33(acc),
            [116, 97, 105, 115, 104, 105] => lookup_635_77_34(acc),
            [116, 97, 107, 97] => lookup_635_77_35(acc),
            [116, 97, 107, 97, 114, 97, 122, 117, 107, 97] => lookup_635_77_36(acc),
            [116, 97, 107, 97, 115, 97, 103, 111] => lookup_635_77_37(acc),
            [116, 97, 107, 105, 110, 111] => lookup_635_77_38(acc),
            [116, 97, 109, 98, 97] => lookup_635_77_39(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_635_77_40(acc),
            [116, 111, 121, 111, 111, 107, 97] => lookup_635_77_41(acc),
            [121, 97, 98, 117] => lookup_635_77_42(acc),
            [121, 97, 115, 104, 105, 114, 111] => lookup_635_77_43(acc),
            [121, 111, 107, 97] => lookup_635_77_44(acc),
            [121, 111, 107, 97, 119, 97] => lookup_635_77_45(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_78_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_78<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 105] => lookup_635_78_0(acc),
            [97, 115, 97, 104, 105] => lookup_635_78_1(acc),
            [98, 97, 110, 100, 111] => lookup_635_78_2(acc),
            [99, 104, 105, 107, 117, 115, 101, 105] => lookup_635_78_3(acc),
            [100, 97, 105, 103, 111] => lookup_635_78_4(acc),
            [102, 117, 106, 105, 115, 104, 105, 114, 111] => lookup_635_78_5(acc),
            [104, 105, 116, 97, 99, 104, 105] => lookup_635_78_6(acc),
            [104, 105, 116, 97, 99, 104, 105, 110, 97, 107, 97] => lookup_635_78_7(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 109, 105, 121, 97] => lookup_635_78_8(acc),
            [104, 105, 116, 97, 99, 104, 105, 111, 116, 97] => lookup_635_78_9(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_635_78_10(acc),
            [105, 110, 97] => lookup_635_78_11(acc),
            [105, 110, 97, 115, 104, 105, 107, 105] => lookup_635_78_12(acc),
            [105, 116, 97, 107, 111] => lookup_635_78_13(acc),
            [105, 119, 97, 109, 97] => lookup_635_78_14(acc),
            [106, 111, 115, 111] => lookup_635_78_15(acc),
            [107, 97, 109, 105, 115, 117] => lookup_635_78_16(acc),
            [107, 97, 115, 97, 109, 97] => lookup_635_78_17(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_635_78_18(acc),
            [107, 97, 115, 117, 109, 105, 103, 97, 117, 114, 97] => lookup_635_78_19(acc),
            [107, 111, 103, 97] => lookup_635_78_20(acc),
            [109, 105, 104, 111] => lookup_635_78_21(acc),
            [109, 105, 116, 111] => lookup_635_78_22(acc),
            [109, 111, 114, 105, 121, 97] => lookup_635_78_23(acc),
            [110, 97, 107, 97] => lookup_635_78_24(acc),
            [110, 97, 109, 101, 103, 97, 116, 97] => lookup_635_78_25(acc),
            [111, 97, 114, 97, 105] => lookup_635_78_26(acc),
            [111, 103, 97, 119, 97] => lookup_635_78_27(acc),
            [111, 109, 105, 116, 97, 109, 97] => lookup_635_78_28(acc),
            [114, 121, 117, 103, 97, 115, 97, 107, 105] => lookup_635_78_29(acc),
            [115, 97, 107, 97, 105] => lookup_635_78_30(acc),
            [115, 97, 107, 117, 114, 97, 103, 97, 119, 97] => lookup_635_78_31(acc),
            [115, 104, 105, 109, 111, 100, 97, 116, 101] => lookup_635_78_32(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 109, 97] => lookup_635_78_33(acc),
            [115, 104, 105, 114, 111, 115, 97, 116, 111] => lookup_635_78_34(acc),
            [115, 111, 119, 97] => lookup_635_78_35(acc),
            [115, 117, 105, 102, 117] => lookup_635_78_36(acc),
            [116, 97, 107, 97, 104, 97, 103, 105] => lookup_635_78_37(acc),
            [116, 97, 109, 97, 116, 115, 117, 107, 117, 114, 105] => lookup_635_78_38(acc),
            [116, 111, 107, 97, 105] => lookup_635_78_39(acc),
            [116, 111, 109, 111, 98, 101] => lookup_635_78_40(acc),
            [116, 111, 110, 101] => lookup_635_78_41(acc),
            [116, 111, 114, 105, 100, 101] => lookup_635_78_42(acc),
            [116, 115, 117, 99, 104, 105, 117, 114, 97] => lookup_635_78_43(acc),
            [116, 115, 117, 107, 117, 98, 97] => lookup_635_78_44(acc),
            [117, 99, 104, 105, 104, 97, 114, 97] => lookup_635_78_45(acc),
            [117, 115, 104, 105, 107, 117] => lookup_635_78_46(acc),
            [121, 97, 99, 104, 105, 121, 111] => lookup_635_78_47(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_635_78_48(acc),
            [121, 97, 119, 97, 114, 97] => lookup_635_78_49(acc),
            [121, 117, 107, 105] => lookup_635_78_50(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_80_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_80<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 97, 109, 105, 122, 117] => lookup_635_80_0(acc),
            [104, 97, 107, 117, 105] => lookup_635_80_1(acc),
            [104, 97, 107, 117, 115, 97, 110] => lookup_635_80_2(acc),
            [107, 97, 103, 97] => lookup_635_80_3(acc),
            [107, 97, 104, 111, 107, 117] => lookup_635_80_4(acc),
            [107, 97, 110, 97, 122, 97, 119, 97] => lookup_635_80_5(acc),
            [107, 97, 119, 97, 107, 105, 116, 97] => lookup_635_80_6(acc),
            [107, 111, 109, 97, 116, 115, 117] => lookup_635_80_7(acc),
            [110, 97, 107, 97, 110, 111, 116, 111] => lookup_635_80_8(acc),
            [110, 97, 110, 97, 111] => lookup_635_80_9(acc),
            [110, 111, 109, 105] => lookup_635_80_10(acc),
            [110, 111, 110, 111, 105, 99, 104, 105] => lookup_635_80_11(acc),
            [110, 111, 116, 111] => lookup_635_80_12(acc),
            [115, 104, 105, 107, 97] => lookup_635_80_13(acc),
            [115, 117, 122, 117] => lookup_635_80_14(acc),
            [116, 115, 117, 98, 97, 116, 97] => lookup_635_80_15(acc),
            [116, 115, 117, 114, 117, 103, 105] => lookup_635_80_16(acc),
            [117, 99, 104, 105, 110, 97, 100, 97] => lookup_635_80_17(acc),
            [119, 97, 106, 105, 109, 97] => lookup_635_80_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_82_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_82<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 100, 97, 105] => lookup_635_82_0(acc),
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_635_82_1(acc),
            [104, 97, 110, 97, 109, 97, 107, 105] => lookup_635_82_2(acc),
            [104, 105, 114, 97, 105, 122, 117, 109, 105] => lookup_635_82_3(acc),
            [104, 105, 114, 111, 110, 111] => lookup_635_82_4(acc),
            [105, 99, 104, 105, 110, 111, 104, 101] => lookup_635_82_5(acc),
            [105, 99, 104, 105, 110, 111, 115, 101, 107, 105] => lookup_635_82_6(acc),
            [105, 119, 97, 105, 122, 117, 109, 105] => lookup_635_82_7(acc),
            [105, 119, 97, 116, 101] => lookup_635_82_8(acc),
            [106, 111, 98, 111, 106, 105] => lookup_635_82_9(acc),
            [107, 97, 109, 97, 105, 115, 104, 105] => lookup_635_82_10(acc),
            [107, 97, 110, 101, 103, 97, 115, 97, 107, 105] => lookup_635_82_11(acc),
            [107, 97, 114, 117, 109, 97, 105] => lookup_635_82_12(acc),
            [107, 97, 119, 97, 105] => lookup_635_82_13(acc),
            [107, 105, 116, 97, 107, 97, 109, 105] => lookup_635_82_14(acc),
            [107, 117, 106, 105] => lookup_635_82_15(acc),
            [107, 117, 110, 111, 104, 101] => lookup_635_82_16(acc),
            [107, 117, 122, 117, 109, 97, 107, 105] => lookup_635_82_17(acc),
            [109, 105, 121, 97, 107, 111] => lookup_635_82_18(acc),
            [109, 105, 122, 117, 115, 97, 119, 97] => lookup_635_82_19(acc),
            [109, 111, 114, 105, 111, 107, 97] => lookup_635_82_20(acc),
            [110, 105, 110, 111, 104, 101] => lookup_635_82_21(acc),
            [110, 111, 100, 97] => lookup_635_82_22(acc),
            [111, 102, 117, 110, 97, 116, 111] => lookup_635_82_23(acc),
            [111, 115, 104, 117] => lookup_635_82_24(acc),
            [111, 116, 115, 117, 99, 104, 105] => lookup_635_82_25(acc),
            [114, 105, 107, 117, 122, 101, 110, 116, 97, 107, 97, 116, 97] => lookup_635_82_26(acc),
            [115, 104, 105, 119, 97] => lookup_635_82_27(acc),
            [115, 104, 105, 122, 117, 107, 117, 105, 115, 104, 105] => lookup_635_82_28(acc),
            [115, 117, 109, 105, 116, 97] => lookup_635_82_29(acc),
            [116, 97, 110, 111, 104, 97, 116, 97] => lookup_635_82_30(acc),
            [116, 111, 110, 111] => lookup_635_82_31(acc),
            [121, 97, 104, 97, 98, 97] => lookup_635_82_32(acc),
            [121, 97, 109, 97, 100, 97] => lookup_635_82_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_85_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_85<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 121, 97, 103, 97, 119, 97] => lookup_635_85_0(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 97, 103, 97, 119, 97] => lookup_635_85_1(acc),
            [107, 97, 110, 111, 110, 106, 105] => lookup_635_85_2(acc),
            [107, 111, 116, 111, 104, 105, 114, 97] => lookup_635_85_3(acc),
            [109, 97, 110, 110, 111] => lookup_635_85_4(acc),
            [109, 97, 114, 117, 103, 97, 109, 101] => lookup_635_85_5(acc),
            [109, 105, 116, 111, 121, 111] => lookup_635_85_6(acc),
            [110, 97, 111, 115, 104, 105, 109, 97] => lookup_635_85_7(acc),
            [115, 97, 110, 117, 107, 105] => lookup_635_85_8(acc),
            [116, 97, 100, 111, 116, 115, 117] => lookup_635_85_9(acc),
            [116, 97, 107, 97, 109, 97, 116, 115, 117] => lookup_635_85_10(acc),
            [116, 111, 110, 111, 115, 104, 111] => lookup_635_85_11(acc),
            [117, 99, 104, 105, 110, 111, 109, 105] => lookup_635_85_12(acc),
            [117, 116, 97, 122, 117] => lookup_635_85_13(acc),
            [122, 101, 110, 116, 115, 117, 106, 105] => lookup_635_85_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_86_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_86<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 117, 110, 101] => lookup_635_86_0(acc),
            [97, 109, 97, 109, 105] => lookup_635_86_1(acc),
            [104, 105, 111, 107, 105] => lookup_635_86_2(acc),
            [105, 115, 97] => lookup_635_86_3(acc),
            [105, 115, 101, 110] => lookup_635_86_4(acc),
            [105, 122, 117, 109, 105] => lookup_635_86_5(acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_635_86_6(acc),
            [107, 97, 110, 111, 121, 97] => lookup_635_86_7(acc),
            [107, 97, 119, 97, 110, 97, 98, 101] => lookup_635_86_8(acc),
            [107, 105, 110, 107, 111] => lookup_635_86_9(acc),
            [107, 111, 117, 121, 97, 109, 97] => lookup_635_86_10(acc),
            [109, 97, 107, 117, 114, 97, 122, 97, 107, 105] => lookup_635_86_11(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_635_86_12(acc),
            [109, 105, 110, 97, 109, 105, 116, 97, 110, 101] => lookup_635_86_13(acc),
            [110, 97, 107, 97, 116, 97, 110, 101] => lookup_635_86_14(acc),
            [110, 105, 115, 104, 105, 110, 111, 111, 109, 111, 116, 101] => lookup_635_86_15(acc),
            [115, 97, 116, 115, 117, 109, 97, 115, 101, 110, 100, 97, 105] => lookup_635_86_16(acc),
            [115, 111, 111] => lookup_635_86_17(acc),
            [116, 97, 114, 117, 109, 105, 122, 117] => lookup_635_86_18(acc),
            [121, 117, 115, 117, 105] => lookup_635_86_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_87_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_87<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 107, 97, 119, 97] => lookup_635_87_0(acc),
            [97, 116, 115, 117, 103, 105] => lookup_635_87_1(acc),
            [97, 121, 97, 115, 101] => lookup_635_87_2(acc),
            [99, 104, 105, 103, 97, 115, 97, 107, 105] => lookup_635_87_3(acc),
            [101, 98, 105, 110, 97] => lookup_635_87_4(acc),
            [102, 117, 106, 105, 115, 97, 119, 97] => lookup_635_87_5(acc),
            [104, 97, 100, 97, 110, 111] => lookup_635_87_6(acc),
            [104, 97, 107, 111, 110, 101] => lookup_635_87_7(acc),
            [104, 105, 114, 97, 116, 115, 117, 107, 97] => lookup_635_87_8(acc),
            [105, 115, 101, 104, 97, 114, 97] => lookup_635_87_9(acc),
            [107, 97, 105, 115, 101, 105] => lookup_635_87_10(acc),
            [107, 97, 109, 97, 107, 117, 114, 97] => lookup_635_87_11(acc),
            [107, 105, 121, 111, 107, 97, 119, 97] => lookup_635_87_12(acc),
            [109, 97, 116, 115, 117, 100, 97] => lookup_635_87_13(acc),
            [109, 105, 110, 97, 109, 105, 97, 115, 104, 105, 103, 97, 114, 97] => {
                lookup_635_87_14(acc)
            }
            [109, 105, 117, 114, 97] => lookup_635_87_15(acc),
            [110, 97, 107, 97, 105] => lookup_635_87_16(acc),
            [110, 105, 110, 111, 109, 105, 121, 97] => lookup_635_87_17(acc),
            [111, 100, 97, 119, 97, 114, 97] => lookup_635_87_18(acc),
            [111, 105] => lookup_635_87_19(acc),
            [111, 105, 115, 111] => lookup_635_87_20(acc),
            [115, 97, 103, 97, 109, 105, 104, 97, 114, 97] => lookup_635_87_21(acc),
            [115, 97, 109, 117, 107, 97, 119, 97] => lookup_635_87_22(acc),
            [116, 115, 117, 107, 117, 105] => lookup_635_87_23(acc),
            [121, 97, 109, 97, 107, 105, 116, 97] => lookup_635_87_24(acc),
            [121, 97, 109, 97, 116, 111] => lookup_635_87_25(acc),
            [121, 111, 107, 111, 115, 117, 107, 97] => lookup_635_87_26(acc),
            [121, 117, 103, 97, 119, 97, 114, 97] => lookup_635_87_27(acc),
            [122, 97, 109, 97] => lookup_635_87_28(acc),
            [122, 117, 115, 104, 105] => lookup_635_87_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_89_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_89_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_89<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_635_89_0(acc),
            wild => lookup_635_89_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_635_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_93_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_93_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_93<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_635_93_0(acc),
            wild => lookup_635_93_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_635_94_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_94_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_94<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_635_94_0(acc),
            wild => lookup_635_94_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_635_95_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_95<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 105] => lookup_635_95_0(acc),
            [103, 101, 105, 115, 101, 105] => lookup_635_95_1(acc),
            [104, 105, 100, 97, 107, 97] => lookup_635_95_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 116, 115, 117, 110, 111] => lookup_635_95_3(acc),
            [105, 110, 111] => lookup_635_95_4(acc),
            [107, 97, 103, 97, 109, 105] => lookup_635_95_5(acc),
            [107, 97, 109, 105] => lookup_635_95_6(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_635_95_7(acc),
            [107, 111, 99, 104, 105] => lookup_635_95_8(acc),
            [109, 105, 104, 97, 114, 97] => lookup_635_95_9(acc),
            [109, 111, 116, 111, 121, 97, 109, 97] => lookup_635_95_10(acc),
            [109, 117, 114, 111, 116, 111] => lookup_635_95_11(acc),
            [110, 97, 104, 97, 114, 105] => lookup_635_95_12(acc),
            [110, 97, 107, 97, 109, 117, 114, 97] => lookup_635_95_13(acc),
            [110, 97, 110, 107, 111, 107, 117] => lookup_635_95_14(acc),
            [110, 105, 115, 104, 105, 116, 111, 115, 97] => lookup_635_95_15(acc),
            [110, 105, 121, 111, 100, 111, 103, 97, 119, 97] => lookup_635_95_16(acc),
            [111, 99, 104, 105] => lookup_635_95_17(acc),
            [111, 107, 97, 119, 97] => lookup_635_95_18(acc),
            [111, 116, 111, 121, 111] => lookup_635_95_19(acc),
            [111, 116, 115, 117, 107, 105] => lookup_635_95_20(acc),
            [115, 97, 107, 97, 119, 97] => lookup_635_95_21(acc),
            [115, 117, 107, 117, 109, 111] => lookup_635_95_22(acc),
            [115, 117, 115, 97, 107, 105] => lookup_635_95_23(acc),
            [116, 111, 115, 97] => lookup_635_95_24(acc),
            [116, 111, 115, 97, 115, 104, 105, 109, 105, 122, 117] => lookup_635_95_25(acc),
            [116, 111, 121, 111] => lookup_635_95_26(acc),
            [116, 115, 117, 110, 111] => lookup_635_95_27(acc),
            [117, 109, 97, 106, 105] => lookup_635_95_28(acc),
            [121, 97, 115, 117, 100, 97] => lookup_635_95_29(acc),
            [121, 117, 115, 117, 104, 97, 114, 97] => lookup_635_95_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_96_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_96<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 109, 97, 107, 117, 115, 97] => lookup_635_96_0(acc),
            [97, 114, 97, 111] => lookup_635_96_1(acc),
            [97, 115, 111] => lookup_635_96_2(acc),
            [99, 104, 111, 121, 111] => lookup_635_96_3(acc),
            [103, 121, 111, 107, 117, 116, 111] => lookup_635_96_4(acc),
            [107, 97, 109, 105, 97, 109, 97, 107, 117, 115, 97] => lookup_635_96_5(acc),
            [107, 105, 107, 117, 99, 104, 105] => lookup_635_96_6(acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_635_96_7(acc),
            [109, 97, 115, 104, 105, 107, 105] => lookup_635_96_8(acc),
            [109, 105, 102, 117, 110, 101] => lookup_635_96_9(acc),
            [109, 105, 110, 97, 109, 97, 116, 97] => lookup_635_96_10(acc),
            [109, 105, 110, 97, 109, 105, 111, 103, 117, 110, 105] => lookup_635_96_11(acc),
            [110, 97, 103, 97, 115, 117] => lookup_635_96_12(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_635_96_13(acc),
            [111, 103, 117, 110, 105] => lookup_635_96_14(acc),
            [111, 122, 117] => lookup_635_96_15(acc),
            [115, 117, 109, 111, 116, 111] => lookup_635_96_16(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_635_96_17(acc),
            [117, 107, 105] => lookup_635_96_18(acc),
            [117, 116, 111] => lookup_635_96_19(acc),
            [121, 97, 109, 97, 103, 97] => lookup_635_96_20(acc),
            [121, 97, 109, 97, 116, 111] => lookup_635_96_21(acc),
            [121, 97, 116, 115, 117, 115, 104, 105, 114, 111] => lookup_635_96_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_98_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_98<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 121, 97, 98, 101] => lookup_635_98_0(acc),
            [102, 117, 107, 117, 99, 104, 105, 121, 97, 109, 97] => lookup_635_98_1(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97] => lookup_635_98_2(acc),
            [105, 100, 101] => lookup_635_98_3(acc),
            [105, 110, 101] => lookup_635_98_4(acc),
            [106, 111, 121, 111] => lookup_635_98_5(acc),
            [107, 97, 109, 101, 111, 107, 97] => lookup_635_98_6(acc),
            [107, 97, 109, 111] => lookup_635_98_7(acc),
            [107, 105, 116, 97] => lookup_635_98_8(acc),
            [107, 105, 122, 117] => lookup_635_98_9(acc),
            [107, 117, 109, 105, 121, 97, 109, 97] => lookup_635_98_10(acc),
            [107, 121, 111, 116, 97, 109, 98, 97] => lookup_635_98_11(acc),
            [107, 121, 111, 116, 97, 110, 97, 98, 101] => lookup_635_98_12(acc),
            [107, 121, 111, 116, 97, 110, 103, 111] => lookup_635_98_13(acc),
            [109, 97, 105, 122, 117, 114, 117] => lookup_635_98_14(acc),
            [109, 105, 110, 97, 109, 105] => lookup_635_98_15(acc),
            [109, 105, 110, 97, 109, 105, 121, 97, 109, 97, 115, 104, 105, 114, 111] => {
                lookup_635_98_16(acc)
            }
            [109, 105, 121, 97, 122, 117] => lookup_635_98_17(acc),
            [109, 117, 107, 111] => lookup_635_98_18(acc),
            [110, 97, 103, 97, 111, 107, 97, 107, 121, 111] => lookup_635_98_19(acc),
            [110, 97, 107, 97, 103, 121, 111] => lookup_635_98_20(acc),
            [110, 97, 110, 116, 97, 110] => lookup_635_98_21(acc),
            [111, 121, 97, 109, 97, 122, 97, 107, 105] => lookup_635_98_22(acc),
            [115, 97, 107, 121, 111] => lookup_635_98_23(acc),
            [115, 101, 105, 107, 97] => lookup_635_98_24(acc),
            [116, 97, 110, 97, 98, 101] => lookup_635_98_25(acc),
            [117, 106, 105] => lookup_635_98_26(acc),
            [117, 106, 105, 116, 97, 119, 97, 114, 97] => lookup_635_98_27(acc),
            [119, 97, 122, 117, 107, 97] => lookup_635_98_28(acc),
            [121, 97, 109, 97, 115, 104, 105, 110, 97] => lookup_635_98_29(acc),
            [121, 97, 119, 97, 116, 97] => lookup_635_98_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_108_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_108<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 104, 105] => lookup_635_108_0(acc),
            [105, 110, 97, 98, 101] => lookup_635_108_1(acc),
            [105, 115, 101] => lookup_635_108_2(acc),
            [107, 97, 109, 101, 121, 97, 109, 97] => lookup_635_108_3(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_635_108_4(acc),
            [107, 105, 104, 111] => lookup_635_108_5(acc),
            [107, 105, 115, 111, 115, 97, 107, 105] => lookup_635_108_6(acc),
            [107, 105, 119, 97] => lookup_635_108_7(acc),
            [107, 111, 109, 111, 110, 111] => lookup_635_108_8(acc),
            [107, 117, 109, 97, 110, 111] => lookup_635_108_9(acc),
            [107, 117, 119, 97, 110, 97] => lookup_635_108_10(acc),
            [109, 97, 116, 115, 117, 115, 97, 107, 97] => lookup_635_108_11(acc),
            [109, 101, 105, 119, 97] => lookup_635_108_12(acc),
            [109, 105, 104, 97, 109, 97] => lookup_635_108_13(acc),
            [109, 105, 110, 97, 109, 105, 105, 115, 101] => lookup_635_108_14(acc),
            [109, 105, 115, 117, 103, 105] => lookup_635_108_15(acc),
            [109, 105, 121, 97, 109, 97] => lookup_635_108_16(acc),
            [110, 97, 98, 97, 114, 105] => lookup_635_108_17(acc),
            [115, 104, 105, 109, 97] => lookup_635_108_18(acc),
            [115, 117, 122, 117, 107, 97] => lookup_635_108_19(acc),
            [116, 97, 100, 111] => lookup_635_108_20(acc),
            [116, 97, 105, 107, 105] => lookup_635_108_21(acc),
            [116, 97, 107, 105] => lookup_635_108_22(acc),
            [116, 97, 109, 97, 107, 105] => lookup_635_108_23(acc),
            [116, 111, 98, 97] => lookup_635_108_24(acc),
            [116, 115, 117] => lookup_635_108_25(acc),
            [117, 100, 111, 110, 111] => lookup_635_108_26(acc),
            [117, 114, 101, 115, 104, 105, 110, 111] => lookup_635_108_27(acc),
            [119, 97, 116, 97, 114, 97, 105] => lookup_635_108_28(acc),
            [121, 111, 107, 107, 97, 105, 99, 104, 105] => lookup_635_108_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_110_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_110<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 117, 114, 117, 107, 97, 119, 97] => lookup_635_110_0(acc),
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => {
                lookup_635_110_1(acc)
            }
            [105, 115, 104, 105, 110, 111, 109, 97, 107, 105] => lookup_635_110_2(acc),
            [105, 119, 97, 110, 117, 109, 97] => lookup_635_110_3(acc),
            [107, 97, 107, 117, 100, 97] => lookup_635_110_4(acc),
            [107, 97, 109, 105] => lookup_635_110_5(acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_635_110_6(acc),
            [109, 97, 114, 117, 109, 111, 114, 105] => lookup_635_110_7(acc),
            [109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_635_110_8(acc),
            [109, 105, 110, 97, 109, 105, 115, 97, 110, 114, 105, 107, 117] => {
                lookup_635_110_9(acc)
            }
            [109, 105, 115, 97, 116, 111] => lookup_635_110_10(acc),
            [109, 117, 114, 97, 116, 97] => lookup_635_110_11(acc),
            [110, 97, 116, 111, 114, 105] => lookup_635_110_12(acc),
            [111, 103, 97, 119, 97, 114, 97] => lookup_635_110_13(acc),
            [111, 104, 105, 114, 97] => lookup_635_110_14(acc),
            [111, 110, 97, 103, 97, 119, 97] => lookup_635_110_15(acc),
            [111, 115, 97, 107, 105] => lookup_635_110_16(acc),
            [114, 105, 102, 117] => lookup_635_110_17(acc),
            [115, 101, 109, 105, 110, 101] => lookup_635_110_18(acc),
            [115, 104, 105, 98, 97, 116, 97] => lookup_635_110_19(acc),
            [115, 104, 105, 99, 104, 105, 107, 97, 115, 104, 117, 107, 117] => {
                lookup_635_110_20(acc)
            }
            [115, 104, 105, 107, 97, 109, 97] => lookup_635_110_21(acc),
            [115, 104, 105, 111, 103, 97, 109, 97] => lookup_635_110_22(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_635_110_23(acc),
            [116, 97, 103, 97, 106, 111] => lookup_635_110_24(acc),
            [116, 97, 105, 119, 97] => lookup_635_110_25(acc),
            [116, 111, 109, 101] => lookup_635_110_26(acc),
            [116, 111, 109, 105, 121, 97] => lookup_635_110_27(acc),
            [119, 97, 107, 117, 121, 97] => lookup_635_110_28(acc),
            [119, 97, 116, 97, 114, 105] => lookup_635_110_29(acc),
            [121, 97, 109, 97, 109, 111, 116, 111] => lookup_635_110_30(acc),
            [122, 97, 111] => lookup_635_110_31(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_111_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_111<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 121, 97] => lookup_635_111_0(acc),
            [101, 98, 105, 110, 111] => lookup_635_111_1(acc),
            [103, 111, 107, 97, 115, 101] => lookup_635_111_2(acc),
            [104, 121, 117, 103, 97] => lookup_635_111_3(acc),
            [107, 97, 100, 111, 103, 97, 119, 97] => lookup_635_111_4(acc),
            [107, 97, 119, 97, 109, 105, 110, 97, 109, 105] => lookup_635_111_5(acc),
            [107, 105, 106, 111] => lookup_635_111_6(acc),
            [107, 105, 116, 97, 103, 97, 119, 97] => lookup_635_111_7(acc),
            [107, 105, 116, 97, 107, 97, 116, 97] => lookup_635_111_8(acc),
            [107, 105, 116, 97, 117, 114, 97] => lookup_635_111_9(acc),
            [107, 111, 98, 97, 121, 97, 115, 104, 105] => lookup_635_111_10(acc),
            [107, 117, 110, 105, 116, 111, 109, 105] => lookup_635_111_11(acc),
            [107, 117, 115, 104, 105, 109, 97] => lookup_635_111_12(acc),
            [109, 105, 109, 97, 116, 97] => lookup_635_111_13(acc),
            [109, 105, 121, 97, 107, 111, 110, 111, 106, 111] => lookup_635_111_14(acc),
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_635_111_15(acc),
            [109, 111, 114, 111, 116, 115, 117, 107, 97] => lookup_635_111_16(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_635_111_17(acc),
            [110, 105, 115, 104, 105, 109, 101, 114, 97] => lookup_635_111_18(acc),
            [110, 111, 98, 101, 111, 107, 97] => lookup_635_111_19(acc),
            [115, 97, 105, 116, 111] => lookup_635_111_20(acc),
            [115, 104, 105, 105, 98, 97] => lookup_635_111_21(acc),
            [115, 104, 105, 110, 116, 111, 109, 105] => lookup_635_111_22(acc),
            [116, 97, 107, 97, 104, 97, 114, 117] => lookup_635_111_23(acc),
            [116, 97, 107, 97, 110, 97, 98, 101] => lookup_635_111_24(acc),
            [116, 97, 107, 97, 122, 97, 107, 105] => lookup_635_111_25(acc),
            [116, 115, 117, 110, 111] => lookup_635_111_26(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_116_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_116<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 104, 105] => lookup_635_116_0(acc),
            [97, 103, 101, 109, 97, 116, 115, 117] => lookup_635_116_1(acc),
            [97, 110, 97, 110] => lookup_635_116_2(acc),
            [97, 111, 107, 105] => lookup_635_116_3(acc),
            [97, 115, 97, 104, 105] => lookup_635_116_4(acc),
            [97, 122, 117, 109, 105, 110, 111] => lookup_635_116_5(acc),
            [99, 104, 105, 107, 117, 104, 111, 107, 117] => lookup_635_116_6(acc),
            [99, 104, 105, 107, 117, 109, 97] => lookup_635_116_7(acc),
            [99, 104, 105, 110, 111] => lookup_635_116_8(acc),
            [102, 117, 106, 105, 109, 105] => lookup_635_116_9(acc),
            [104, 97, 107, 117, 98, 97] => lookup_635_116_10(acc),
            [104, 97, 114, 97] => lookup_635_116_11(acc),
            [104, 105, 114, 97, 121, 97] => lookup_635_116_12(acc),
            [105, 105, 100, 97] => lookup_635_116_13(acc),
            [105, 105, 106, 105, 109, 97] => lookup_635_116_14(acc),
            [105, 105, 121, 97, 109, 97] => lookup_635_116_15(acc),
            [105, 105, 122, 117, 110, 97] => lookup_635_116_16(acc),
            [105, 107, 101, 100, 97] => lookup_635_116_17(acc),
            [105, 107, 117, 115, 97, 107, 97] => lookup_635_116_18(acc),
            [105, 110, 97] => lookup_635_116_19(acc),
            [107, 97, 114, 117, 105, 122, 97, 119, 97] => lookup_635_116_20(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_635_116_21(acc),
            [107, 105, 115, 111] => lookup_635_116_22(acc),
            [107, 105, 115, 111, 102, 117, 107, 117, 115, 104, 105, 109, 97] => {
                lookup_635_116_23(acc)
            }
            [107, 105, 116, 97, 97, 105, 107, 105] => lookup_635_116_24(acc),
            [107, 111, 109, 97, 103, 97, 110, 101] => lookup_635_116_25(acc),
            [107, 111, 109, 111, 114, 111] => lookup_635_116_26(acc),
            [109, 97, 116, 115, 117, 107, 97, 119, 97] => lookup_635_116_27(acc),
            [109, 97, 116, 115, 117, 109, 111, 116, 111] => lookup_635_116_28(acc),
            [109, 105, 97, 115, 97] => lookup_635_116_29(acc),
            [109, 105, 110, 97, 109, 105, 97, 105, 107, 105] => lookup_635_116_30(acc),
            [109, 105, 110, 97, 109, 105, 109, 97, 107, 105] => lookup_635_116_31(acc),
            [109, 105, 110, 97, 109, 105, 109, 105, 110, 111, 119, 97] => lookup_635_116_32(acc),
            [109, 105, 110, 111, 119, 97] => lookup_635_116_33(acc),
            [109, 105, 121, 97, 100, 97] => lookup_635_116_34(acc),
            [109, 105, 121, 111, 116, 97] => lookup_635_116_35(acc),
            [109, 111, 99, 104, 105, 122, 117, 107, 105] => lookup_635_116_36(acc),
            [110, 97, 103, 97, 110, 111] => lookup_635_116_37(acc),
            [110, 97, 103, 97, 119, 97] => lookup_635_116_38(acc),
            [110, 97, 103, 105, 115, 111] => lookup_635_116_39(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_635_116_40(acc),
            [110, 97, 107, 97, 110, 111] => lookup_635_116_41(acc),
            [110, 111, 122, 97, 119, 97, 111, 110, 115, 101, 110] => lookup_635_116_42(acc),
            [111, 98, 117, 115, 101] => lookup_635_116_43(acc),
            [111, 103, 97, 119, 97] => lookup_635_116_44(acc),
            [111, 107, 97, 121, 97] => lookup_635_116_45(acc),
            [111, 109, 97, 99, 104, 105] => lookup_635_116_46(acc),
            [111, 109, 105] => lookup_635_116_47(acc),
            [111, 111, 107, 117, 119, 97] => lookup_635_116_48(acc),
            [111, 111, 115, 104, 105, 107, 97] => lookup_635_116_49(acc),
            [111, 116, 97, 107, 105] => lookup_635_116_50(acc),
            [111, 116, 97, 114, 105] => lookup_635_116_51(acc),
            [115, 97, 107, 97, 101] => lookup_635_116_52(acc),
            [115, 97, 107, 97, 107, 105] => lookup_635_116_53(acc),
            [115, 97, 107, 117] => lookup_635_116_54(acc),
            [115, 97, 107, 117, 104, 111] => lookup_635_116_55(acc),
            [115, 104, 105, 109, 111, 115, 117, 119, 97] => lookup_635_116_56(acc),
            [115, 104, 105, 110, 97, 110, 111, 109, 97, 99, 104, 105] => lookup_635_116_57(acc),
            [115, 104, 105, 111, 106, 105, 114, 105] => lookup_635_116_58(acc),
            [115, 117, 119, 97] => lookup_635_116_59(acc),
            [115, 117, 122, 97, 107, 97] => lookup_635_116_60(acc),
            [116, 97, 107, 97, 103, 105] => lookup_635_116_61(acc),
            [116, 97, 107, 97, 109, 111, 114, 105] => lookup_635_116_62(acc),
            [116, 97, 107, 97, 121, 97, 109, 97] => lookup_635_116_63(acc),
            [116, 97, 116, 101, 115, 104, 105, 110, 97] => lookup_635_116_64(acc),
            [116, 97, 116, 115, 117, 110, 111] => lookup_635_116_65(acc),
            [116, 111, 103, 97, 107, 117, 115, 104, 105] => lookup_635_116_66(acc),
            [116, 111, 103, 117, 114, 97] => lookup_635_116_67(acc),
            [116, 111, 109, 105] => lookup_635_116_68(acc),
            [117, 101, 100, 97] => lookup_635_116_69(acc),
            [119, 97, 100, 97] => lookup_635_116_70(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_635_116_71(acc),
            [121, 97, 109, 97, 110, 111, 117, 99, 104, 105] => lookup_635_116_72(acc),
            [121, 97, 115, 97, 107, 97] => lookup_635_116_73(acc),
            [121, 97, 115, 117, 111, 107, 97] => lookup_635_116_74(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_117_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_117<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 105, 106, 105, 119, 97] => lookup_635_117_0(acc),
            [102, 117, 116, 115, 117] => lookup_635_117_1(acc),
            [103, 111, 116, 111] => lookup_635_117_2(acc),
            [104, 97, 115, 97, 109, 105] => lookup_635_117_3(acc),
            [104, 105, 114, 97, 100, 111] => lookup_635_117_4(acc),
            [105, 107, 105] => lookup_635_117_5(acc),
            [105, 115, 97, 104, 97, 121, 97] => lookup_635_117_6(acc),
            [107, 97, 119, 97, 116, 97, 110, 97] => lookup_635_117_7(acc),
            [107, 117, 99, 104, 105, 110, 111, 116, 115, 117] => lookup_635_117_8(acc),
            [109, 97, 116, 115, 117, 117, 114, 97] => lookup_635_117_9(acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_635_117_10(acc),
            [111, 98, 97, 109, 97] => lookup_635_117_11(acc),
            [111, 109, 117, 114, 97] => lookup_635_117_12(acc),
            [111, 115, 101, 116, 111] => lookup_635_117_13(acc),
            [115, 97, 105, 107, 97, 105] => lookup_635_117_14(acc),
            [115, 97, 115, 101, 98, 111] => lookup_635_117_15(acc),
            [115, 101, 105, 104, 105] => lookup_635_117_16(acc),
            [115, 104, 105, 109, 97, 98, 97, 114, 97] => lookup_635_117_17(acc),
            [115, 104, 105, 110, 107, 97, 109, 105, 103, 111, 116, 111] => lookup_635_117_18(acc),
            [116, 111, 103, 105, 116, 115, 117] => lookup_635_117_19(acc),
            [116, 115, 117, 115, 104, 105, 109, 97] => lookup_635_117_20(acc),
            [117, 110, 122, 101, 110] => lookup_635_117_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_118_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_118_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_118<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_635_118_0(acc),
            wild => lookup_635_118_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_635_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_120_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_120<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 100, 111] => lookup_635_120_0(acc),
            [103, 111, 115, 101] => lookup_635_120_1(acc),
            [104, 101, 103, 117, 114, 105] => lookup_635_120_2(acc),
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 115, 104, 105, 110, 111] => {
                lookup_635_120_3(acc)
            }
            [105, 107, 97, 114, 117, 103, 97] => lookup_635_120_4(acc),
            [105, 107, 111, 109, 97] => lookup_635_120_5(acc),
            [107, 97, 109, 105, 107, 105, 116, 97, 121, 97, 109, 97] => lookup_635_120_6(acc),
            [107, 97, 110, 109, 97, 107, 105] => lookup_635_120_7(acc),
            [107, 97, 115, 104, 105, 98, 97] => lookup_635_120_8(acc),
            [107, 97, 115, 104, 105, 104, 97, 114, 97] => lookup_635_120_9(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_635_120_10(acc),
            [107, 97, 119, 97, 105] => lookup_635_120_11(acc),
            [107, 97, 119, 97, 107, 97, 109, 105] => lookup_635_120_12(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_635_120_13(acc),
            [107, 111, 114, 121, 111] => lookup_635_120_14(acc),
            [107, 117, 114, 111, 116, 97, 107, 105] => lookup_635_120_15(acc),
            [109, 105, 116, 115, 117, 101] => lookup_635_120_16(acc),
            [109, 105, 121, 97, 107, 101] => lookup_635_120_17(acc),
            [110, 97, 114, 97] => lookup_635_120_18(acc),
            [110, 111, 115, 101, 103, 97, 119, 97] => lookup_635_120_19(acc),
            [111, 106, 105] => lookup_635_120_20(acc),
            [111, 117, 100, 97] => lookup_635_120_21(acc),
            [111, 121, 111, 100, 111] => lookup_635_120_22(acc),
            [115, 97, 107, 117, 114, 97, 105] => lookup_635_120_23(acc),
            [115, 97, 110, 103, 111] => lookup_635_120_24(acc),
            [115, 104, 105, 109, 111, 105, 99, 104, 105] => lookup_635_120_25(acc),
            [115, 104, 105, 109, 111, 107, 105, 116, 97, 121, 97, 109, 97] => {
                lookup_635_120_26(acc)
            }
            [115, 104, 105, 110, 106, 111] => lookup_635_120_27(acc),
            [115, 111, 110, 105] => lookup_635_120_28(acc),
            [116, 97, 107, 97, 116, 111, 114, 105] => lookup_635_120_29(acc),
            [116, 97, 119, 97, 114, 97, 109, 111, 116, 111] => lookup_635_120_30(acc),
            [116, 101, 110, 107, 97, 119, 97] => lookup_635_120_31(acc),
            [116, 101, 110, 114, 105] => lookup_635_120_32(acc),
            [117, 100, 97] => lookup_635_120_33(acc),
            [121, 97, 109, 97, 116, 111, 107, 111, 114, 105, 121, 97, 109, 97] => {
                lookup_635_120_34(acc)
            }
            [121, 97, 109, 97, 116, 111, 116, 97, 107, 97, 100, 97] => lookup_635_120_35(acc),
            [121, 97, 109, 97, 122, 111, 101] => lookup_635_120_36(acc),
            [121, 111, 115, 104, 105, 110, 111] => lookup_635_120_37(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_121_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_121_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [117, 115, 101, 114] => lookup_635_121_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_121_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_121_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_121_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_121_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_121_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_121_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_121_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_121_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_121_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_121<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 101, 105, 110, 101, 116] => lookup_635_121_0(info, labels, acc),
            [103, 101, 104, 105, 114, 110] => lookup_635_121_1(acc),
            [105, 118, 111, 114, 121] => lookup_635_121_2(acc),
            [109, 97, 105, 108, 45, 98, 111, 120] => lookup_635_121_3(acc),
            [109, 105, 110, 116, 115] => lookup_635_121_4(acc),
            [109, 111, 107, 117, 114, 101, 110] => lookup_635_121_5(acc),
            [111, 112, 97, 108] => lookup_635_121_6(acc),
            [115, 97, 107, 117, 114, 97] => lookup_635_121_7(acc),
            [115, 117, 109, 111, 109, 111] => lookup_635_121_8(acc),
            [116, 111, 112, 97, 122] => lookup_635_121_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_123_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_123<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 103, 97] => lookup_635_123_0(acc),
            [97, 103, 97, 110, 111] => lookup_635_123_1(acc),
            [103, 111, 115, 101, 110] => lookup_635_123_2(acc),
            [105, 116, 111, 105, 103, 97, 119, 97] => lookup_635_123_3(acc),
            [105, 122, 117, 109, 111, 122, 97, 107, 105] => lookup_635_123_4(acc),
            [106, 111, 101, 116, 115, 117] => lookup_635_123_5(acc),
            [107, 97, 109, 111] => lookup_635_123_6(acc),
            [107, 97, 114, 105, 119, 97] => lookup_635_123_7(acc),
            [107, 97, 115, 104, 105, 119, 97, 122, 97, 107, 105] => lookup_635_123_8(acc),
            [109, 105, 110, 97, 109, 105, 117, 111, 110, 117, 109, 97] => lookup_635_123_9(acc),
            [109, 105, 116, 115, 117, 107, 101] => lookup_635_123_10(acc),
            [109, 117, 105, 107, 97] => lookup_635_123_11(acc),
            [109, 117, 114, 97, 107, 97, 109, 105] => lookup_635_123_12(acc),
            [109, 121, 111, 107, 111] => lookup_635_123_13(acc),
            [110, 97, 103, 97, 111, 107, 97] => lookup_635_123_14(acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_635_123_15(acc),
            [111, 106, 105, 121, 97] => lookup_635_123_16(acc),
            [111, 109, 105] => lookup_635_123_17(acc),
            [115, 97, 100, 111] => lookup_635_123_18(acc),
            [115, 97, 110, 106, 111] => lookup_635_123_19(acc),
            [115, 101, 105, 114, 111] => lookup_635_123_20(acc),
            [115, 101, 105, 114, 111, 117] => lookup_635_123_21(acc),
            [115, 101, 107, 105, 107, 97, 119, 97] => lookup_635_123_22(acc),
            [115, 104, 105, 98, 97, 116, 97] => lookup_635_123_23(acc),
            [116, 97, 103, 97, 109, 105] => lookup_635_123_24(acc),
            [116, 97, 105, 110, 97, 105] => lookup_635_123_25(acc),
            [116, 111, 99, 104, 105, 111] => lookup_635_123_26(acc),
            [116, 111, 107, 97, 109, 97, 99, 104, 105] => lookup_635_123_27(acc),
            [116, 115, 117, 98, 97, 109, 101] => lookup_635_123_28(acc),
            [116, 115, 117, 110, 97, 110] => lookup_635_123_29(acc),
            [117, 111, 110, 117, 109, 97] => lookup_635_123_30(acc),
            [121, 97, 104, 105, 107, 111] => lookup_635_123_31(acc),
            [121, 111, 105, 116, 97] => lookup_635_123_32(acc),
            [121, 117, 122, 97, 119, 97] => lookup_635_123_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_129_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_129<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 112, 112, 117] => lookup_635_129_0(acc),
            [98, 117, 110, 103, 111, 111, 110, 111] => lookup_635_129_1(acc),
            [98, 117, 110, 103, 111, 116, 97, 107, 97, 100, 97] => lookup_635_129_2(acc),
            [104, 97, 115, 97, 109, 97] => lookup_635_129_3(acc),
            [104, 105, 106, 105] => lookup_635_129_4(acc),
            [104, 105, 109, 101, 115, 104, 105, 109, 97] => lookup_635_129_5(acc),
            [104, 105, 116, 97] => lookup_635_129_6(acc),
            [107, 97, 109, 105, 116, 115, 117, 101] => lookup_635_129_7(acc),
            [107, 111, 107, 111, 110, 111, 101] => lookup_635_129_8(acc),
            [107, 117, 106, 117] => lookup_635_129_9(acc),
            [107, 117, 110, 105, 115, 97, 107, 105] => lookup_635_129_10(acc),
            [107, 117, 115, 117] => lookup_635_129_11(acc),
            [111, 105, 116, 97] => lookup_635_129_12(acc),
            [115, 97, 105, 107, 105] => lookup_635_129_13(acc),
            [116, 97, 107, 101, 116, 97] => lookup_635_129_14(acc),
            [116, 115, 117, 107, 117, 109, 105] => lookup_635_129_15(acc),
            [117, 115, 97] => lookup_635_129_16(acc),
            [117, 115, 117, 107, 105] => lookup_635_129_17(acc),
            [121, 117, 102, 117] => lookup_635_129_18(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_130<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 97, 105, 119, 97] => lookup_635_130_0(acc),
            [97, 115, 97, 107, 117, 99, 104, 105] => lookup_635_130_1(acc),
            [98, 105, 122, 101, 110] => lookup_635_130_2(acc),
            [104, 97, 121, 97, 115, 104, 105, 109, 97] => lookup_635_130_3(acc),
            [105, 98, 97, 114, 97] => lookup_635_130_4(acc),
            [107, 97, 103, 97, 109, 105, 110, 111] => lookup_635_130_5(acc),
            [107, 97, 115, 97, 111, 107, 97] => lookup_635_130_6(acc),
            [107, 105, 98, 105, 99, 104, 117, 111] => lookup_635_130_7(acc),
            [107, 117, 109, 101, 110, 97, 110] => lookup_635_130_8(acc),
            [107, 117, 114, 97, 115, 104, 105, 107, 105] => lookup_635_130_9(acc),
            [109, 97, 110, 105, 119, 97] => lookup_635_130_10(acc),
            [109, 105, 115, 97, 107, 105] => lookup_635_130_11(acc),
            [110, 97, 103, 105] => lookup_635_130_12(acc),
            [110, 105, 105, 109, 105] => lookup_635_130_13(acc),
            [110, 105, 115, 104, 105, 97, 119, 97, 107, 117, 114, 97] => lookup_635_130_14(acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_635_130_15(acc),
            [115, 97, 116, 111, 115, 104, 111] => lookup_635_130_16(acc),
            [115, 101, 116, 111, 117, 99, 104, 105] => lookup_635_130_17(acc),
            [115, 104, 105, 110, 106, 111] => lookup_635_130_18(acc),
            [115, 104, 111, 111] => lookup_635_130_19(acc),
            [115, 111, 106, 97] => lookup_635_130_20(acc),
            [116, 97, 107, 97, 104, 97, 115, 104, 105] => lookup_635_130_21(acc),
            [116, 97, 109, 97, 110, 111] => lookup_635_130_22(acc),
            [116, 115, 117, 121, 97, 109, 97] => lookup_635_130_23(acc),
            [119, 97, 107, 101] => lookup_635_130_24(acc),
            [121, 97, 107, 97, 103, 101] => lookup_635_130_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_131_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_131<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 103, 117, 110, 105] => lookup_635_131_0(acc),
            [103, 105, 110, 111, 119, 97, 110] => lookup_635_131_1(acc),
            [103, 105, 110, 111, 122, 97] => lookup_635_131_2(acc),
            [103, 117, 115, 104, 105, 107, 97, 109, 105] => lookup_635_131_3(acc),
            [104, 97, 101, 98, 97, 114, 117] => lookup_635_131_4(acc),
            [104, 105, 103, 97, 115, 104, 105] => lookup_635_131_5(acc),
            [104, 105, 114, 97, 114, 97] => lookup_635_131_6(acc),
            [105, 104, 101, 121, 97] => lookup_635_131_7(acc),
            [105, 115, 104, 105, 103, 97, 107, 105] => lookup_635_131_8(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_635_131_9(acc),
            [105, 116, 111, 109, 97, 110] => lookup_635_131_10(acc),
            [105, 122, 101, 110, 97] => lookup_635_131_11(acc),
            [107, 97, 100, 101, 110, 97] => lookup_635_131_12(acc),
            [107, 105, 110] => lookup_635_131_13(acc),
            [107, 105, 116, 97, 100, 97, 105, 116, 111] => lookup_635_131_14(acc),
            [107, 105, 116, 97, 110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => {
                lookup_635_131_15(acc)
            }
            [107, 117, 109, 101, 106, 105, 109, 97] => lookup_635_131_16(acc),
            [107, 117, 110, 105, 103, 97, 109, 105] => lookup_635_131_17(acc),
            [109, 105, 110, 97, 109, 105, 100, 97, 105, 116, 111] => lookup_635_131_18(acc),
            [109, 111, 116, 111, 98, 117] => lookup_635_131_19(acc),
            [110, 97, 103, 111] => lookup_635_131_20(acc),
            [110, 97, 104, 97] => lookup_635_131_21(acc),
            [110, 97, 107, 97, 103, 117, 115, 117, 107, 117] => lookup_635_131_22(acc),
            [110, 97, 107, 105, 106, 105, 110] => lookup_635_131_23(acc),
            [110, 97, 110, 106, 111] => lookup_635_131_24(acc),
            [110, 105, 115, 104, 105, 104, 97, 114, 97] => lookup_635_131_25(acc),
            [111, 103, 105, 109, 105] => lookup_635_131_26(acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_635_131_27(acc),
            [111, 110, 110, 97] => lookup_635_131_28(acc),
            [115, 104, 105, 109, 111, 106, 105] => lookup_635_131_29(acc),
            [116, 97, 107, 101, 116, 111, 109, 105] => lookup_635_131_30(acc),
            [116, 97, 114, 97, 109, 97] => lookup_635_131_31(acc),
            [116, 111, 107, 97, 115, 104, 105, 107, 105] => lookup_635_131_32(acc),
            [116, 111, 109, 105, 103, 117, 115, 117, 107, 117] => lookup_635_131_33(acc),
            [116, 111, 110, 97, 107, 105] => lookup_635_131_34(acc),
            [117, 114, 97, 115, 111, 101] => lookup_635_131_35(acc),
            [117, 114, 117, 109, 97] => lookup_635_131_36(acc),
            [121, 97, 101, 115, 101] => lookup_635_131_37(acc),
            [121, 111, 109, 105, 116, 97, 110] => lookup_635_131_38(acc),
            [121, 111, 110, 97, 98, 97, 114, 117] => lookup_635_131_39(acc),
            [121, 111, 110, 97, 103, 117, 110, 105] => lookup_635_131_40(acc),
            [122, 97, 109, 97, 109, 105] => lookup_635_131_41(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_134<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 101, 110, 111] => lookup_635_134_0(acc),
            [99, 104, 105, 104, 97, 121, 97, 97, 107, 97, 115, 97, 107, 97] => {
                lookup_635_134_1(acc)
            }
            [99, 104, 117, 111] => lookup_635_134_2(acc),
            [100, 97, 105, 116, 111] => lookup_635_134_3(acc),
            [102, 117, 106, 105, 105, 100, 101, 114, 97] => lookup_635_134_4(acc),
            [104, 97, 98, 105, 107, 105, 110, 111] => lookup_635_134_5(acc),
            [104, 97, 110, 110, 97, 110] => lookup_635_134_6(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 115, 97, 107, 97] => lookup_635_134_7(acc),
            [104, 105, 103, 97, 115, 104, 105, 115, 117, 109, 105, 121, 111, 115, 104, 105] => {
                lookup_635_134_8(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 121, 111, 100, 111, 103, 97, 119, 97] => {
                lookup_635_134_9(acc)
            }
            [104, 105, 114, 97, 107, 97, 116, 97] => lookup_635_134_10(acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_635_134_11(acc),
            [105, 107, 101, 100, 97] => lookup_635_134_12(acc),
            [105, 122, 117, 109, 105] => lookup_635_134_13(acc),
            [105, 122, 117, 109, 105, 111, 116, 115, 117] => lookup_635_134_14(acc),
            [105, 122, 117, 109, 105, 115, 97, 110, 111] => lookup_635_134_15(acc),
            [107, 97, 100, 111, 109, 97] => lookup_635_134_16(acc),
            [107, 97, 105, 122, 117, 107, 97] => lookup_635_134_17(acc),
            [107, 97, 110, 97, 110] => lookup_635_134_18(acc),
            [107, 97, 115, 104, 105, 119, 97, 114, 97] => lookup_635_134_19(acc),
            [107, 97, 116, 97, 110, 111] => lookup_635_134_20(acc),
            [107, 97, 119, 97, 99, 104, 105, 110, 97, 103, 97, 110, 111] => lookup_635_134_21(acc),
            [107, 105, 115, 104, 105, 119, 97, 100, 97] => lookup_635_134_22(acc),
            [107, 105, 116, 97] => lookup_635_134_23(acc),
            [107, 117, 109, 97, 116, 111, 114, 105] => lookup_635_134_24(acc),
            [109, 97, 116, 115, 117, 98, 97, 114, 97] => lookup_635_134_25(acc),
            [109, 105, 110, 97, 116, 111] => lookup_635_134_26(acc),
            [109, 105, 110, 111, 104] => lookup_635_134_27(acc),
            [109, 105, 115, 97, 107, 105] => lookup_635_134_28(acc),
            [109, 111, 114, 105, 103, 117, 99, 104, 105] => lookup_635_134_29(acc),
            [110, 101, 121, 97, 103, 97, 119, 97] => lookup_635_134_30(acc),
            [110, 105, 115, 104, 105] => lookup_635_134_31(acc),
            [110, 111, 115, 101] => lookup_635_134_32(acc),
            [111, 115, 97, 107, 97, 115, 97, 121, 97, 109, 97] => lookup_635_134_33(acc),
            [115, 97, 107, 97, 105] => lookup_635_134_34(acc),
            [115, 97, 121, 97, 109, 97] => lookup_635_134_35(acc),
            [115, 101, 110, 110, 97, 110] => lookup_635_134_36(acc),
            [115, 101, 116, 116, 115, 117] => lookup_635_134_37(acc),
            [115, 104, 105, 106, 111, 110, 97, 119, 97, 116, 101] => lookup_635_134_38(acc),
            [115, 104, 105, 109, 97, 109, 111, 116, 111] => lookup_635_134_39(acc),
            [115, 117, 105, 116, 97] => lookup_635_134_40(acc),
            [116, 97, 100, 97, 111, 107, 97] => lookup_635_134_41(acc),
            [116, 97, 105, 115, 104, 105] => lookup_635_134_42(acc),
            [116, 97, 106, 105, 114, 105] => lookup_635_134_43(acc),
            [116, 97, 107, 97, 105, 115, 104, 105] => lookup_635_134_44(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_635_134_45(acc),
            [116, 111, 110, 100, 97, 98, 97, 121, 97, 115, 104, 105] => lookup_635_134_46(acc),
            [116, 111, 121, 111, 110, 97, 107, 97] => lookup_635_134_47(acc),
            [116, 111, 121, 111, 110, 111] => lookup_635_134_48(acc),
            [121, 97, 111] => lookup_635_134_49(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_154_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_154<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 105, 97, 107, 101] => lookup_635_154_0(acc),
            [97, 114, 105, 116, 97] => lookup_635_154_1(acc),
            [102, 117, 107, 117, 100, 111, 109, 105] => lookup_635_154_2(acc),
            [103, 101, 110, 107, 97, 105] => lookup_635_154_3(acc),
            [104, 97, 109, 97, 116, 97, 109, 97] => lookup_635_154_4(acc),
            [104, 105, 122, 101, 110] => lookup_635_154_5(acc),
            [105, 109, 97, 114, 105] => lookup_635_154_6(acc),
            [107, 97, 109, 105, 109, 105, 110, 101] => lookup_635_154_7(acc),
            [107, 97, 110, 122, 97, 107, 105] => lookup_635_154_8(acc),
            [107, 97, 114, 97, 116, 115, 117] => lookup_635_154_9(acc),
            [107, 97, 115, 104, 105, 109, 97] => lookup_635_154_10(acc),
            [107, 105, 116, 97, 103, 97, 116, 97] => lookup_635_154_11(acc),
            [107, 105, 116, 97, 104, 97, 116, 97] => lookup_635_154_12(acc),
            [107, 105, 121, 97, 109, 97] => lookup_635_154_13(acc),
            [107, 111, 117, 104, 111, 107, 117] => lookup_635_154_14(acc),
            [107, 121, 117, 114, 97, 103, 105] => lookup_635_154_15(acc),
            [110, 105, 115, 104, 105, 97, 114, 105, 116, 97] => lookup_635_154_16(acc),
            [111, 103, 105] => lookup_635_154_17(acc),
            [111, 109, 97, 99, 104, 105] => lookup_635_154_18(acc),
            [111, 117, 99, 104, 105] => lookup_635_154_19(acc),
            [115, 97, 103, 97] => lookup_635_154_20(acc),
            [115, 104, 105, 114, 111, 105, 115, 104, 105] => lookup_635_154_21(acc),
            [116, 97, 107, 117] => lookup_635_154_22(acc),
            [116, 97, 114, 97] => lookup_635_154_23(acc),
            [116, 111, 115, 117] => lookup_635_154_24(acc),
            [121, 111, 115, 104, 105, 110, 111, 103, 97, 114, 105] => lookup_635_154_25(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_155_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_155<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 97, 107, 97, 119, 97] => lookup_635_155_0(acc),
            [97, 115, 97, 107, 97] => lookup_635_155_1(acc),
            [99, 104, 105, 99, 104, 105, 98, 117] => lookup_635_155_2(acc),
            [102, 117, 106, 105, 109, 105] => lookup_635_155_3(acc),
            [102, 117, 106, 105, 109, 105, 110, 111] => lookup_635_155_4(acc),
            [102, 117, 107, 97, 121, 97] => lookup_635_155_5(acc),
            [104, 97, 110, 110, 111] => lookup_635_155_6(acc),
            [104, 97, 110, 121, 117] => lookup_635_155_7(acc),
            [104, 97, 115, 117, 100, 97] => lookup_635_155_8(acc),
            [104, 97, 116, 111, 103, 97, 121, 97] => lookup_635_155_9(acc),
            [104, 97, 116, 111, 121, 97, 109, 97] => lookup_635_155_10(acc),
            [104, 105, 100, 97, 107, 97] => lookup_635_155_11(acc),
            [104, 105, 103, 97, 115, 104, 105, 99, 104, 105, 99, 104, 105, 98, 117] => {
                lookup_635_155_12(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 109, 97, 116, 115, 117, 121, 97, 109, 97] => {
                lookup_635_155_13(acc)
            }
            [104, 111, 110, 106, 111] => lookup_635_155_14(acc),
            [105, 110, 97] => lookup_635_155_15(acc),
            [105, 114, 117, 109, 97] => lookup_635_155_16(acc),
            [105, 119, 97, 116, 115, 117, 107, 105] => lookup_635_155_17(acc),
            [107, 97, 109, 105, 105, 122, 117, 109, 105] => lookup_635_155_18(acc),
            [107, 97, 109, 105, 107, 97, 119, 97] => lookup_635_155_19(acc),
            [107, 97, 109, 105, 115, 97, 116, 111] => lookup_635_155_20(acc),
            [107, 97, 115, 117, 107, 97, 98, 101] => lookup_635_155_21(acc),
            [107, 97, 119, 97, 103, 111, 101] => lookup_635_155_22(acc),
            [107, 97, 119, 97, 103, 117, 99, 104, 105] => lookup_635_155_23(acc),
            [107, 97, 119, 97, 106, 105, 109, 97] => lookup_635_155_24(acc),
            [107, 97, 122, 111] => lookup_635_155_25(acc),
            [107, 105, 116, 97, 109, 111, 116, 111] => lookup_635_155_26(acc),
            [107, 111, 115, 104, 105, 103, 97, 121, 97] => lookup_635_155_27(acc),
            [107, 111, 117, 110, 111, 115, 117] => lookup_635_155_28(acc),
            [107, 117, 107, 105] => lookup_635_155_29(acc),
            [107, 117, 109, 97, 103, 97, 121, 97] => lookup_635_155_30(acc),
            [109, 97, 116, 115, 117, 98, 117, 115, 104, 105] => lookup_635_155_31(acc),
            [109, 105, 110, 97, 110, 111] => lookup_635_155_32(acc),
            [109, 105, 115, 97, 116, 111] => lookup_635_155_33(acc),
            [109, 105, 121, 97, 115, 104, 105, 114, 111] => lookup_635_155_34(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_635_155_35(acc),
            [109, 111, 114, 111, 121, 97, 109, 97] => lookup_635_155_36(acc),
            [110, 97, 103, 97, 116, 111, 114, 111] => lookup_635_155_37(acc),
            [110, 97, 109, 101, 103, 97, 119, 97] => lookup_635_155_38(acc),
            [110, 105, 105, 122, 97] => lookup_635_155_39(acc),
            [111, 103, 97, 110, 111] => lookup_635_155_40(acc),
            [111, 103, 97, 119, 97] => lookup_635_155_41(acc),
            [111, 103, 111, 115, 101] => lookup_635_155_42(acc),
            [111, 107, 101, 103, 97, 119, 97] => lookup_635_155_43(acc),
            [111, 109, 105, 121, 97] => lookup_635_155_44(acc),
            [111, 116, 97, 107, 105] => lookup_635_155_45(acc),
            [114, 97, 110, 122, 97, 110] => lookup_635_155_46(acc),
            [114, 121, 111, 107, 97, 109, 105] => lookup_635_155_47(acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_635_155_48(acc),
            [115, 97, 107, 97, 100, 111] => lookup_635_155_49(acc),
            [115, 97, 116, 116, 101] => lookup_635_155_50(acc),
            [115, 97, 121, 97, 109, 97] => lookup_635_155_51(acc),
            [115, 104, 105, 107, 105] => lookup_635_155_52(acc),
            [115, 104, 105, 114, 97, 111, 107, 97] => lookup_635_155_53(acc),
            [115, 111, 107, 97] => lookup_635_155_54(acc),
            [115, 117, 103, 105, 116, 111] => lookup_635_155_55(acc),
            [116, 111, 100, 97] => lookup_635_155_56(acc),
            [116, 111, 107, 105, 103, 97, 119, 97] => lookup_635_155_57(acc),
            [116, 111, 107, 111, 114, 111, 122, 97, 119, 97] => lookup_635_155_58(acc),
            [116, 115, 117, 114, 117, 103, 97, 115, 104, 105, 109, 97] => lookup_635_155_59(acc),
            [117, 114, 97, 119, 97] => lookup_635_155_60(acc),
            [119, 97, 114, 97, 98, 105] => lookup_635_155_61(acc),
            [121, 97, 115, 104, 105, 111] => lookup_635_155_62(acc),
            [121, 111, 107, 111, 122, 101] => lookup_635_155_63(acc),
            [121, 111, 110, 111] => lookup_635_155_64(acc),
            [121, 111, 114, 105, 105] => lookup_635_155_65(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_635_155_66(acc),
            [121, 111, 115, 104, 105, 107, 97, 119, 97] => lookup_635_155_67(acc),
            [121, 111, 115, 104, 105, 109, 105] => lookup_635_155_68(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_156_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_156_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_635_156_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_156_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_156_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_635_156_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_156<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [105, 115, 107, 48, 49] => lookup_635_156_0(info, labels, acc),
            [105, 115, 107, 48, 50] => lookup_635_156_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_158_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_158_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_158<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_635_158_0(acc),
            wild => lookup_635_158_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_635_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_162_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_162_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_162<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_635_162_0(acc),
            wild => lookup_635_162_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_635_163_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_163<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 115, 104, 111] => lookup_635_163_0(acc),
            [103, 97, 109, 111] => lookup_635_163_1(acc),
            [104, 105, 103, 97, 115, 104, 105, 111, 109, 105] => lookup_635_163_2(acc),
            [104, 105, 107, 111, 110, 101] => lookup_635_163_3(acc),
            [107, 111, 107, 97] => lookup_635_163_4(acc),
            [107, 111, 110, 97, 110] => lookup_635_163_5(acc),
            [107, 111, 115, 101, 105] => lookup_635_163_6(acc),
            [107, 111, 116, 111] => lookup_635_163_7(acc),
            [107, 117, 115, 97, 116, 115, 117] => lookup_635_163_8(acc),
            [109, 97, 105, 98, 97, 114, 97] => lookup_635_163_9(acc),
            [109, 111, 114, 105, 121, 97, 109, 97] => lookup_635_163_10(acc),
            [110, 97, 103, 97, 104, 97, 109, 97] => lookup_635_163_11(acc),
            [110, 105, 115, 104, 105, 97, 122, 97, 105] => lookup_635_163_12(acc),
            [110, 111, 116, 111, 103, 97, 119, 97] => lookup_635_163_13(acc),
            [111, 109, 105, 104, 97, 99, 104, 105, 109, 97, 110] => lookup_635_163_14(acc),
            [111, 116, 115, 117] => lookup_635_163_15(acc),
            [114, 105, 116, 116, 111] => lookup_635_163_16(acc),
            [114, 121, 117, 111, 104] => lookup_635_163_17(acc),
            [116, 97, 107, 97, 115, 104, 105, 109, 97] => lookup_635_163_18(acc),
            [116, 97, 107, 97, 116, 115, 117, 107, 105] => lookup_635_163_19(acc),
            [116, 111, 114, 97, 104, 105, 109, 101] => lookup_635_163_20(acc),
            [116, 111, 121, 111, 115, 97, 116, 111] => lookup_635_163_21(acc),
            [121, 97, 115, 117] => lookup_635_163_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_164_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_164<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107, 97, 103, 105] => lookup_635_164_0(acc),
            [97, 109, 97] => lookup_635_164_1(acc),
            [103, 111, 116, 115, 117] => lookup_635_164_2(acc),
            [104, 97, 109, 97, 100, 97] => lookup_635_164_3(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117, 109, 111] => lookup_635_164_4(acc),
            [104, 105, 107, 97, 119, 97] => lookup_635_164_5(acc),
            [104, 105, 107, 105, 109, 105] => lookup_635_164_6(acc),
            [105, 122, 117, 109, 111] => lookup_635_164_7(acc),
            [107, 97, 107, 105, 110, 111, 107, 105] => lookup_635_164_8(acc),
            [109, 97, 115, 117, 100, 97] => lookup_635_164_9(acc),
            [109, 97, 116, 115, 117, 101] => lookup_635_164_10(acc),
            [109, 105, 115, 97, 116, 111] => lookup_635_164_11(acc),
            [110, 105, 115, 104, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_635_164_12(acc),
            [111, 104, 100, 97] => lookup_635_164_13(acc),
            [111, 107, 105, 110, 111, 115, 104, 105, 109, 97] => lookup_635_164_14(acc),
            [111, 107, 117, 105, 122, 117, 109, 111] => lookup_635_164_15(acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_635_164_16(acc),
            [116, 97, 109, 97, 121, 117] => lookup_635_164_17(acc),
            [116, 115, 117, 119, 97, 110, 111] => lookup_635_164_18(acc),
            [117, 110, 110, 97, 110] => lookup_635_164_19(acc),
            [121, 97, 107, 117, 109, 111] => lookup_635_164_20(acc),
            [121, 97, 115, 117, 103, 105] => lookup_635_164_21(acc),
            [121, 97, 116, 115, 117, 107, 97] => lookup_635_164_22(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_165_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_165<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 97, 105] => lookup_635_165_0(acc),
            [97, 116, 97, 109, 105] => lookup_635_165_1(acc),
            [102, 117, 106, 105] => lookup_635_165_2(acc),
            [102, 117, 106, 105, 101, 100, 97] => lookup_635_165_3(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_635_165_4(acc),
            [102, 117, 106, 105, 110, 111, 109, 105, 121, 97] => lookup_635_165_5(acc),
            [102, 117, 107, 117, 114, 111, 105] => lookup_635_165_6(acc),
            [103, 111, 116, 101, 109, 98, 97] => lookup_635_165_7(acc),
            [104, 97, 105, 98, 97, 114, 97] => lookup_635_165_8(acc),
            [104, 97, 109, 97, 109, 97, 116, 115, 117] => lookup_635_165_9(acc),
            [104, 105, 103, 97, 115, 104, 105, 105, 122, 117] => lookup_635_165_10(acc),
            [105, 116, 111] => lookup_635_165_11(acc),
            [105, 119, 97, 116, 97] => lookup_635_165_12(acc),
            [105, 122, 117] => lookup_635_165_13(acc),
            [105, 122, 117, 110, 111, 107, 117, 110, 105] => lookup_635_165_14(acc),
            [107, 97, 107, 101, 103, 97, 119, 97] => lookup_635_165_15(acc),
            [107, 97, 110, 110, 97, 109, 105] => lookup_635_165_16(acc),
            [107, 97, 119, 97, 110, 101, 104, 111, 110] => lookup_635_165_17(acc),
            [107, 97, 119, 97, 122, 117] => lookup_635_165_18(acc),
            [107, 105, 107, 117, 103, 97, 119, 97] => lookup_635_165_19(acc),
            [107, 111, 115, 97, 105] => lookup_635_165_20(acc),
            [109, 97, 107, 105, 110, 111, 104, 97, 114, 97] => lookup_635_165_21(acc),
            [109, 97, 116, 115, 117, 122, 97, 107, 105] => lookup_635_165_22(acc),
            [109, 105, 110, 97, 109, 105, 105, 122, 117] => lookup_635_165_23(acc),
            [109, 105, 115, 104, 105, 109, 97] => lookup_635_165_24(acc),
            [109, 111, 114, 105, 109, 97, 99, 104, 105] => lookup_635_165_25(acc),
            [110, 105, 115, 104, 105, 105, 122, 117] => lookup_635_165_26(acc),
            [110, 117, 109, 97, 122, 117] => lookup_635_165_27(acc),
            [111, 109, 97, 101, 122, 97, 107, 105] => lookup_635_165_28(acc),
            [115, 104, 105, 109, 97, 100, 97] => lookup_635_165_29(acc),
            [115, 104, 105, 109, 105, 122, 117] => lookup_635_165_30(acc),
            [115, 104, 105, 109, 111, 100, 97] => lookup_635_165_31(acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_635_165_32(acc),
            [115, 117, 115, 111, 110, 111] => lookup_635_165_33(acc),
            [121, 97, 105, 122, 117] => lookup_635_165_34(acc),
            [121, 111, 115, 104, 105, 100, 97] => lookup_635_165_35(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_175_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_175<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 104, 105, 107, 97, 103, 97] => lookup_635_175_0(acc),
            [98, 97, 116, 111] => lookup_635_175_1(acc),
            [104, 97, 103, 97] => lookup_635_175_2(acc),
            [105, 99, 104, 105, 107, 97, 105] => lookup_635_175_3(acc),
            [105, 119, 97, 102, 117, 110, 101] => lookup_635_175_4(acc),
            [107, 97, 109, 105, 110, 111, 107, 97, 119, 97] => lookup_635_175_5(acc),
            [107, 97, 110, 117, 109, 97] => lookup_635_175_6(acc),
            [107, 97, 114, 97, 115, 117, 121, 97, 109, 97] => lookup_635_175_7(acc),
            [107, 117, 114, 111, 105, 115, 111] => lookup_635_175_8(acc),
            [109, 97, 115, 104, 105, 107, 111] => lookup_635_175_9(acc),
            [109, 105, 98, 117] => lookup_635_175_10(acc),
            [109, 111, 107, 97] => lookup_635_175_11(acc),
            [109, 111, 116, 101, 103, 105] => lookup_635_175_12(acc),
            [110, 97, 115, 117] => lookup_635_175_13(acc),
            [110, 97, 115, 117, 115, 104, 105, 111, 98, 97, 114, 97] => lookup_635_175_14(acc),
            [110, 105, 107, 107, 111] => lookup_635_175_15(acc),
            [110, 105, 115, 104, 105, 107, 97, 116, 97] => lookup_635_175_16(acc),
            [110, 111, 103, 105] => lookup_635_175_17(acc),
            [111, 104, 105, 114, 97] => lookup_635_175_18(acc),
            [111, 104, 116, 97, 119, 97, 114, 97] => lookup_635_175_19(acc),
            [111, 121, 97, 109, 97] => lookup_635_175_20(acc),
            [115, 97, 107, 117, 114, 97] => lookup_635_175_21(acc),
            [115, 97, 110, 111] => lookup_635_175_22(acc),
            [115, 104, 105, 109, 111, 116, 115, 117, 107, 101] => lookup_635_175_23(acc),
            [115, 104, 105, 111, 121, 97] => lookup_635_175_24(acc),
            [116, 97, 107, 97, 110, 101, 122, 97, 119, 97] => lookup_635_175_25(acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_635_175_26(acc),
            [116, 115, 117, 103, 97] => lookup_635_175_27(acc),
            [117, 106, 105, 105, 101] => lookup_635_175_28(acc),
            [117, 116, 115, 117, 110, 111, 109, 105, 121, 97] => lookup_635_175_29(acc),
            [121, 97, 105, 116, 97] => lookup_635_175_30(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_176_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_176<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 105, 122, 117, 109, 105] => lookup_635_176_0(acc),
            [97, 110, 97, 110] => lookup_635_176_1(acc),
            [105, 99, 104, 105, 98, 97] => lookup_635_176_2(acc),
            [105, 116, 97, 110, 111] => lookup_635_176_3(acc),
            [107, 97, 105, 110, 97, 110] => lookup_635_176_4(acc),
            [107, 111, 109, 97, 116, 115, 117, 115, 104, 105, 109, 97] => lookup_635_176_5(acc),
            [109, 97, 116, 115, 117, 115, 104, 105, 103, 101] => lookup_635_176_6(acc),
            [109, 105, 109, 97] => lookup_635_176_7(acc),
            [109, 105, 110, 97, 109, 105] => lookup_635_176_8(acc),
            [109, 105, 121, 111, 115, 104, 105] => lookup_635_176_9(acc),
            [109, 117, 103, 105] => lookup_635_176_10(acc),
            [110, 97, 107, 97, 103, 97, 119, 97] => lookup_635_176_11(acc),
            [110, 97, 114, 117, 116, 111] => lookup_635_176_12(acc),
            [115, 97, 110, 97, 103, 111, 99, 104, 105] => lookup_635_176_13(acc),
            [115, 104, 105, 115, 104, 105, 107, 117, 105] => lookup_635_176_14(acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_635_176_15(acc),
            [119, 97, 106, 105, 107, 105] => lookup_635_176_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_177_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_177<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 97, 99, 104, 105] => lookup_635_177_0(acc),
            [97, 107, 105, 114, 117, 110, 111] => lookup_635_177_1(acc),
            [97, 107, 105, 115, 104, 105, 109, 97] => lookup_635_177_2(acc),
            [97, 111, 103, 97, 115, 104, 105, 109, 97] => lookup_635_177_3(acc),
            [97, 114, 97, 107, 97, 119, 97] => lookup_635_177_4(acc),
            [98, 117, 110, 107, 121, 111] => lookup_635_177_5(acc),
            [99, 104, 105, 121, 111, 100, 97] => lookup_635_177_6(acc),
            [99, 104, 111, 102, 117] => lookup_635_177_7(acc),
            [99, 104, 117, 111] => lookup_635_177_8(acc),
            [101, 100, 111, 103, 97, 119, 97] => lookup_635_177_9(acc),
            [102, 117, 99, 104, 117] => lookup_635_177_10(acc),
            [102, 117, 115, 115, 97] => lookup_635_177_11(acc),
            [104, 97, 99, 104, 105, 106, 111] => lookup_635_177_12(acc),
            [104, 97, 99, 104, 105, 111, 106, 105] => lookup_635_177_13(acc),
            [104, 97, 109, 117, 114, 97] => lookup_635_177_14(acc),
            [104, 105, 103, 97, 115, 104, 105, 107, 117, 114, 117, 109, 101] => {
                lookup_635_177_15(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_635_177_16(acc)
            }
            [104, 105, 103, 97, 115, 104, 105, 121, 97, 109, 97, 116, 111] => {
                lookup_635_177_17(acc)
            }
            [104, 105, 110, 111] => lookup_635_177_18(acc),
            [104, 105, 110, 111, 100, 101] => lookup_635_177_19(acc),
            [104, 105, 110, 111, 104, 97, 114, 97] => lookup_635_177_20(acc),
            [105, 110, 97, 103, 105] => lookup_635_177_21(acc),
            [105, 116, 97, 98, 97, 115, 104, 105] => lookup_635_177_22(acc),
            [107, 97, 116, 115, 117, 115, 104, 105, 107, 97] => lookup_635_177_23(acc),
            [107, 105, 116, 97] => lookup_635_177_24(acc),
            [107, 105, 121, 111, 115, 101] => lookup_635_177_25(acc),
            [107, 111, 100, 97, 105, 114, 97] => lookup_635_177_26(acc),
            [107, 111, 103, 97, 110, 101, 105] => lookup_635_177_27(acc),
            [107, 111, 107, 117, 98, 117, 110, 106, 105] => lookup_635_177_28(acc),
            [107, 111, 109, 97, 101] => lookup_635_177_29(acc),
            [107, 111, 116, 111] => lookup_635_177_30(acc),
            [107, 111, 117, 122, 117, 115, 104, 105, 109, 97] => lookup_635_177_31(acc),
            [107, 117, 110, 105, 116, 97, 99, 104, 105] => lookup_635_177_32(acc),
            [109, 97, 99, 104, 105, 100, 97] => lookup_635_177_33(acc),
            [109, 101, 103, 117, 114, 111] => lookup_635_177_34(acc),
            [109, 105, 110, 97, 116, 111] => lookup_635_177_35(acc),
            [109, 105, 116, 97, 107, 97] => lookup_635_177_36(acc),
            [109, 105, 122, 117, 104, 111] => lookup_635_177_37(acc),
            [109, 117, 115, 97, 115, 104, 105, 109, 117, 114, 97, 121, 97, 109, 97] => {
                lookup_635_177_38(acc)
            }
            [109, 117, 115, 97, 115, 104, 105, 110, 111] => lookup_635_177_39(acc),
            [110, 97, 107, 97, 110, 111] => lookup_635_177_40(acc),
            [110, 101, 114, 105, 109, 97] => lookup_635_177_41(acc),
            [111, 103, 97, 115, 97, 119, 97, 114, 97] => lookup_635_177_42(acc),
            [111, 107, 117, 116, 97, 109, 97] => lookup_635_177_43(acc),
            [111, 109, 101] => lookup_635_177_44(acc),
            [111, 115, 104, 105, 109, 97] => lookup_635_177_45(acc),
            [111, 116, 97] => lookup_635_177_46(acc),
            [115, 101, 116, 97, 103, 97, 121, 97] => lookup_635_177_47(acc),
            [115, 104, 105, 98, 117, 121, 97] => lookup_635_177_48(acc),
            [115, 104, 105, 110, 97, 103, 97, 119, 97] => lookup_635_177_49(acc),
            [115, 104, 105, 110, 106, 117, 107, 117] => lookup_635_177_50(acc),
            [115, 117, 103, 105, 110, 97, 109, 105] => lookup_635_177_51(acc),
            [115, 117, 109, 105, 100, 97] => lookup_635_177_52(acc),
            [116, 97, 99, 104, 105, 107, 97, 119, 97] => lookup_635_177_53(acc),
            [116, 97, 105, 116, 111] => lookup_635_177_54(acc),
            [116, 97, 109, 97] => lookup_635_177_55(acc),
            [116, 111, 115, 104, 105, 109, 97] => lookup_635_177_56(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_179_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_179_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_179_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_179_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_179_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_179_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_179_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_179_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_179_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_179_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_179_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_179_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_179_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_179<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 105, 122, 117] => lookup_635_179_0(acc),
            [104, 105, 110, 111] => lookup_635_179_1(acc),
            [107, 97, 119, 97, 104, 97, 114, 97] => lookup_635_179_2(acc),
            [107, 111, 103, 101] => lookup_635_179_3(acc),
            [107, 111, 116, 111, 117, 114, 97] => lookup_635_179_4(acc),
            [109, 105, 115, 97, 115, 97] => lookup_635_179_5(acc),
            [110, 97, 110, 98, 117] => lookup_635_179_6(acc),
            [110, 105, 99, 104, 105, 110, 97, 110] => lookup_635_179_7(acc),
            [115, 97, 107, 97, 105, 109, 105, 110, 97, 116, 111] => lookup_635_179_8(acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_635_179_9(acc),
            [119, 97, 107, 97, 115, 97] => lookup_635_179_10(acc),
            [121, 97, 122, 117] => lookup_635_179_11(acc),
            [121, 111, 110, 97, 103, 111] => lookup_635_179_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_180_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_180<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 104, 105] => lookup_635_180_0(acc),
            [102, 117, 99, 104, 117] => lookup_635_180_1(acc),
            [102, 117, 107, 117, 109, 105, 116, 115, 117] => lookup_635_180_2(acc),
            [102, 117, 110, 97, 104, 97, 115, 104, 105] => lookup_635_180_3(acc),
            [104, 105, 109, 105] => lookup_635_180_4(acc),
            [105, 109, 105, 122, 117] => lookup_635_180_5(acc),
            [105, 110, 97, 109, 105] => lookup_635_180_6(acc),
            [106, 111, 104, 97, 110, 97] => lookup_635_180_7(acc),
            [107, 97, 109, 105, 105, 99, 104, 105] => lookup_635_180_8(acc),
            [107, 117, 114, 111, 98, 101] => lookup_635_180_9(acc),
            [110, 97, 107, 97, 110, 105, 105, 107, 97, 119, 97] => lookup_635_180_10(acc),
            [110, 97, 109, 101, 114, 105, 107, 97, 119, 97] => lookup_635_180_11(acc),
            [110, 97, 110, 116, 111] => lookup_635_180_12(acc),
            [110, 121, 117, 122, 101, 110] => lookup_635_180_13(acc),
            [111, 121, 97, 98, 101] => lookup_635_180_14(acc),
            [116, 97, 105, 114, 97] => lookup_635_180_15(acc),
            [116, 97, 107, 97, 111, 107, 97] => lookup_635_180_16(acc),
            [116, 97, 116, 101, 121, 97, 109, 97] => lookup_635_180_17(acc),
            [116, 111, 103, 97] => lookup_635_180_18(acc),
            [116, 111, 110, 97, 109, 105] => lookup_635_180_19(acc),
            [116, 111, 121, 97, 109, 97] => lookup_635_180_20(acc),
            [117, 110, 97, 122, 117, 107, 105] => lookup_635_180_21(acc),
            [117, 111, 122, 117] => lookup_635_180_22(acc),
            [121, 97, 109, 97, 100, 97] => lookup_635_180_23(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_190_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_190<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 105, 100, 97] => lookup_635_190_0(acc),
            [97, 114, 105, 100, 97, 103, 97, 119, 97] => lookup_635_190_1(acc),
            [103, 111, 98, 111] => lookup_635_190_2(acc),
            [104, 97, 115, 104, 105, 109, 111, 116, 111] => lookup_635_190_3(acc),
            [104, 105, 100, 97, 107, 97] => lookup_635_190_4(acc),
            [104, 105, 114, 111, 103, 97, 119, 97] => lookup_635_190_5(acc),
            [105, 110, 97, 109, 105] => lookup_635_190_6(acc),
            [105, 119, 97, 100, 101] => lookup_635_190_7(acc),
            [107, 97, 105, 110, 97, 110] => lookup_635_190_8(acc),
            [107, 97, 109, 105, 116, 111, 110, 100, 97] => lookup_635_190_9(acc),
            [107, 97, 116, 115, 117, 114, 97, 103, 105] => lookup_635_190_10(acc),
            [107, 105, 109, 105, 110, 111] => lookup_635_190_11(acc),
            [107, 105, 110, 111, 107, 97, 119, 97] => lookup_635_190_12(acc),
            [107, 105, 116, 97, 121, 97, 109, 97] => lookup_635_190_13(acc),
            [107, 111, 121, 97] => lookup_635_190_14(acc),
            [107, 111, 122, 97] => lookup_635_190_15(acc),
            [107, 111, 122, 97, 103, 97, 119, 97] => lookup_635_190_16(acc),
            [107, 117, 100, 111, 121, 97, 109, 97] => lookup_635_190_17(acc),
            [107, 117, 115, 104, 105, 109, 111, 116, 111] => lookup_635_190_18(acc),
            [109, 105, 104, 97, 109, 97] => lookup_635_190_19(acc),
            [109, 105, 115, 97, 116, 111] => lookup_635_190_20(acc),
            [110, 97, 99, 104, 105, 107, 97, 116, 115, 117, 117, 114, 97] => lookup_635_190_21(acc),
            [115, 104, 105, 110, 103, 117] => lookup_635_190_22(acc),
            [115, 104, 105, 114, 97, 104, 97, 109, 97] => lookup_635_190_23(acc),
            [116, 97, 105, 106, 105] => lookup_635_190_24(acc),
            [116, 97, 110, 97, 98, 101] => lookup_635_190_25(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_635_190_26(acc),
            [121, 117, 97, 115, 97] => lookup_635_190_27(acc),
            [121, 117, 114, 97] => lookup_635_190_28(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_192_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_192_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_192<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [114, 115] => lookup_635_192_0(acc),
            [117, 115, 101, 114] => lookup_635_192_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_222(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_230(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_231(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_242(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_244<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 97, 104, 105] => lookup_635_244_0(acc),
            [102, 117, 110, 97, 103, 97, 116, 97] => lookup_635_244_1(acc),
            [104, 105, 103, 97, 115, 104, 105, 110, 101] => lookup_635_244_2(acc),
            [105, 105, 100, 101] => lookup_635_244_3(acc),
            [107, 97, 104, 111, 107, 117] => lookup_635_244_4(acc),
            [107, 97, 109, 105, 110, 111, 121, 97, 109, 97] => lookup_635_244_5(acc),
            [107, 97, 110, 101, 121, 97, 109, 97] => lookup_635_244_6(acc),
            [107, 97, 119, 97, 110, 105, 115, 104, 105] => lookup_635_244_7(acc),
            [109, 97, 109, 117, 114, 111, 103, 97, 119, 97] => lookup_635_244_8(acc),
            [109, 105, 107, 97, 119, 97] => lookup_635_244_9(acc),
            [109, 117, 114, 97, 121, 97, 109, 97] => lookup_635_244_10(acc),
            [110, 97, 103, 97, 105] => lookup_635_244_11(acc),
            [110, 97, 107, 97, 121, 97, 109, 97] => lookup_635_244_12(acc),
            [110, 97, 110, 121, 111] => lookup_635_244_13(acc),
            [110, 105, 115, 104, 105, 107, 97, 119, 97] => lookup_635_244_14(acc),
            [111, 98, 97, 110, 97, 122, 97, 119, 97] => lookup_635_244_15(acc),
            [111, 101] => lookup_635_244_16(acc),
            [111, 103, 117, 110, 105] => lookup_635_244_17(acc),
            [111, 104, 107, 117, 114, 97] => lookup_635_244_18(acc),
            [111, 105, 115, 104, 105, 100, 97] => lookup_635_244_19(acc),
            [115, 97, 103, 97, 101] => lookup_635_244_20(acc),
            [115, 97, 107, 97, 116, 97] => lookup_635_244_21(acc),
            [115, 97, 107, 101, 103, 97, 119, 97] => lookup_635_244_22(acc),
            [115, 104, 105, 110, 106, 111] => lookup_635_244_23(acc),
            [115, 104, 105, 114, 97, 116, 97, 107, 97] => lookup_635_244_24(acc),
            [115, 104, 111, 110, 97, 105] => lookup_635_244_25(acc),
            [116, 97, 107, 97, 104, 97, 116, 97] => lookup_635_244_26(acc),
            [116, 101, 110, 100, 111] => lookup_635_244_27(acc),
            [116, 111, 122, 97, 119, 97] => lookup_635_244_28(acc),
            [116, 115, 117, 114, 117, 111, 107, 97] => lookup_635_244_29(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_635_244_30(acc),
            [121, 97, 109, 97, 110, 111, 98, 101] => lookup_635_244_31(acc),
            [121, 111, 110, 101, 122, 97, 119, 97] => lookup_635_244_32(acc),
            [121, 117, 122, 97] => lookup_635_244_33(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_245_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_245<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 117] => lookup_635_245_0(acc),
            [104, 97, 103, 105] => lookup_635_245_1(acc),
            [104, 105, 107, 97, 114, 105] => lookup_635_245_2(acc),
            [104, 111, 102, 117] => lookup_635_245_3(acc),
            [105, 119, 97, 107, 117, 110, 105] => lookup_635_245_4(acc),
            [107, 117, 100, 97, 109, 97, 116, 115, 117] => lookup_635_245_5(acc),
            [109, 105, 116, 111, 117] => lookup_635_245_6(acc),
            [110, 97, 103, 97, 116, 111] => lookup_635_245_7(acc),
            [111, 115, 104, 105, 109, 97] => lookup_635_245_8(acc),
            [115, 104, 105, 109, 111, 110, 111, 115, 101, 107, 105] => lookup_635_245_9(acc),
            [115, 104, 117, 110, 97, 110] => lookup_635_245_10(acc),
            [116, 97, 98, 117, 115, 101] => lookup_635_245_11(acc),
            [116, 111, 107, 117, 121, 97, 109, 97] => lookup_635_245_12(acc),
            [116, 111, 121, 111, 116, 97] => lookup_635_245_13(acc),
            [117, 98, 101] => lookup_635_245_14(acc),
            [121, 117, 117] => lookup_635_245_15(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_246_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_246<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 117, 111] => lookup_635_246_0(acc),
            [100, 111, 115, 104, 105] => lookup_635_246_1(acc),
            [102, 117, 101, 102, 117, 107, 105] => lookup_635_246_2(acc),
            [102, 117, 106, 105, 107, 97, 119, 97] => lookup_635_246_3(acc),
            [102, 117, 106, 105, 107, 97, 119, 97, 103, 117, 99, 104, 105, 107, 111] => {
                lookup_635_246_4(acc)
            }
            [102, 117, 106, 105, 121, 111, 115, 104, 105, 100, 97] => lookup_635_246_5(acc),
            [104, 97, 121, 97, 107, 97, 119, 97] => lookup_635_246_6(acc),
            [104, 111, 107, 117, 116, 111] => lookup_635_246_7(acc),
            [105, 99, 104, 105, 107, 97, 119, 97, 109, 105, 115, 97, 116, 111] => {
                lookup_635_246_8(acc)
            }
            [107, 97, 105] => lookup_635_246_9(acc),
            [107, 111, 102, 117] => lookup_635_246_10(acc),
            [107, 111, 115, 104, 117] => lookup_635_246_11(acc),
            [107, 111, 115, 117, 103, 101] => lookup_635_246_12(acc),
            [109, 105, 110, 97, 109, 105, 45, 97, 108, 112, 115] => lookup_635_246_13(acc),
            [109, 105, 110, 111, 98, 117] => lookup_635_246_14(acc),
            [110, 97, 107, 97, 109, 105, 99, 104, 105] => lookup_635_246_15(acc),
            [110, 97, 110, 98, 117] => lookup_635_246_16(acc),
            [110, 97, 114, 117, 115, 97, 119, 97] => lookup_635_246_17(acc),
            [110, 105, 114, 97, 115, 97, 107, 105] => lookup_635_246_18(acc),
            [110, 105, 115, 104, 105, 107, 97, 116, 115, 117, 114, 97] => lookup_635_246_19(acc),
            [111, 115, 104, 105, 110, 111] => lookup_635_246_20(acc),
            [111, 116, 115, 117, 107, 105] => lookup_635_246_21(acc),
            [115, 104, 111, 119, 97] => lookup_635_246_22(acc),
            [116, 97, 98, 97, 121, 97, 109, 97] => lookup_635_246_23(acc),
            [116, 115, 117, 114, 117] => lookup_635_246_24(acc),
            [117, 101, 110, 111, 104, 97, 114, 97] => lookup_635_246_25(acc),
            [121, 97, 109, 97, 110, 97, 107, 97, 107, 111] => lookup_635_246_26(acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_635_246_27(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_635_247_0(acc: usize) -> Info {
    Info {
        len: acc,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_247_1(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_247<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [99, 105, 116, 121] => lookup_635_247_0(acc),
            wild => lookup_635_247_1(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_635_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_635_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_265(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_635<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [50, 45, 100] => lookup_635_0(acc),
            [97, 99] => lookup_635_1(acc),
            [97, 100] => lookup_635_2(acc),
            [97, 105, 99, 104, 105] => lookup_635_3(labels, acc),
            [97, 107, 105, 116, 97] => lookup_635_4(labels, acc),
            [97, 110, 103, 114, 121] => lookup_635_5(acc),
            [97, 111, 109, 111, 114, 105] => lookup_635_6(labels, acc),
            [98, 97, 98, 121, 98, 108, 117, 101] => lookup_635_7(acc),
            [98, 97, 98, 121, 109, 105, 108, 107] => lookup_635_8(acc),
            [98, 97, 99, 107, 100, 114, 111, 112] => lookup_635_9(acc),
            [98, 97, 109, 98, 105, 110, 97] => lookup_635_10(acc),
            [98, 105, 116, 116, 101, 114] => lookup_635_11(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_635_12(acc),
            [98, 108, 117, 115, 104] => lookup_635_13(acc),
            [98, 111, 110, 97] => lookup_635_14(acc),
            [98, 111, 111] => lookup_635_15(acc),
            [98, 111, 121] => lookup_635_16(acc),
            [98, 111, 121, 102, 114, 105, 101, 110, 100] => lookup_635_17(acc),
            [98, 117, 116] => lookup_635_18(acc),
            [98, 117, 121, 115, 104, 111, 112] => lookup_635_19(acc),
            [99, 97, 110, 100, 121, 112, 111, 112] => lookup_635_20(acc),
            [99, 97, 112, 111, 111] => lookup_635_21(acc),
            [99, 97, 116, 102, 111, 111, 100] => lookup_635_22(acc),
            [99, 104, 101, 97, 112] => lookup_635_23(acc),
            [99, 104, 105, 98, 97] => lookup_635_24(labels, acc),
            [99, 104, 105, 99, 97, 112, 112, 97] => lookup_635_25(acc),
            [99, 104, 105, 108, 108, 111, 117, 116] => lookup_635_26(acc),
            [99, 104, 105, 112, 115] => lookup_635_27(acc),
            [99, 104, 111, 119, 100, 101, 114] => lookup_635_28(acc),
            [99, 104, 117] => lookup_635_29(acc),
            [99, 105, 97, 111] => lookup_635_30(acc),
            [99, 111] => lookup_635_31(acc),
            [99, 111, 99, 111, 116, 116, 101] => lookup_635_32(acc),
            [99, 111, 111, 108, 98, 108, 111, 103] => lookup_635_33(acc),
            [99, 114, 97, 110, 107, 121] => lookup_635_34(acc),
            [99, 114, 97, 112] => lookup_635_35(acc),
            [99, 117, 116, 101, 103, 105, 114, 108] => lookup_635_36(acc),
            [100, 97, 97] => lookup_635_37(acc),
            [100, 97, 121, 110, 105, 103, 104, 116] => lookup_635_38(acc),
            [100, 101, 99, 97] => lookup_635_39(acc),
            [100, 101, 99, 105] => lookup_635_40(acc),
            [100, 105, 103, 105, 99, 107] => lookup_635_41(acc),
            [101, 100] => lookup_635_42(acc),
            [101, 101, 107] => lookup_635_43(acc),
            [101, 103, 111, 105, 115, 109] => lookup_635_44(acc),
            [101, 104, 105, 109, 101] => lookup_635_45(labels, acc),
            [102, 97, 107, 101, 102, 117, 114] => lookup_635_46(acc),
            [102, 97, 115, 104, 105, 111, 110, 115, 116, 111, 114, 101] => lookup_635_47(acc),
            [102, 101, 109] => lookup_635_48(acc),
            [102, 108, 105, 101, 114] => lookup_635_49(acc),
            [102, 108, 111, 112] => lookup_635_50(acc),
            [102, 108, 111, 112, 112, 121] => lookup_635_51(acc),
            [102, 111, 111, 108] => lookup_635_52(acc),
            [102, 114, 101, 110, 99, 104, 107, 105, 115, 115] => lookup_635_53(acc),
            [102, 117, 107, 117, 105] => lookup_635_54(labels, acc),
            [102, 117, 107, 117, 111, 107, 97] => lookup_635_55(labels, acc),
            [102, 117, 107, 117, 115, 104, 105, 109, 97] => lookup_635_56(labels, acc),
            [103, 105, 102, 117] => lookup_635_57(labels, acc),
            [103, 105, 114, 108, 102, 114, 105, 101, 110, 100] => lookup_635_58(acc),
            [103, 105, 114, 108, 121] => lookup_635_59(acc),
            [103, 108, 111, 111, 109, 121] => lookup_635_60(acc),
            [103, 111] => lookup_635_61(acc),
            [103, 111, 110, 110, 97] => lookup_635_62(acc),
            [103, 114] => lookup_635_63(acc),
            [103, 114, 101, 97, 116, 101, 114] => lookup_635_64(acc),
            [103, 117, 110, 109, 97] => lookup_635_65(labels, acc),
            [104, 97, 99, 99, 97] => lookup_635_66(acc),
            [104, 97, 108, 102, 109, 111, 111, 110] => lookup_635_67(acc),
            [104, 97, 110, 100, 99, 114, 97, 102, 116, 101, 100] => lookup_635_68(acc),
            [104, 101, 97, 118, 121] => lookup_635_69(acc),
            [104, 101, 114] => lookup_635_70(acc),
            [104, 105, 104, 111] => lookup_635_71(acc),
            [104, 105, 112, 112, 121] => lookup_635_72(acc),
            [104, 105, 114, 111, 115, 104, 105, 109, 97] => lookup_635_73(labels, acc),
            [104, 111, 107, 107, 97, 105, 100, 111] => lookup_635_74(labels, acc),
            [104, 111, 108, 121] => lookup_635_75(acc),
            [104, 117, 110, 103, 114, 121] => lookup_635_76(acc),
            [104, 121, 111, 103, 111] => lookup_635_77(labels, acc),
            [105, 98, 97, 114, 97, 107, 105] => lookup_635_78(labels, acc),
            [105, 99, 117, 114, 117, 115] => lookup_635_79(acc),
            [105, 115, 104, 105, 107, 97, 119, 97] => lookup_635_80(labels, acc),
            [105, 116, 105, 103, 111] => lookup_635_81(acc),
            [105, 119, 97, 116, 101] => lookup_635_82(labels, acc),
            [106, 101, 101, 122] => lookup_635_83(acc),
            [106, 101, 108, 108, 121, 98, 101, 97, 110] => lookup_635_84(acc),
            [107, 97, 103, 97, 119, 97] => lookup_635_85(labels, acc),
            [107, 97, 103, 111, 115, 104, 105, 109, 97] => lookup_635_86(labels, acc),
            [107, 97, 110, 97, 103, 97, 119, 97] => lookup_635_87(labels, acc),
            [107, 97, 119, 97, 105, 105, 115, 104, 111, 112] => lookup_635_88(acc),
            [107, 97, 119, 97, 115, 97, 107, 105] => lookup_635_89(info, labels, acc),
            [107, 105, 107, 105, 114, 97, 114, 97] => lookup_635_90(acc),
            [107, 105, 108, 108] => lookup_635_91(acc),
            [107, 105, 108, 111] => lookup_635_92(acc),
            [107, 105, 116, 97, 107, 121, 117, 115, 104, 117] => lookup_635_93(info, labels, acc),
            [107, 111, 98, 101] => lookup_635_94(info, labels, acc),
            [107, 111, 99, 104, 105] => lookup_635_95(labels, acc),
            [107, 117, 109, 97, 109, 111, 116, 111] => lookup_635_96(labels, acc),
            [107, 117, 114, 111, 110] => lookup_635_97(acc),
            [107, 121, 111, 116, 111] => lookup_635_98(labels, acc),
            [108, 103] => lookup_635_99(acc),
            [108, 105, 116, 116, 108, 101, 115, 116, 97, 114] => lookup_635_100(acc),
            [108, 111, 108, 105, 112, 111, 112, 109, 99] => lookup_635_101(acc),
            [108, 111, 108, 105, 116, 97, 112, 117, 110, 107] => lookup_635_102(acc),
            [108, 111, 109, 111] => lookup_635_103(acc),
            [108, 111, 118, 101, 112, 111, 112] => lookup_635_104(acc),
            [108, 111, 118, 101, 115, 105, 99, 107] => lookup_635_105(acc),
            [109, 97, 105, 110] => lookup_635_106(acc),
            [109, 97, 116, 114, 105, 120] => lookup_635_107(acc),
            [109, 105, 101] => lookup_635_108(labels, acc),
            [109, 105, 109, 111, 122, 97] => lookup_635_109(acc),
            [109, 105, 121, 97, 103, 105] => lookup_635_110(labels, acc),
            [109, 105, 121, 97, 122, 97, 107, 105] => lookup_635_111(labels, acc),
            [109, 111, 100, 115] => lookup_635_112(acc),
            [109, 111, 110, 100] => lookup_635_113(acc),
            [109, 111, 110, 103, 111, 108, 105, 97, 110] => lookup_635_114(acc),
            [109, 111, 111] => lookup_635_115(acc),
            [110, 97, 103, 97, 110, 111] => lookup_635_116(labels, acc),
            [110, 97, 103, 97, 115, 97, 107, 105] => lookup_635_117(labels, acc),
            [110, 97, 103, 111, 121, 97] => lookup_635_118(info, labels, acc),
            [110, 97, 109, 97, 115, 116, 101] => lookup_635_119(acc),
            [110, 97, 114, 97] => lookup_635_120(labels, acc),
            [110, 101] => lookup_635_121(labels, acc),
            [110, 101, 116, 103, 97, 109, 101, 114, 115] => lookup_635_122(acc),
            [110, 105, 105, 103, 97, 116, 97] => lookup_635_123(labels, acc),
            [110, 105, 107, 105, 116, 97] => lookup_635_124(acc),
            [110, 111, 98, 117, 115, 104, 105] => lookup_635_125(acc),
            [110, 111, 111, 114] => lookup_635_126(acc),
            [110, 121, 97, 110, 116, 97] => lookup_635_127(acc),
            [111, 48, 111, 48] => lookup_635_128(acc),
            [111, 105, 116, 97] => lookup_635_129(labels, acc),
            [111, 107, 97, 121, 97, 109, 97] => lookup_635_130(labels, acc),
            [111, 107, 105, 110, 97, 119, 97] => lookup_635_131(labels, acc),
            [111, 111, 112, 115] => lookup_635_132(acc),
            [111, 114] => lookup_635_133(acc),
            [111, 115, 97, 107, 97] => lookup_635_134(labels, acc),
            [112, 97, 114, 97, 108, 108, 101, 108] => lookup_635_135(acc),
            [112, 97, 114, 97, 115, 105, 116, 101] => lookup_635_136(acc),
            [112, 101, 99, 111, 114, 105] => lookup_635_137(acc),
            [112, 101, 101, 119, 101, 101] => lookup_635_138(acc),
            [112, 101, 110, 110, 101] => lookup_635_139(acc),
            [112, 101, 112, 112, 101, 114] => lookup_635_140(acc),
            [112, 101, 114, 109, 97] => lookup_635_141(acc),
            [112, 105, 103, 98, 111, 97, 116] => lookup_635_142(acc),
            [112, 105, 110, 111, 107, 111] => lookup_635_143(acc),
            [112, 117, 110, 121, 117] => lookup_635_144(acc),
            [112, 117, 112, 117] => lookup_635_145(acc),
            [112, 117, 115, 115, 121, 99, 97, 116] => lookup_635_146(acc),
            [112, 121, 97] => lookup_635_147(acc),
            [114, 97, 105, 110, 100, 114, 111, 112] => lookup_635_148(acc),
            [114, 100, 121] => lookup_635_149(acc),
            [114, 101, 97, 100, 121, 109, 97, 100, 101] => lookup_635_150(acc),
            [114, 103, 114] => lookup_635_151(acc),
            [114, 117, 108, 101, 122] => lookup_635_152(acc),
            [115, 97, 100, 105, 115, 116] => lookup_635_153(acc),
            [115, 97, 103, 97] => lookup_635_154(labels, acc),
            [115, 97, 105, 116, 97, 109, 97] => lookup_635_155(labels, acc),
            [115, 97, 107, 117, 114, 97, 115, 116, 111, 114, 97, 103, 101] => {
                lookup_635_156(info, labels, acc)
            }
            [115, 97, 108, 111, 111, 110] => lookup_635_157(acc),
            [115, 97, 112, 112, 111, 114, 111] => lookup_635_158(info, labels, acc),
            [115, 98, 108, 111] => lookup_635_159(acc),
            [115, 99, 104, 111, 111, 108, 98, 117, 115] => lookup_635_160(acc),
            [115, 101, 99, 114, 101, 116] => lookup_635_161(acc),
            [115, 101, 110, 100, 97, 105] => lookup_635_162(info, labels, acc),
            [115, 104, 105, 103, 97] => lookup_635_163(labels, acc),
            [115, 104, 105, 109, 97, 110, 101] => lookup_635_164(labels, acc),
            [115, 104, 105, 122, 117, 111, 107, 97] => lookup_635_165(labels, acc),
            [115, 107, 114] => lookup_635_166(acc),
            [115, 116, 97, 98, 97] => lookup_635_167(acc),
            [115, 116, 114, 105, 112, 112, 101, 114] => lookup_635_168(acc),
            [115, 117, 98] => lookup_635_169(acc),
            [115, 117, 110, 110, 121, 100, 97, 121] => lookup_635_170(acc),
            [115, 117, 112, 101, 114, 115, 97, 108, 101] => lookup_635_171(acc),
            [116, 97, 110, 107] => lookup_635_172(acc),
            [116, 104, 101, 115, 104, 111, 112] => lookup_635_173(acc),
            [116, 104, 105, 99, 107] => lookup_635_174(acc),
            [116, 111, 99, 104, 105, 103, 105] => lookup_635_175(labels, acc),
            [116, 111, 107, 117, 115, 104, 105, 109, 97] => lookup_635_176(labels, acc),
            [116, 111, 107, 121, 111] => lookup_635_177(labels, acc),
            [116, 111, 110, 107, 111, 116, 115, 117] => lookup_635_178(acc),
            [116, 111, 116, 116, 111, 114, 105] => lookup_635_179(labels, acc),
            [116, 111, 121, 97, 109, 97] => lookup_635_180(labels, acc),
            [117, 104, 45, 111, 104] => lookup_635_181(acc),
            [117, 110, 100, 101, 114] => lookup_635_182(acc),
            [117, 110, 100, 111] => lookup_635_183(acc),
            [117, 112, 112, 101, 114] => lookup_635_184(acc),
            [117, 115, 101, 114, 99, 111, 110, 116, 101, 110, 116] => lookup_635_185(acc),
            [118, 101, 108, 118, 101, 116] => lookup_635_186(acc),
            [118, 101, 114, 115, 101] => lookup_635_187(acc),
            [118, 101, 114, 115, 117, 115] => lookup_635_188(acc),
            [118, 105, 118, 105, 97, 110] => lookup_635_189(acc),
            [119, 97, 107, 97, 121, 97, 109, 97] => lookup_635_190(labels, acc),
            [119, 97, 116, 115, 111, 110] => lookup_635_191(acc),
            [119, 101, 98, 97, 99, 99, 101, 108] => lookup_635_192(info, labels, acc),
            [119, 101, 98, 108, 105, 107, 101] => lookup_635_193(acc),
            [119, 101, 98, 115, 111, 122, 97, 105] => lookup_635_194(acc),
            [119, 104, 105, 116, 101, 115, 110, 111, 119] => lookup_635_195(acc),
            [120, 105, 105] => lookup_635_196(acc),
            [120, 110, 45, 45, 48, 116, 114, 113, 55, 112, 55, 110, 110] => lookup_635_197(acc),
            [120, 110, 45, 45, 49, 99, 116, 119, 111] => lookup_635_198(acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 48, 51, 110] => lookup_635_199(acc),
            [120, 110, 45, 45, 49, 108, 113, 115, 55, 49, 100] => lookup_635_200(acc),
            [120, 110, 45, 45, 50, 109, 52, 97, 49, 53, 101] => lookup_635_201(acc),
            [120, 110, 45, 45, 51, 50, 118, 112, 51, 48, 104] => lookup_635_202(acc),
            [120, 110, 45, 45, 52, 105, 116, 49, 54, 56, 100] => lookup_635_203(acc),
            [120, 110, 45, 45, 52, 105, 116, 55, 57, 55, 107] => lookup_635_204(acc),
            [120, 110, 45, 45, 52, 112, 118, 120, 115] => lookup_635_205(acc),
            [120, 110, 45, 45, 53, 106, 115, 48, 52, 53, 100] => lookup_635_206(acc),
            [120, 110, 45, 45, 53, 114, 116, 112, 52, 57, 99] => lookup_635_207(acc),
            [120, 110, 45, 45, 53, 114, 116, 113, 51, 52, 107] => lookup_635_208(acc),
            [120, 110, 45, 45, 54, 98, 116, 119, 53, 97] => lookup_635_209(acc),
            [120, 110, 45, 45, 54, 111, 114, 120, 50, 114] => lookup_635_210(acc),
            [120, 110, 45, 45, 55, 116, 48, 97, 50, 54, 52, 99] => lookup_635_211(acc),
            [120, 110, 45, 45, 56, 108, 116, 114, 54, 50, 107] => lookup_635_212(acc),
            [120, 110, 45, 45, 56, 112, 118, 114, 52, 117] => lookup_635_213(acc),
            [120, 110, 45, 45, 99, 51, 115, 49, 52, 109] => lookup_635_214(acc),
            [120, 110, 45, 45, 100, 53, 113, 118, 55, 122, 56, 55, 54, 99] => lookup_635_215(acc),
            [120, 110, 45, 45, 100, 106, 114, 115, 55, 50, 100, 54, 117, 121] => {
                lookup_635_216(acc)
            }
            [120, 110, 45, 45, 100, 106, 116, 121, 52, 107] => lookup_635_217(acc),
            [120, 110, 45, 45, 101, 102, 118, 110, 57, 115] => lookup_635_218(acc),
            [120, 110, 45, 45, 101, 104, 113, 122, 53, 54, 110] => lookup_635_219(acc),
            [120, 110, 45, 45, 101, 108, 113, 113, 49, 54, 104] => lookup_635_220(acc),
            [120, 110, 45, 45, 102, 54, 113, 120, 53, 51, 97] => lookup_635_221(acc),
            [120, 110, 45, 45, 107, 55, 121, 110, 57, 53, 101] => lookup_635_222(acc),
            [120, 110, 45, 45, 107, 98, 114, 113, 55, 111] => lookup_635_223(acc),
            [120, 110, 45, 45, 107, 108, 116, 55, 56, 55, 100] => lookup_635_224(acc),
            [120, 110, 45, 45, 107, 108, 116, 112, 55, 100] => lookup_635_225(acc),
            [120, 110, 45, 45, 107, 108, 116, 120, 57, 97] => lookup_635_226(acc),
            [120, 110, 45, 45, 107, 108, 116, 121, 53, 120] => lookup_635_227(acc),
            [120, 110, 45, 45, 109, 107, 114, 117, 52, 53, 105] => lookup_635_228(acc),
            [120, 110, 45, 45, 110, 105, 116, 50, 50, 53, 107] => lookup_635_229(acc),
            [120, 110, 45, 45, 110, 116, 115, 111, 48, 105, 113, 120, 51, 97] => {
                lookup_635_230(acc)
            }
            [120, 110, 45, 45, 110, 116, 115, 113, 49, 55, 103] => lookup_635_231(acc),
            [120, 110, 45, 45, 112, 115, 115, 117, 51, 51, 108] => lookup_635_232(acc),
            [120, 110, 45, 45, 113, 113, 113, 116, 49, 49, 109] => lookup_635_233(acc),
            [120, 110, 45, 45, 114, 104, 116, 50, 55, 122] => lookup_635_234(acc),
            [120, 110, 45, 45, 114, 104, 116, 51, 100] => lookup_635_235(acc),
            [120, 110, 45, 45, 114, 104, 116, 54, 49, 101] => lookup_635_236(acc),
            [120, 110, 45, 45, 114, 110, 121, 51, 49, 104] => lookup_635_237(acc),
            [120, 110, 45, 45, 116, 111, 114, 49, 51, 49, 111] => lookup_635_238(acc),
            [120, 110, 45, 45, 117, 105, 115, 116, 50, 50, 104] => lookup_635_239(acc),
            [120, 110, 45, 45, 117, 105, 115, 122, 51, 103] => lookup_635_240(acc),
            [120, 110, 45, 45, 117, 117, 119, 117, 53, 56, 97] => lookup_635_241(acc),
            [120, 110, 45, 45, 118, 103, 117, 52, 48, 50, 99] => lookup_635_242(acc),
            [120, 110, 45, 45, 122, 98, 120, 48, 50, 53, 100] => lookup_635_243(acc),
            [121, 97, 109, 97, 103, 97, 116, 97] => lookup_635_244(labels, acc),
            [121, 97, 109, 97, 103, 117, 99, 104, 105] => lookup_635_245(labels, acc),
            [121, 97, 109, 97, 110, 97, 115, 104, 105] => lookup_635_246(labels, acc),
            [121, 111, 107, 111, 104, 97, 109, 97] => lookup_635_247(info, labels, acc),
            [122, 111, 109, 98, 105, 101] => lookup_635_248(acc),
            [228, 184, 137, 233, 135, 141] => lookup_635_249(acc),
            [228, 186, 172, 233, 131, 189] => lookup_635_250(acc),
            [228, 189, 144, 232, 179, 128] => lookup_635_251(acc),
            [229, 133, 181, 229, 186, 171] => lookup_635_252(acc),
            [229, 140, 151, 230, 181, 183, 233, 129, 147] => lookup_635_253(acc),
            [229, 141, 131, 232, 145, 137] => lookup_635_254(acc),
            [229, 146, 140, 230, 173, 140, 229, 177, 177] => lookup_635_255(acc),
            [229, 159, 188, 231, 142, 137] => lookup_635_256(acc),
            [229, 164, 167, 229, 136, 134] => lookup_635_257(acc),
            [229, 164, 167, 233, 152, 170] => lookup_635_258(acc),
            [229, 165, 136, 232, 137, 175] => lookup_635_259(acc),
            [229, 174, 174, 229, 159, 142] => lookup_635_260(acc),
            [229, 174, 174, 229, 180, 142] => lookup_635_261(acc),
            [229, 175, 140, 229, 177, 177] => lookup_635_262(acc),
            [229, 177, 177, 229, 143, 163] => lookup_635_263(acc),
            [229, 177, 177, 229, 189, 162] => lookup_635_264(acc),
            [229, 177, 177, 230, 162, 168] => lookup_635_265(acc),
            [229, 178, 144, 233, 152, 156] => lookup_635_266(acc),
            [229, 178, 161, 229, 177, 177] => lookup_635_267(acc),
            [229, 178, 169, 230, 137, 139] => lookup_635_268(acc),
            [229, 179, 182, 230, 160, 185] => lookup_635_269(acc),
            [229, 186, 131, 229, 179, 182] => lookup_635_270(acc),
            [229, 190, 179, 229, 179, 182] => lookup_635_271(acc),
            [230, 132, 155, 229, 170, 155] => lookup_635_272(acc),
            [230, 132, 155, 231, 159, 165] => lookup_635_273(acc),
            [230, 150, 176, 230, 189, 159] => lookup_635_274(acc),
            [230, 157, 177, 228, 186, 172] => lookup_635_275(acc),
            [230, 160, 131, 230, 156, 168] => lookup_635_276(acc),
            [230, 178, 150, 231, 184, 132] => lookup_635_277(acc),
            [230, 187, 139, 232, 179, 128] => lookup_635_278(acc),
            [231, 134, 138, 230, 156, 172] => lookup_635_279(acc),
            [231, 159, 179, 229, 183, 157] => lookup_635_280(acc),
            [231, 165, 158, 229, 165, 136, 229, 183, 157] => lookup_635_281(acc),
            [231, 166, 143, 228, 186, 149] => lookup_635_282(acc),
            [231, 166, 143, 229, 178, 161] => lookup_635_283(acc),
            [231, 166, 143, 229, 179, 182] => lookup_635_284(acc),
            [231, 167, 139, 231, 148, 176] => lookup_635_285(acc),
            [231, 190, 164, 233, 166, 172] => lookup_635_286(acc),
            [232, 140, 168, 229, 159, 142] => lookup_635_287(acc),
            [233, 149, 183, 229, 180, 142] => lookup_635_288(acc),
            [233, 149, 183, 233, 135, 142] => lookup_635_289(acc),
            [233, 157, 146, 230, 163, 174] => lookup_635_290(acc),
            [233, 157, 153, 229, 178, 161] => lookup_635_291(acc),
            [233, 166, 153, 229, 183, 157] => lookup_635_292(acc),
            [233, 171, 152, 231, 159, 165] => lookup_635_293(acc),
            [233, 179, 165, 229, 143, 150] => lookup_635_294(acc),
            [233, 185, 191, 229, 133, 144, 229, 179, 182] => lookup_635_295(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_636() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_637() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_638() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_639() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_640() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_641() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_642_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_642_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_642_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_642_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_642_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_642_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_642_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_642_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_642_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_642_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_642_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_642<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_642_0(acc),
            [99, 111] => lookup_642_1(labels, acc),
            [103, 111] => lookup_642_2(acc),
            [105, 110, 102, 111] => lookup_642_3(acc),
            [109, 101] => lookup_642_4(acc),
            [109, 111, 98, 105] => lookup_642_5(acc),
            [110, 101] => lookup_642_6(acc),
            [111, 114] => lookup_642_7(acc),
            [115, 99] => lookup_642_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_643() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_644() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_645() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_646() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_647_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_647_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_647_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_647_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_647_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_647_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_647<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103] => lookup_647_0(acc),
            [99, 111, 109] => lookup_647_1(acc),
            [101, 100, 117] => lookup_647_2(acc),
            [103, 111, 118] => lookup_647_3(acc),
            [105, 111] => lookup_647_4(acc),
            [106, 112] => lookup_647_5(acc),
            [109, 105, 108] => lookup_647_6(acc),
            [110, 101, 116] => lookup_647_7(acc),
            [111, 114, 103] => lookup_647_8(acc),
            [116, 118] => lookup_647_9(acc),
            [117, 107] => lookup_647_10(acc),
            [117, 115] => lookup_647_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_648_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_648<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_648_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_649_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_649<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_649_0(acc),
            [99, 111, 109] => lookup_649_1(acc),
            [101, 100, 117] => lookup_649_2(acc),
            [103, 111, 118] => lookup_649_3(acc),
            [105, 110, 102, 111] => lookup_649_4(acc),
            [110, 101, 116] => lookup_649_5(acc),
            [111, 114, 103] => lookup_649_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_650() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_651() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_652() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_653() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_654() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_655() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_656() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_657<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115] => lookup_657_0(acc),
            [97, 115, 115, 111] => lookup_657_1(acc),
            [99, 111, 109] => lookup_657_2(acc),
            [99, 111, 111, 112] => lookup_657_3(acc),
            [101, 100, 117] => lookup_657_4(acc),
            [103, 111, 117, 118] => lookup_657_5(acc),
            [103, 111, 118] => lookup_657_6(acc),
            [109, 101, 100, 101, 99, 105, 110] => lookup_657_7(acc),
            [109, 105, 108] => lookup_657_8(acc),
            [110, 111, 109] => lookup_657_9(acc),
            [110, 111, 116, 97, 105, 114, 101, 115] => lookup_657_10(acc),
            [111, 114, 103] => lookup_657_11(acc),
            [112, 104, 97, 114, 109, 97, 99, 105, 101, 110, 115] => lookup_657_12(acc),
            [112, 114, 100] => lookup_657_13(acc),
            [112, 114, 101, 115, 115, 101] => lookup_657_14(acc),
            [116, 109] => lookup_657_15(acc),
            [118, 101, 116, 101, 114, 105, 110, 97, 105, 114, 101] => lookup_657_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_658_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_658<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_658_0(acc),
            [103, 111, 118] => lookup_658_1(acc),
            [110, 101, 116] => lookup_658_2(acc),
            [111, 114, 103] => lookup_658_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_659() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_660() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_661() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_662<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_662_0(acc),
            [101, 100, 117] => lookup_662_1(acc),
            [103, 111, 118] => lookup_662_2(acc),
            [111, 114, 103] => lookup_662_3(acc),
            [114, 101, 112] => lookup_662_4(acc),
            [116, 114, 97] => lookup_662_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_663() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_664() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_665_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_665<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_665_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_665_1(acc),
            [98, 117, 115, 97, 110] => lookup_665_2(acc),
            [99, 104, 117, 110, 103, 98, 117, 107] => lookup_665_3(acc),
            [99, 104, 117, 110, 103, 110, 97, 109] => lookup_665_4(acc),
            [99, 111] => lookup_665_5(acc),
            [100, 97, 101, 103, 117] => lookup_665_6(acc),
            [100, 97, 101, 106, 101, 111, 110] => lookup_665_7(acc),
            [101, 115] => lookup_665_8(acc),
            [103, 97, 110, 103, 119, 111, 110] => lookup_665_9(acc),
            [103, 111] => lookup_665_10(acc),
            [103, 119, 97, 110, 103, 106, 117] => lookup_665_11(acc),
            [103, 121, 101, 111, 110, 103, 98, 117, 107] => lookup_665_12(acc),
            [103, 121, 101, 111, 110, 103, 103, 105] => lookup_665_13(acc),
            [103, 121, 101, 111, 110, 103, 110, 97, 109] => lookup_665_14(acc),
            [104, 115] => lookup_665_15(acc),
            [105, 110, 99, 104, 101, 111, 110] => lookup_665_16(acc),
            [106, 101, 106, 117] => lookup_665_17(acc),
            [106, 101, 111, 110, 98, 117, 107] => lookup_665_18(acc),
            [106, 101, 111, 110, 110, 97, 109] => lookup_665_19(acc),
            [107, 103] => lookup_665_20(acc),
            [109, 105, 108] => lookup_665_21(acc),
            [109, 115] => lookup_665_22(acc),
            [110, 101] => lookup_665_23(acc),
            [111, 114] => lookup_665_24(acc),
            [112, 101] => lookup_665_25(acc),
            [114, 101] => lookup_665_26(acc),
            [115, 99] => lookup_665_27(acc),
            [115, 101, 111, 117, 108] => lookup_665_28(acc),
            [117, 108, 115, 97, 110] => lookup_665_29(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_666_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_666_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_666<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_666_0(acc),
            [101, 100, 117] => lookup_666_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_667() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_668() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_669<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_669_0(acc),
            [101, 100, 117] => lookup_669_1(acc),
            [101, 109, 98] => lookup_669_2(acc),
            [103, 111, 118] => lookup_669_3(acc),
            [105, 110, 100] => lookup_669_4(acc),
            [110, 101, 116] => lookup_669_5(acc),
            [111, 114, 103] => lookup_669_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_670_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_670<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_670_0(acc),
            [101, 100, 117] => lookup_670_1(acc),
            [110, 101, 116] => lookup_670_2(acc),
            [111, 114, 103] => lookup_670_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_671() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_672_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_672_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_672_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_672_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_672_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_672_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [117, 112, 97, 97, 115] => lookup_672_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_672_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_672_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_672_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_672<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_672_0(acc),
            [101, 100, 117] => lookup_672_1(acc),
            [103, 111, 118] => lookup_672_2(acc),
            [106, 99, 108, 111, 117, 100] => lookup_672_3(acc),
            [107, 97, 122, 116, 101, 108, 101, 112, 111, 114, 116] => {
                lookup_672_4(info, labels, acc)
            }
            [109, 105, 108] => lookup_672_5(acc),
            [110, 101, 116] => lookup_672_6(acc),
            [111, 114, 103] => lookup_672_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_673_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_673_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_673_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_673<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 110, 114] => lookup_673_0(acc),
            [99] => lookup_673_1(acc),
            [99, 111, 109] => lookup_673_2(acc),
            [101, 100, 117] => lookup_673_3(acc),
            [103, 111, 118] => lookup_673_4(acc),
            [105, 110, 102, 111] => lookup_673_5(acc),
            [105, 110, 116] => lookup_673_6(acc),
            [110, 101, 116] => lookup_673_7(acc),
            [111, 114, 103] => lookup_673_8(acc),
            [112, 101, 114] => lookup_673_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_674() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_675() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_676() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_677() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_678() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_679_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_679_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_679_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 101, 118] => lookup_679_0_0(acc),
            [115, 105, 116, 101, 115] => lookup_679_0_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_679<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 116, 105, 99] => lookup_679_0(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_680() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_681() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_682() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_683() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_684() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_685() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_686() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_687() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_688_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_688_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_688_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_688_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_688_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_688<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_688_0(acc),
            [101, 100, 117] => lookup_688_1(acc),
            [103, 111, 118] => lookup_688_2(acc),
            [110, 101, 116] => lookup_688_3(acc),
            [111, 114, 103] => lookup_688_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_689_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_689_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_689_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_689_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_689_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_689_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_689_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_689<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_689_0(acc),
            [99, 111, 109] => lookup_689_1(acc),
            [101, 100, 117] => lookup_689_2(acc),
            [103, 111, 118] => lookup_689_3(acc),
            [110, 101, 116] => lookup_689_4(acc),
            [111, 114, 103] => lookup_689_5(acc),
            [111, 121] => lookup_689_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_690() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_691() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_692() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_693() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_694() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_695() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_696() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_697() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_698_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_698_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_698<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_698_0(acc),
            [99, 97, 97] => lookup_698_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_699() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_700() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_701() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_702() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_703() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_704() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_705() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_706() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_707() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_708() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_709_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_709_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_709_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_709_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_709_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_709<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 121, 111, 110] => lookup_709_0(acc),
            [100, 119, 101, 98] => lookup_709_1(info, labels, acc),
            [109, 121, 112, 101, 112] => lookup_709_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_710() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_711_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_711<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 108, 120] => lookup_711_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_712() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_713<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_713_0(acc),
            [97, 115, 115, 110] => lookup_713_1(acc),
            [99, 111, 109] => lookup_713_2(acc),
            [101, 100, 117] => lookup_713_3(acc),
            [103, 111, 118] => lookup_713_4(acc),
            [103, 114, 112] => lookup_713_5(acc),
            [104, 111, 116, 101, 108] => lookup_713_6(acc),
            [105, 110, 116] => lookup_713_7(acc),
            [108, 116, 100] => lookup_713_8(acc),
            [110, 101, 116] => lookup_713_9(acc),
            [110, 103, 111] => lookup_713_10(acc),
            [111, 114, 103] => lookup_713_11(acc),
            [115, 99, 104] => lookup_713_12(acc),
            [115, 111, 99] => lookup_713_13(acc),
            [119, 101, 98] => lookup_713_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_714() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_715() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_716() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_717() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_718() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_719() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_720_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_720<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 109, 103] => lookup_720_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_721() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_722() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_723() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_724() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_725() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_726() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_727<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_727_0(acc),
            [101, 100, 117] => lookup_727_1(acc),
            [103, 111, 118] => lookup_727_2(acc),
            [110, 101, 116] => lookup_727_3(acc),
            [111, 114, 103] => lookup_727_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_728_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_728_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_728_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_728_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_728_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_728_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_728_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_728_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_728_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_728_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_728<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_728_0(acc),
            [98, 105, 122] => lookup_728_1(acc),
            [99, 111] => lookup_728_2(acc),
            [100, 101] => lookup_728_3(acc),
            [101, 100, 117] => lookup_728_4(acc),
            [103, 111, 118] => lookup_728_5(acc),
            [105, 110, 102, 111] => lookup_728_6(acc),
            [110, 101, 116] => lookup_728_7(acc),
            [111, 114, 103] => lookup_728_8(acc),
            [115, 99] => lookup_728_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_729_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_729_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_729<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_729_0(acc),
            [103, 111, 118] => lookup_729_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_730() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_731() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_732_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_732_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_732<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 105, 116, 101] => lookup_732_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_732_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_733() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_734() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_735() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_736<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 110] => lookup_736_0(acc),
            [99, 111, 109] => lookup_736_1(acc),
            [99, 111, 110, 102] => lookup_736_2(acc),
            [101, 100, 117] => lookup_736_3(acc),
            [103, 111, 118] => lookup_736_4(acc),
            [105, 100] => lookup_736_5(acc),
            [109, 105, 108] => lookup_736_6(acc),
            [110, 101, 116] => lookup_736_7(acc),
            [111, 114, 103] => lookup_736_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_737_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_737_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_737_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_737_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_737_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_737_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_737_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_737_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_737_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_737<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_737_0(acc),
            [101, 100, 117] => lookup_737_1(acc),
            [103, 111, 118] => lookup_737_2(acc),
            [105, 100] => lookup_737_3(acc),
            [109, 101, 100] => lookup_737_4(acc),
            [110, 101, 116] => lookup_737_5(acc),
            [111, 114, 103] => lookup_737_6(acc),
            [112, 108, 99] => lookup_737_7(acc),
            [115, 99, 104] => lookup_737_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_738_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_738<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_738_0(acc),
            [99, 111] => lookup_738_1(acc),
            [103, 111, 118] => lookup_738_2(acc),
            [110, 101, 116] => lookup_738_3(acc),
            [111, 114, 103] => lookup_738_4(acc),
            [112, 114, 101, 115, 115] => lookup_738_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_739() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_740() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_741() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_742() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_743() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_744_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_744<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [114, 111, 117, 116, 101, 114] => lookup_744_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_745() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_746() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_747() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_748() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_749() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_750() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_751() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_752() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_753() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_754() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_755_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_755_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_755<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_755_0(acc),
            [116, 109] => lookup_755_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_756() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_757_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_757_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_757_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_757_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_757_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_757<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116] => lookup_757_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_757_1(acc),
            [100, 101] => lookup_757_2(acc),
            [106, 112] => lookup_757_3(acc),
            [116, 111] => lookup_757_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_758_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 99, 97, 108, 104, 111, 115, 116] => lookup_758_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_758_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_758_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_38<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 105, 116, 101] => lookup_758_38_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_758_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_758<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_758_0(acc),
            [98, 97, 114, 115, 121] => lookup_758_1(acc),
            [98, 114, 97, 115, 105, 108, 105, 97] => lookup_758_2(acc),
            [99, 54, 54] => lookup_758_3(acc),
            [99, 111] => lookup_758_4(acc),
            [100, 97, 112, 108, 105, 101] => lookup_758_5(labels, acc),
            [100, 100, 110, 115] => lookup_758_6(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_758_7(acc),
            [100, 110, 115, 102, 111, 114] => lookup_758_8(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_758_9(acc),
            [101, 100, 103, 101, 115, 116, 97, 99, 107] => lookup_758_10(acc),
            [101, 100, 117] => lookup_758_11(acc),
            [102, 105, 108, 101, 103, 101, 97, 114] => lookup_758_12(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 97, 117] => lookup_758_13(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 100, 101] => lookup_758_14(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 103, 98] => lookup_758_15(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 105, 101] => lookup_758_16(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 106, 112] => lookup_758_17(acc),
            [102, 105, 108, 101, 103, 101, 97, 114, 45, 115, 103] => lookup_758_18(acc),
            [103, 108, 105, 116, 99, 104] => lookup_758_19(acc),
            [103, 111, 118] => lookup_758_20(acc),
            [104, 111, 112, 116, 111] => lookup_758_21(acc),
            [105, 50, 51, 52] => lookup_758_22(acc),
            [105, 116, 115] => lookup_758_23(acc),
            [108, 111, 103, 105, 110, 116, 111] => lookup_758_24(acc),
            [108, 111, 104, 109, 117, 115] => lookup_758_25(acc),
            [109, 99, 100, 105, 114] => lookup_758_26(acc),
            [109, 99, 112, 101] => lookup_758_27(acc),
            [109, 121, 100, 115] => lookup_758_28(acc),
            [110, 101, 116] => lookup_758_29(acc),
            [110, 111, 104, 111, 115, 116] => lookup_758_30(acc),
            [110, 111, 105, 112] => lookup_758_31(acc),
            [111, 114, 103] => lookup_758_32(acc),
            [112, 114, 105, 118] => lookup_758_33(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_758_34(acc),
            [115, 111, 117, 110, 100, 99, 97, 115, 116] => lookup_758_35(acc),
            [115, 121, 110, 111, 108, 111, 103, 121] => lookup_758_36(acc),
            [116, 99, 112, 52] => lookup_758_37(acc),
            [116, 114, 97, 110, 115, 105, 112] => lookup_758_38(info, labels, acc),
            [118, 112, 52] => lookup_758_39(acc),
            [119, 101, 98, 104, 111, 112] => lookup_758_40(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_758_41(acc),
            [121, 111, 109, 98, 111] => lookup_758_42(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_759() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_760_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_760<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 109, 101, 114] => lookup_760_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_761() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_762() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_763() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_764() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_765() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_766_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_766<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_766_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_767() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_768<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_768_0(acc),
            [99, 111, 109] => lookup_768_1(acc),
            [101, 100, 117] => lookup_768_2(acc),
            [103, 111, 118] => lookup_768_3(acc),
            [109, 105, 108] => lookup_768_4(acc),
            [110, 111, 109] => lookup_768_5(acc),
            [111, 114, 103] => lookup_768_6(acc),
            [112, 114, 100] => lookup_768_7(acc),
            [116, 109] => lookup_768_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_769() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_770() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_771() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_772() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_773() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_774() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_775() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_776() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_777_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_777_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_777_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_777_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_777_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_777_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_777_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_777_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_777<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_777_0(acc),
            [99, 111, 109] => lookup_777_1(acc),
            [101, 100, 117] => lookup_777_2(acc),
            [103, 111, 118] => lookup_777_3(acc),
            [105, 110, 102] => lookup_777_4(acc),
            [110, 97, 109, 101] => lookup_777_5(acc),
            [110, 101, 116] => lookup_777_6(acc),
            [111, 114, 103] => lookup_777_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_778_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_778<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_778_0(acc),
            [101, 100, 117] => lookup_778_1(acc),
            [103, 111, 117, 118] => lookup_778_2(acc),
            [103, 111, 118] => lookup_778_3(acc),
            [110, 101, 116] => lookup_778_4(acc),
            [111, 114, 103] => lookup_778_5(acc),
            [112, 114, 101, 115, 115, 101] => lookup_778_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_779() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_780() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_781_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_781<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_781_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_782() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_783_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_783_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_783_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_783_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_783<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_783_0(acc),
            [103, 111, 118] => lookup_783_1(acc),
            [110, 121, 99] => lookup_783_2(acc),
            [111, 114, 103] => lookup_783_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_784_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_784<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_784_0(acc),
            [101, 100, 117] => lookup_784_1(acc),
            [103, 111, 118] => lookup_784_2(acc),
            [110, 101, 116] => lookup_784_3(acc),
            [111, 114, 103] => lookup_784_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_785_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_785_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_785<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_785_0(acc),
            [100, 115, 99, 108, 111, 117, 100] => lookup_785_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_786() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_787() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_788() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_789() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_790() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_791() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_792() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_793() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_794() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_795() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_796() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_797() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_798() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_799() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_800() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_801_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_801<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 117] => lookup_801_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_802() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_803_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_803_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_803<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_803_0(acc),
            [103, 111, 118] => lookup_803_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_804_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_804_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_804_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_804<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_804_0(acc),
            [101, 100, 117] => lookup_804_1(acc),
            [103, 111, 118] => lookup_804_2(acc),
            [108, 97, 98] => lookup_804_3(acc),
            [109, 105, 110, 105, 115, 105, 116, 101] => lookup_804_4(acc),
            [110, 101, 116] => lookup_804_5(acc),
            [111, 114, 103] => lookup_804_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_805() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_806_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_806_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_806_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_806_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_806_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_806_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_806<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_806_0(labels, acc),
            [101, 100, 117] => lookup_806_1(acc),
            [110, 101, 116] => lookup_806_2(acc),
            [111, 114, 103] => lookup_806_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_807() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_808() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_809<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_809_0(acc),
            [99, 111] => lookup_809_1(acc),
            [99, 111, 109] => lookup_809_2(acc),
            [103, 111, 118] => lookup_809_3(acc),
            [110, 101, 116] => lookup_809_4(acc),
            [111, 114] => lookup_809_5(acc),
            [111, 114, 103] => lookup_809_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_810() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_811() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_812() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_813<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 101, 114, 111] => lookup_813_0(acc),
            [98, 105, 122] => lookup_813_1(acc),
            [99, 111, 109] => lookup_813_2(acc),
            [99, 111, 111, 112] => lookup_813_3(acc),
            [101, 100, 117] => lookup_813_4(acc),
            [103, 111, 118] => lookup_813_5(acc),
            [105, 110, 102, 111] => lookup_813_6(acc),
            [105, 110, 116] => lookup_813_7(acc),
            [109, 105, 108] => lookup_813_8(acc),
            [109, 117, 115, 101, 117, 109] => lookup_813_9(acc),
            [110, 97, 109, 101] => lookup_813_10(acc),
            [110, 101, 116] => lookup_813_11(acc),
            [111, 114, 103] => lookup_813_12(acc),
            [112, 114, 111] => lookup_813_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_814_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_814<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_814_0(acc),
            [98, 105, 122] => lookup_814_1(acc),
            [99, 111] => lookup_814_2(acc),
            [99, 111, 109] => lookup_814_3(acc),
            [99, 111, 111, 112] => lookup_814_4(acc),
            [101, 100, 117] => lookup_814_5(acc),
            [103, 111, 118] => lookup_814_6(acc),
            [105, 110, 116] => lookup_814_7(acc),
            [109, 117, 115, 101, 117, 109] => lookup_814_8(acc),
            [110, 101, 116] => lookup_814_9(acc),
            [111, 114, 103] => lookup_814_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_815_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_815_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_815_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_815_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_815_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_815_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_815<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_815_0(acc),
            [99, 111, 109] => lookup_815_1(acc),
            [101, 100, 117] => lookup_815_2(acc),
            [103, 111, 98] => lookup_815_3(acc),
            [110, 101, 116] => lookup_815_4(acc),
            [111, 114, 103] => lookup_815_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_816_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_816_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_816_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_816_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_816_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_816_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_816_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_816_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_816_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_816<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_816_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_816_1(acc),
            [99, 111, 109] => lookup_816_2(acc),
            [101, 100, 117] => lookup_816_3(acc),
            [103, 111, 118] => lookup_816_4(acc),
            [109, 105, 108] => lookup_816_5(acc),
            [110, 97, 109, 101] => lookup_816_6(acc),
            [110, 101, 116] => lookup_816_7(acc),
            [111, 114, 103] => lookup_816_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_817_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_817<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_817_0(acc),
            [97, 100, 118] => lookup_817_1(acc),
            [99, 111] => lookup_817_2(acc),
            [101, 100, 117] => lookup_817_3(acc),
            [103, 111, 118] => lookup_817_4(acc),
            [109, 105, 108] => lookup_817_5(acc),
            [110, 101, 116] => lookup_817_6(acc),
            [111, 114, 103] => lookup_817_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_818_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_818<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 97] => lookup_818_0(acc),
            [99, 99] => lookup_818_1(acc),
            [99, 111] => lookup_818_2(acc),
            [99, 111, 109] => lookup_818_3(acc),
            [100, 114] => lookup_818_4(acc),
            [105, 110] => lookup_818_5(acc),
            [105, 110, 102, 111] => lookup_818_6(acc),
            [109, 111, 98, 105] => lookup_818_7(acc),
            [109, 120] => lookup_818_8(acc),
            [110, 97, 109, 101] => lookup_818_9(acc),
            [111, 114] => lookup_818_10(acc),
            [111, 114, 103] => lookup_818_11(acc),
            [112, 114, 111] => lookup_818_12(acc),
            [115, 99, 104, 111, 111, 108] => lookup_818_13(acc),
            [116, 118] => lookup_818_14(acc),
            [117, 115] => lookup_818_15(acc),
            [119, 115] => lookup_818_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_819() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_820() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_821_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_821_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_821_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_821_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_821_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [102, 111, 114, 103, 111, 116] => lookup_821_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_821<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114] => lookup_821_0(info, labels, acc),
            [104, 105, 115] => lookup_821_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_822() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_823() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_824() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_825<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_825_0(acc),
            [110, 111, 109] => lookup_825_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_826() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_827() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_828_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_17_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_17_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [99, 100, 110] => lookup_828_17_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_17<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [112, 114, 111, 100] => lookup_828_17_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_19_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_19_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_19_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_19_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_19_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_19_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_19_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_19<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [49] => lookup_828_19_0(acc),
            [50] => lookup_828_19_1(acc),
            [51] => lookup_828_19_2(acc),
            [99, 101, 110, 116, 114, 97, 108, 117, 115] => lookup_828_19_3(acc),
            [101, 97, 115, 116, 97, 115, 105, 97] => lookup_828_19_4(acc),
            [101, 97, 115, 116, 117, 115, 50] => lookup_828_19_5(acc),
            [119, 101, 115, 116, 101, 117, 114, 111, 112, 101] => lookup_828_19_6(acc),
            [119, 101, 115, 116, 117, 115, 50] => lookup_828_19_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_35<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [114] => lookup_828_35_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_37_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_37<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [117] => lookup_828_37_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_43_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_43_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_43<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 49, 45, 100, 101] => lookup_828_43_0(acc),
            [119, 101, 115, 116, 49, 45, 117, 115] => lookup_828_43_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_46_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_46<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_828_46_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_828_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_67<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [106, 108, 115, 45, 115, 116, 111, 49] => lookup_828_67_0(acc),
            [106, 108, 115, 45, 115, 116, 111, 50] => lookup_828_67_1(acc),
            [106, 108, 115, 45, 115, 116, 111, 51] => lookup_828_67_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_70_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_70_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_70_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_70_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_828_70_2_0(acc),
            [103, 108, 111, 98, 97, 108] => lookup_828_70_2_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_70_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_70_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_70_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_70_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [97] => lookup_828_70_3_0(acc),
            [98] => lookup_828_70_3_1(acc),
            [103, 108, 111, 98, 97, 108] => lookup_828_70_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_70<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [102, 114, 101, 101, 116, 108, 115] => lookup_828_70_0(acc),
            [109, 97, 112] => lookup_828_70_1(acc),
            [112, 114, 111, 100] => lookup_828_70_2(info, labels, acc),
            [115, 115, 108] => lookup_828_70_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_71_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_71<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 97, 112] => lookup_828_71_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_104_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_104_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_104_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_104_0_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_104_0_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_104_0_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_104_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [102, 114, 45, 49] => lookup_828_104_0_0(acc),
            [108, 111, 110, 45, 49] => lookup_828_104_0_1(acc),
            [108, 111, 110, 45, 50] => lookup_828_104_0_2(acc),
            [110, 121, 45, 49] => lookup_828_104_0_3(acc),
            [110, 121, 45, 50] => lookup_828_104_0_4(acc),
            [115, 103, 45, 49] => lookup_828_104_0_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_104<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [112, 97, 97, 115] => lookup_828_104_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_122_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_122_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_828_122_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_828_122_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_122_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_828_122_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_828_122<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [104, 111, 115, 116, 105, 110, 103] => lookup_828_122_0(info, labels, acc),
            [119, 101, 98, 112, 97, 97, 115] => lookup_828_122_1(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 24usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_131_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_131_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_131<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_828_131_0(acc),
            [110, 111, 114, 100, 101, 115, 116, 101, 45, 105, 100, 99] => lookup_828_131_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_132_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_132<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_828_132_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_148_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_148_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_148<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [115, 111, 99] => lookup_828_148_0(acc),
            [117, 115, 101, 114] => lookup_828_148_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_153_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_153<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116, 97] => lookup_828_153_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_155_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_155<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 97, 103, 101, 115] => lookup_828_155_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_157_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_157<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_828_157_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_162_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_162_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_162_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_162_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [97, 116, 108] => lookup_828_162_0_0(acc),
            [110, 106, 115] => lookup_828_162_0_1(acc),
            [114, 105, 99] => lookup_828_162_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_162<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_828_162_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_164_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_164_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828_164<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 111, 114, 97, 103, 101] => lookup_828_164_0(acc),
            [119, 101, 98, 115, 105, 116, 101] => lookup_828_164_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_828_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_828<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 111, 98, 101, 97, 101, 109, 99, 108, 111, 117, 100] => lookup_828_0(acc),
            [97, 100, 111, 98, 101, 105, 111, 45, 115, 116, 97, 116, 105, 99] => lookup_828_1(acc),
            [97, 100, 111, 98, 101, 105, 111, 114, 117, 110, 116, 105, 109, 101] => {
                lookup_828_2(acc)
            }
            [97, 107, 97, 100, 110, 115] => lookup_828_3(acc),
            [97, 107, 97, 109, 97, 105] => lookup_828_4(acc),
            [97, 107, 97, 109, 97, 105, 45, 115, 116, 97, 103, 105, 110, 103] => lookup_828_5(acc),
            [97, 107, 97, 109, 97, 105, 101, 100, 103, 101] => lookup_828_6(acc),
            [97, 107, 97, 109, 97, 105, 101, 100, 103, 101, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_828_7(acc)
            }
            [97, 107, 97, 109, 97, 105, 104, 100] => lookup_828_8(acc),
            [97, 107, 97, 109, 97, 105, 104, 100, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_828_9(acc)
            }
            [97, 107, 97, 109, 97, 105, 111, 114, 105, 103, 105, 110] => lookup_828_10(acc),
            [97, 107, 97, 109, 97, 105, 111, 114, 105, 103, 105, 110, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_828_11(acc)
            }
            [97, 107, 97, 109, 97, 105, 122, 101, 100] => lookup_828_12(acc),
            [97, 107, 97, 109, 97, 105, 122, 101, 100, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_828_13(acc)
            }
            [97, 108, 119, 97, 121, 115, 100, 97, 116, 97] => lookup_828_14(acc),
            [97, 112, 112, 117, 100, 111] => lookup_828_15(acc),
            [97, 116, 45, 98, 97, 110, 100, 45, 99, 97, 109, 112] => lookup_828_16(acc),
            [97, 116, 108, 97, 115, 115, 105, 97, 110, 45, 100, 101, 118] => {
                lookup_828_17(info, labels, acc)
            }
            [97, 122, 117, 114, 101, 45, 109, 111, 98, 105, 108, 101] => lookup_828_18(acc),
            [97, 122, 117, 114, 101, 115, 116, 97, 116, 105, 99, 97, 112, 112, 115] => {
                lookup_828_19(labels, acc)
            }
            [97, 122, 117, 114, 101, 119, 101, 98, 115, 105, 116, 101, 115] => lookup_828_20(acc),
            [98, 97, 114, 48] => lookup_828_21(acc),
            [98, 97, 114, 49] => lookup_828_22(acc),
            [98, 97, 114, 50] => lookup_828_23(acc),
            [98, 97, 114, 115, 121] => lookup_828_24(acc),
            [98, 105, 116, 98, 114, 105, 100, 103, 101] => lookup_828_25(acc),
            [98, 108, 97, 99, 107, 98, 97, 117, 100, 99, 100, 110] => lookup_828_26(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_828_27(acc),
            [98, 111, 111, 109, 108, 97] => lookup_828_28(acc),
            [98, 111, 117, 110, 99, 101, 109, 101] => lookup_828_29(acc),
            [98, 112, 108, 97, 99, 101, 100] => lookup_828_30(acc),
            [98, 114, 111, 107, 101, 45, 105, 116] => lookup_828_31(acc),
            [98, 117, 121, 115, 104, 111, 117, 115, 101, 115] => lookup_828_32(acc),
            [99, 97, 115, 97, 99, 97, 109] => lookup_828_33(acc),
            [99, 100, 110, 45, 101, 100, 103, 101, 115] => lookup_828_34(acc),
            [99, 100, 110, 55, 55] => lookup_828_35(info, labels, acc),
            [99, 100, 110, 55, 55, 45, 115, 115, 108] => lookup_828_36(acc),
            [99, 104, 97, 110, 110, 101, 108, 115, 100, 118, 114] => lookup_828_37(labels, acc),
            [99, 108, 105, 99, 107, 114, 105, 115, 105, 110, 103] => lookup_828_38(acc),
            [99, 108, 111, 117, 100, 97, 99, 99, 101, 115, 115] => lookup_828_39(acc),
            [99, 108, 111, 117, 100, 97, 112, 112] => lookup_828_40(acc),
            [99, 108, 111, 117, 100, 102, 114, 111, 110, 116] => lookup_828_41(acc),
            [99, 108, 111, 117, 100, 102, 117, 110, 99, 116, 105, 111, 110, 115] => {
                lookup_828_42(acc)
            }
            [99, 108, 111, 117, 100, 106, 105, 102, 102, 121] => lookup_828_43(labels, acc),
            [99, 108, 111, 117, 100, 121, 99, 108, 117, 115, 116, 101, 114] => lookup_828_44(acc),
            [99, 111, 109, 109, 117, 110, 105, 116, 121, 45, 112, 114, 111] => lookup_828_45(acc),
            [99, 114, 121, 112, 116, 111, 110, 111, 109, 105, 99] => {
                lookup_828_46(info, labels, acc)
            }
            [100, 97, 116, 116, 111, 108, 111, 99, 97, 108] => lookup_828_47(acc),
            [100, 100, 110, 115] => lookup_828_48(acc),
            [100, 101, 98, 105, 97, 110] => lookup_828_49(acc),
            [100, 101, 102, 105, 110, 105, 109, 97] => lookup_828_50(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_828_51(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_828_52(acc),
            [100, 110, 115, 117, 112] => lookup_828_53(acc),
            [100, 111, 101, 115, 45, 105, 116] => lookup_828_54(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_828_55(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_828_56(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_828_57(acc),
            [100, 121, 110, 97, 116, 104, 111, 109, 101] => lookup_828_58(acc),
            [100, 121, 110, 117] => lookup_828_59(acc),
            [100, 121, 110, 118, 54] => lookup_828_60(acc),
            [101, 97, 116, 105, 110, 103, 45, 111, 114, 103, 97, 110, 105, 99] => {
                lookup_828_61(acc)
            }
            [101, 100, 103, 101, 97, 112, 112] => lookup_828_62(acc),
            [101, 100, 103, 101, 107, 101, 121] => lookup_828_63(acc),
            [101, 100, 103, 101, 107, 101, 121, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_828_64(acc)
            }
            [101, 100, 103, 101, 115, 117, 105, 116, 101] => lookup_828_65(acc),
            [101, 100, 103, 101, 115, 117, 105, 116, 101, 45, 115, 116, 97, 103, 105, 110, 103] => {
                lookup_828_66(acc)
            }
            [101, 108, 97, 115, 116, 120] => lookup_828_67(info, labels, acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => lookup_828_68(acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_828_69(acc),
            [102, 97, 115, 116, 108, 121] => lookup_828_70(info, labels, acc),
            [102, 97, 115, 116, 108, 121, 108, 98] => lookup_828_71(labels, acc),
            [102, 97, 115, 116, 115, 116, 97, 99, 107, 115] => lookup_828_72(acc),
            [102, 101, 115, 116, 101, 45, 105, 112] => lookup_828_73(acc),
            [102, 105, 114, 101, 119, 97, 108, 108, 45, 103, 97, 116, 101, 119, 97, 121] => {
                lookup_828_74(acc)
            }
            [102, 108, 121, 110, 110, 104, 111, 115, 116, 105, 110, 103] => lookup_828_75(acc),
            [102, 114, 111, 109, 45, 97, 122] => lookup_828_76(acc),
            [102, 114, 111, 109, 45, 99, 111] => lookup_828_77(acc),
            [102, 114, 111, 109, 45, 108, 97] => lookup_828_78(acc),
            [102, 114, 111, 109, 45, 110, 121] => lookup_828_79(acc),
            [103, 98] => lookup_828_80(acc),
            [103, 101, 116, 115, 45, 105, 116] => lookup_828_81(acc),
            [104, 97, 109, 45, 114, 97, 100, 105, 111, 45, 111, 112] => lookup_828_82(acc),
            [104, 101, 116, 101, 109, 108] => lookup_828_83(acc),
            [104, 105, 99, 97, 109] => lookup_828_84(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_828_85(acc),
            [104, 111, 109, 101, 105, 112] => lookup_828_86(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_828_87(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_828_88(acc),
            [104, 117] => lookup_828_89(acc),
            [105, 110] => lookup_828_90(acc),
            [105, 110, 45, 100, 115, 108] => lookup_828_91(acc),
            [105, 110, 45, 116, 104, 101, 45, 98, 97, 110, 100] => lookup_828_92(acc),
            [105, 110, 45, 118, 112, 110] => lookup_828_93(acc),
            [105, 111, 98, 98] => lookup_828_94(acc),
            [105, 112, 105, 102, 111, 110, 121] => lookup_828_95(acc),
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_828_96(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_828_97(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_828_98(acc),
            [106, 112] => lookup_828_99(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_828_100(acc),
            [107, 105, 110, 103, 104, 111, 115, 116] => lookup_828_101(acc),
            [107, 110, 120, 45, 115, 101, 114, 118, 101, 114] => lookup_828_102(acc),
            [107, 114, 101, 108, 108, 105, 97, 110] => lookup_828_103(acc),
            [109, 97, 115, 115, 105, 118, 101, 103, 114, 105, 100] => {
                lookup_828_104(info, labels, acc)
            }
            [109, 101, 105, 110, 102, 111, 114, 117, 109] => lookup_828_105(acc),
            [109, 101, 109, 115, 101, 116] => lookup_828_106(acc),
            [109, 111, 111, 110, 115, 99, 97, 108, 101] => lookup_828_107(acc),
            [109, 121, 97, 109, 97, 122, 101] => lookup_828_108(acc),
            [109, 121, 100, 97, 116, 116, 111] => lookup_828_109(acc),
            [109, 121, 100, 105, 115, 115, 101, 110, 116] => lookup_828_110(acc),
            [109, 121, 101, 102, 102, 101, 99, 116] => lookup_828_111(acc),
            [109, 121, 102, 114, 105, 116, 122] => lookup_828_112(acc),
            [109, 121, 109, 101, 100, 105, 97, 112, 99] => lookup_828_113(acc),
            [109, 121, 112, 115, 120] => lookup_828_114(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_828_115(acc)
            }
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_828_116(acc),
            [110, 104, 108, 102, 97, 110] => lookup_828_117(acc),
            [110, 111, 45, 105, 112] => lookup_828_118(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_828_119(acc),
            [111, 102, 102, 105, 99, 101, 45, 111, 110, 45, 116, 104, 101] => lookup_828_120(acc),
            [111, 110, 97, 118, 115, 116, 97, 99, 107] => lookup_828_121(acc),
            [111, 118, 104] => lookup_828_122(info, labels, acc),
            [111, 119, 110, 105, 112] => lookup_828_123(acc),
            [112, 103, 97, 102, 97, 110] => lookup_828_124(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_828_125(acc),
            [112, 114, 105, 118, 97, 116, 105, 122, 101, 104, 101, 97, 108, 116, 104, 105, 110, 115, 117, 114, 97, 110, 99, 101] => {
                lookup_828_126(acc)
            }
            [114, 97, 99, 107, 109, 97, 122, 101] => lookup_828_127(acc),
            [114, 101, 100, 105, 114, 101, 99, 116, 109, 101] => lookup_828_128(acc),
            [114, 101, 115, 101, 114, 118, 101, 45, 111, 110, 108, 105, 110, 101] => {
                lookup_828_129(acc)
            }
            [114, 117] => lookup_828_130(acc),
            [115, 97, 118, 101, 105, 110, 99, 108, 111, 117, 100] => {
                lookup_828_131(info, labels, acc)
            }
            [115, 99, 97, 108, 101, 102, 111, 114, 99, 101] => lookup_828_132(info, labels, acc),
            [115, 99, 104, 111, 107, 111, 107, 101, 107, 115] => lookup_828_133(acc),
            [115, 99, 114, 97, 112, 112, 101, 114, 45, 115, 105, 116, 101] => lookup_828_134(acc),
            [115, 101] => lookup_828_135(acc),
            [115, 101, 105, 100, 97, 116] => lookup_828_136(acc),
            [115, 101, 108, 102, 105, 112] => lookup_828_137(acc),
            [115, 101, 108, 108, 115, 45, 105, 116] => lookup_828_138(acc),
            [115, 101, 110, 115, 101, 101, 114, 105, 110, 103] => lookup_828_139(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_828_140(acc),
            [115, 101, 114, 118, 101, 98, 108, 111, 103] => lookup_828_141(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_828_142(acc),
            [115, 101, 114, 118, 101, 109, 105, 110, 101, 99, 114, 97, 102, 116] => {
                lookup_828_143(acc)
            }
            [115, 104, 111, 112, 115, 101, 108, 101, 99, 116] => lookup_828_144(acc),
            [115, 105, 116, 101, 108, 101, 97, 102] => lookup_828_145(acc),
            [115, 113, 117, 97, 114, 101, 55] => lookup_828_146(acc),
            [115, 113, 117, 97, 114, 101, 115] => lookup_828_147(acc),
            [115, 114, 99, 102] => lookup_828_148(info, labels, acc),
            [115, 116, 97, 116, 105, 99, 45, 97, 99, 99, 101, 115, 115] => lookup_828_149(acc),
            [115, 117, 112, 97, 98, 97, 115, 101] => lookup_828_150(acc),
            [115, 121, 116, 101, 115] => lookup_828_151(acc),
            [116, 51, 108, 51, 112, 48, 114, 116] => lookup_828_152(acc),
            [116, 97, 105, 108, 115, 99, 97, 108, 101] => lookup_828_153(info, labels, acc),
            [116, 104, 114, 117, 104, 101, 114, 101] => lookup_828_154(acc),
            [116, 111, 114, 112, 114, 111, 106, 101, 99, 116] => lookup_828_155(labels, acc),
            [116, 115] => lookup_828_156(acc),
            [116, 115, 117, 107, 97, 101, 114, 117] => lookup_828_157(info, labels, acc),
            [116, 119, 109, 97, 105, 108] => lookup_828_158(acc),
            [117, 107] => lookup_828_159(acc),
            [117, 110, 105, 53] => lookup_828_160(acc),
            [118, 112, 110, 100, 110, 115] => lookup_828_161(acc),
            [118, 112, 115, 45, 104, 111, 115, 116] => lookup_828_162(labels, acc),
            [119, 101, 98, 104, 111, 112] => lookup_828_163(acc),
            [121, 97, 110, 100, 101, 120, 99, 108, 111, 117, 100] => lookup_828_164(labels, acc),
            [122, 97] => lookup_828_165(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_829() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_830() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_831_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_831_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_831_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_831_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_831_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_831_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_831_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_831<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108, 99, 101, 115] => lookup_831_0(info, labels, acc),
            [97, 114, 118, 111] => lookup_831_1(acc),
            [97, 122, 105, 109, 117, 116, 104] => lookup_831_2(acc),
            [99, 111] => lookup_831_3(acc),
            [116, 108, 111, 110] => lookup_831_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_832() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_833() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_834_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_834<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 116, 105, 99, 101, 97, 98, 108, 101] => lookup_834_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_835() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_836() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_837() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_838<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_838_0(acc),
            [99, 111, 109] => lookup_838_1(acc),
            [102, 105, 114, 109] => lookup_838_2(acc),
            [105, 110, 102, 111] => lookup_838_3(acc),
            [110, 101, 116] => lookup_838_4(acc),
            [111, 116, 104, 101, 114] => lookup_838_5(acc),
            [112, 101, 114] => lookup_838_6(acc),
            [114, 101, 99] => lookup_838_7(acc),
            [115, 116, 111, 114, 101] => lookup_838_8(acc),
            [119, 101, 98] => lookup_838_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_839() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_840_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_840_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_840_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_840_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_840_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_840_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_840_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_840_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_840<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 108] => lookup_840_0(acc),
            [99, 111, 109] => lookup_840_1(labels, acc),
            [101, 100, 117] => lookup_840_2(acc),
            [102, 105, 114, 109] => lookup_840_3(acc),
            [103, 101, 110] => lookup_840_4(acc),
            [103, 111, 118] => lookup_840_5(acc),
            [105] => lookup_840_6(acc),
            [108, 116, 100] => lookup_840_7(acc),
            [109, 105, 108] => lookup_840_8(acc),
            [109, 111, 98, 105] => lookup_840_9(acc),
            [110, 97, 109, 101] => lookup_840_10(acc),
            [110, 101, 116] => lookup_840_11(acc),
            [110, 103, 111] => lookup_840_12(acc),
            [111, 114, 103] => lookup_840_13(acc),
            [115, 99, 104] => lookup_840_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_841() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_842() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_843<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_843_0(acc),
            [98, 105, 122] => lookup_843_1(acc),
            [99, 111] => lookup_843_2(acc),
            [99, 111, 109] => lookup_843_3(acc),
            [101, 100, 117] => lookup_843_4(acc),
            [103, 111, 98] => lookup_843_5(acc),
            [105, 110] => lookup_843_6(acc),
            [105, 110, 102, 111] => lookup_843_7(acc),
            [105, 110, 116] => lookup_843_8(acc),
            [109, 105, 108] => lookup_843_9(acc),
            [110, 101, 116] => lookup_843_10(acc),
            [110, 111, 109] => lookup_843_11(acc),
            [111, 114, 103] => lookup_843_12(acc),
            [119, 101, 98] => lookup_843_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_844() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_845() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_846() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_847() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_848() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_849() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_850_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_850_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_850_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_850_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_850_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_850_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_850_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_850_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_850_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_850_9_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_850_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_850_9_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_850<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 119, 101, 98, 115, 105, 116, 101] => lookup_850_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_850_1(acc),
            [99, 105, 115, 116, 114, 111, 110] => lookup_850_2(acc),
            [99, 111] => lookup_850_3(acc),
            [100, 101, 109, 111, 110] => lookup_850_4(acc),
            [103, 111, 118] => lookup_850_5(acc),
            [104, 111, 115, 116, 105, 110, 103, 45, 99, 108, 117, 115, 116, 101, 114] => {
                lookup_850_6(acc)
            }
            [107, 104, 112, 108, 97, 121] => lookup_850_7(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_850_8(acc),
            [116, 114, 97, 110, 115, 117, 114, 108] => lookup_850_9(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_851_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_6_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_6<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_6_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_851_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_851_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_85_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_85<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_85_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_87_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_87<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [110, 101, 115] => lookup_851_87_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_851_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_154_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_154<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_154_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_179(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_180(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_181(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_182(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_183(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_184(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_185(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_186(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_187(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_188(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_189(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_190(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_191(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_192(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_193(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_194(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_195(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_196(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_197(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_198(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_199(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_200(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_201(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_202(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_203(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_204(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_205(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_206(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_207(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_208(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_209(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_210(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_211(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_212(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_213(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_214(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_215(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_216(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_217(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_218(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_219(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_220(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_221(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_222_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_222_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_222_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_222_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_222<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_851_222_0(acc),
            [118, 97, 108, 101, 114] => lookup_851_222_1(acc),
            [118, 195, 165, 108, 101, 114] => lookup_851_222_2(acc),
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_851_222_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_223(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_224(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_225(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_226(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_227(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_228(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_229(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_230_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_230<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_230_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_231_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_231<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_231_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_232(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_233(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_234(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_235(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_236(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_237(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_238(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_239(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_240(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_241(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_242_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_242<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_851_242_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_243(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_244(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_245(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_246(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_247(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_248(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_249(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_250(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_251(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_252(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_253(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_254(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_255(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_256(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_257(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_258(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_259(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_260(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_261(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_262(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_263(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_264(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_265_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_265<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_265_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_266(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_267(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_268(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_269(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_270(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_271(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_272(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_273(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_274(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_275(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_276(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_277(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_278(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_279(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_280(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_281(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_282(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_283(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_284(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_285(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_286(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_287(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_288(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_289(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_290(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_291(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_292(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_293(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_294(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_295(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_296(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_297(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_298(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_299(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_300(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_301(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_302(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_303(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_304(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_305(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_306(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_307(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_308(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_309(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_310(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_311(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_312(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_313(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_314(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_315(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_316(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_317(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_318(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_319(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_320(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_321(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_322(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_323(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_324(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_325(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_326(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_327(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_328(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_329(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_330(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_331(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_332(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_333(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_334(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_335(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_336(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_337(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_338(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_339(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_340(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_341(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_342(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_343(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_344(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_345(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_346(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_347(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_348(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_349(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_350(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_351(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_352(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_353(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_354(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_355(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_356(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_357(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_358(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_359(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_360(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_361(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_362(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_363(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_364(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_365(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_366(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_367(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_368(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_369(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_370(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_371(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_372(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_373(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_374(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_375(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_376(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_377(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_378(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_379(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_380(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_381(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_382_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_382_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_382<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 15usize;
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114, 111, 121] => lookup_851_382_0(acc),
            [115, 97, 110, 100, 101] => lookup_851_382_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_383(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_384(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_385(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_386(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_387(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_388(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_389_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_389<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_389_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_390(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_391(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_392(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_393(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_851_394(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_395(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_396(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_397(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_398_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_398_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_398<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 16usize;
    match labels.next() {
        Some(label) => match label {
            [104, 101, 114, 195, 184, 121] => lookup_851_398_0(acc),
            [115, 97, 110, 100, 101] => lookup_851_398_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_399(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_400(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_401(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_402(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_403(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_404(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_405(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_406(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_407(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_408(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_409(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_410(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_411(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_412(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_413(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_414(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_415(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_416(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_417_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_417<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_417_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_418(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_419(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_420(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_421(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_422(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_423_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_423_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_423_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_423_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_423_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_423_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_423<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 111] => lookup_851_423_0(acc),
            [98, 195, 184] => lookup_851_423_1(acc),
            [104, 101, 114, 111, 121] => lookup_851_423_2(acc),
            [104, 101, 114, 195, 184, 121] => lookup_851_423_3(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_851_423_4(acc),
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_851_423_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_424(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_425(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_426(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_427(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_428(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_429_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_429<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_429_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_430(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_431(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_432(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_433(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_434(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_435_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_435<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_435_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_436(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_437_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_437<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_437_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_438(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_439(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_440(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_441(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_442(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_443(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_444(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_445(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_446(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_447(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_448_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_448<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_448_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_449(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_450(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_451(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_452_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_452<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [118, 97, 108, 101, 114] => lookup_851_452_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_453(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_454(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_455(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_456(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_457(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_458(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_459(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_460(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_461(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_462(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_463(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_464(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_465(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_466(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_467(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_468(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_469(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_470(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_471(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_472(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_473(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_474(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_475(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_476(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_477(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_478(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_479(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_480(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_481(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_482(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_483(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_484(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_485(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_486(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_487_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_487<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_487_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_488(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_489(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_490(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_491(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_492(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_493(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_494(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_495(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_496(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_497(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_498(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_499(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_500(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_501(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_502(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_503(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_504(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_505(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_506(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_507(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_508(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_509(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_510(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_511(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_512(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_513(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_514(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_515(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_516(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_517(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_518(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_519(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_520(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_521(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_522(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_523(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_524(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_525(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_526(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_527_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_527<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_527_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_528(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_529(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_530(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_531(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_532(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_533(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_534(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_535(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_536(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_537(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_538(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_539(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_540(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_541(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_542(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_543(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_544(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_545(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_546(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_547(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_548(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_549(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_550(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_551(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_552(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_553(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_554(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_555(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_556(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_557(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_558(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_559(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_560(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_561(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_562(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_563(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_564(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_565(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_566(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_567(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_568(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_569(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_570(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_571(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_572(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_573(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_574(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_575(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_576_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_576<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_576_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_577(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_578(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_579(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_580(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_581(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_582(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_583(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_584(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_585(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_586(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_587(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_588(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_589(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_590(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_591(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_592(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_593(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_594(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_595(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_596(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_597(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_598(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_599(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_600(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_601_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_601<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_601_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_602(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_603(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_604(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_605(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_606(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_607(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_608(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_609(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_610(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_611(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_612(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_613(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_614(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_615(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_616(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_617(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_618(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_619_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_619_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_619_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_619<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 111] => lookup_851_619_0(acc),
            [98, 195, 184] => lookup_851_619_1(acc),
            [120, 110, 45, 45, 98, 45, 53, 103, 97] => lookup_851_619_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_620(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_621(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_622(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_623(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_624(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_625(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_626_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_626<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_626_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_627(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_628(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_629(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_630(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_631_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_631<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_631_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_632(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_633(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_634(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_635(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_636(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_637(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_638(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_639(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_640(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_641(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_642(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_643(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_644(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_645(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_646(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_647(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_648(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_649(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_650(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_651(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_652(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_653(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_654(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_655(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_656(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_657(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_658(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_659_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_659<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_659_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_660(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_661(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_662(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_663(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_664(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_665(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_666(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_667(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_668(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_669(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_670(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_671(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_672(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_673(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_674(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_675(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_676(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_677(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_678(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_679(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_680(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_681(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_682_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_682<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_851_682_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_683(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_684(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_685(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_686(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_687(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_688(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_689_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_689<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 115] => lookup_851_689_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_690(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_691(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_692(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_693(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_694(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_695(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_696(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_697(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_698(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_699(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_700(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_701(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_702(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_703(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_704(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_705(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_706(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_707(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_708(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_709(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_710(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_711(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_712(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_713(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_714(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_715(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_716(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_717(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_718(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_719(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_720(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_721(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_722(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_723(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_724(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_725(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_726(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_727(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_728(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_729(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_730(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_731(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_732(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_733(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_734(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_735(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_736(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_737(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_738(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_739(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_740(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_741(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_742(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_743(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_744(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_745(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_746(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_747(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_748(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_749(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_750(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_751(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_752(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_753(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_754(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_755(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_756(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_757(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_758(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_759(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_760(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_761(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_762(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_763(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_764(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_765(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_766(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_767(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_768(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_769(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_770(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_771(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_772(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_773(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_774(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_775(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_776(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_777(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_778(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_779(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_780(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_781(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_782(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_783(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_784(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_785(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_786(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_787(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_788(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_789(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_790(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_791_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_791_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_791<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 22usize;
    match labels.next() {
        Some(label) => match label {
            [115, 97, 110, 100, 101] => lookup_851_791_0(acc),
            [120, 110, 45, 45, 104, 101, 114, 121, 45, 105, 114, 97] => lookup_851_791_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_792(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_793(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_794(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_795(acc: usize) -> Info {
    Info {
        len: acc + 1 + 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_796(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_797(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_798(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_799(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_800(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_801(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_802(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_803(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_804(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_805(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_806(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_807(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_808(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_809(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_810(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_811(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_812(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_813(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_814(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_815(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_816(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_817(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_818(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_819(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_820(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_821(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_822(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_823(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_824(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_825(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_826(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_827(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_828(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_829(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_830(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_831(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_832(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_833(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_834(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_835(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_836(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_837(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_838(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_839(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_840(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_841(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_842(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_843(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_844(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_845(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_846_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_846<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 14usize;
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 118, 108, 101, 114, 45, 113, 111, 97] => lookup_851_846_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_847(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_848(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_849(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_850(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_851(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_852(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_853(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_854(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_855(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_856(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_857(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_858(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_859(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_860(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_861(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_862(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_863(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_864(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_865(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_866(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_867(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_868(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_869(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_870(acc: usize) -> Info {
    Info {
        len: acc + 1 + 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_871(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_872(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_873(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_874(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_875(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_876(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_877(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_878(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_879(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_880(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_881(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_882(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_883(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_884(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_885(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_886(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_887(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_888(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_889_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_889<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [118, 195, 165, 108, 101, 114] => lookup_851_889_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_851_890(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_891(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_892(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_893(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_894(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851_895(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_851<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 104, 106, 101, 109, 109, 101, 115, 105, 100, 101] => lookup_851_0(acc),
            [97, 97] => lookup_851_1(labels, acc),
            [97, 97, 114, 98, 111, 114, 116, 101] => lookup_851_2(acc),
            [97, 101, 106, 114, 105, 101] => lookup_851_3(acc),
            [97, 102, 106, 111, 114, 100] => lookup_851_4(acc),
            [97, 103, 100, 101, 110, 101, 115] => lookup_851_5(acc),
            [97, 104] => lookup_851_6(labels, acc),
            [97, 107, 101, 114, 115, 104, 117, 115] => lookup_851_7(info, labels, acc),
            [97, 107, 110, 111, 108, 117, 111, 107, 116, 97] => lookup_851_8(acc),
            [97, 107, 114, 101, 104, 97, 109, 110] => lookup_851_9(acc),
            [97, 108] => lookup_851_10(acc),
            [97, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_851_11(acc),
            [97, 108, 101, 115, 117, 110, 100] => lookup_851_12(acc),
            [97, 108, 103, 97, 114, 100] => lookup_851_13(acc),
            [97, 108, 115, 116, 97, 104, 97, 117, 103] => lookup_851_14(acc),
            [97, 108, 116, 97] => lookup_851_15(acc),
            [97, 108, 118, 100, 97, 108] => lookup_851_16(acc),
            [97, 109, 108, 105] => lookup_851_17(acc),
            [97, 109, 111, 116] => lookup_851_18(acc),
            [97, 110, 100, 97, 115, 117, 111, 108, 111] => lookup_851_19(acc),
            [97, 110, 100, 101, 98, 117] => lookup_851_20(acc),
            [97, 110, 100, 111, 121] => lookup_851_21(acc),
            [97, 110, 100, 195, 184, 121] => lookup_851_22(acc),
            [97, 114, 100, 97, 108] => lookup_851_23(acc),
            [97, 114, 101, 109, 97, 114, 107] => lookup_851_24(acc),
            [97, 114, 101, 110, 100, 97, 108] => lookup_851_25(acc),
            [97, 114, 110, 97] => lookup_851_26(acc),
            [97, 115, 101, 114, 97, 108] => lookup_851_27(acc),
            [97, 115, 107, 101, 114] => lookup_851_28(acc),
            [97, 115, 107, 105, 109] => lookup_851_29(acc),
            [97, 115, 107, 111, 121] => lookup_851_30(acc),
            [97, 115, 107, 118, 111, 108, 108] => lookup_851_31(acc),
            [97, 115, 107, 195, 184, 121] => lookup_851_32(acc),
            [97, 115, 110, 101, 115] => lookup_851_33(acc),
            [97, 117, 100, 110, 101, 100, 97, 108, 110] => lookup_851_34(acc),
            [97, 117, 107, 114, 97] => lookup_851_35(acc),
            [97, 117, 114, 101] => lookup_851_36(acc),
            [97, 117, 114, 108, 97, 110, 100] => lookup_851_37(acc),
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 111, 108, 97, 110, 100] => {
                lookup_851_38(acc)
            }
            [97, 117, 114, 115, 107, 111, 103, 45, 104, 195, 184, 108, 97, 110, 100] => {
                lookup_851_39(acc)
            }
            [97, 117, 115, 116, 101, 118, 111, 108, 108] => lookup_851_40(acc),
            [97, 117, 115, 116, 114, 104, 101, 105, 109] => lookup_851_41(acc),
            [97, 118, 101, 114, 111, 121] => lookup_851_42(acc),
            [97, 118, 101, 114, 195, 184, 121] => lookup_851_43(acc),
            [98, 97, 100, 97, 100, 100, 106, 97] => lookup_851_44(acc),
            [98, 97, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_851_45(acc),
            [98, 97, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_851_46(acc),
            [98, 97, 105, 100, 97, 114] => lookup_851_47(acc),
            [98, 97, 106, 100, 100, 97, 114] => lookup_851_48(acc),
            [98, 97, 108, 97, 116] => lookup_851_49(acc),
            [98, 97, 108, 101, 115, 116, 114, 97, 110, 100] => lookup_851_50(acc),
            [98, 97, 108, 108, 97, 110, 103, 101, 110] => lookup_851_51(acc),
            [98, 97, 108, 115, 102, 106, 111, 114, 100] => lookup_851_52(acc),
            [98, 97, 109, 98, 108, 101] => lookup_851_53(acc),
            [98, 97, 114, 100, 117] => lookup_851_54(acc),
            [98, 97, 114, 117, 109] => lookup_851_55(acc),
            [98, 97, 116, 115, 102, 106, 111, 114, 100] => lookup_851_56(acc),
            [98, 101, 97, 114, 97, 108, 118, 97, 104, 107, 105] => lookup_851_57(acc),
            [98, 101, 97, 114, 97, 108, 118, 195, 161, 104, 107, 105] => lookup_851_58(acc),
            [98, 101, 97, 114, 100, 117] => lookup_851_59(acc),
            [98, 101, 105, 97, 114, 110] => lookup_851_60(acc),
            [98, 101, 114, 103] => lookup_851_61(acc),
            [98, 101, 114, 103, 101, 110] => lookup_851_62(acc),
            [98, 101, 114, 108, 101, 118, 97, 103] => lookup_851_63(acc),
            [98, 101, 114, 108, 101, 118, 195, 165, 103] => lookup_851_64(acc),
            [98, 105, 101, 118, 97, 116] => lookup_851_65(acc),
            [98, 105, 101, 118, 195, 161, 116] => lookup_851_66(acc),
            [98, 105, 110, 100, 97, 108] => lookup_851_67(acc),
            [98, 105, 114, 107, 101, 110, 101, 115] => lookup_851_68(acc),
            [98, 106, 97, 114, 107, 111, 121] => lookup_851_69(acc),
            [98, 106, 97, 114, 107, 195, 184, 121] => lookup_851_70(acc),
            [98, 106, 101, 114, 107, 114, 101, 105, 109] => lookup_851_71(acc),
            [98, 106, 117, 103, 110] => lookup_851_72(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_851_73(acc),
            [98, 111, 100, 111] => lookup_851_74(acc),
            [98, 111, 100, 195, 184] => lookup_851_75(acc),
            [98, 111, 107, 110] => lookup_851_76(acc),
            [98, 111, 109, 108, 111] => lookup_851_77(acc),
            [98, 114, 101, 109, 97, 110, 103, 101, 114] => lookup_851_78(acc),
            [98, 114, 111, 110, 110, 111, 121] => lookup_851_79(acc),
            [98, 114, 111, 110, 110, 111, 121, 115, 117, 110, 100] => lookup_851_80(acc),
            [98, 114, 117, 109, 117, 110, 100, 100, 97, 108] => lookup_851_81(acc),
            [98, 114, 121, 110, 101] => lookup_851_82(acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121] => lookup_851_83(acc),
            [98, 114, 195, 184, 110, 110, 195, 184, 121, 115, 117, 110, 100] => lookup_851_84(acc),
            [98, 117] => lookup_851_85(labels, acc),
            [98, 117, 100, 101, 106, 106, 117] => lookup_851_86(acc),
            [98, 117, 115, 107, 101, 114, 117, 100] => lookup_851_87(info, labels, acc),
            [98, 121, 103, 108, 97, 110, 100] => lookup_851_88(acc),
            [98, 121, 107, 108, 101] => lookup_851_89(acc),
            [98, 195, 161, 104, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_851_90(acc),
            [98, 195, 161, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97] => lookup_851_91(acc),
            [98, 195, 161, 105, 100, 195, 161, 114] => lookup_851_92(acc),
            [98, 195, 161, 106, 100, 100, 97, 114] => lookup_851_93(acc),
            [98, 195, 161, 108, 195, 161, 116] => lookup_851_94(acc),
            [98, 195, 165, 100, 195, 165, 100, 100, 106, 195, 165] => lookup_851_95(acc),
            [98, 195, 165, 116, 115, 102, 106, 111, 114, 100] => lookup_851_96(acc),
            [98, 195, 166, 114, 117, 109] => lookup_851_97(acc),
            [98, 195, 184, 109, 108, 111] => lookup_851_98(acc),
            [99, 97, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_851_99(acc),
            [99, 111] => lookup_851_100(acc),
            [100, 97, 118, 118, 101, 110, 106, 97, 114, 103, 97] => lookup_851_101(acc),
            [100, 97, 118, 118, 101, 110, 106, 195, 161, 114, 103, 97] => lookup_851_102(acc),
            [100, 97, 118, 118, 101, 115, 105, 105, 100, 97] => lookup_851_103(acc),
            [100, 101, 97, 116, 110, 117] => lookup_851_104(acc),
            [100, 101, 112] => lookup_851_105(acc),
            [100, 105, 101, 108, 100, 100, 97, 110, 117, 111, 114, 114, 105] => lookup_851_106(acc),
            [100, 105, 118, 116, 97, 115, 118, 117, 111, 100, 110, 97] => lookup_851_107(acc),
            [100, 105, 118, 116, 116, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_851_108(acc),
            [100, 111, 110, 110, 97] => lookup_851_109(acc),
            [100, 111, 118, 114, 101] => lookup_851_110(acc),
            [100, 114, 97, 109, 109, 101, 110] => lookup_851_111(acc),
            [100, 114, 97, 110, 103, 101, 100, 97, 108] => lookup_851_112(acc),
            [100, 114, 111, 98, 97, 107] => lookup_851_113(acc),
            [100, 114, 195, 184, 98, 97, 107] => lookup_851_114(acc),
            [100, 121, 114, 111, 121] => lookup_851_115(acc),
            [100, 121, 114, 195, 184, 121] => lookup_851_116(acc),
            [100, 195, 184, 110, 110, 97] => lookup_851_117(acc),
            [101, 103, 101, 114, 115, 117, 110, 100] => lookup_851_118(acc),
            [101, 105, 100] => lookup_851_119(acc),
            [101, 105, 100, 102, 106, 111, 114, 100] => lookup_851_120(acc),
            [101, 105, 100, 115, 98, 101, 114, 103] => lookup_851_121(acc),
            [101, 105, 100, 115, 107, 111, 103] => lookup_851_122(acc),
            [101, 105, 100, 115, 118, 111, 108, 108] => lookup_851_123(acc),
            [101, 105, 103, 101, 114, 115, 117, 110, 100] => lookup_851_124(acc),
            [101, 108, 118, 101, 114, 117, 109] => lookup_851_125(acc),
            [101, 110, 101, 98, 97, 107, 107] => lookup_851_126(acc),
            [101, 110, 103, 101, 114, 100, 97, 108] => lookup_851_127(acc),
            [101, 116, 110, 101] => lookup_851_128(acc),
            [101, 116, 110, 101, 100, 97, 108] => lookup_851_129(acc),
            [101, 118, 101, 110, 97, 115, 115, 105] => lookup_851_130(acc),
            [101, 118, 101, 110, 101, 115] => lookup_851_131(acc),
            [101, 118, 101, 110, 195, 161, 197, 161, 197, 161, 105] => lookup_851_132(acc),
            [101, 118, 106, 101, 45, 111, 103, 45, 104, 111, 114, 110, 110, 101, 115] => {
                lookup_851_133(acc)
            }
            [102, 97, 114, 115, 117, 110, 100] => lookup_851_134(acc),
            [102, 97, 117, 115, 107, 101] => lookup_851_135(acc),
            [102, 101, 100, 106, 101] => lookup_851_136(acc),
            [102, 101, 116] => lookup_851_137(acc),
            [102, 101, 116, 115, 117, 110, 100] => lookup_851_138(acc),
            [102, 104, 115] => lookup_851_139(acc),
            [102, 105, 110, 110, 111, 121] => lookup_851_140(acc),
            [102, 105, 110, 110, 195, 184, 121] => lookup_851_141(acc),
            [102, 105, 116, 106, 97, 114] => lookup_851_142(acc),
            [102, 106, 97, 108, 101, 114] => lookup_851_143(acc),
            [102, 106, 101, 108, 108] => lookup_851_144(acc),
            [102, 108, 97] => lookup_851_145(acc),
            [102, 108, 97, 107, 115, 116, 97, 100] => lookup_851_146(acc),
            [102, 108, 97, 116, 97, 110, 103, 101, 114] => lookup_851_147(acc),
            [102, 108, 101, 107, 107, 101, 102, 106, 111, 114, 100] => lookup_851_148(acc),
            [102, 108, 101, 115, 98, 101, 114, 103] => lookup_851_149(acc),
            [102, 108, 111, 114, 97] => lookup_851_150(acc),
            [102, 108, 111, 114, 111] => lookup_851_151(acc),
            [102, 108, 111, 114, 195, 184] => lookup_851_152(acc),
            [102, 108, 195, 165] => lookup_851_153(acc),
            [102, 109] => lookup_851_154(labels, acc),
            [102, 111, 108, 107, 101, 98, 105, 98, 108] => lookup_851_155(acc),
            [102, 111, 108, 108, 100, 97, 108] => lookup_851_156(acc),
            [102, 111, 114, 100, 101] => lookup_851_157(acc),
            [102, 111, 114, 115, 97, 110, 100] => lookup_851_158(acc),
            [102, 111, 115, 110, 101, 115] => lookup_851_159(acc),
            [102, 114, 97, 110, 97] => lookup_851_160(acc),
            [102, 114, 101, 100, 114, 105, 107, 115, 116, 97, 100] => lookup_851_161(acc),
            [102, 114, 101, 105] => lookup_851_162(acc),
            [102, 114, 111, 103, 110] => lookup_851_163(acc),
            [102, 114, 111, 108, 97, 110, 100] => lookup_851_164(acc),
            [102, 114, 111, 115, 116, 97] => lookup_851_165(acc),
            [102, 114, 111, 121, 97] => lookup_851_166(acc),
            [102, 114, 195, 166, 110, 97] => lookup_851_167(acc),
            [102, 114, 195, 184, 121, 97] => lookup_851_168(acc),
            [102, 117, 111, 105, 115, 107, 117] => lookup_851_169(acc),
            [102, 117, 111, 115, 115, 107, 111] => lookup_851_170(acc),
            [102, 117, 115, 97] => lookup_851_171(acc),
            [102, 121, 108, 107, 101, 115, 98, 105, 98, 108] => lookup_851_172(acc),
            [102, 121, 114, 101, 115, 100, 97, 108] => lookup_851_173(acc),
            [102, 195, 184, 114, 100, 101] => lookup_851_174(acc),
            [103, 97, 105, 118, 117, 111, 116, 110, 97] => lookup_851_175(acc),
            [103, 97, 108, 115, 97] => lookup_851_176(acc),
            [103, 97, 109, 118, 105, 107] => lookup_851_177(acc),
            [103, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_851_178(acc),
            [103, 97, 117, 108, 97, 114] => lookup_851_179(acc),
            [103, 97, 117, 115, 100, 97, 108] => lookup_851_180(acc),
            [103, 105, 101, 104, 116, 97, 118, 117, 111, 97, 116, 110, 97] => lookup_851_181(acc),
            [103, 105, 108, 100, 101, 115, 107, 97, 108] => lookup_851_182(acc),
            [103, 105, 108, 100, 101, 115, 107, 195, 165, 108] => lookup_851_183(acc),
            [103, 105, 115, 107, 101] => lookup_851_184(acc),
            [103, 106, 101, 109, 110, 101, 115] => lookup_851_185(acc),
            [103, 106, 101, 114, 100, 114, 117, 109] => lookup_851_186(acc),
            [103, 106, 101, 114, 115, 116, 97, 100] => lookup_851_187(acc),
            [103, 106, 101, 115, 100, 97, 108] => lookup_851_188(acc),
            [103, 106, 111, 118, 105, 107] => lookup_851_189(acc),
            [103, 106, 195, 184, 118, 105, 107] => lookup_851_190(acc),
            [103, 108, 111, 112, 112, 101, 110] => lookup_851_191(acc),
            [103, 111, 108] => lookup_851_192(acc),
            [103, 114, 97, 110] => lookup_851_193(acc),
            [103, 114, 97, 110, 101] => lookup_851_194(acc),
            [103, 114, 97, 110, 118, 105, 110] => lookup_851_195(acc),
            [103, 114, 97, 116, 97, 110, 103, 101, 110] => lookup_851_196(acc),
            [103, 114, 105, 109, 115, 116, 97, 100] => lookup_851_197(acc),
            [103, 114, 111, 110, 103] => lookup_851_198(acc),
            [103, 114, 117, 101] => lookup_851_199(acc),
            [103, 117, 108, 101, 110] => lookup_851_200(acc),
            [103, 117, 111, 118, 100, 97, 103, 101, 97, 105, 100, 110, 117] => lookup_851_201(acc),
            [103, 195, 161, 105, 118, 117, 111, 116, 110, 97] => lookup_851_202(acc),
            [103, 195, 161, 108, 115, 195, 161] => lookup_851_203(acc),
            [103, 195, 161, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_851_204(acc),
            [104, 97] => lookup_851_205(acc),
            [104, 97, 98, 109, 101, 114] => lookup_851_206(acc),
            [104, 97, 100, 115, 101, 108] => lookup_851_207(acc),
            [104, 97, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_851_208(acc),
            [104, 97, 108, 100, 101, 110] => lookup_851_209(acc),
            [104, 97, 108, 115, 97] => lookup_851_210(acc),
            [104, 97, 109, 97, 114] => lookup_851_211(acc),
            [104, 97, 109, 97, 114, 111, 121] => lookup_851_212(acc),
            [104, 97, 109, 109, 97, 114, 102, 101, 97, 115, 116, 97] => lookup_851_213(acc),
            [104, 97, 109, 109, 101, 114, 102, 101, 115, 116] => lookup_851_214(acc),
            [104, 97, 112, 109, 105, 114] => lookup_851_215(acc),
            [104, 97, 114, 97, 109] => lookup_851_216(acc),
            [104, 97, 114, 101, 105, 100] => lookup_851_217(acc),
            [104, 97, 114, 115, 116, 97, 100] => lookup_851_218(acc),
            [104, 97, 115, 118, 105, 107] => lookup_851_219(acc),
            [104, 97, 116, 116, 102, 106, 101, 108, 108, 100, 97, 108] => lookup_851_220(acc),
            [104, 97, 117, 103, 101, 115, 117, 110, 100] => lookup_851_221(acc),
            [104, 101, 100, 109, 97, 114, 107] => lookup_851_222(info, labels, acc),
            [104, 101, 109, 110, 101] => lookup_851_223(acc),
            [104, 101, 109, 110, 101, 115] => lookup_851_224(acc),
            [104, 101, 109, 115, 101, 100, 97, 108] => lookup_851_225(acc),
            [104, 101, 114, 97, 100] => lookup_851_226(acc),
            [104, 105, 116, 114, 97] => lookup_851_227(acc),
            [104, 106, 97, 114, 116, 100, 97, 108] => lookup_851_228(acc),
            [104, 106, 101, 108, 109, 101, 108, 97, 110, 100] => lookup_851_229(acc),
            [104, 108] => lookup_851_230(labels, acc),
            [104, 109] => lookup_851_231(labels, acc),
            [104, 111, 98, 111, 108] => lookup_851_232(acc),
            [104, 111, 98, 195, 184, 108] => lookup_851_233(acc),
            [104, 111, 102] => lookup_851_234(acc),
            [104, 111, 107, 107, 115, 117, 110, 100] => lookup_851_235(acc),
            [104, 111, 108] => lookup_851_236(acc),
            [104, 111, 108, 101] => lookup_851_237(acc),
            [104, 111, 108, 109, 101, 115, 116, 114, 97, 110, 100] => lookup_851_238(acc),
            [104, 111, 108, 116, 97, 108, 101, 110] => lookup_851_239(acc),
            [104, 111, 108, 116, 195, 165, 108, 101, 110] => lookup_851_240(acc),
            [104, 111, 110, 101, 102, 111, 115, 115] => lookup_851_241(acc),
            [104, 111, 114, 100, 97, 108, 97, 110, 100] => lookup_851_242(info, labels, acc),
            [104, 111, 114, 110, 105, 110, 100, 97, 108] => lookup_851_243(acc),
            [104, 111, 114, 116, 101, 110] => lookup_851_244(acc),
            [104, 111, 121, 97, 110, 103, 101, 114] => lookup_851_245(acc),
            [104, 111, 121, 108, 97, 110, 100, 101, 116] => lookup_851_246(acc),
            [104, 117, 114, 100, 97, 108] => lookup_851_247(acc),
            [104, 117, 114, 117, 109] => lookup_851_248(acc),
            [104, 118, 97, 108, 101, 114] => lookup_851_249(acc),
            [104, 121, 108, 108, 101, 115, 116, 97, 100] => lookup_851_250(acc),
            [104, 195, 161, 98, 109, 101, 114] => lookup_851_251(acc),
            [104, 195, 161, 109, 109, 195, 161, 114, 102, 101, 97, 115, 116, 97] => {
                lookup_851_252(acc)
            }
            [104, 195, 161, 112, 109, 105, 114] => lookup_851_253(acc),
            [104, 195, 165] => lookup_851_254(acc),
            [104, 195, 166, 103, 101, 98, 111, 115, 116, 97, 100] => lookup_851_255(acc),
            [104, 195, 184, 110, 101, 102, 111, 115, 115] => lookup_851_256(acc),
            [104, 195, 184, 121, 97, 110, 103, 101, 114] => lookup_851_257(acc),
            [104, 195, 184, 121, 108, 97, 110, 100, 101, 116] => lookup_851_258(acc),
            [105, 98, 101, 115, 116, 97, 100] => lookup_851_259(acc),
            [105, 100, 114, 101, 116, 116] => lookup_851_260(acc),
            [105, 110, 100, 101, 114, 111, 121] => lookup_851_261(acc),
            [105, 110, 100, 101, 114, 195, 184, 121] => lookup_851_262(acc),
            [105, 118, 101, 108, 97, 110, 100] => lookup_851_263(acc),
            [105, 118, 103, 117] => lookup_851_264(acc),
            [106, 97, 110, 45, 109, 97, 121, 101, 110] => lookup_851_265(labels, acc),
            [106, 101, 115, 115, 104, 101, 105, 109] => lookup_851_266(acc),
            [106, 101, 118, 110, 97, 107, 101, 114] => lookup_851_267(acc),
            [106, 111, 108, 115, 116, 101, 114] => lookup_851_268(acc),
            [106, 111, 110, 100, 97, 108] => lookup_851_269(acc),
            [106, 111, 114, 112, 101, 108, 97, 110, 100] => lookup_851_270(acc),
            [106, 195, 184, 108, 115, 116, 101, 114] => lookup_851_271(acc),
            [106, 195, 184, 114, 112, 101, 108, 97, 110, 100] => lookup_851_272(acc),
            [107, 97, 102, 106, 111, 114, 100] => lookup_851_273(acc),
            [107, 97, 114, 97, 115, 106, 111, 104, 107, 97] => lookup_851_274(acc),
            [107, 97, 114, 97, 115, 106, 111, 107] => lookup_851_275(acc),
            [107, 97, 114, 108, 115, 111, 121] => lookup_851_276(acc),
            [107, 97, 114, 109, 111, 121] => lookup_851_277(acc),
            [107, 97, 114, 109, 195, 184, 121] => lookup_851_278(acc),
            [107, 97, 117, 116, 111, 107, 101, 105, 110, 111] => lookup_851_279(acc),
            [107, 105, 114, 107, 101, 110, 101, 115] => lookup_851_280(acc),
            [107, 108, 97, 98, 117] => lookup_851_281(acc),
            [107, 108, 101, 112, 112] => lookup_851_282(acc),
            [107, 108, 195, 166, 98, 117] => lookup_851_283(acc),
            [107, 111, 109, 109, 117, 110, 101] => lookup_851_284(acc),
            [107, 111, 110, 103, 115, 98, 101, 114, 103] => lookup_851_285(acc),
            [107, 111, 110, 103, 115, 118, 105, 110, 103, 101, 114] => lookup_851_286(acc),
            [107, 111, 112, 101, 114, 118, 105, 107] => lookup_851_287(acc),
            [107, 114, 97, 97, 110, 103, 104, 107, 101] => lookup_851_288(acc),
            [107, 114, 97, 103, 101, 114, 111] => lookup_851_289(acc),
            [107, 114, 97, 103, 101, 114, 195, 184] => lookup_851_290(acc),
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 97, 110, 100] => lookup_851_291(acc),
            [107, 114, 105, 115, 116, 105, 97, 110, 115, 117, 110, 100] => lookup_851_292(acc),
            [107, 114, 111, 100, 115, 104, 101, 114, 97, 100] => lookup_851_293(acc),
            [107, 114, 111, 107, 115, 116, 97, 100, 101, 108, 118, 97] => lookup_851_294(acc),
            [107, 114, 195, 165, 97, 110, 103, 104, 107, 101] => lookup_851_295(acc),
            [107, 114, 195, 184, 100, 115, 104, 101, 114, 97, 100] => lookup_851_296(acc),
            [107, 118, 97, 102, 106, 111, 114, 100] => lookup_851_297(acc),
            [107, 118, 97, 108, 115, 117, 110, 100] => lookup_851_298(acc),
            [107, 118, 97, 109] => lookup_851_299(acc),
            [107, 118, 97, 110, 97, 110, 103, 101, 110] => lookup_851_300(acc),
            [107, 118, 105, 110, 101, 115, 100, 97, 108] => lookup_851_301(acc),
            [107, 118, 105, 110, 110, 104, 101, 114, 97, 100] => lookup_851_302(acc),
            [107, 118, 105, 116, 101, 115, 101, 105, 100] => lookup_851_303(acc),
            [107, 118, 105, 116, 115, 111, 121] => lookup_851_304(acc),
            [107, 118, 105, 116, 115, 195, 184, 121] => lookup_851_305(acc),
            [107, 118, 195, 166, 102, 106, 111, 114, 100] => lookup_851_306(acc),
            [107, 118, 195, 166, 110, 97, 110, 103, 101, 110] => lookup_851_307(acc),
            [107, 195, 161, 114, 195, 161, 197, 161, 106, 111, 104, 107, 97] => lookup_851_308(acc),
            [107, 195, 165, 102, 106, 111, 114, 100] => lookup_851_309(acc),
            [108, 97, 97, 107, 101, 115, 118, 117, 101, 109, 105, 101] => lookup_851_310(acc),
            [108, 97, 104, 112, 112, 105] => lookup_851_311(acc),
            [108, 97, 110, 103, 101, 118, 97, 103] => lookup_851_312(acc),
            [108, 97, 110, 103, 101, 118, 195, 165, 103] => lookup_851_313(acc),
            [108, 97, 114, 100, 97, 108] => lookup_851_314(acc),
            [108, 97, 114, 118, 105, 107] => lookup_851_315(acc),
            [108, 97, 118, 97, 103, 105, 115] => lookup_851_316(acc),
            [108, 97, 118, 97, 110, 103, 101, 110] => lookup_851_317(acc),
            [108, 101, 97, 110, 103, 97, 118, 105, 105, 107, 97] => lookup_851_318(acc),
            [108, 101, 97, 197, 139, 103, 97, 118, 105, 105, 107, 97] => lookup_851_319(acc),
            [108, 101, 98, 101, 115, 98, 121] => lookup_851_320(acc),
            [108, 101, 105, 107, 97, 110, 103, 101, 114] => lookup_851_321(acc),
            [108, 101, 105, 114, 102, 106, 111, 114, 100] => lookup_851_322(acc),
            [108, 101, 105, 114, 118, 105, 107] => lookup_851_323(acc),
            [108, 101, 107, 97] => lookup_851_324(acc),
            [108, 101, 107, 115, 118, 105, 107] => lookup_851_325(acc),
            [108, 101, 110, 118, 105, 107] => lookup_851_326(acc),
            [108, 101, 114, 100, 97, 108] => lookup_851_327(acc),
            [108, 101, 115, 106, 97] => lookup_851_328(acc),
            [108, 101, 118, 97, 110, 103, 101, 114] => lookup_851_329(acc),
            [108, 105, 101, 114] => lookup_851_330(acc),
            [108, 105, 101, 114, 110, 101] => lookup_851_331(acc),
            [108, 105, 108, 108, 101, 104, 97, 109, 109, 101, 114] => lookup_851_332(acc),
            [108, 105, 108, 108, 101, 115, 97, 110, 100] => lookup_851_333(acc),
            [108, 105, 110, 100, 97, 115] => lookup_851_334(acc),
            [108, 105, 110, 100, 101, 115, 110, 101, 115] => lookup_851_335(acc),
            [108, 105, 110, 100, 195, 165, 115] => lookup_851_336(acc),
            [108, 111, 97, 98, 97, 116] => lookup_851_337(acc),
            [108, 111, 97, 98, 195, 161, 116] => lookup_851_338(acc),
            [108, 111, 100, 105, 110, 103, 101, 110] => lookup_851_339(acc),
            [108, 111, 109] => lookup_851_340(acc),
            [108, 111, 112, 112, 97] => lookup_851_341(acc),
            [108, 111, 114, 101, 110, 115, 107, 111, 103] => lookup_851_342(acc),
            [108, 111, 116, 101, 110] => lookup_851_343(acc),
            [108, 117, 110, 100] => lookup_851_344(acc),
            [108, 117, 110, 110, 101, 114] => lookup_851_345(acc),
            [108, 117, 114, 111, 121] => lookup_851_346(acc),
            [108, 117, 114, 195, 184, 121] => lookup_851_347(acc),
            [108, 117, 115, 116, 101, 114] => lookup_851_348(acc),
            [108, 121, 110, 103, 100, 97, 108] => lookup_851_349(acc),
            [108, 121, 110, 103, 101, 110] => lookup_851_350(acc),
            [108, 195, 161, 104, 112, 112, 105] => lookup_851_351(acc),
            [108, 195, 166, 114, 100, 97, 108] => lookup_851_352(acc),
            [108, 195, 184, 100, 105, 110, 103, 101, 110] => lookup_851_353(acc),
            [108, 195, 184, 114, 101, 110, 115, 107, 111, 103] => lookup_851_354(acc),
            [108, 195, 184, 116, 101, 110] => lookup_851_355(acc),
            [109, 97, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_851_356(acc),
            [109, 97, 108, 115, 101, 108, 118] => lookup_851_357(acc),
            [109, 97, 108, 118, 105, 107] => lookup_851_358(acc),
            [109, 97, 110, 100, 97, 108] => lookup_851_359(acc),
            [109, 97, 114, 107, 101, 114] => lookup_851_360(acc),
            [109, 97, 114, 110, 97, 114, 100, 97, 108] => lookup_851_361(acc),
            [109, 97, 115, 102, 106, 111, 114, 100, 101, 110] => lookup_851_362(acc),
            [109, 97, 115, 111, 121] => lookup_851_363(acc),
            [109, 97, 116, 116, 97, 45, 118, 97, 114, 106, 106, 97, 116] => lookup_851_364(acc),
            [109, 101, 108, 97, 110, 100] => lookup_851_365(acc),
            [109, 101, 108, 100, 97, 108] => lookup_851_366(acc),
            [109, 101, 108, 104, 117, 115] => lookup_851_367(acc),
            [109, 101, 108, 111, 121] => lookup_851_368(acc),
            [109, 101, 108, 195, 184, 121] => lookup_851_369(acc),
            [109, 101, 114, 97, 107, 101, 114] => lookup_851_370(acc),
            [109, 101, 114, 195, 165, 107, 101, 114] => lookup_851_371(acc),
            [109, 105, 100, 115, 117, 110, 100] => lookup_851_372(acc),
            [109, 105, 100, 116, 114, 101, 45, 103, 97, 117, 108, 100, 97, 108] => {
                lookup_851_373(acc)
            }
            [109, 105, 108] => lookup_851_374(acc),
            [109, 106, 111, 110, 100, 97, 108, 101, 110] => lookup_851_375(acc),
            [109, 106, 195, 184, 110, 100, 97, 108, 101, 110] => lookup_851_376(acc),
            [109, 111, 45, 105, 45, 114, 97, 110, 97] => lookup_851_377(acc),
            [109, 111, 97, 114, 101, 107, 101] => lookup_851_378(acc),
            [109, 111, 100, 97, 108, 101, 110] => lookup_851_379(acc),
            [109, 111, 100, 117, 109] => lookup_851_380(acc),
            [109, 111, 108, 100, 101] => lookup_851_381(acc),
            [109, 111, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_851_382(info, labels, acc)
            }
            [109, 111, 115, 106, 111, 101, 110] => lookup_851_383(acc),
            [109, 111, 115, 106, 195, 184, 101, 110] => lookup_851_384(acc),
            [109, 111, 115, 107, 101, 110, 101, 115] => lookup_851_385(acc),
            [109, 111, 115, 115] => lookup_851_386(acc),
            [109, 111, 115, 118, 105, 107] => lookup_851_387(acc),
            [109, 111, 195, 165, 114, 101, 107, 101] => lookup_851_388(acc),
            [109, 114] => lookup_851_389(labels, acc),
            [109, 117, 111, 115, 97, 116] => lookup_851_390(acc),
            [109, 117, 111, 115, 195, 161, 116] => lookup_851_391(acc),
            [109, 117, 115, 101, 117, 109] => lookup_851_392(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_851_393(acc),
            [109, 195, 161, 108, 97, 116, 118, 117, 111, 112, 109, 105] => lookup_851_394(acc),
            [109, 195, 161, 116, 116, 97, 45, 118, 195, 161, 114, 106, 106, 97, 116] => {
                lookup_851_395(acc)
            }
            [109, 195, 165, 108, 115, 101, 108, 118] => lookup_851_396(acc),
            [109, 195, 165, 115, 195, 184, 121] => lookup_851_397(acc),
            [109, 195, 184, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108] => {
                lookup_851_398(info, labels, acc)
            }
            [110, 97, 97, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_851_399(acc)
            }
            [110, 97, 109, 100, 97, 108, 115, 101, 105, 100] => lookup_851_400(acc),
            [110, 97, 109, 115, 111, 115] => lookup_851_401(acc),
            [110, 97, 109, 115, 115, 107, 111, 103, 97, 110] => lookup_851_402(acc),
            [110, 97, 110, 110, 101, 115, 116, 97, 100] => lookup_851_403(acc),
            [110, 97, 114, 111, 121] => lookup_851_404(acc),
            [110, 97, 114, 118, 105, 105, 107, 97] => lookup_851_405(acc),
            [110, 97, 114, 118, 105, 107] => lookup_851_406(acc),
            [110, 97, 117, 115, 116, 100, 97, 108] => lookup_851_407(acc),
            [110, 97, 118, 117, 111, 116, 110, 97] => lookup_851_408(acc),
            [110, 101, 100, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_851_409(acc),
            [110, 101, 115, 110, 97] => lookup_851_410(acc),
            [110, 101, 115, 111, 100, 100, 101, 110] => lookup_851_411(acc),
            [110, 101, 115, 111, 100, 100, 116, 97, 110, 103, 101, 110] => lookup_851_412(acc),
            [110, 101, 115, 115, 101, 98, 121] => lookup_851_413(acc),
            [110, 101, 115, 115, 101, 116] => lookup_851_414(acc),
            [110, 105, 115, 115, 101, 100, 97, 108] => lookup_851_415(acc),
            [110, 105, 116, 116, 101, 100, 97, 108] => lookup_851_416(acc),
            [110, 108] => lookup_851_417(labels, acc),
            [110, 111, 114, 100, 45, 97, 117, 114, 100, 97, 108] => lookup_851_418(acc),
            [110, 111, 114, 100, 45, 102, 114, 111, 110] => lookup_851_419(acc),
            [110, 111, 114, 100, 45, 111, 100, 97, 108] => lookup_851_420(acc),
            [110, 111, 114, 100, 100, 97, 108] => lookup_851_421(acc),
            [110, 111, 114, 100, 107, 97, 112, 112] => lookup_851_422(acc),
            [110, 111, 114, 100, 108, 97, 110, 100] => lookup_851_423(info, labels, acc),
            [110, 111, 114, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_851_424(acc),
            [110, 111, 114, 100, 114, 101, 105, 115, 97] => lookup_851_425(acc),
            [110, 111, 114, 101, 45, 111, 103, 45, 117, 118, 100, 97, 108] => lookup_851_426(acc),
            [110, 111, 116, 111, 100, 100, 101, 110] => lookup_851_427(acc),
            [110, 111, 116, 116, 101, 114, 111, 121] => lookup_851_428(acc),
            [110, 116] => lookup_851_429(labels, acc),
            [110, 195, 161, 118, 117, 111, 116, 110, 97] => lookup_851_430(acc),
            [110, 195, 165, 195, 165, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101] => {
                lookup_851_431(acc)
            }
            [110, 195, 166, 114, 195, 184, 121] => lookup_851_432(acc),
            [110, 195, 184, 116, 116, 101, 114, 195, 184, 121] => lookup_851_433(acc),
            [111, 100, 100, 97] => lookup_851_434(acc),
            [111, 102] => lookup_851_435(labels, acc),
            [111, 107, 115, 110, 101, 115] => lookup_851_436(acc),
            [111, 108] => lookup_851_437(labels, acc),
            [111, 109, 97, 115, 118, 117, 111, 116, 110, 97] => lookup_851_438(acc),
            [111, 112, 112, 100, 97, 108] => lookup_851_439(acc),
            [111, 112, 112, 101, 103, 97, 114, 100] => lookup_851_440(acc),
            [111, 112, 112, 101, 103, 195, 165, 114, 100] => lookup_851_441(acc),
            [111, 114, 107, 97, 110, 103, 101, 114] => lookup_851_442(acc),
            [111, 114, 107, 100, 97, 108] => lookup_851_443(acc),
            [111, 114, 108, 97, 110, 100] => lookup_851_444(acc),
            [111, 114, 115, 107, 111, 103] => lookup_851_445(acc),
            [111, 114, 115, 116, 97] => lookup_851_446(acc),
            [111, 115, 101, 110] => lookup_851_447(acc),
            [111, 115, 108, 111] => lookup_851_448(labels, acc),
            [111, 115, 111, 121, 114, 111] => lookup_851_449(acc),
            [111, 115, 116, 101, 114, 111, 121] => lookup_851_450(acc),
            [111, 115, 116, 101, 114, 195, 184, 121] => lookup_851_451(acc),
            [111, 115, 116, 102, 111, 108, 100] => lookup_851_452(info, labels, acc),
            [111, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_851_453(acc),
            [111, 115, 195, 184, 121, 114, 111] => lookup_851_454(acc),
            [111, 118, 101, 114, 104, 97, 108, 108, 97] => lookup_851_455(acc),
            [111, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_851_456(acc),
            [111, 121, 101, 114] => lookup_851_457(acc),
            [111, 121, 103, 97, 114, 100, 101, 110] => lookup_851_458(acc),
            [111, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => lookup_851_459(acc),
            [112, 111, 114, 115, 97, 110, 103, 101, 114] => lookup_851_460(acc),
            [112, 111, 114, 115, 97, 110, 103, 117] => lookup_851_461(acc),
            [112, 111, 114, 115, 103, 114, 117, 110, 110] => lookup_851_462(acc),
            [112, 111, 114, 115, 195, 161, 197, 139, 103, 117] => lookup_851_463(acc),
            [112, 114, 105, 118] => lookup_851_464(acc),
            [114, 97, 100, 101] => lookup_851_465(acc),
            [114, 97, 100, 111, 121] => lookup_851_466(acc),
            [114, 97, 100, 195, 184, 121] => lookup_851_467(acc),
            [114, 97, 104, 107, 107, 101, 114, 97, 118, 106, 117] => lookup_851_468(acc),
            [114, 97, 104, 111, 108, 116] => lookup_851_469(acc),
            [114, 97, 105, 115, 97] => lookup_851_470(acc),
            [114, 97, 107, 107, 101, 115, 116, 97, 100] => lookup_851_471(acc),
            [114, 97, 108, 105, 110, 103, 101, 110] => lookup_851_472(acc),
            [114, 97, 110, 97] => lookup_851_473(acc),
            [114, 97, 110, 100, 97, 98, 101, 114, 103] => lookup_851_474(acc),
            [114, 97, 117, 109, 97] => lookup_851_475(acc),
            [114, 101, 110, 100, 97, 108, 101, 110] => lookup_851_476(acc),
            [114, 101, 110, 110, 101, 98, 117] => lookup_851_477(acc),
            [114, 101, 110, 110, 101, 115, 111, 121] => lookup_851_478(acc),
            [114, 101, 110, 110, 101, 115, 195, 184, 121] => lookup_851_479(acc),
            [114, 105, 110, 100, 97, 108] => lookup_851_480(acc),
            [114, 105, 110, 103, 101, 98, 117] => lookup_851_481(acc),
            [114, 105, 110, 103, 101, 114, 105, 107, 101] => lookup_851_482(acc),
            [114, 105, 110, 103, 115, 97, 107, 101, 114] => lookup_851_483(acc),
            [114, 105, 115, 111, 114] => lookup_851_484(acc),
            [114, 105, 115, 115, 97] => lookup_851_485(acc),
            [114, 105, 115, 195, 184, 114] => lookup_851_486(acc),
            [114, 108] => lookup_851_487(labels, acc),
            [114, 111, 97, 110] => lookup_851_488(acc),
            [114, 111, 100, 111, 121] => lookup_851_489(acc),
            [114, 111, 108, 108, 97, 103] => lookup_851_490(acc),
            [114, 111, 109, 115, 97] => lookup_851_491(acc),
            [114, 111, 109, 115, 107, 111, 103] => lookup_851_492(acc),
            [114, 111, 114, 111, 115] => lookup_851_493(acc),
            [114, 111, 115, 116] => lookup_851_494(acc),
            [114, 111, 121, 107, 101, 110] => lookup_851_495(acc),
            [114, 111, 121, 114, 118, 105, 107] => lookup_851_496(acc),
            [114, 117, 111, 118, 97, 116] => lookup_851_497(acc),
            [114, 121, 103, 103, 101] => lookup_851_498(acc),
            [114, 195, 161, 104, 107, 107, 101, 114, 195, 161, 118, 106, 117] => {
                lookup_851_499(acc)
            }
            [114, 195, 161, 105, 115, 97] => lookup_851_500(acc),
            [114, 195, 165, 100, 101] => lookup_851_501(acc),
            [114, 195, 165, 104, 111, 108, 116] => lookup_851_502(acc),
            [114, 195, 166, 108, 105, 110, 103, 101, 110] => lookup_851_503(acc),
            [114, 195, 184, 100, 195, 184, 121] => lookup_851_504(acc),
            [114, 195, 184, 109, 115, 107, 111, 103] => lookup_851_505(acc),
            [114, 195, 184, 114, 111, 115] => lookup_851_506(acc),
            [114, 195, 184, 115, 116] => lookup_851_507(acc),
            [114, 195, 184, 121, 107, 101, 110] => lookup_851_508(acc),
            [114, 195, 184, 121, 114, 118, 105, 107] => lookup_851_509(acc),
            [115, 97, 108, 97, 110, 103, 101, 110] => lookup_851_510(acc),
            [115, 97, 108, 97, 116] => lookup_851_511(acc),
            [115, 97, 108, 116, 100, 97, 108] => lookup_851_512(acc),
            [115, 97, 109, 110, 97, 110, 103, 101, 114] => lookup_851_513(acc),
            [115, 97, 110, 100, 101, 102, 106, 111, 114, 100] => lookup_851_514(acc),
            [115, 97, 110, 100, 110, 101, 115] => lookup_851_515(acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 111, 101, 110] => lookup_851_516(acc),
            [115, 97, 110, 100, 110, 101, 115, 115, 106, 195, 184, 101, 110] => lookup_851_517(acc),
            [115, 97, 110, 100, 111, 121] => lookup_851_518(acc),
            [115, 97, 110, 100, 195, 184, 121] => lookup_851_519(acc),
            [115, 97, 114, 112, 115, 98, 111, 114, 103] => lookup_851_520(acc),
            [115, 97, 117, 100, 97] => lookup_851_521(acc),
            [115, 97, 117, 104, 101, 114, 97, 100] => lookup_851_522(acc),
            [115, 101, 108] => lookup_851_523(acc),
            [115, 101, 108, 98, 117] => lookup_851_524(acc),
            [115, 101, 108, 106, 101] => lookup_851_525(acc),
            [115, 101, 108, 106, 111, 114, 100] => lookup_851_526(acc),
            [115, 102] => lookup_851_527(labels, acc),
            [115, 105, 101, 108, 108, 97, 107] => lookup_851_528(acc),
            [115, 105, 103, 100, 97, 108] => lookup_851_529(acc),
            [115, 105, 108, 106, 97, 110] => lookup_851_530(acc),
            [115, 105, 114, 100, 97, 108] => lookup_851_531(acc),
            [115, 107, 97, 110, 105, 116] => lookup_851_532(acc),
            [115, 107, 97, 110, 108, 97, 110, 100] => lookup_851_533(acc),
            [115, 107, 97, 117, 110] => lookup_851_534(acc),
            [115, 107, 101, 100, 115, 109, 111] => lookup_851_535(acc),
            [115, 107, 101, 100, 115, 109, 111, 107, 111, 114, 115, 101, 116] => {
                lookup_851_536(acc)
            }
            [115, 107, 105] => lookup_851_537(acc),
            [115, 107, 105, 101, 110] => lookup_851_538(acc),
            [115, 107, 105, 101, 114, 118, 97] => lookup_851_539(acc),
            [115, 107, 105, 101, 114, 118, 195, 161] => lookup_851_540(acc),
            [115, 107, 105, 112, 116, 118, 101, 116] => lookup_851_541(acc),
            [115, 107, 106, 97, 107] => lookup_851_542(acc),
            [115, 107, 106, 101, 114, 118, 111, 121] => lookup_851_543(acc),
            [115, 107, 106, 101, 114, 118, 195, 184, 121] => lookup_851_544(acc),
            [115, 107, 106, 195, 165, 107] => lookup_851_545(acc),
            [115, 107, 111, 100, 106, 101] => lookup_851_546(acc),
            [115, 107, 195, 161, 110, 105, 116] => lookup_851_547(acc),
            [115, 107, 195, 165, 110, 108, 97, 110, 100] => lookup_851_548(acc),
            [115, 108, 97, 116, 116, 117, 109] => lookup_851_549(acc),
            [115, 109, 111, 108, 97] => lookup_851_550(acc),
            [115, 109, 195, 184, 108, 97] => lookup_851_551(acc),
            [115, 110, 97, 97, 115, 101] => lookup_851_552(acc),
            [115, 110, 97, 115, 97] => lookup_851_553(acc),
            [115, 110, 105, 108, 108, 102, 106, 111, 114, 100] => lookup_851_554(acc),
            [115, 110, 111, 97, 115, 97] => lookup_851_555(acc),
            [115, 110, 195, 165, 97, 115, 101] => lookup_851_556(acc),
            [115, 110, 195, 165, 115, 97] => lookup_851_557(acc),
            [115, 111, 103, 110, 100, 97, 108] => lookup_851_558(acc),
            [115, 111, 103, 110, 101] => lookup_851_559(acc),
            [115, 111, 107, 110, 100, 97, 108] => lookup_851_560(acc),
            [115, 111, 108, 97] => lookup_851_561(acc),
            [115, 111, 108, 117, 110, 100] => lookup_851_562(acc),
            [115, 111, 109, 110, 97] => lookup_851_563(acc),
            [115, 111, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_851_564(acc),
            [115, 111, 110, 103, 100, 97, 108, 101, 110] => lookup_851_565(acc),
            [115, 111, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_851_566(acc),
            [115, 111, 114, 45, 102, 114, 111, 110] => lookup_851_567(acc),
            [115, 111, 114, 45, 111, 100, 97, 108] => lookup_851_568(acc),
            [115, 111, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_851_569(acc),
            [115, 111, 114, 102, 111, 108, 100] => lookup_851_570(acc),
            [115, 111, 114, 114, 101, 105, 115, 97] => lookup_851_571(acc),
            [115, 111, 114, 116, 108, 97, 110, 100] => lookup_851_572(acc),
            [115, 111, 114, 117, 109] => lookup_851_573(acc),
            [115, 112, 106, 101, 108, 107, 97, 118, 105, 107] => lookup_851_574(acc),
            [115, 112, 121, 100, 101, 98, 101, 114, 103] => lookup_851_575(acc),
            [115, 116] => lookup_851_576(labels, acc),
            [115, 116, 97, 110, 103, 101] => lookup_851_577(acc),
            [115, 116, 97, 116] => lookup_851_578(acc),
            [115, 116, 97, 116, 104, 101, 108, 108, 101] => lookup_851_579(acc),
            [115, 116, 97, 118, 97, 110, 103, 101, 114] => lookup_851_580(acc),
            [115, 116, 97, 118, 101, 114, 110] => lookup_851_581(acc),
            [115, 116, 101, 105, 103, 101, 110] => lookup_851_582(acc),
            [115, 116, 101, 105, 110, 107, 106, 101, 114] => lookup_851_583(acc),
            [115, 116, 106, 111, 114, 100, 97, 108] => lookup_851_584(acc),
            [115, 116, 106, 111, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_851_585(acc)
            }
            [115, 116, 106, 195, 184, 114, 100, 97, 108] => lookup_851_586(acc),
            [115, 116, 106, 195, 184, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110] => {
                lookup_851_587(acc)
            }
            [115, 116, 111, 107, 107, 101] => lookup_851_588(acc),
            [115, 116, 111, 114, 45, 101, 108, 118, 100, 97, 108] => lookup_851_589(acc),
            [115, 116, 111, 114, 100] => lookup_851_590(acc),
            [115, 116, 111, 114, 100, 97, 108] => lookup_851_591(acc),
            [115, 116, 111, 114, 102, 106, 111, 114, 100] => lookup_851_592(acc),
            [115, 116, 114, 97, 110, 100] => lookup_851_593(acc),
            [115, 116, 114, 97, 110, 100, 97] => lookup_851_594(acc),
            [115, 116, 114, 121, 110] => lookup_851_595(acc),
            [115, 117, 108, 97] => lookup_851_596(acc),
            [115, 117, 108, 100, 97, 108] => lookup_851_597(acc),
            [115, 117, 110, 100] => lookup_851_598(acc),
            [115, 117, 110, 110, 100, 97, 108] => lookup_851_599(acc),
            [115, 117, 114, 110, 97, 100, 97, 108] => lookup_851_600(acc),
            [115, 118, 97, 108, 98, 97, 114, 100] => lookup_851_601(labels, acc),
            [115, 118, 101, 105, 111] => lookup_851_602(acc),
            [115, 118, 101, 108, 118, 105, 107] => lookup_851_603(acc),
            [115, 121, 107, 107, 121, 108, 118, 101, 110] => lookup_851_604(acc),
            [115, 195, 161, 108, 97, 116] => lookup_851_605(acc),
            [115, 195, 161, 108, 195, 161, 116] => lookup_851_606(acc),
            [115, 195, 184, 103, 110, 101] => lookup_851_607(acc),
            [115, 195, 184, 109, 110, 97] => lookup_851_608(acc),
            [115, 195, 184, 110, 100, 114, 101, 45, 108, 97, 110, 100] => lookup_851_609(acc),
            [115, 195, 184, 114, 45, 97, 117, 114, 100, 97, 108] => lookup_851_610(acc),
            [115, 195, 184, 114, 45, 102, 114, 111, 110] => lookup_851_611(acc),
            [115, 195, 184, 114, 45, 111, 100, 97, 108] => lookup_851_612(acc),
            [115, 195, 184, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114] => lookup_851_613(acc),
            [115, 195, 184, 114, 102, 111, 108, 100] => lookup_851_614(acc),
            [115, 195, 184, 114, 114, 101, 105, 115, 97] => lookup_851_615(acc),
            [115, 195, 184, 114, 117, 109] => lookup_851_616(acc),
            [116, 97, 110, 97] => lookup_851_617(acc),
            [116, 97, 110, 97, 110, 103, 101, 114] => lookup_851_618(acc),
            [116, 101, 108, 101, 109, 97, 114, 107] => lookup_851_619(info, labels, acc),
            [116, 105, 109, 101] => lookup_851_620(acc),
            [116, 105, 110, 103, 118, 111, 108, 108] => lookup_851_621(acc),
            [116, 105, 110, 110] => lookup_851_622(acc),
            [116, 106, 101, 108, 100, 115, 117, 110, 100] => lookup_851_623(acc),
            [116, 106, 111, 109, 101] => lookup_851_624(acc),
            [116, 106, 195, 184, 109, 101] => lookup_851_625(acc),
            [116, 109] => lookup_851_626(labels, acc),
            [116, 111, 107, 107, 101] => lookup_851_627(acc),
            [116, 111, 108, 103, 97] => lookup_851_628(acc),
            [116, 111, 110, 115, 98, 101, 114, 103] => lookup_851_629(acc),
            [116, 111, 114, 115, 107, 101, 110] => lookup_851_630(acc),
            [116, 114] => lookup_851_631(labels, acc),
            [116, 114, 97, 110, 97] => lookup_851_632(acc),
            [116, 114, 97, 110, 98, 121] => lookup_851_633(acc),
            [116, 114, 97, 110, 111, 121] => lookup_851_634(acc),
            [116, 114, 97, 110, 195, 184, 121] => lookup_851_635(acc),
            [116, 114, 111, 97, 110, 100, 105, 110] => lookup_851_636(acc),
            [116, 114, 111, 103, 115, 116, 97, 100] => lookup_851_637(acc),
            [116, 114, 111, 109, 115, 97] => lookup_851_638(acc),
            [116, 114, 111, 109, 115, 111] => lookup_851_639(acc),
            [116, 114, 111, 109, 115, 195, 184] => lookup_851_640(acc),
            [116, 114, 111, 110, 100, 104, 101, 105, 109] => lookup_851_641(acc),
            [116, 114, 121, 115, 105, 108] => lookup_851_642(acc),
            [116, 114, 195, 166, 110, 97] => lookup_851_643(acc),
            [116, 114, 195, 184, 103, 115, 116, 97, 100] => lookup_851_644(acc),
            [116, 118, 101, 100, 101, 115, 116, 114, 97, 110, 100] => lookup_851_645(acc),
            [116, 121, 100, 97, 108] => lookup_851_646(acc),
            [116, 121, 110, 115, 101, 116] => lookup_851_647(acc),
            [116, 121, 115, 102, 106, 111, 114, 100] => lookup_851_648(acc),
            [116, 121, 115, 110, 101, 115] => lookup_851_649(acc),
            [116, 121, 115, 118, 97, 114] => lookup_851_650(acc),
            [116, 121, 115, 118, 195, 166, 114] => lookup_851_651(acc),
            [116, 195, 184, 110, 115, 98, 101, 114, 103] => lookup_851_652(acc),
            [117, 108, 108, 101, 110, 115, 97, 107, 101, 114] => lookup_851_653(acc),
            [117, 108, 108, 101, 110, 115, 118, 97, 110, 103] => lookup_851_654(acc),
            [117, 108, 118, 105, 107] => lookup_851_655(acc),
            [117, 110, 106, 97, 114, 103, 97] => lookup_851_656(acc),
            [117, 110, 106, 195, 161, 114, 103, 97] => lookup_851_657(acc),
            [117, 116, 115, 105, 114, 97] => lookup_851_658(acc),
            [118, 97] => lookup_851_659(labels, acc),
            [118, 97, 97, 112, 115, 116, 101] => lookup_851_660(acc),
            [118, 97, 100, 115, 111] => lookup_851_661(acc),
            [118, 97, 100, 115, 195, 184] => lookup_851_662(acc),
            [118, 97, 103, 97] => lookup_851_663(acc),
            [118, 97, 103, 97, 110] => lookup_851_664(acc),
            [118, 97, 103, 115, 111, 121] => lookup_851_665(acc),
            [118, 97, 107, 115, 100, 97, 108] => lookup_851_666(acc),
            [118, 97, 108, 108, 101] => lookup_851_667(acc),
            [118, 97, 110, 103] => lookup_851_668(acc),
            [118, 97, 110, 121, 108, 118, 101, 110] => lookup_851_669(acc),
            [118, 97, 114, 100, 111] => lookup_851_670(acc),
            [118, 97, 114, 100, 195, 184] => lookup_851_671(acc),
            [118, 97, 114, 103, 103, 97, 116] => lookup_851_672(acc),
            [118, 97, 114, 111, 121] => lookup_851_673(acc),
            [118, 101, 102, 115, 110] => lookup_851_674(acc),
            [118, 101, 103, 97] => lookup_851_675(acc),
            [118, 101, 103, 97, 114, 115, 104, 101, 105] => lookup_851_676(acc),
            [118, 101, 103, 195, 165, 114, 115, 104, 101, 105] => lookup_851_677(acc),
            [118, 101, 110, 110, 101, 115, 108, 97] => lookup_851_678(acc),
            [118, 101, 114, 100, 97, 108] => lookup_851_679(acc),
            [118, 101, 114, 114, 97, 110] => lookup_851_680(acc),
            [118, 101, 115, 116, 98, 121] => lookup_851_681(acc),
            [118, 101, 115, 116, 102, 111, 108, 100] => lookup_851_682(info, labels, acc),
            [118, 101, 115, 116, 110, 101, 115] => lookup_851_683(acc),
            [118, 101, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => lookup_851_684(acc),
            [118, 101, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_851_685(acc),
            [118, 101, 115, 116, 118, 97, 103, 111, 121] => lookup_851_686(acc),
            [118, 101, 115, 116, 118, 195, 165, 103, 195, 184, 121] => lookup_851_687(acc),
            [118, 101, 118, 101, 108, 115, 116, 97, 100] => lookup_851_688(acc),
            [118, 102] => lookup_851_689(labels, acc),
            [118, 103, 115] => lookup_851_690(acc),
            [118, 105, 107] => lookup_851_691(acc),
            [118, 105, 107, 110, 97] => lookup_851_692(acc),
            [118, 105, 110, 100, 97, 102, 106, 111, 114, 100] => lookup_851_693(acc),
            [118, 111, 97, 103, 97, 116] => lookup_851_694(acc),
            [118, 111, 108, 100, 97] => lookup_851_695(acc),
            [118, 111, 115, 115] => lookup_851_696(acc),
            [118, 111, 115, 115, 101, 118, 97, 110, 103, 101, 110] => lookup_851_697(acc),
            [118, 195, 161, 114, 103, 103, 195, 161, 116] => lookup_851_698(acc),
            [118, 195, 165, 103, 97, 110] => lookup_851_699(acc),
            [118, 195, 165, 103, 115, 195, 184, 121] => lookup_851_700(acc),
            [118, 195, 165, 103, 195, 165] => lookup_851_701(acc),
            [118, 195, 166, 114, 195, 184, 121] => lookup_851_702(acc),
            [120, 110, 45, 45, 97, 110, 100, 121, 45, 105, 114, 97] => lookup_851_703(acc),
            [120, 110, 45, 45, 97, 115, 107, 121, 45, 105, 114, 97] => lookup_851_704(acc),
            [120, 110, 45, 45, 97, 117, 114, 115, 107, 111, 103, 45, 104, 108, 97, 110, 100, 45, 106, 110, 98] => {
                lookup_851_705(acc)
            }
            [120, 110, 45, 45, 97, 118, 101, 114, 121, 45, 121, 117, 97] => lookup_851_706(acc),
            [120, 110, 45, 45, 98, 100, 100, 100, 106, 45, 109, 114, 97, 98, 100] => {
                lookup_851_707(acc)
            }
            [120, 110, 45, 45, 98, 101, 97, 114, 97, 108, 118, 104, 107, 105, 45, 121, 52, 97] => {
                lookup_851_708(acc)
            }
            [120, 110, 45, 45, 98, 101, 114, 108, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_851_709(acc)
            }
            [120, 110, 45, 45, 98, 104, 99, 97, 118, 117, 111, 116, 110, 97, 45, 115, 52, 97] => {
                lookup_851_710(acc)
            }
            [120, 110, 45, 45, 98, 104, 99, 99, 97, 118, 117, 111, 116, 110, 97, 45, 107, 55, 97] => {
                lookup_851_711(acc)
            }
            [120, 110, 45, 45, 98, 105, 100, 114, 45, 53, 110, 97, 99] => lookup_851_712(acc),
            [120, 110, 45, 45, 98, 105, 101, 118, 116, 45, 48, 113, 97] => lookup_851_713(acc),
            [120, 110, 45, 45, 98, 106, 97, 114, 107, 121, 45, 102, 121, 97] => lookup_851_714(acc),
            [120, 110, 45, 45, 98, 106, 100, 100, 97, 114, 45, 112, 116, 97] => lookup_851_715(acc),
            [120, 110, 45, 45, 98, 108, 116, 45, 101, 108, 97, 98] => lookup_851_716(acc),
            [120, 110, 45, 45, 98, 109, 108, 111, 45, 103, 114, 97] => lookup_851_717(acc),
            [120, 110, 45, 45, 98, 111, 100, 45, 50, 110, 97] => lookup_851_718(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 45, 119, 117, 97, 99] => lookup_851_719(acc),
            [120, 110, 45, 45, 98, 114, 110, 110, 121, 115, 117, 110, 100, 45, 109, 56, 97, 99] => {
                lookup_851_720(acc)
            }
            [120, 110, 45, 45, 98, 114, 117, 109, 45, 118, 111, 97] => lookup_851_721(acc),
            [120, 110, 45, 45, 98, 116, 115, 102, 106, 111, 114, 100, 45, 57, 122, 97] => {
                lookup_851_722(acc)
            }
            [120, 110, 45, 45, 100, 97, 118, 118, 101, 110, 106, 114, 103, 97, 45, 121, 52, 97] => {
                lookup_851_723(acc)
            }
            [120, 110, 45, 45, 100, 110, 110, 97, 45, 103, 114, 97] => lookup_851_724(acc),
            [120, 110, 45, 45, 100, 114, 98, 97, 107, 45, 119, 117, 97] => lookup_851_725(acc),
            [120, 110, 45, 45, 100, 121, 114, 121, 45, 105, 114, 97] => lookup_851_726(acc),
            [120, 110, 45, 45, 101, 118, 101, 110, 105, 45, 48, 113, 97, 48, 49, 103, 97] => {
                lookup_851_727(acc)
            }
            [120, 110, 45, 45, 102, 105, 110, 110, 121, 45, 121, 117, 97] => lookup_851_728(acc),
            [120, 110, 45, 45, 102, 106, 111, 114, 100, 45, 108, 114, 97] => lookup_851_729(acc),
            [120, 110, 45, 45, 102, 108, 45, 122, 105, 97] => lookup_851_730(acc),
            [120, 110, 45, 45, 102, 108, 111, 114, 45, 106, 114, 97] => lookup_851_731(acc),
            [120, 110, 45, 45, 102, 114, 100, 101, 45, 103, 114, 97] => lookup_851_732(acc),
            [120, 110, 45, 45, 102, 114, 110, 97, 45, 119, 111, 97] => lookup_851_733(acc),
            [120, 110, 45, 45, 102, 114, 121, 97, 45, 104, 114, 97] => lookup_851_734(acc),
            [120, 110, 45, 45, 103, 103, 97, 118, 105, 105, 107, 97, 45, 56, 121, 97, 52, 55, 104] => {
                lookup_851_735(acc)
            }
            [120, 110, 45, 45, 103, 105, 108, 100, 101, 115, 107, 108, 45, 103, 48, 97] => {
                lookup_851_736(acc)
            }
            [120, 110, 45, 45, 103, 105, 118, 117, 111, 116, 110, 97, 45, 56, 121, 97] => {
                lookup_851_737(acc)
            }
            [120, 110, 45, 45, 103, 106, 118, 105, 107, 45, 119, 117, 97] => lookup_851_738(acc),
            [120, 110, 45, 45, 103, 108, 115, 45, 101, 108, 97, 99] => lookup_851_739(acc),
            [120, 110, 45, 45, 104, 45, 50, 102, 97] => lookup_851_740(acc),
            [120, 110, 45, 45, 104, 98, 109, 101, 114, 45, 120, 113, 97] => lookup_851_741(acc),
            [120, 110, 45, 45, 104, 99, 101, 115, 117, 111, 108, 111, 45, 55, 121, 97, 51, 53, 98] => {
                lookup_851_742(acc)
            }
            [120, 110, 45, 45, 104, 103, 101, 98, 111, 115, 116, 97, 100, 45, 103, 51, 97] => {
                lookup_851_743(acc)
            }
            [120, 110, 45, 45, 104, 109, 109, 114, 102, 101, 97, 115, 116, 97, 45, 115, 52, 97, 99] => {
                lookup_851_744(acc)
            }
            [120, 110, 45, 45, 104, 110, 101, 102, 111, 115, 115, 45, 113, 49, 97] => {
                lookup_851_745(acc)
            }
            [120, 110, 45, 45, 104, 111, 98, 108, 45, 105, 114, 97] => lookup_851_746(acc),
            [120, 110, 45, 45, 104, 111, 108, 116, 108, 101, 110, 45, 104, 120, 97] => {
                lookup_851_747(acc)
            }
            [120, 110, 45, 45, 104, 112, 109, 105, 114, 45, 120, 113, 97] => lookup_851_748(acc),
            [120, 110, 45, 45, 104, 121, 97, 110, 103, 101, 114, 45, 113, 49, 97] => {
                lookup_851_749(acc)
            }
            [120, 110, 45, 45, 104, 121, 108, 97, 110, 100, 101, 116, 45, 53, 52, 97] => {
                lookup_851_750(acc)
            }
            [120, 110, 45, 45, 105, 110, 100, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_851_751(acc)
            }
            [120, 110, 45, 45, 106, 108, 115, 116, 101, 114, 45, 98, 121, 97] => {
                lookup_851_752(acc)
            }
            [120, 110, 45, 45, 106, 114, 112, 101, 108, 97, 110, 100, 45, 53, 52, 97] => {
                lookup_851_753(acc)
            }
            [120, 110, 45, 45, 107, 97, 114, 109, 121, 45, 121, 117, 97] => lookup_851_754(acc),
            [120, 110, 45, 45, 107, 102, 106, 111, 114, 100, 45, 105, 117, 97] => {
                lookup_851_755(acc)
            }
            [120, 110, 45, 45, 107, 108, 98, 117, 45, 119, 111, 97] => lookup_851_756(acc),
            [120, 110, 45, 45, 107, 111, 108, 117, 111, 107, 116, 97, 45, 55, 121, 97, 53, 55, 104] => {
                lookup_851_757(acc)
            }
            [120, 110, 45, 45, 107, 114, 97, 103, 101, 114, 45, 103, 121, 97] => {
                lookup_851_758(acc)
            }
            [120, 110, 45, 45, 107, 114, 97, 110, 103, 104, 107, 101, 45, 98, 48, 97] => {
                lookup_851_759(acc)
            }
            [120, 110, 45, 45, 107, 114, 100, 115, 104, 101, 114, 97, 100, 45, 109, 56, 97] => {
                lookup_851_760(acc)
            }
            [120, 110, 45, 45, 107, 114, 101, 104, 97, 109, 110, 45, 100, 120, 97] => {
                lookup_851_761(acc)
            }
            [120, 110, 45, 45, 107, 114, 106, 111, 104, 107, 97, 45, 104, 119, 97, 98, 52, 57, 106] => {
                lookup_851_762(acc)
            }
            [120, 110, 45, 45, 107, 115, 110, 101, 115, 45, 117, 117, 97] => lookup_851_763(acc),
            [120, 110, 45, 45, 107, 118, 102, 106, 111, 114, 100, 45, 110, 120, 97] => {
                lookup_851_764(acc)
            }
            [120, 110, 45, 45, 107, 118, 105, 116, 115, 121, 45, 102, 121, 97] => {
                lookup_851_765(acc)
            }
            [120, 110, 45, 45, 107, 118, 110, 97, 110, 103, 101, 110, 45, 107, 48, 97] => {
                lookup_851_766(acc)
            }
            [120, 110, 45, 45, 108, 45, 49, 102, 97] => lookup_851_767(acc),
            [120, 110, 45, 45, 108, 97, 104, 101, 97, 100, 106, 117, 45, 55, 121, 97] => {
                lookup_851_768(acc)
            }
            [120, 110, 45, 45, 108, 97, 110, 103, 101, 118, 103, 45, 106, 120, 97] => {
                lookup_851_769(acc)
            }
            [120, 110, 45, 45, 108, 100, 105, 110, 103, 101, 110, 45, 113, 49, 97] => {
                lookup_851_770(acc)
            }
            [120, 110, 45, 45, 108, 101, 97, 103, 97, 118, 105, 105, 107, 97, 45, 53, 50, 98] => {
                lookup_851_771(acc)
            }
            [120, 110, 45, 45, 108, 101, 115, 117, 110, 100, 45, 104, 117, 97] => {
                lookup_851_772(acc)
            }
            [120, 110, 45, 45, 108, 103, 114, 100, 45, 112, 111, 97, 99] => lookup_851_773(acc),
            [120, 110, 45, 45, 108, 104, 112, 112, 105, 45, 120, 113, 97] => lookup_851_774(acc),
            [120, 110, 45, 45, 108, 105, 110, 100, 115, 45, 112, 114, 97] => lookup_851_775(acc),
            [120, 110, 45, 45, 108, 111, 97, 98, 116, 45, 48, 113, 97] => lookup_851_776(acc),
            [120, 110, 45, 45, 108, 114, 100, 97, 108, 45, 115, 114, 97] => lookup_851_777(acc),
            [120, 110, 45, 45, 108, 114, 101, 110, 115, 107, 111, 103, 45, 53, 52, 97] => {
                lookup_851_778(acc)
            }
            [120, 110, 45, 45, 108, 116, 45, 108, 105, 97, 99] => lookup_851_779(acc),
            [120, 110, 45, 45, 108, 116, 101, 110, 45, 103, 114, 97] => lookup_851_780(acc),
            [120, 110, 45, 45, 108, 117, 114, 121, 45, 105, 114, 97] => lookup_851_781(acc),
            [120, 110, 45, 45, 109, 101, 108, 121, 45, 105, 114, 97] => lookup_851_782(acc),
            [120, 110, 45, 45, 109, 101, 114, 107, 101, 114, 45, 107, 117, 97] => {
                lookup_851_783(acc)
            }
            [120, 110, 45, 45, 109, 106, 110, 100, 97, 108, 101, 110, 45, 54, 52, 97] => {
                lookup_851_784(acc)
            }
            [120, 110, 45, 45, 109, 108, 97, 116, 118, 117, 111, 112, 109, 105, 45, 115, 52, 97] => {
                lookup_851_785(acc)
            }
            [120, 110, 45, 45, 109, 108, 105, 45, 116, 108, 97] => lookup_851_786(acc),
            [120, 110, 45, 45, 109, 108, 115, 101, 108, 118, 45, 105, 117, 97] => {
                lookup_851_787(acc)
            }
            [120, 110, 45, 45, 109, 111, 114, 101, 107, 101, 45, 106, 117, 97] => {
                lookup_851_788(acc)
            }
            [120, 110, 45, 45, 109, 111, 115, 106, 101, 110, 45, 101, 121, 97] => {
                lookup_851_789(acc)
            }
            [120, 110, 45, 45, 109, 111, 116, 45, 116, 108, 97] => lookup_851_790(acc),
            [120, 110, 45, 45, 109, 114, 101, 45, 111, 103, 45, 114, 111, 109, 115, 100, 97, 108, 45, 113, 113, 98] => {
                lookup_851_791(info, labels, acc)
            }
            [120, 110, 45, 45, 109, 115, 121, 45, 117, 108, 97, 48, 104] => lookup_851_792(acc),
            [120, 110, 45, 45, 109, 116, 116, 97, 45, 118, 114, 106, 106, 97, 116, 45, 107, 55, 97, 102] => {
                lookup_851_793(acc)
            }
            [120, 110, 45, 45, 109, 117, 111, 115, 116, 45, 48, 113, 97] => lookup_851_794(acc),
            [120, 110, 45, 45, 110, 109, 101, 115, 106, 101, 118, 117, 101, 109, 105, 101, 45, 116, 99, 98, 97] => {
                lookup_851_795(acc)
            }
            [120, 110, 45, 45, 110, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_851_796(acc),
            [120, 110, 45, 45, 110, 116, 116, 101, 114, 121, 45, 98, 121, 97, 101] => {
                lookup_851_797(acc)
            }
            [120, 110, 45, 45, 110, 118, 117, 111, 116, 110, 97, 45, 104, 119, 97] => {
                lookup_851_798(acc)
            }
            [120, 110, 45, 45, 111, 112, 112, 101, 103, 114, 100, 45, 105, 120, 97] => {
                lookup_851_799(acc)
            }
            [120, 110, 45, 45, 111, 115, 116, 101, 114, 121, 45, 102, 121, 97] => {
                lookup_851_800(acc)
            }
            [120, 110, 45, 45, 111, 115, 121, 114, 111, 45, 119, 117, 97] => lookup_851_801(acc),
            [120, 110, 45, 45, 112, 111, 114, 115, 103, 117, 45, 115, 116, 97, 50, 54, 102] => {
                lookup_851_802(acc)
            }
            [120, 110, 45, 45, 114, 97, 100, 121, 45, 105, 114, 97] => lookup_851_803(acc),
            [120, 110, 45, 45, 114, 100, 97, 108, 45, 112, 111, 97] => lookup_851_804(acc),
            [120, 110, 45, 45, 114, 100, 101, 45, 117, 108, 97] => lookup_851_805(acc),
            [120, 110, 45, 45, 114, 100, 121, 45, 48, 110, 97, 98] => lookup_851_806(acc),
            [120, 110, 45, 45, 114, 101, 110, 110, 101, 115, 121, 45, 118, 49, 97] => {
                lookup_851_807(acc)
            }
            [120, 110, 45, 45, 114, 104, 107, 107, 101, 114, 118, 106, 117, 45, 48, 49, 97, 102] => {
                lookup_851_808(acc)
            }
            [120, 110, 45, 45, 114, 104, 111, 108, 116, 45, 109, 114, 97] => lookup_851_809(acc),
            [120, 110, 45, 45, 114, 105, 115, 97, 45, 53, 110, 97] => lookup_851_810(acc),
            [120, 110, 45, 45, 114, 105, 115, 114, 45, 105, 114, 97] => lookup_851_811(acc),
            [120, 110, 45, 45, 114, 108, 97, 110, 100, 45, 117, 117, 97] => lookup_851_812(acc),
            [120, 110, 45, 45, 114, 108, 105, 110, 103, 101, 110, 45, 109, 120, 97] => {
                lookup_851_813(acc)
            }
            [120, 110, 45, 45, 114, 109, 115, 107, 111, 103, 45, 98, 121, 97] => {
                lookup_851_814(acc)
            }
            [120, 110, 45, 45, 114, 114, 111, 115, 45, 103, 114, 97] => lookup_851_815(acc),
            [120, 110, 45, 45, 114, 115, 107, 111, 103, 45, 117, 117, 97] => lookup_851_816(acc),
            [120, 110, 45, 45, 114, 115, 116, 45, 48, 110, 97] => lookup_851_817(acc),
            [120, 110, 45, 45, 114, 115, 116, 97, 45, 102, 114, 97] => lookup_851_818(acc),
            [120, 110, 45, 45, 114, 121, 107, 101, 110, 45, 118, 117, 97] => lookup_851_819(acc),
            [120, 110, 45, 45, 114, 121, 114, 118, 105, 107, 45, 98, 121, 97] => {
                lookup_851_820(acc)
            }
            [120, 110, 45, 45, 115, 45, 49, 102, 97] => lookup_851_821(acc),
            [120, 110, 45, 45, 115, 97, 110, 100, 110, 101, 115, 115, 106, 101, 110, 45, 111, 103, 98] => {
                lookup_851_822(acc)
            }
            [120, 110, 45, 45, 115, 97, 110, 100, 121, 45, 121, 117, 97] => lookup_851_823(acc),
            [120, 110, 45, 45, 115, 101, 114, 97, 108, 45, 108, 114, 97] => lookup_851_824(acc),
            [120, 110, 45, 45, 115, 103, 110, 101, 45, 103, 114, 97] => lookup_851_825(acc),
            [120, 110, 45, 45, 115, 107, 105, 101, 114, 118, 45, 117, 116, 97] => {
                lookup_851_826(acc)
            }
            [120, 110, 45, 45, 115, 107, 106, 101, 114, 118, 121, 45, 118, 49, 97] => {
                lookup_851_827(acc)
            }
            [120, 110, 45, 45, 115, 107, 106, 107, 45, 115, 111, 97] => lookup_851_828(acc),
            [120, 110, 45, 45, 115, 107, 110, 105, 116, 45, 121, 113, 97] => lookup_851_829(acc),
            [120, 110, 45, 45, 115, 107, 110, 108, 97, 110, 100, 45, 102, 120, 97] => {
                lookup_851_830(acc)
            }
            [120, 110, 45, 45, 115, 108, 97, 116, 45, 53, 110, 97] => lookup_851_831(acc),
            [120, 110, 45, 45, 115, 108, 116, 45, 101, 108, 97, 98] => lookup_851_832(acc),
            [120, 110, 45, 45, 115, 109, 108, 97, 45, 104, 114, 97] => lookup_851_833(acc),
            [120, 110, 45, 45, 115, 109, 110, 97, 45, 103, 114, 97] => lookup_851_834(acc),
            [120, 110, 45, 45, 115, 110, 97, 115, 101, 45, 110, 114, 97] => lookup_851_835(acc),
            [120, 110, 45, 45, 115, 110, 100, 114, 101, 45, 108, 97, 110, 100, 45, 48, 99, 98] => {
                lookup_851_836(acc)
            }
            [120, 110, 45, 45, 115, 110, 101, 115, 45, 112, 111, 97] => lookup_851_837(acc),
            [120, 110, 45, 45, 115, 110, 115, 97, 45, 114, 111, 97] => lookup_851_838(acc),
            [120, 110, 45, 45, 115, 114, 45, 97, 117, 114, 100, 97, 108, 45, 108, 56, 97] => {
                lookup_851_839(acc)
            }
            [120, 110, 45, 45, 115, 114, 45, 102, 114, 111, 110, 45, 113, 49, 97] => {
                lookup_851_840(acc)
            }
            [120, 110, 45, 45, 115, 114, 45, 111, 100, 97, 108, 45, 113, 49, 97] => {
                lookup_851_841(acc)
            }
            [120, 110, 45, 45, 115, 114, 45, 118, 97, 114, 97, 110, 103, 101, 114, 45, 103, 103, 98] => {
                lookup_851_842(acc)
            }
            [120, 110, 45, 45, 115, 114, 102, 111, 108, 100, 45, 98, 121, 97] => {
                lookup_851_843(acc)
            }
            [120, 110, 45, 45, 115, 114, 114, 101, 105, 115, 97, 45, 113, 49, 97] => {
                lookup_851_844(acc)
            }
            [120, 110, 45, 45, 115, 114, 117, 109, 45, 103, 114, 97] => lookup_851_845(acc),
            [120, 110, 45, 45, 115, 116, 102, 111, 108, 100, 45, 57, 120, 97] => {
                lookup_851_846(info, labels, acc)
            }
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 45, 115, 49, 97] => {
                lookup_851_847(acc)
            }
            [120, 110, 45, 45, 115, 116, 106, 114, 100, 97, 108, 115, 104, 97, 108, 115, 101, 110, 45, 115, 113, 98] => {
                lookup_851_848(acc)
            }
            [120, 110, 45, 45, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110, 45, 122, 99, 98] => {
                lookup_851_849(acc)
            }
            [120, 110, 45, 45, 116, 106, 109, 101, 45, 104, 114, 97] => lookup_851_850(acc),
            [120, 110, 45, 45, 116, 110, 115, 98, 101, 114, 103, 45, 113, 49, 97] => {
                lookup_851_851(acc)
            }
            [120, 110, 45, 45, 116, 114, 97, 110, 121, 45, 121, 117, 97] => lookup_851_852(acc),
            [120, 110, 45, 45, 116, 114, 103, 115, 116, 97, 100, 45, 114, 49, 97] => {
                lookup_851_853(acc)
            }
            [120, 110, 45, 45, 116, 114, 110, 97, 45, 119, 111, 97] => lookup_851_854(acc),
            [120, 110, 45, 45, 116, 114, 111, 109, 115, 45, 122, 117, 97] => lookup_851_855(acc),
            [120, 110, 45, 45, 116, 121, 115, 118, 114, 45, 118, 114, 97] => lookup_851_856(acc),
            [120, 110, 45, 45, 117, 110, 106, 114, 103, 97, 45, 114, 116, 97] => {
                lookup_851_857(acc)
            }
            [120, 110, 45, 45, 118, 97, 100, 115, 45, 106, 114, 97] => lookup_851_858(acc),
            [120, 110, 45, 45, 118, 97, 114, 100, 45, 106, 114, 97] => lookup_851_859(acc),
            [120, 110, 45, 45, 118, 101, 103, 114, 115, 104, 101, 105, 45, 99, 48, 97] => {
                lookup_851_860(acc)
            }
            [120, 110, 45, 45, 118, 101, 115, 116, 118, 103, 121, 45, 105, 120, 97, 54, 111] => {
                lookup_851_861(acc)
            }
            [120, 110, 45, 45, 118, 103, 45, 121, 105, 97, 98] => lookup_851_862(acc),
            [120, 110, 45, 45, 118, 103, 97, 110, 45, 113, 111, 97] => lookup_851_863(acc),
            [120, 110, 45, 45, 118, 103, 115, 121, 45, 113, 111, 97, 48, 106] => {
                lookup_851_864(acc)
            }
            [120, 110, 45, 45, 118, 114, 101, 45, 101, 105, 107, 101, 114, 45, 107, 56, 97] => {
                lookup_851_865(acc)
            }
            [120, 110, 45, 45, 118, 114, 103, 103, 116, 45, 120, 113, 97, 100] => {
                lookup_851_866(acc)
            }
            [120, 110, 45, 45, 118, 114, 121, 45, 121, 108, 97, 53, 103] => lookup_851_867(acc),
            [120, 110, 45, 45, 121, 101, 114, 45, 122, 110, 97] => lookup_851_868(acc),
            [120, 110, 45, 45, 121, 103, 97, 114, 100, 101, 110, 45, 112, 49, 97] => {
                lookup_851_869(acc)
            }
            [120, 110, 45, 45, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101, 45, 117, 106, 98] => {
                lookup_851_870(acc)
            }
            [195, 161, 107, 197, 139, 111, 108, 117, 111, 107, 116, 97] => lookup_851_871(acc),
            [195, 161, 108, 97, 104, 101, 97, 100, 106, 117] => lookup_851_872(acc),
            [195, 161, 108, 116, 195, 161] => lookup_851_873(acc),
            [195, 165, 102, 106, 111, 114, 100] => lookup_851_874(acc),
            [195, 165, 107, 114, 101, 104, 97, 109, 110] => lookup_851_875(acc),
            [195, 165, 108] => lookup_851_876(acc),
            [195, 165, 108, 101, 115, 117, 110, 100] => lookup_851_877(acc),
            [195, 165, 108, 103, 195, 165, 114, 100] => lookup_851_878(acc),
            [195, 165, 109, 108, 105] => lookup_851_879(acc),
            [195, 165, 109, 111, 116] => lookup_851_880(acc),
            [195, 165, 114, 100, 97, 108] => lookup_851_881(acc),
            [195, 165, 115] => lookup_851_882(acc),
            [195, 165, 115, 101, 114, 97, 108] => lookup_851_883(acc),
            [195, 165, 115, 110, 101, 115] => lookup_851_884(acc),
            [195, 184, 107, 115, 110, 101, 115] => lookup_851_885(acc),
            [195, 184, 114, 108, 97, 110, 100] => lookup_851_886(acc),
            [195, 184, 114, 115, 107, 111, 103] => lookup_851_887(acc),
            [195, 184, 114, 115, 116, 97] => lookup_851_888(acc),
            [195, 184, 115, 116, 102, 111, 108, 100] => lookup_851_889(info, labels, acc),
            [195, 184, 115, 116, 114, 101, 45, 116, 111, 116, 101, 110] => lookup_851_890(acc),
            [195, 184, 118, 114, 101, 45, 101, 105, 107, 101, 114] => lookup_851_891(acc),
            [195, 184, 121, 101, 114] => lookup_851_892(acc),
            [195, 184, 121, 103, 97, 114, 100, 101, 110] => lookup_851_893(acc),
            [195, 184, 121, 115, 116, 114, 101, 45, 115, 108, 105, 100, 114, 101] => {
                lookup_851_894(acc)
            }
            [196, 141, 195, 161, 104, 99, 101, 115, 117, 111, 108, 111] => lookup_851_895(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_852() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_853() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_854() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_855() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_856() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_857() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_858_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_858<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_858_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_859_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_859<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_859_0(acc),
            [99, 111, 109] => lookup_859_1(acc),
            [101, 100, 117] => lookup_859_2(acc),
            [103, 111, 118] => lookup_859_3(acc),
            [105, 110, 102, 111] => lookup_859_4(acc),
            [110, 101, 116] => lookup_859_5(acc),
            [111, 114, 103] => lookup_859_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_860() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_861() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_862() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_863_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_863<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 110, 116, 101, 114, 112, 114, 105, 115, 101, 99, 108, 111, 117, 100] => {
                lookup_863_0(acc)
            }
            [109, 101, 114, 115, 101, 105, 110, 101] => lookup_863_1(acc),
            [109, 105, 110, 101] => lookup_863_2(acc),
            [115, 104, 97, 99, 107, 110, 101, 116] => lookup_863_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_864() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_865_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_865_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_865_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_865<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_865_0(acc),
            [99, 111] => lookup_865_1(labels, acc),
            [99, 114, 105] => lookup_865_2(acc),
            [103, 101, 101, 107] => lookup_865_3(acc),
            [103, 101, 110] => lookup_865_4(acc),
            [103, 111, 118, 116] => lookup_865_5(acc),
            [104, 101, 97, 108, 116, 104] => lookup_865_6(acc),
            [105, 119, 105] => lookup_865_7(acc),
            [107, 105, 119, 105] => lookup_865_8(acc),
            [109, 97, 111, 114, 105] => lookup_865_9(acc),
            [109, 105, 108] => lookup_865_10(acc),
            [109, 196, 129, 111, 114, 105] => lookup_865_11(acc),
            [110, 101, 116] => lookup_865_12(acc),
            [111, 114, 103] => lookup_865_13(acc),
            [112, 97, 114, 108, 105, 97, 109, 101, 110, 116] => lookup_865_14(acc),
            [115, 99, 104, 111, 111, 108] => lookup_865_15(acc),
            [120, 110, 45, 45, 109, 111, 114, 105, 45, 113, 115, 97] => lookup_865_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_866() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_867() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_868() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_869() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_870() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_871() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_872() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_873() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_874<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_874_0(acc),
            [99, 111, 109] => lookup_874_1(acc),
            [101, 100, 117] => lookup_874_2(acc),
            [103, 111, 118] => lookup_874_3(acc),
            [109, 101, 100] => lookup_874_4(acc),
            [109, 117, 115, 101, 117, 109] => lookup_874_5(acc),
            [110, 101, 116] => lookup_874_6(acc),
            [111, 114, 103] => lookup_874_7(acc),
            [112, 114, 111] => lookup_874_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_875() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_876_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_876_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_876_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 116, 97, 103, 105, 110, 103] => lookup_876_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_876_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_876<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 109, 101, 108, 105, 110, 107] => lookup_876_0(acc),
            [111, 110, 114, 101, 100] => lookup_876_1(labels, acc),
            [115, 101, 114, 118, 105, 99, 101] => lookup_876_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_877() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_878() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_879() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_880_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_880_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_880_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_880<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_880_0(acc),
            [101, 101, 114, 111] => lookup_880_1(acc),
            [101, 101, 114, 111, 45, 115, 116, 97, 103, 101] => lookup_880_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_881() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_882() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_883() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_884_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_884<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [116, 101, 99, 104] => lookup_884_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [116, 101, 108, 101] => lookup_885_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_11_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_11_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_11<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            [99] => lookup_885_11_0(acc),
            [114, 115, 99] => lookup_885_11_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_12_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_12_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            [115, 115, 108] => lookup_885_12_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_12<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [111, 114, 105, 103, 105, 110] => lookup_885_12_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_28_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_28_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_28<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111] => lookup_885_28_0(acc),
            [104, 111, 109, 101] => lookup_885_28_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_32<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 108] => lookup_885_32_0(acc),
            [97, 115, 115, 111] => lookup_885_32_1(acc),
            [97, 116] => lookup_885_32_2(acc),
            [97, 117] => lookup_885_32_3(acc),
            [98, 101] => lookup_885_32_4(acc),
            [98, 103] => lookup_885_32_5(acc),
            [99, 97] => lookup_885_32_6(acc),
            [99, 100] => lookup_885_32_7(acc),
            [99, 104] => lookup_885_32_8(acc),
            [99, 110] => lookup_885_32_9(acc),
            [99, 121] => lookup_885_32_10(acc),
            [99, 122] => lookup_885_32_11(acc),
            [100, 101] => lookup_885_32_12(acc),
            [100, 107] => lookup_885_32_13(acc),
            [101, 100, 117] => lookup_885_32_14(acc),
            [101, 101] => lookup_885_32_15(acc),
            [101, 115] => lookup_885_32_16(acc),
            [102, 105] => lookup_885_32_17(acc),
            [102, 114] => lookup_885_32_18(acc),
            [103, 114] => lookup_885_32_19(acc),
            [104, 114] => lookup_885_32_20(acc),
            [104, 117] => lookup_885_32_21(acc),
            [105, 101] => lookup_885_32_22(acc),
            [105, 108] => lookup_885_32_23(acc),
            [105, 110] => lookup_885_32_24(acc),
            [105, 110, 116] => lookup_885_32_25(acc),
            [105, 115] => lookup_885_32_26(acc),
            [105, 116] => lookup_885_32_27(acc),
            [106, 112] => lookup_885_32_28(acc),
            [107, 114] => lookup_885_32_29(acc),
            [108, 116] => lookup_885_32_30(acc),
            [108, 117] => lookup_885_32_31(acc),
            [108, 118] => lookup_885_32_32(acc),
            [109, 99] => lookup_885_32_33(acc),
            [109, 101] => lookup_885_32_34(acc),
            [109, 107] => lookup_885_32_35(acc),
            [109, 116] => lookup_885_32_36(acc),
            [109, 121] => lookup_885_32_37(acc),
            [110, 101, 116] => lookup_885_32_38(acc),
            [110, 103] => lookup_885_32_39(acc),
            [110, 108] => lookup_885_32_40(acc),
            [110, 111] => lookup_885_32_41(acc),
            [110, 122] => lookup_885_32_42(acc),
            [112, 97, 114, 105, 115] => lookup_885_32_43(acc),
            [112, 108] => lookup_885_32_44(acc),
            [112, 116] => lookup_885_32_45(acc),
            [113, 45, 97] => lookup_885_32_46(acc),
            [114, 111] => lookup_885_32_47(acc),
            [114, 117] => lookup_885_32_48(acc),
            [115, 101] => lookup_885_32_49(acc),
            [115, 105] => lookup_885_32_50(acc),
            [115, 107] => lookup_885_32_51(acc),
            [116, 114] => lookup_885_32_52(acc),
            [117, 107] => lookup_885_32_53(acc),
            [117, 115] => lookup_885_32_54(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_36_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_36_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_885_36_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_36_2_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_36_2_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    match labels.next() {
        Some(label) => match label {
            [97, 112, 112] => lookup_885_36_2_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_36_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            [111, 115] => lookup_885_36_2_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_36<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 13usize;
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100] => lookup_885_36_0(acc),
            [111, 115] => lookup_885_36_1(info, labels, acc),
            [115, 116, 103] => lookup_885_36_2(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_102_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_102<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 51] => lookup_885_102_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_885_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_885<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99, 99, 101, 115, 115, 99, 97, 109] => lookup_885_0(acc),
            [97, 101] => lookup_885_1(acc),
            [97, 108, 116, 101, 114, 118, 105, 115, 116, 97] => lookup_885_2(acc),
            [97, 109, 117, 110, 101] => lookup_885_3(info, labels, acc),
            [98, 97, 114, 115, 121] => lookup_885_4(acc),
            [98, 108, 111, 103, 100, 110, 115] => lookup_885_5(acc),
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_885_6(acc),
            [98, 109, 111, 97, 116, 116, 97, 99, 104, 109, 101, 110, 116, 115] => lookup_885_7(acc),
            [98, 111, 108, 100, 108, 121, 103, 111, 105, 110, 103, 110, 111, 119, 104, 101, 114, 101] => {
                lookup_885_8(acc)
            }
            [99, 97, 98, 108, 101, 45, 109, 111, 100, 101, 109] => lookup_885_9(acc),
            [99, 97, 109, 100, 118, 114] => lookup_885_10(acc),
            [99, 100, 110, 55, 55] => lookup_885_11(info, labels, acc),
            [99, 100, 110, 55, 55, 45, 115, 101, 99, 117, 114, 101] => {
                lookup_885_12(info, labels, acc)
            }
            [99, 101, 114, 116, 109, 103, 114] => lookup_885_13(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_885_14(acc),
            [99, 111, 108, 108, 101, 103, 101, 102, 97, 110] => lookup_885_15(acc),
            [99, 111, 117, 99, 104, 112, 111, 116, 97, 116, 111, 102, 114, 105, 101, 115] => {
                lookup_885_16(acc)
            }
            [100, 100, 110, 115, 115] => lookup_885_17(acc),
            [100, 105, 115, 107, 115, 116, 97, 116, 105, 111, 110] => lookup_885_18(acc),
            [100, 110, 115, 97, 108, 105, 97, 115] => lookup_885_19(acc),
            [100, 110, 115, 100, 111, 106, 111] => lookup_885_20(acc),
            [100, 111, 101, 115, 110, 116, 101, 120, 105, 115, 116] => lookup_885_21(acc),
            [100, 111, 110, 116, 101, 120, 105, 115, 116] => lookup_885_22(acc),
            [100, 111, 111, 109, 100, 110, 115] => lookup_885_23(acc),
            [100, 115, 109, 121, 110, 97, 115] => lookup_885_24(acc),
            [100, 117, 99, 107, 100, 110, 115] => lookup_885_25(acc),
            [100, 118, 114, 100, 110, 115] => lookup_885_26(acc),
            [100, 121, 110, 97, 108, 105, 97, 115] => lookup_885_27(acc),
            [100, 121, 110, 100, 110, 115] => lookup_885_28(labels, acc),
            [100, 121, 110, 115, 101, 114, 118] => lookup_885_29(acc),
            [101, 110, 100, 111, 102, 105, 110, 116, 101, 114, 110, 101, 116] => lookup_885_30(acc),
            [101, 110, 100, 111, 102, 116, 104, 101, 105, 110, 116, 101, 114, 110, 101, 116] => {
                lookup_885_31(acc)
            }
            [101, 117] => lookup_885_32(labels, acc),
            [102, 97, 109, 105, 108, 121, 100, 115] => lookup_885_33(acc),
            [102, 101, 100, 111, 114, 97, 105, 110, 102, 114, 97, 99, 108, 111, 117, 100] => {
                lookup_885_34(acc)
            }
            [102, 101, 100, 111, 114, 97, 112, 101, 111, 112, 108, 101] => lookup_885_35(acc),
            [102, 101, 100, 111, 114, 97, 112, 114, 111, 106, 101, 99, 116] => {
                lookup_885_36(info, labels, acc)
            }
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_885_37(acc),
            [102, 114, 101, 101, 100, 101, 115, 107, 116, 111, 112] => lookup_885_38(acc),
            [102, 114, 111, 109, 45, 109, 101] => lookup_885_39(acc),
            [103, 97, 109, 101, 45, 104, 111, 115, 116] => lookup_885_40(acc),
            [103, 111, 116, 100, 110, 115] => lookup_885_41(acc),
            [104, 101, 112, 102, 111, 114, 103, 101] => lookup_885_42(acc),
            [104, 107] => lookup_885_43(acc),
            [104, 111, 98, 98, 121, 45, 115, 105, 116, 101] => lookup_885_44(acc),
            [104, 111, 109, 101, 100, 110, 115] => lookup_885_45(acc),
            [104, 111, 109, 101, 102, 116, 112] => lookup_885_46(acc),
            [104, 111, 109, 101, 108, 105, 110, 117, 120] => lookup_885_47(acc),
            [104, 111, 109, 101, 117, 110, 105, 120] => lookup_885_48(acc),
            [104, 111, 112, 116, 111] => lookup_885_49(acc),
            [104, 116, 116, 112, 98, 105, 110] => lookup_885_50(acc),
            [105, 110, 45, 100, 115, 108] => lookup_885_51(acc),
            [105, 110, 45, 118, 112, 110] => lookup_885_52(acc),
            [105, 115, 45, 97, 45, 98, 114, 117, 105, 110, 115, 102, 97, 110] => lookup_885_53(acc),
            [105, 115, 45, 97, 45, 99, 97, 110, 100, 105, 100, 97, 116, 101] => lookup_885_54(acc),
            [105, 115, 45, 97, 45, 99, 101, 108, 116, 105, 99, 115, 102, 97, 110] => {
                lookup_885_55(acc)
            }
            [105, 115, 45, 97, 45, 99, 104, 101, 102] => lookup_885_56(acc),
            [105, 115, 45, 97, 45, 103, 101, 101, 107] => lookup_885_57(acc),
            [105, 115, 45, 97, 45, 107, 110, 105, 103, 104, 116] => lookup_885_58(acc),
            [105, 115, 45, 97, 45, 108, 105, 110, 117, 120, 45, 117, 115, 101, 114] => {
                lookup_885_59(acc)
            }
            [105, 115, 45, 97, 45, 112, 97, 116, 115, 102, 97, 110] => lookup_885_60(acc),
            [105, 115, 45, 97, 45, 115, 111, 120, 102, 97, 110] => lookup_885_61(acc),
            [105, 115, 45, 102, 111, 117, 110, 100] => lookup_885_62(acc),
            [105, 115, 45, 108, 111, 115, 116] => lookup_885_63(acc),
            [105, 115, 45, 115, 97, 118, 101, 100] => lookup_885_64(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 98, 97, 100] => lookup_885_65(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 101, 118, 105, 108] => lookup_885_66(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 103, 111, 111, 100] => lookup_885_67(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 110, 105, 99, 101] => lookup_885_68(acc),
            [105, 115, 45, 118, 101, 114, 121, 45, 115, 119, 101, 101, 116] => lookup_885_69(acc),
            [105, 115, 97, 45, 103, 101, 101, 107] => lookup_885_70(acc),
            [106, 112, 110] => lookup_885_71(acc),
            [106, 115] => lookup_885_72(acc),
            [107, 105, 99, 107, 115, 45, 97, 115, 115] => lookup_885_73(acc),
            [109, 97, 121, 102, 105, 114, 115, 116] => lookup_885_74(acc),
            [109, 105, 115, 99, 111, 110, 102, 117, 115, 101, 100] => lookup_885_75(acc),
            [109, 108, 98, 102, 97, 110] => lookup_885_76(acc),
            [109, 111, 122, 105, 108, 108, 97, 45, 105, 111, 116] => lookup_885_77(acc),
            [109, 121, 45, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_885_78(acc),
            [109, 121, 102, 105, 114, 101, 119, 97, 108, 108] => lookup_885_79(acc),
            [109, 121, 102, 116, 112] => lookup_885_80(acc),
            [109, 121, 115, 101, 99, 117, 114, 105, 116, 121, 99, 97, 109, 101, 114, 97] => {
                lookup_885_81(acc)
            }
            [109, 121, 119, 105, 114, 101] => lookup_885_82(acc),
            [110, 102, 108, 102, 97, 110] => lookup_885_83(acc),
            [110, 111, 45, 105, 112] => lookup_885_84(acc),
            [110, 111, 119, 45, 100, 110, 115] => lookup_885_85(acc),
            [112, 105, 109, 105, 101, 110, 116, 97] => lookup_885_86(acc),
            [112, 111, 100, 122, 111, 110, 101] => lookup_885_87(acc),
            [112, 111, 105, 118, 114, 111, 110] => lookup_885_88(acc),
            [112, 111, 116, 97, 103, 101, 114] => lookup_885_89(acc),
            [112, 117, 98, 116, 108, 115] => lookup_885_90(acc),
            [114, 101, 97, 100, 45, 98, 111, 111, 107, 115] => lookup_885_91(acc),
            [114, 101, 97, 100, 109, 121, 98, 108, 111, 103] => lookup_885_92(acc),
            [115, 101, 108, 102, 105, 112] => lookup_885_93(acc),
            [115, 101, 108, 108, 115, 121, 111, 117, 114, 104, 111, 109, 101] => lookup_885_94(acc),
            [115, 101, 114, 118, 101, 98, 98, 115] => lookup_885_95(acc),
            [115, 101, 114, 118, 101, 102, 116, 112] => lookup_885_96(acc),
            [115, 101, 114, 118, 101, 103, 97, 109, 101] => lookup_885_97(acc),
            [115, 109, 97, 108, 108, 45, 119, 101, 98] => lookup_885_98(acc),
            [115, 112, 100, 110, 115] => lookup_885_99(acc),
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_885_100(acc),
            [115, 119, 101, 101, 116, 112, 101, 112, 112, 101, 114] => lookup_885_101(acc),
            [116, 101, 99, 107, 105, 100, 115] => lookup_885_102(info, labels, acc),
            [116, 111, 111, 108, 102, 111, 114, 103, 101] => lookup_885_103(acc),
            [116, 117, 110, 107] => lookup_885_104(acc),
            [116, 117, 120, 102, 97, 109, 105, 108, 121] => lookup_885_105(acc),
            [116, 119, 109, 97, 105, 108] => lookup_885_106(acc),
            [117, 102, 99, 102, 97, 110] => lookup_885_107(acc),
            [117, 115] => lookup_885_108(acc),
            [119, 101, 98, 104, 111, 112] => lookup_885_109(acc),
            [119, 101, 98, 114, 101, 100, 105, 114, 101, 99, 116] => lookup_885_110(acc),
            [119, 109, 99, 108, 111, 117, 100] => lookup_885_111(acc),
            [119, 109, 102, 108, 97, 98, 115] => lookup_885_112(acc),
            [122, 97] => lookup_885_113(acc),
            [122, 97, 112, 116, 111] => lookup_885_114(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_886() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_887() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_888() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_889() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_890() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_891_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_891<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 101, 114, 100, 112, 111, 108] => lookup_891_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_892_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_892<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 111] => lookup_892_0(acc),
            [97, 99] => lookup_892_1(acc),
            [99, 111, 109] => lookup_892_2(acc),
            [101, 100, 117] => lookup_892_3(acc),
            [103, 111, 98] => lookup_892_4(acc),
            [105, 110, 103] => lookup_892_5(acc),
            [109, 101, 100] => lookup_892_6(acc),
            [110, 101, 116] => lookup_892_7(acc),
            [110, 111, 109] => lookup_892_8(acc),
            [111, 114, 103] => lookup_892_9(acc),
            [115, 108, 100] => lookup_892_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_893_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_893<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 100, 101, 98, 101, 114, 103] => lookup_893_0(acc),
            [104, 108, 120] => lookup_893_1(acc),
            [104, 108, 120, 51] => lookup_893_2(acc),
            [109, 97, 103, 110, 101, 116] => lookup_893_3(acc),
            [112, 100, 110, 115] => lookup_893_4(acc),
            [112, 108, 101, 115, 107] => lookup_893_5(acc),
            [112, 114, 118, 99, 121] => lookup_893_6(acc),
            [114, 111, 99, 107, 121] => lookup_893_7(acc),
            [116, 114, 97, 110, 115, 108, 97, 116, 101, 100] => lookup_893_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_894() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_895() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_896() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_897() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_898() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_899_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_899<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_899_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_900() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_901() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_902() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_903_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_903<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_903_0(acc),
            [99, 111, 109] => lookup_903_1(acc),
            [101, 100, 117] => lookup_903_2(acc),
            [103, 111, 98] => lookup_903_3(acc),
            [109, 105, 108] => lookup_903_4(acc),
            [110, 101, 116] => lookup_903_5(acc),
            [110, 111, 109] => lookup_903_6(acc),
            [111, 114, 103] => lookup_903_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_904() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_905<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_905_0(acc),
            [101, 100, 117] => lookup_905_1(acc),
            [111, 114, 103] => lookup_905_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_906() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_907<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_907_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_908_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_908<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_908_0(acc),
            [101, 100, 117] => lookup_908_1(acc),
            [103, 111, 118] => lookup_908_2(acc),
            [105] => lookup_908_3(acc),
            [109, 105, 108] => lookup_908_4(acc),
            [110, 101, 116] => lookup_908_5(acc),
            [110, 103, 111] => lookup_908_6(acc),
            [111, 114, 103] => lookup_908_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_909() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_910() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_911() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_912() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_913() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_914() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_915_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_915<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 109, 101, 114] => lookup_915_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_916() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_917() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_918() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_919_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_919<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 51, 51, 55] => lookup_919_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_920() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_921() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_922() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_923() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_924() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_925_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_925<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 103, 114, 111, 107] => lookup_925_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_926_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_926<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_926_0(acc),
            [99, 111, 109] => lookup_926_1(acc),
            [101, 100, 117] => lookup_926_2(acc),
            [102, 97, 109] => lookup_926_3(acc),
            [103, 111, 98] => lookup_926_4(acc),
            [103, 111, 107] => lookup_926_5(acc),
            [103, 111, 110] => lookup_926_6(acc),
            [103, 111, 112] => lookup_926_7(acc),
            [103, 111, 115] => lookup_926_8(acc),
            [103, 111, 118] => lookup_926_9(acc),
            [105, 110, 102, 111] => lookup_926_10(acc),
            [110, 101, 116] => lookup_926_11(acc),
            [111, 114, 103] => lookup_926_12(acc),
            [119, 101, 98] => lookup_926_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_927_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_36<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112] => lookup_927_36_0(acc),
            [103, 114, 105, 119] => lookup_927_36_1(acc),
            [105, 99] => lookup_927_36_2(acc),
            [105, 115] => lookup_927_36_3(acc),
            [107, 109, 112, 115, 112] => lookup_927_36_4(acc),
            [107, 111, 110, 115, 117, 108, 97, 116] => lookup_927_36_5(acc),
            [107, 112, 112, 115, 112] => lookup_927_36_6(acc),
            [107, 119, 112] => lookup_927_36_7(acc),
            [107, 119, 112, 115, 112] => lookup_927_36_8(acc),
            [109, 117, 112] => lookup_927_36_9(acc),
            [109, 119] => lookup_927_36_10(acc),
            [111, 105, 97] => lookup_927_36_11(acc),
            [111, 105, 114, 109] => lookup_927_36_12(acc),
            [111, 107, 101] => lookup_927_36_13(acc),
            [111, 111, 119] => lookup_927_36_14(acc),
            [111, 115, 99, 104, 114] => lookup_927_36_15(acc),
            [111, 117, 109] => lookup_927_36_16(acc),
            [112, 97] => lookup_927_36_17(acc),
            [112, 105, 110, 98] => lookup_927_36_18(acc),
            [112, 105, 119] => lookup_927_36_19(acc),
            [112, 111] => lookup_927_36_20(acc),
            [112, 114] => lookup_927_36_21(acc),
            [112, 115, 112] => lookup_927_36_22(acc),
            [112, 115, 115, 101] => lookup_927_36_23(acc),
            [112, 117, 112] => lookup_927_36_24(acc),
            [114, 122, 103, 119] => lookup_927_36_25(acc),
            [115, 97] => lookup_927_36_26(acc),
            [115, 100, 110] => lookup_927_36_27(acc),
            [115, 107, 111] => lookup_927_36_28(acc),
            [115, 111] => lookup_927_36_29(acc),
            [115, 114] => lookup_927_36_30(acc),
            [115, 116, 97, 114, 111, 115, 116, 119, 111] => lookup_927_36_31(acc),
            [117, 103] => lookup_927_36_32(acc),
            [117, 103, 105, 109] => lookup_927_36_33(acc),
            [117, 109] => lookup_927_36_34(acc),
            [117, 109, 105, 103] => lookup_927_36_35(acc),
            [117, 112, 111, 119] => lookup_927_36_36(acc),
            [117, 112, 112, 111] => lookup_927_36_37(acc),
            [117, 115] => lookup_927_36_38(acc),
            [117, 119] => lookup_927_36_39(acc),
            [117, 122, 115] => lookup_927_36_40(acc),
            [119, 105, 102] => lookup_927_36_41(acc),
            [119, 105, 105, 104] => lookup_927_36_42(acc),
            [119, 105, 110, 98] => lookup_927_36_43(acc),
            [119, 105, 111, 115] => lookup_927_36_44(acc),
            [119, 105, 116, 100] => lookup_927_36_45(acc),
            [119, 105, 119] => lookup_927_36_46(acc),
            [119, 107, 122] => lookup_927_36_47(acc),
            [119, 115, 97] => lookup_927_36_48(acc),
            [119, 115, 107, 114] => lookup_927_36_49(acc),
            [119, 115, 115, 101] => lookup_927_36_50(acc),
            [119, 117, 111, 122] => lookup_927_36_51(acc),
            [119, 122, 109, 105, 117, 119] => lookup_927_36_52(acc),
            [122, 112] => lookup_927_36_53(acc),
            [122, 112, 105, 115, 100, 110] => lookup_927_36_54(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_927_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_85(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_86(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_87(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_88(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_89(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_90(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_91(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_92(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_93(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_94(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_95(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_96(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_97(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_98(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_99(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_100(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_101(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_102(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_103(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_104(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_105(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_106(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_107(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_108(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_109(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_110(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_111(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_112(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_113(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_114(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_115(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_116(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_117(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_118(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_119(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_120(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_121(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_122(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_123(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_124(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_125(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_126(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_127(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_128(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_129(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_130(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_131(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_132(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_133(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_134(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_135(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_136(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_137(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_138(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_139(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_140(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_141(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_142(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_143(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_144(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_145(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_146(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_147(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_148(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_149(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_150(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_151(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_152(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_153(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_154(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_155(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_156(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_157(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_158(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_159(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_160(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_161(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_162(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_163(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_164(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_165(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_166(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_167(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_168(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_169(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_170(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_171(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_172(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_173(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_174(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_175(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_927_176(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_177(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927_178(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_927<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 103, 114, 111] => lookup_927_0(acc),
            [97, 105, 100] => lookup_927_1(acc),
            [97, 114, 116] => lookup_927_2(acc),
            [97, 116, 109] => lookup_927_3(acc),
            [97, 117, 103, 117, 115, 116, 111, 119] => lookup_927_4(acc),
            [97, 117, 116, 111] => lookup_927_5(acc),
            [98, 97, 98, 105, 97, 45, 103, 111, 114, 97] => lookup_927_6(acc),
            [98, 101, 100, 122, 105, 110] => lookup_927_7(acc),
            [98, 101, 101, 112] => lookup_927_8(acc),
            [98, 101, 115, 107, 105, 100, 121] => lookup_927_9(acc),
            [98, 105, 97, 108, 111, 119, 105, 101, 122, 97] => lookup_927_10(acc),
            [98, 105, 97, 108, 121, 115, 116, 111, 107] => lookup_927_11(acc),
            [98, 105, 101, 108, 97, 119, 97] => lookup_927_12(acc),
            [98, 105, 101, 115, 122, 99, 122, 97, 100, 121] => lookup_927_13(acc),
            [98, 105, 122] => lookup_927_14(acc),
            [98, 111, 108, 101, 115, 108, 97, 119, 105, 101, 99] => lookup_927_15(acc),
            [98, 121, 100, 103, 111, 115, 122, 99, 122] => lookup_927_16(acc),
            [98, 121, 116, 111, 109] => lookup_927_17(acc),
            [99, 105, 101, 115, 122, 121, 110] => lookup_927_18(acc),
            [99, 111] => lookup_927_19(acc),
            [99, 111, 109] => lookup_927_20(acc),
            [99, 122, 101, 108, 97, 100, 122] => lookup_927_21(acc),
            [99, 122, 101, 115, 116] => lookup_927_22(acc),
            [100, 108, 117, 103, 111, 108, 101, 107, 97] => lookup_927_23(acc),
            [101, 99, 111, 109, 109, 101, 114, 99, 101, 45, 115, 104, 111, 112] => {
                lookup_927_24(acc)
            }
            [101, 100, 117] => lookup_927_25(acc),
            [101, 108, 98, 108, 97, 103] => lookup_927_26(acc),
            [101, 108, 107] => lookup_927_27(acc),
            [103, 100, 97] => lookup_927_28(acc),
            [103, 100, 97, 110, 115, 107] => lookup_927_29(acc),
            [103, 100, 121, 110, 105, 97] => lookup_927_30(acc),
            [103, 108, 105, 119, 105, 99, 101] => lookup_927_31(acc),
            [103, 108, 111, 103, 111, 119] => lookup_927_32(acc),
            [103, 109, 105, 110, 97] => lookup_927_33(acc),
            [103, 110, 105, 101, 122, 110, 111] => lookup_927_34(acc),
            [103, 111, 114, 108, 105, 99, 101] => lookup_927_35(acc),
            [103, 111, 118] => lookup_927_36(labels, acc),
            [103, 114, 97, 106, 101, 119, 111] => lookup_927_37(acc),
            [103, 115, 109] => lookup_927_38(acc),
            [104, 111, 109, 101, 115, 107, 108, 101, 112] => lookup_927_39(acc),
            [105, 108, 97, 119, 97] => lookup_927_40(acc),
            [105, 110, 102, 111] => lookup_927_41(acc),
            [106, 97, 119, 111, 114, 122, 110, 111] => lookup_927_42(acc),
            [106, 101, 108, 101, 110, 105, 97, 45, 103, 111, 114, 97] => lookup_927_43(acc),
            [106, 103, 111, 114, 97] => lookup_927_44(acc),
            [107, 97, 108, 105, 115, 122] => lookup_927_45(acc),
            [107, 97, 114, 112, 97, 99, 122] => lookup_927_46(acc),
            [107, 97, 114, 116, 117, 122, 121] => lookup_927_47(acc),
            [107, 97, 115, 122, 117, 98, 121] => lookup_927_48(acc),
            [107, 97, 116, 111, 119, 105, 99, 101] => lookup_927_49(acc),
            [107, 97, 122, 105, 109, 105, 101, 114, 122, 45, 100, 111, 108, 110, 121] => {
                lookup_927_50(acc)
            }
            [107, 101, 112, 110, 111] => lookup_927_51(acc),
            [107, 101, 116, 114, 122, 121, 110] => lookup_927_52(acc),
            [107, 108, 111, 100, 122, 107, 111] => lookup_927_53(acc),
            [107, 111, 98, 105, 101, 114, 122, 121, 99, 101] => lookup_927_54(acc),
            [107, 111, 108, 111, 98, 114, 122, 101, 103] => lookup_927_55(acc),
            [107, 111, 110, 105, 110] => lookup_927_56(acc),
            [107, 111, 110, 115, 107, 111, 119, 111, 108, 97] => lookup_927_57(acc),
            [107, 114, 97, 107, 111, 119] => lookup_927_58(acc),
            [107, 114, 97, 115, 110, 105, 107] => lookup_927_59(acc),
            [107, 117, 116, 110, 111] => lookup_927_60(acc),
            [108, 97, 112, 121] => lookup_927_61(acc),
            [108, 101, 98, 111, 114, 107] => lookup_927_62(acc),
            [108, 101, 99, 122, 110, 97] => lookup_927_63(acc),
            [108, 101, 103, 110, 105, 99, 97] => lookup_927_64(acc),
            [108, 101, 122, 97, 106, 115, 107] => lookup_927_65(acc),
            [108, 105, 109, 97, 110, 111, 119, 97] => lookup_927_66(acc),
            [108, 111, 109, 122, 97] => lookup_927_67(acc),
            [108, 111, 119, 105, 99, 122] => lookup_927_68(acc),
            [108, 117, 98, 97, 114, 116, 111, 119] => lookup_927_69(acc),
            [108, 117, 98, 105, 110] => lookup_927_70(acc),
            [108, 117, 98, 108, 105, 110] => lookup_927_71(acc),
            [108, 117, 107, 111, 119] => lookup_927_72(acc),
            [109, 97, 105, 108] => lookup_927_73(acc),
            [109, 97, 108, 98, 111, 114, 107] => lookup_927_74(acc),
            [109, 97, 108, 111, 112, 111, 108, 115, 107, 97] => lookup_927_75(acc),
            [109, 97, 122, 111, 119, 115, 122, 101] => lookup_927_76(acc),
            [109, 97, 122, 117, 114, 121] => lookup_927_77(acc),
            [109, 101, 100] => lookup_927_78(acc),
            [109, 101, 100, 105, 97] => lookup_927_79(acc),
            [109, 105, 97, 115, 116, 97] => lookup_927_80(acc),
            [109, 105, 101, 108, 101, 99] => lookup_927_81(acc),
            [109, 105, 101, 108, 110, 111] => lookup_927_82(acc),
            [109, 105, 108] => lookup_927_83(acc),
            [109, 114, 97, 103, 111, 119, 111] => lookup_927_84(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_927_85(acc),
            [110, 97, 107, 108, 111] => lookup_927_86(acc),
            [110, 101, 116] => lookup_927_87(acc),
            [110, 105, 101, 114, 117, 99, 104, 111, 109, 111, 115, 99, 105] => lookup_927_88(acc),
            [110, 111, 109] => lookup_927_89(acc),
            [110, 111, 119, 97, 114, 117, 100, 97] => lookup_927_90(acc),
            [110, 121, 115, 97] => lookup_927_91(acc),
            [111, 108, 97, 119, 97] => lookup_927_92(acc),
            [111, 108, 101, 99, 107, 111] => lookup_927_93(acc),
            [111, 108, 107, 117, 115, 122] => lookup_927_94(acc),
            [111, 108, 115, 122, 116, 121, 110] => lookup_927_95(acc),
            [111, 112, 111, 99, 122, 110, 111] => lookup_927_96(acc),
            [111, 112, 111, 108, 101] => lookup_927_97(acc),
            [111, 114, 103] => lookup_927_98(acc),
            [111, 115, 116, 114, 111, 100, 97] => lookup_927_99(acc),
            [111, 115, 116, 114, 111, 108, 101, 107, 97] => lookup_927_100(acc),
            [111, 115, 116, 114, 111, 119, 105, 101, 99] => lookup_927_101(acc),
            [111, 115, 116, 114, 111, 119, 119, 108, 107, 112] => lookup_927_102(acc),
            [112, 99] => lookup_927_103(acc),
            [112, 105, 108, 97] => lookup_927_104(acc),
            [112, 105, 115, 122] => lookup_927_105(acc),
            [112, 111, 100, 104, 97, 108, 101] => lookup_927_106(acc),
            [112, 111, 100, 108, 97, 115, 105, 101] => lookup_927_107(acc),
            [112, 111, 108, 107, 111, 119, 105, 99, 101] => lookup_927_108(acc),
            [112, 111, 109, 111, 114, 115, 107, 105, 101] => lookup_927_109(acc),
            [112, 111, 109, 111, 114, 122, 101] => lookup_927_110(acc),
            [112, 111, 110, 105, 97, 116, 111, 119, 97] => lookup_927_111(acc),
            [112, 111, 119, 105, 97, 116] => lookup_927_112(acc),
            [112, 111, 122, 110, 97, 110] => lookup_927_113(acc),
            [112, 114, 105, 118] => lookup_927_114(acc),
            [112, 114, 111, 99, 104, 111, 119, 105, 99, 101] => lookup_927_115(acc),
            [112, 114, 117, 115, 122, 107, 111, 119] => lookup_927_116(acc),
            [112, 114, 122, 101, 119, 111, 114, 115, 107] => lookup_927_117(acc),
            [112, 117, 108, 97, 119, 121] => lookup_927_118(acc),
            [114, 97, 100, 111, 109] => lookup_927_119(acc),
            [114, 97, 119, 97, 45, 109, 97, 122] => lookup_927_120(acc),
            [114, 101, 97, 108, 101, 115, 116, 97, 116, 101] => lookup_927_121(acc),
            [114, 101, 108] => lookup_927_122(acc),
            [114, 121, 98, 110, 105, 107] => lookup_927_123(acc),
            [114, 122, 101, 115, 122, 111, 119] => lookup_927_124(acc),
            [115, 97, 110, 111, 107] => lookup_927_125(acc),
            [115, 100, 115, 99, 108, 111, 117, 100] => lookup_927_126(acc),
            [115, 101, 106, 110, 121] => lookup_927_127(acc),
            [115, 101, 120] => lookup_927_128(acc),
            [115, 104, 111, 112] => lookup_927_129(acc),
            [115, 104, 111, 112, 97, 114, 101, 110, 97] => lookup_927_130(acc),
            [115, 105, 109, 112, 108, 101, 115, 105, 116, 101] => lookup_927_131(acc),
            [115, 107, 108, 101, 112] => lookup_927_132(acc),
            [115, 107, 111, 99, 122, 111, 119] => lookup_927_133(acc),
            [115, 108, 97, 115, 107] => lookup_927_134(acc),
            [115, 108, 117, 112, 115, 107] => lookup_927_135(acc),
            [115, 111, 112, 111, 116] => lookup_927_136(acc),
            [115, 111, 115] => lookup_927_137(acc),
            [115, 111, 115, 110, 111, 119, 105, 101, 99] => lookup_927_138(acc),
            [115, 116, 97, 108, 111, 119, 97, 45, 119, 111, 108, 97] => lookup_927_139(acc),
            [115, 116, 97, 114, 97, 99, 104, 111, 119, 105, 99, 101] => lookup_927_140(acc),
            [115, 116, 97, 114, 103, 97, 114, 100] => lookup_927_141(acc),
            [115, 117, 119, 97, 108, 107, 105] => lookup_927_142(acc),
            [115, 119, 105, 100, 110, 105, 99, 97] => lookup_927_143(acc),
            [115, 119, 105, 100, 110, 105, 107] => lookup_927_144(acc),
            [115, 119, 105, 101, 98, 111, 100, 122, 105, 110] => lookup_927_145(acc),
            [115, 119, 105, 110, 111, 117, 106, 115, 99, 105, 101] => lookup_927_146(acc),
            [115, 122, 99, 122, 101, 99, 105, 110] => lookup_927_147(acc),
            [115, 122, 99, 122, 121, 116, 110, 111] => lookup_927_148(acc),
            [115, 122, 107, 111, 108, 97] => lookup_927_149(acc),
            [116, 97, 114, 103, 105] => lookup_927_150(acc),
            [116, 97, 114, 110, 111, 98, 114, 122, 101, 103] => lookup_927_151(acc),
            [116, 103, 111, 114, 121] => lookup_927_152(acc),
            [116, 109] => lookup_927_153(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_927_154(acc),
            [116, 114, 97, 118, 101, 108] => lookup_927_155(acc),
            [116, 117, 114, 101, 107] => lookup_927_156(acc),
            [116, 117, 114, 121, 115, 116, 121, 107, 97] => lookup_927_157(acc),
            [116, 121, 99, 104, 121] => lookup_927_158(acc),
            [117, 110, 105, 99, 108, 111, 117, 100] => lookup_927_159(acc),
            [117, 115, 116, 107, 97] => lookup_927_160(acc),
            [119, 97, 108, 98, 114, 122, 121, 99, 104] => lookup_927_161(acc),
            [119, 97, 114, 109, 105, 97] => lookup_927_162(acc),
            [119, 97, 114, 115, 122, 97, 119, 97] => lookup_927_163(acc),
            [119, 97, 119] => lookup_927_164(acc),
            [119, 101, 103, 114, 111, 119] => lookup_927_165(acc),
            [119, 105, 101, 108, 117, 110] => lookup_927_166(acc),
            [119, 108, 111, 99, 108] => lookup_927_167(acc),
            [119, 108, 111, 99, 108, 97, 119, 101, 107] => lookup_927_168(acc),
            [119, 111, 100, 122, 105, 115, 108, 97, 119] => lookup_927_169(acc),
            [119, 111, 108, 111, 109, 105, 110] => lookup_927_170(acc),
            [119, 114, 111, 99] => lookup_927_171(acc),
            [119, 114, 111, 99, 108, 97, 119] => lookup_927_172(acc),
            [122, 97, 99, 104, 112, 111, 109, 111, 114] => lookup_927_173(acc),
            [122, 97, 103, 97, 110] => lookup_927_174(acc),
            [122, 97, 107, 111, 112, 97, 110, 101] => lookup_927_175(acc),
            [122, 97, 114, 111, 119] => lookup_927_176(acc),
            [122, 103, 111, 114, 97] => lookup_927_177(acc),
            [122, 103, 111, 114, 122, 101, 108, 101, 99] => lookup_927_178(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_928_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_928<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_928_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_929() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_930() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_931() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_932() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_933_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_933_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_933<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 97, 109, 101] => lookup_933_0(acc),
            [111, 119, 110] => lookup_933_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_934_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_934<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_934_0(acc),
            [101, 100, 117] => lookup_934_1(acc),
            [103, 111, 118] => lookup_934_2(acc),
            [110, 101, 116] => lookup_934_3(acc),
            [111, 114, 103] => lookup_934_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_935() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_936() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_937() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_938() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_939_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_939<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [105, 110, 100, 105, 101] => lookup_939_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_940() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_941<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_941_0(acc),
            [98, 105, 122] => lookup_941_1(acc),
            [99, 111, 109] => lookup_941_2(acc),
            [101, 100, 117] => lookup_941_3(acc),
            [101, 115, 116] => lookup_941_4(acc),
            [103, 111, 118] => lookup_941_5(acc),
            [105, 110, 102, 111] => lookup_941_6(acc),
            [105, 115, 108, 97] => lookup_941_7(acc),
            [110, 97, 109, 101] => lookup_941_8(acc),
            [110, 101, 116] => lookup_941_9(acc),
            [111, 114, 103] => lookup_941_10(acc),
            [112, 114, 111] => lookup_941_11(acc),
            [112, 114, 111, 102] => lookup_941_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_942() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_943() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_944() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_945() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_946_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_946_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_946_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 99, 105] => lookup_946_8_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_946_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_946<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 97, 97] => lookup_946_0(acc),
            [97, 99, 97] => lookup_946_1(acc),
            [97, 99, 99, 116] => lookup_946_2(acc),
            [97, 118, 111, 99, 97, 116] => lookup_946_3(acc),
            [98, 97, 114] => lookup_946_4(acc),
            [98, 97, 114, 115, 121] => lookup_946_5(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_946_6(acc),
            [99, 112, 97] => lookup_946_7(acc),
            [100, 110, 115, 116, 114, 97, 99, 101] => lookup_946_8(info, labels, acc),
            [101, 110, 103] => lookup_946_9(acc),
            [106, 117, 114] => lookup_946_10(acc),
            [108, 97, 119] => lookup_946_11(acc),
            [109, 101, 100] => lookup_946_12(acc),
            [114, 101, 99, 104, 116] => lookup_946_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_947() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_948() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_949() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_950() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_951() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_952() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_953() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_954() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_955() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_956() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_957<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_957_0(acc),
            [101, 100, 117] => lookup_957_1(acc),
            [103, 111, 118] => lookup_957_2(acc),
            [110, 101, 116] => lookup_957_3(acc),
            [111, 114, 103] => lookup_957_4(acc),
            [112, 108, 111] => lookup_957_5(acc),
            [115, 101, 99] => lookup_957_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_958_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_958_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_958_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_958_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_958_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_958_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_958_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_958_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_958_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_958_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_958<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 112, 97, 103, 105, 110, 97, 119, 101, 98] => lookup_958_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_958_1(acc),
            [99, 111, 109] => lookup_958_2(acc),
            [101, 100, 117] => lookup_958_3(acc),
            [103, 111, 118] => lookup_958_4(acc),
            [105, 110, 116] => lookup_958_5(acc),
            [110, 101, 116] => lookup_958_6(acc),
            [110, 111, 109, 101] => lookup_958_7(acc),
            [111, 114, 103] => lookup_958_8(acc),
            [112, 117, 98, 108] => lookup_958_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_959_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_959<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_959_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_960_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_960_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_960_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_960<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 108, 97, 117] => lookup_960_0(acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_960_1(acc),
            [99, 111] => lookup_960_2(acc),
            [101, 100] => lookup_960_3(acc),
            [103, 111] => lookup_960_4(acc),
            [110, 101] => lookup_960_5(acc),
            [111, 114] => lookup_960_6(acc),
            [120, 52, 52, 51] => lookup_960_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_961() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_962<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_962_0(acc),
            [99, 111, 111, 112] => lookup_962_1(acc),
            [101, 100, 117] => lookup_962_2(acc),
            [103, 111, 118] => lookup_962_3(acc),
            [109, 105, 108] => lookup_962_4(acc),
            [110, 101, 116] => lookup_962_5(acc),
            [111, 114, 103] => lookup_962_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_963_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_963_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_963<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_963_0(acc),
            [99, 111, 109] => lookup_963_1(acc),
            [101, 100, 117] => lookup_963_2(acc),
            [103, 111, 118] => lookup_963_3(acc),
            [109, 105, 108] => lookup_963_4(acc),
            [110, 97, 109, 101] => lookup_963_5(acc),
            [110, 101, 116] => lookup_963_6(acc),
            [111, 114, 103] => lookup_963_7(acc),
            [115, 99, 104] => lookup_963_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_964() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_965() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_966() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_967() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_968() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_969_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_969_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_969_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_969_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_969<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 115, 115, 111] => lookup_969_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_969_1(acc),
            [99, 111, 109] => lookup_969_2(acc),
            [110, 111, 109] => lookup_969_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_970() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_971() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_972() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_973() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_974() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_975() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_976() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_977() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_978() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_979() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_980() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_981() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_982() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_983() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_984() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_985() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_986() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_987() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_988() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_989() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_990() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_991_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_991<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_991_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_992() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_993() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_994() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_995() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_996() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_997() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_998() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_999_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_999<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 97, 110] => lookup_999_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1000_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1000_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1000_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1000_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1000_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1000<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_1000_0(acc),
            [98, 97, 114, 115, 121] => lookup_1000_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1000_2(acc),
            [99, 111] => lookup_1000_3(acc),
            [99, 111, 109] => lookup_1000_4(acc),
            [102, 105, 114, 109] => lookup_1000_5(acc),
            [105, 110, 102, 111] => lookup_1000_6(acc),
            [110, 111, 109] => lookup_1000_7(acc),
            [110, 116] => lookup_1000_8(acc),
            [111, 114, 103] => lookup_1000_9(acc),
            [114, 101, 99] => lookup_1000_10(acc),
            [115, 104, 111, 112] => lookup_1000_11(acc),
            [115, 116, 111, 114, 101] => lookup_1000_12(acc),
            [116, 109] => lookup_1000_13(acc),
            [119, 119, 119] => lookup_1000_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1001() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1002_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1002_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1002_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1002<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 105, 109, 97, 45, 99, 105, 116, 121] => lookup_1002_0(acc),
            [109, 121, 100, 100, 110, 115] => lookup_1002_1(acc),
            [119, 101, 98, 115, 112, 97, 99, 101] => lookup_1002_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1003() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1004() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1005() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1006_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1006_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1006_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1006_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [115, 104, 111, 112] => lookup_1006_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1006_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1006_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1006_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1006_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1006_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1006_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1006_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1006<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1006_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1006_1(acc),
            [98, 114, 101, 110, 100, 108, 121] => lookup_1006_2(info, labels, acc),
            [99, 111] => lookup_1006_3(acc),
            [101, 100, 117] => lookup_1006_4(acc),
            [103, 111, 118] => lookup_1006_5(acc),
            [105, 110] => lookup_1006_6(acc),
            [111, 114, 103] => lookup_1006_7(acc),
            [111, 120] => lookup_1006_8(acc),
            [117, 97] => lookup_1006_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1007() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1008_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_7<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            [104, 98] => lookup_1008_7_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1008_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_19_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_19<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [118, 112, 115] => lookup_1008_19_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1008_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_25_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_25_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1008_25_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1008_25_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_25_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1008_25_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1008_25_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_25_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1008_25_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1008_25_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_25_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1008_25_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1008_25<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [104, 111, 115, 116, 105, 110, 103] => lookup_1008_25_0(info, labels, acc),
            [108, 97, 110, 100, 105, 110, 103] => lookup_1008_25_1(info, labels, acc),
            [115, 112, 101, 99, 116, 114, 117, 109] => lookup_1008_25_2(info, labels, acc),
            [118, 112, 115] => lookup_1008_25_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1008_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_35<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1008_35_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1008_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1008<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 115, 97, 105, 116] => lookup_1008_0(acc),
            [97, 99] => lookup_1008_1(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_1008_2(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_1008_3(acc),
            [98, 105, 114] => lookup_1008_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1008_5(acc),
            [99, 98, 103] => lookup_1008_6(acc),
            [99, 108, 100, 109, 97, 105, 108] => lookup_1008_7(info, labels, acc),
            [99, 111, 109] => lookup_1008_8(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_1008_9(acc),
            [101, 100, 117] => lookup_1008_10(acc),
            [101, 117, 114, 111, 100, 105, 114] => lookup_1008_11(acc),
            [103, 111, 118] => lookup_1008_12(acc),
            [103, 114, 111, 122, 110, 121] => lookup_1008_13(acc),
            [105, 110, 116] => lookup_1008_14(acc),
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_1008_15(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_1008_16(acc),
            [108, 107, 51] => lookup_1008_17(acc),
            [109, 97, 114, 105, 110, 101] => lookup_1008_18(acc),
            [109, 99, 100, 105, 114] => lookup_1008_19(labels, acc),
            [109, 99, 112, 114, 101] => lookup_1008_20(acc),
            [109, 105, 108] => lookup_1008_21(acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_1008_22(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_1008_23(acc),
            [109, 115, 107] => lookup_1008_24(acc),
            [109, 121, 106, 105, 110, 111] => lookup_1008_25(labels, acc),
            [109, 121, 116, 105, 115] => lookup_1008_26(acc),
            [110, 97, 52, 117] => lookup_1008_27(acc),
            [110, 97, 108, 99, 104, 105, 107] => lookup_1008_28(acc),
            [110, 101, 116] => lookup_1008_29(acc),
            [110, 111, 118] => lookup_1008_30(acc),
            [111, 114, 103] => lookup_1008_31(acc),
            [112, 112] => lookup_1008_32(acc),
            [112, 121, 97, 116, 105, 103, 111, 114, 115, 107] => lookup_1008_33(acc),
            [114, 97, 115] => lookup_1008_34(acc),
            [114, 101, 103, 114, 117, 104, 111, 115, 116, 105, 110, 103] => {
                lookup_1008_35(info, labels, acc)
            }
            [115, 112, 98] => lookup_1008_36(acc),
            [116, 101, 115, 116] => lookup_1008_37(acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_1008_38(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_1008_39(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1009() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1010() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1011_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1011_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1011_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1011_1_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1011_1<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1011_1_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1011_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1011_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1011_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1011_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1011_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1011_5_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1011_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1011_5_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1011_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1011_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1011_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1011_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1011<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 117, 105, 108, 100] => lookup_1011_0(info, labels, acc),
            [99, 111, 100, 101] => lookup_1011_1(info, labels, acc),
            [100, 97, 116, 97, 98, 97, 115, 101] => lookup_1011_2(info, labels, acc),
            [100, 101, 118, 101, 108, 111, 112, 109, 101, 110, 116] => lookup_1011_3(acc),
            [104, 115] => lookup_1011_4(acc),
            [109, 105, 103, 114, 97, 116, 105, 111, 110] => lookup_1011_5(info, labels, acc),
            [111, 110, 112, 111, 114, 116, 101, 114] => lookup_1011_6(acc),
            [114, 97, 118, 101, 110, 100, 98] => lookup_1011_7(acc),
            [114, 101, 112, 108] => lookup_1011_8(acc),
            [115, 101, 114, 118, 101, 114, 115] => lookup_1011_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1012_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1012<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1012_0(acc),
            [99, 111] => lookup_1012_1(acc),
            [99, 111, 111, 112] => lookup_1012_2(acc),
            [103, 111, 118] => lookup_1012_3(acc),
            [109, 105, 108] => lookup_1012_4(acc),
            [110, 101, 116] => lookup_1012_5(acc),
            [111, 114, 103] => lookup_1012_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1013() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1014() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1015<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1015_0(acc),
            [101, 100, 117] => lookup_1015_1(acc),
            [103, 111, 118] => lookup_1015_2(acc),
            [109, 101, 100] => lookup_1015_3(acc),
            [110, 101, 116] => lookup_1015_4(acc),
            [111, 114, 103] => lookup_1015_5(acc),
            [112, 117, 98] => lookup_1015_6(acc),
            [115, 99, 104] => lookup_1015_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1016() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1017() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1018() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1019() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1020() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1021() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1022() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1023() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1024() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1025() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1026() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1027() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1028() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1029() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1030() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1031() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1032_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1032_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1032_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1032_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1032_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1032<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1032_0(acc),
            [101, 100, 117] => lookup_1032_1(acc),
            [103, 111, 118] => lookup_1032_2(acc),
            [110, 101, 116] => lookup_1032_3(acc),
            [111, 114, 103] => lookup_1032_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1033() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1034() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1035_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1035_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1035_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1035_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1035_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1035<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1035_0(acc),
            [101, 100, 117] => lookup_1035_1(acc),
            [103, 111, 118] => lookup_1035_2(acc),
            [110, 101, 116] => lookup_1035_3(acc),
            [111, 114, 103] => lookup_1035_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1036() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1037() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1038() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1039() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1040() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1041() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1042() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1043() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1044_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1044<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1044_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1045_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1045_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1045_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 114, 118, 105, 99, 101] => lookup_1045_1_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1045<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [101, 100, 117] => lookup_1045_0(acc),
            [103, 111, 118] => lookup_1045_1(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1046_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1046<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1046_0(acc),
            [101, 100, 117] => lookup_1046_1(acc),
            [103, 111, 118] => lookup_1046_2(acc),
            [105, 110, 102, 111] => lookup_1046_3(acc),
            [109, 101, 100] => lookup_1046_4(acc),
            [110, 101, 116] => lookup_1046_5(acc),
            [111, 114, 103] => lookup_1046_6(acc),
            [116, 118] => lookup_1046_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1047_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1047_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1047_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1047_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1047_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1047_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1047_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1047_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_34_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1047_34<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 4usize;
    match labels.next() {
        Some(label) => match label {
            [115, 117] => lookup_1047_34_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1047_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1047<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [49, 50, 51, 109, 105, 110, 115, 105, 100, 97] => lookup_1047_0(acc),
            [97] => lookup_1047_1(acc),
            [97, 99] => lookup_1047_2(acc),
            [98] => lookup_1047_3(acc),
            [98, 100] => lookup_1047_4(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1047_5(acc),
            [98, 114, 97, 110, 100] => lookup_1047_6(acc),
            [99] => lookup_1047_7(acc),
            [99, 111, 109] => lookup_1047_8(acc),
            [99, 111, 110, 102] => lookup_1047_9(acc),
            [100] => lookup_1047_10(acc),
            [101] => lookup_1047_11(acc),
            [102] => lookup_1047_12(acc),
            [102, 104] => lookup_1047_13(acc),
            [102, 104, 115, 107] => lookup_1047_14(acc),
            [102, 104, 118] => lookup_1047_15(acc),
            [103] => lookup_1047_16(acc),
            [104] => lookup_1047_17(acc),
            [105] => lookup_1047_18(acc),
            [105, 111, 112, 115, 121, 115] => lookup_1047_19(acc),
            [105, 116, 99, 111, 117, 108, 100, 98, 101, 119, 111, 114] => lookup_1047_20(acc),
            [107] => lookup_1047_21(acc),
            [107, 111, 109, 102, 111, 114, 98] => lookup_1047_22(acc),
            [107, 111, 109, 109, 117, 110, 97, 108, 102, 111, 114, 98, 117, 110, 100] => {
                lookup_1047_23(acc)
            }
            [107, 111, 109, 118, 117, 120] => lookup_1047_24(acc),
            [108] => lookup_1047_25(acc),
            [108, 97, 110, 98, 105, 98] => lookup_1047_26(acc),
            [109] => lookup_1047_27(acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_1047_28(acc),
            [110] => lookup_1047_29(acc),
            [110, 97, 116, 117, 114, 98, 114, 117, 107, 115, 103, 121, 109, 110] => {
                lookup_1047_30(acc)
            }
            [111] => lookup_1047_31(acc),
            [111, 114, 103] => lookup_1047_32(acc),
            [112] => lookup_1047_33(acc),
            [112, 97, 98, 97] => lookup_1047_34(info, labels, acc),
            [112, 97, 114, 116, 105] => lookup_1047_35(acc),
            [112, 112] => lookup_1047_36(acc),
            [112, 114, 101, 115, 115] => lookup_1047_37(acc),
            [114] => lookup_1047_38(acc),
            [115] => lookup_1047_39(acc),
            [116] => lookup_1047_40(acc),
            [116, 109] => lookup_1047_41(acc),
            [117] => lookup_1047_42(acc),
            [119] => lookup_1047_43(acc),
            [120] => lookup_1047_44(acc),
            [121] => lookup_1047_45(acc),
            [122] => lookup_1047_46(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1048() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1049() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1050() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1051() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1052() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1053() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1054() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1055_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1055<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 8usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1055_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1056() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1057() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1058() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1059() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1060() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1061_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1061_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1061<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1061_0(acc),
            [99, 111, 109] => lookup_1061_1(acc),
            [101, 100, 117] => lookup_1061_2(acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_1061_3(acc),
            [103, 111, 118] => lookup_1061_4(acc),
            [110, 101, 116] => lookup_1061_5(acc),
            [111, 114, 103] => lookup_1061_6(acc),
            [112, 101, 114] => lookup_1061_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1062_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1062_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1062_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1062_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1062_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1062_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1062_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1062_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1062_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1062_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1062_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1062_8_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1062_8<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [98, 99] => lookup_1062_8_0(acc),
            [101, 110, 116] => lookup_1062_8_1(acc),
            [101, 117] => lookup_1062_8_2(acc),
            [117, 115] => lookup_1062_8_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1062_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1062_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1062<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 112] => lookup_1062_0(acc),
            [99, 111, 109] => lookup_1062_1(acc),
            [103, 111, 118] => lookup_1062_2(acc),
            [104, 97, 115, 104, 98, 97, 110, 103] => lookup_1062_3(acc),
            [109, 105, 108] => lookup_1062_4(acc),
            [110, 101, 116] => lookup_1062_5(acc),
            [110, 111, 119] => lookup_1062_6(acc),
            [111, 114, 103] => lookup_1062_7(acc),
            [112, 108, 97, 116, 102, 111, 114, 109] => lookup_1062_8(info, labels, acc),
            [118, 120, 108] => lookup_1062_9(acc),
            [119, 101, 100, 101, 112, 108, 111, 121] => lookup_1062_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1063() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1064() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1065() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1066() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1067() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1068() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1069() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1070_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1070_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1070_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1070<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1070_0(acc),
            [98, 97, 115, 101] => lookup_1070_1(acc),
            [104, 111, 112, 108, 105, 120] => lookup_1070_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1071() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1072() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1073() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1074() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1075_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1075_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1075_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1075<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1075_0(acc),
            [103, 105, 116, 97, 112, 112] => lookup_1075_1(acc),
            [103, 105, 116, 112, 97, 103, 101] => lookup_1075_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1076() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1077() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1078() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1079_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_2_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_2<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1079_2_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1079_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_14_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_14<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1079_14_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1079_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_16_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1079_16<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1079_16_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1079<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1079_0(acc),
            [98, 121, 101, 110] => lookup_1079_1(acc),
            [99, 108, 111, 117, 100, 101, 114, 97] => lookup_1079_2(info, labels, acc),
            [99, 121, 111, 110] => lookup_1079_3(acc),
            [102, 97, 115, 116, 118, 112, 115] => lookup_1079_4(acc),
            [102, 110, 119, 107] => lookup_1079_5(acc),
            [102, 111, 108, 105, 111, 110, 101, 116, 119, 111, 114, 107] => lookup_1079_6(acc),
            [106, 101, 108, 101] => lookup_1079_7(acc),
            [108, 101, 108, 117, 120] => lookup_1079_8(acc),
            [108, 111, 103, 105, 110, 108, 105, 110, 101] => lookup_1079_9(acc),
            [109, 105, 110, 116, 101, 114, 101] => lookup_1079_10(acc),
            [110, 111, 118, 101, 99, 111, 114, 101] => lookup_1079_11(acc),
            [111, 109, 110, 105, 119, 101] => lookup_1079_12(acc),
            [111, 112, 101, 110, 115, 111, 99, 105, 97, 108] => lookup_1079_13(acc),
            [112, 108, 97, 116, 102, 111, 114, 109, 115, 104] => lookup_1079_14(info, labels, acc),
            [115, 114, 104, 116] => lookup_1079_15(acc),
            [116, 115, 116] => lookup_1079_16(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1080() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1081_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1081<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1081_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1082() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1083() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1084() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1085() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1086_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1086_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1086_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1086_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1086_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1086<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1086_0(acc),
            [101, 100, 117] => lookup_1086_1(acc),
            [103, 111, 118] => lookup_1086_2(acc),
            [110, 101, 116] => lookup_1086_3(acc),
            [111, 114, 103] => lookup_1086_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1087() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1088() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1089() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1090() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1091_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1091<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116] => lookup_1091_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1091_1(acc),
            [99, 111, 109] => lookup_1091_2(acc),
            [101, 100, 117] => lookup_1091_3(acc),
            [103, 111, 117, 118] => lookup_1091_4(acc),
            [111, 114, 103] => lookup_1091_5(acc),
            [112, 101, 114, 115, 111] => lookup_1091_6(acc),
            [117, 110, 105, 118] => lookup_1091_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1092() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1093_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1093_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1093_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1093_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1093_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1093_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1093_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1093<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1093_0(acc),
            [101, 100, 117] => lookup_1093_1(acc),
            [103, 111, 118] => lookup_1093_2(acc),
            [109, 101] => lookup_1093_3(acc),
            [110, 101, 116] => lookup_1093_4(acc),
            [111, 114, 103] => lookup_1093_5(acc),
            [115, 99, 104] => lookup_1093_6(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1094() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1095() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1096() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1097() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1098() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1099() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1100_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1100_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 5usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1100_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1100<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 104, 101, 114] => lookup_1100_0(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1101() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1102() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1103() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1104() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1105_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1105_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1105_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1105<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 102, 97, 115, 116] => lookup_1105_0(acc),
            [117, 98, 101, 114] => lookup_1105_1(acc),
            [120, 115, 52, 97, 108, 108] => lookup_1105_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1106() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1107() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1108() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1109() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1110<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1110_0(acc),
            [99, 111, 109] => lookup_1110_1(acc),
            [101, 100, 117] => lookup_1110_2(acc),
            [103, 111, 118] => lookup_1110_3(acc),
            [109, 101] => lookup_1110_4(acc),
            [110, 101, 116] => lookup_1110_5(acc),
            [111, 114, 103] => lookup_1110_6(acc),
            [115, 99, 104] => lookup_1110_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1111_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1111_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1111_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1111<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1111_0(acc),
            [99, 111, 109] => lookup_1111_1(acc),
            [99, 111, 110, 115, 117, 108, 97, 100, 111] => lookup_1111_2(acc),
            [101, 100, 117] => lookup_1111_3(acc),
            [101, 109, 98, 97, 105, 120, 97, 100, 97] => lookup_1111_4(acc),
            [107, 105, 114, 97, 114, 97] => lookup_1111_5(acc),
            [109, 105, 108] => lookup_1111_6(acc),
            [110, 101, 116] => lookup_1111_7(acc),
            [110, 111, 104, 111] => lookup_1111_8(acc),
            [111, 114, 103] => lookup_1111_9(acc),
            [112, 114, 105, 110, 99, 105, 112, 101] => lookup_1111_10(acc),
            [115, 97, 111, 116, 111, 109, 101] => lookup_1111_11(acc),
            [115, 116, 111, 114, 101] => lookup_1111_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1112() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1113() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1114() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1115() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1116() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1117() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1118() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1119() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1120() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1121_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1121_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1121_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1121<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 101, 108, 108, 102, 121] => lookup_1121_0(acc),
            [115, 104, 111, 112, 119, 97, 114, 101] => lookup_1121_1(acc),
            [115, 116, 111, 114, 101, 98, 97, 115, 101] => lookup_1121_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1122() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1123() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1124() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1125() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1126_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1126<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 98, 107, 104, 97, 122, 105, 97] => lookup_1126_0(acc),
            [97, 100, 121, 103, 101, 121, 97] => lookup_1126_1(acc),
            [97, 107, 116, 121, 117, 98, 105, 110, 115, 107] => lookup_1126_2(acc),
            [97, 114, 107, 104, 97, 110, 103, 101, 108, 115, 107] => lookup_1126_3(acc),
            [97, 114, 109, 101, 110, 105, 97] => lookup_1126_4(acc),
            [97, 115, 104, 103, 97, 98, 97, 100] => lookup_1126_5(acc),
            [97, 122, 101, 114, 98, 97, 105, 106, 97, 110] => lookup_1126_6(acc),
            [98, 97, 108, 97, 115, 104, 111, 118] => lookup_1126_7(acc),
            [98, 97, 115, 104, 107, 105, 114, 105, 97] => lookup_1126_8(acc),
            [98, 114, 121, 97, 110, 115, 107] => lookup_1126_9(acc),
            [98, 117, 107, 104, 97, 114, 97] => lookup_1126_10(acc),
            [99, 104, 105, 109, 107, 101, 110, 116] => lookup_1126_11(acc),
            [100, 97, 103, 101, 115, 116, 97, 110] => lookup_1126_12(acc),
            [101, 97, 115, 116, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1126_13(acc)
            }
            [101, 120, 110, 101, 116] => lookup_1126_14(acc),
            [103, 101, 111, 114, 103, 105, 97] => lookup_1126_15(acc),
            [103, 114, 111, 122, 110, 121] => lookup_1126_16(acc),
            [105, 118, 97, 110, 111, 118, 111] => lookup_1126_17(acc),
            [106, 97, 109, 98, 121, 108] => lookup_1126_18(acc),
            [107, 97, 108, 109, 121, 107, 105, 97] => lookup_1126_19(acc),
            [107, 97, 108, 117, 103, 97] => lookup_1126_20(acc),
            [107, 97, 114, 97, 99, 111, 108] => lookup_1126_21(acc),
            [107, 97, 114, 97, 103, 97, 110, 100, 97] => lookup_1126_22(acc),
            [107, 97, 114, 101, 108, 105, 97] => lookup_1126_23(acc),
            [107, 104, 97, 107, 97, 115, 115, 105, 97] => lookup_1126_24(acc),
            [107, 114, 97, 115, 110, 111, 100, 97, 114] => lookup_1126_25(acc),
            [107, 117, 114, 103, 97, 110] => lookup_1126_26(acc),
            [107, 117, 115, 116, 97, 110, 97, 105] => lookup_1126_27(acc),
            [108, 101, 110, 117, 103] => lookup_1126_28(acc),
            [109, 97, 110, 103, 121, 115, 104, 108, 97, 107] => lookup_1126_29(acc),
            [109, 111, 114, 100, 111, 118, 105, 97] => lookup_1126_30(acc),
            [109, 115, 107] => lookup_1126_31(acc),
            [109, 117, 114, 109, 97, 110, 115, 107] => lookup_1126_32(acc),
            [110, 97, 108, 99, 104, 105, 107] => lookup_1126_33(acc),
            [110, 97, 118, 111, 105] => lookup_1126_34(acc),
            [110, 111, 114, 116, 104, 45, 107, 97, 122, 97, 107, 104, 115, 116, 97, 110] => {
                lookup_1126_35(acc)
            }
            [110, 111, 118] => lookup_1126_36(acc),
            [111, 98, 110, 105, 110, 115, 107] => lookup_1126_37(acc),
            [112, 101, 110, 122, 97] => lookup_1126_38(acc),
            [112, 111, 107, 114, 111, 118, 115, 107] => lookup_1126_39(acc),
            [115, 111, 99, 104, 105] => lookup_1126_40(acc),
            [115, 112, 98] => lookup_1126_41(acc),
            [116, 97, 115, 104, 107, 101, 110, 116] => lookup_1126_42(acc),
            [116, 101, 114, 109, 101, 122] => lookup_1126_43(acc),
            [116, 111, 103, 108, 105, 97, 116, 116, 105] => lookup_1126_44(acc),
            [116, 114, 111, 105, 116, 115, 107] => lookup_1126_45(acc),
            [116, 115, 101, 108, 105, 110, 111, 103, 114, 97, 100] => lookup_1126_46(acc),
            [116, 117, 108, 97] => lookup_1126_47(acc),
            [116, 117, 118, 97] => lookup_1126_48(acc),
            [118, 108, 97, 100, 105, 107, 97, 118, 107, 97, 122] => lookup_1126_49(acc),
            [118, 108, 97, 100, 105, 109, 105, 114] => lookup_1126_50(acc),
            [118, 111, 108, 111, 103, 100, 97] => lookup_1126_51(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1127() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1128() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1129() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1130_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1130<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 97, 114, 115, 121] => lookup_1130_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1131() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1132() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1133() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1134_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1134_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1134_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1134_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1134_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1134<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1134_0(acc),
            [101, 100, 117] => lookup_1134_1(acc),
            [103, 111, 98] => lookup_1134_2(acc),
            [111, 114, 103] => lookup_1134_3(acc),
            [114, 101, 100] => lookup_1134_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1135() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1136() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1137_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1137<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1137_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1138_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1138<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1138_0(acc),
            [101, 100, 117] => lookup_1138_1(acc),
            [103, 111, 118] => lookup_1138_2(acc),
            [109, 105, 108] => lookup_1138_3(acc),
            [110, 101, 116] => lookup_1138_4(acc),
            [111, 114, 103] => lookup_1138_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1139() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1140_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1140<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [107, 110, 105, 103, 104, 116, 112, 111, 105, 110, 116] => lookup_1140_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1141_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1141_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1141_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1141<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1141_0(acc),
            [99, 111] => lookup_1141_1(acc),
            [111, 114, 103] => lookup_1141_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1142() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1143() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1144() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1145() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1146() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1147() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1148() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1149() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1150() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1151() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1152_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1152_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1152_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1152<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104] => lookup_1152_0(acc),
            [109, 101] => lookup_1152_1(acc),
            [119, 101] => lookup_1152_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1153() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1154_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1154<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1154_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1155() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1156_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1156_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1156<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [100, 105, 115, 99, 111, 117, 114, 115, 101] => lookup_1156_0(acc),
            [106, 101, 108, 97, 115, 116, 105, 99] => lookup_1156_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1157() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1158_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1158<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1158_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1159() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1160() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1161() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1162() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1163_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1163<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [115, 99, 104] => lookup_1163_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1164() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1165_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1165_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1165<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1165_0(acc),
            [99, 111] => lookup_1165_1(acc),
            [103, 111] => lookup_1165_2(acc),
            [105, 110] => lookup_1165_3(acc),
            [109, 105] => lookup_1165_4(acc),
            [110, 101, 116] => lookup_1165_5(acc),
            [111, 110, 108, 105, 110, 101] => lookup_1165_6(acc),
            [111, 114] => lookup_1165_7(acc),
            [115, 104, 111, 112] => lookup_1165_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1166() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1167() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1168() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1169() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1170() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1171() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1172() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1173() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1174() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1175() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1176<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1176_0(acc),
            [98, 105, 122] => lookup_1176_1(acc),
            [99, 111] => lookup_1176_2(acc),
            [99, 111, 109] => lookup_1176_3(acc),
            [101, 100, 117] => lookup_1176_4(acc),
            [103, 111] => lookup_1176_5(acc),
            [103, 111, 118] => lookup_1176_6(acc),
            [105, 110, 116] => lookup_1176_7(acc),
            [109, 105, 108] => lookup_1176_8(acc),
            [110, 97, 109, 101] => lookup_1176_9(acc),
            [110, 101, 116] => lookup_1176_10(acc),
            [110, 105, 99] => lookup_1176_11(acc),
            [111, 114, 103] => lookup_1176_12(acc),
            [116, 101, 115, 116] => lookup_1176_13(acc),
            [119, 101, 98] => lookup_1176_14(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1177() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1178() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1179() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1180() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1181_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1181<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1181_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1182_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1182<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1182_0(acc),
            [99, 111, 109] => lookup_1182_1(acc),
            [101, 100, 117] => lookup_1182_2(acc),
            [103, 111, 118] => lookup_1182_3(acc),
            [109, 105, 108] => lookup_1182_4(acc),
            [110, 101, 116] => lookup_1182_5(acc),
            [110, 111, 109] => lookup_1182_6(acc),
            [111, 114, 103] => lookup_1182_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1183() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1184_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1184<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1184_0(acc),
            [101, 110, 115] => lookup_1184_1(acc),
            [102, 105, 110] => lookup_1184_2(acc),
            [103, 111, 118] => lookup_1184_3(acc),
            [105, 110, 100] => lookup_1184_4(acc),
            [105, 110, 102, 111] => lookup_1184_5(acc),
            [105, 110, 116, 108] => lookup_1184_6(acc),
            [109, 105, 110, 99, 111, 109] => lookup_1184_7(acc),
            [110, 97, 116] => lookup_1184_8(acc),
            [110, 101, 116] => lookup_1184_9(acc),
            [111, 114, 97, 110, 103, 101, 99, 108, 111, 117, 100] => lookup_1184_10(acc),
            [111, 114, 103] => lookup_1184_11(acc),
            [112, 101, 114, 115, 111] => lookup_1184_12(acc),
            [116, 111, 117, 114, 105, 115, 109] => lookup_1184_13(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1185_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1185_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1185_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1185_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1185_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1185_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 12usize;
    match labels.next() {
        Some(label) => match label {
            [100, 105, 114, 101, 99, 116] => lookup_1185_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1185_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1185_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1185_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1185<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [54, 49, 49] => lookup_1185_0(acc),
            [99, 111, 109] => lookup_1185_1(acc),
            [101, 100, 117] => lookup_1185_2(acc),
            [103, 111, 118] => lookup_1185_3(acc),
            [109, 105, 108] => lookup_1185_4(acc),
            [110, 101, 116] => lookup_1185_5(acc),
            [110, 121, 97, 110] => lookup_1185_6(acc),
            [111, 114, 103] => lookup_1185_7(acc),
            [111, 121, 97] => lookup_1185_8(acc),
            [113, 117, 105, 99, 107, 99, 111, 110, 110, 101, 99, 116] => {
                lookup_1185_9(info, labels, acc)
            }
            [114, 100, 118] => lookup_1185_10(acc),
            [118, 112, 110, 112, 108, 117, 115] => lookup_1185_11(acc),
            [120, 48] => lookup_1185_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1186_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1186<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [112, 114, 101, 113, 117, 97, 108, 105, 102, 121, 109, 101] => lookup_1186_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1187() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1188() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1189_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1189_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1189<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [110, 111, 119, 45, 100, 110, 115] => lookup_1189_0(acc),
            [110, 116, 100, 108, 108] => lookup_1189_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1190() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1191() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1192() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1193() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1194() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1195() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1196() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1197_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1197_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_14_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_14<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [103, 111, 118] => lookup_1197_14_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1197_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1197<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 118] => lookup_1197_0(acc),
            [98, 98, 115] => lookup_1197_1(acc),
            [98, 101, 108] => lookup_1197_2(acc),
            [98, 105, 122] => lookup_1197_3(acc),
            [99, 111, 109] => lookup_1197_4(labels, acc),
            [100, 114] => lookup_1197_5(acc),
            [101, 100, 117] => lookup_1197_6(acc),
            [103, 101, 110] => lookup_1197_7(acc),
            [103, 111, 118] => lookup_1197_8(acc),
            [105, 110, 102, 111] => lookup_1197_9(acc),
            [107, 49, 50] => lookup_1197_10(acc),
            [107, 101, 112] => lookup_1197_11(acc),
            [109, 105, 108] => lookup_1197_12(acc),
            [110, 97, 109, 101] => lookup_1197_13(acc),
            [110, 99] => lookup_1197_14(labels, acc),
            [110, 101, 116] => lookup_1197_15(acc),
            [111, 114, 103] => lookup_1197_16(acc),
            [112, 111, 108] => lookup_1197_17(acc),
            [116, 101, 108] => lookup_1197_18(acc),
            [116, 115, 107] => lookup_1197_19(acc),
            [116, 118] => lookup_1197_20(acc),
            [119, 101, 98] => lookup_1197_21(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1198_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1198<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 5usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [121, 98, 111] => lookup_1198_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1199() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1200() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1201() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1202() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1203() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1204() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1205() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1206() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1207<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 101, 114, 111] => lookup_1207_0(acc),
            [98, 105, 122] => lookup_1207_1(acc),
            [99, 111] => lookup_1207_2(acc),
            [99, 111, 109] => lookup_1207_3(acc),
            [99, 111, 111, 112] => lookup_1207_4(acc),
            [101, 100, 117] => lookup_1207_5(acc),
            [103, 111, 118] => lookup_1207_6(acc),
            [105, 110, 102, 111] => lookup_1207_7(acc),
            [105, 110, 116] => lookup_1207_8(acc),
            [106, 111, 98, 115] => lookup_1207_9(acc),
            [109, 111, 98, 105] => lookup_1207_10(acc),
            [109, 117, 115, 101, 117, 109] => lookup_1207_11(acc),
            [110, 97, 109, 101] => lookup_1207_12(acc),
            [110, 101, 116] => lookup_1207_13(acc),
            [111, 114, 103] => lookup_1207_14(acc),
            [112, 114, 111] => lookup_1207_15(acc),
            [116, 114, 97, 118, 101, 108] => lookup_1207_16(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1208() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1209() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1210() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1211() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1212_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1212_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1212_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1212_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1212_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1212_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1212<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 101, 116, 116, 101, 114, 45, 116, 104, 97, 110] => lookup_1212_0(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1212_1(acc),
            [102, 114, 111, 109] => lookup_1212_2(acc),
            [111, 110, 45, 116, 104, 101, 45, 119, 101, 98] => lookup_1212_3(acc),
            [115, 97, 107, 117, 114, 97] => lookup_1212_4(acc),
            [119, 111, 114, 115, 101, 45, 116, 104, 97, 110] => lookup_1212_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1213() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1214_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1214_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [109, 121, 109, 97, 105, 108, 101, 114] => lookup_1214_2_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1214_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1214_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1214<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1214_0(acc),
            [99, 108, 117, 98] => lookup_1214_1(acc),
            [99, 111, 109] => lookup_1214_2(labels, acc),
            [101, 98, 105, 122] => lookup_1214_3(acc),
            [101, 100, 117] => lookup_1214_4(acc),
            [103, 97, 109, 101] => lookup_1214_5(acc),
            [103, 111, 118] => lookup_1214_6(acc),
            [105, 100, 118] => lookup_1214_7(acc),
            [109, 105, 108] => lookup_1214_8(acc),
            [110, 101, 116] => lookup_1214_9(acc),
            [111, 114, 103] => lookup_1214_10(acc),
            [117, 114, 108] => lookup_1214_11(acc),
            [120, 110, 45, 45, 99, 122, 114, 119, 50, 56, 98] => lookup_1214_12(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_1214_13(acc),
            [120, 110, 45, 45, 122, 102, 48, 97, 111, 54, 52, 97] => lookup_1214_14(acc),
            [229, 149, 134, 230, 165, 173] => lookup_1214_15(acc),
            [231, 181, 132, 231, 185, 148] => lookup_1214_16(acc),
            [231, 182, 178, 232, 183, 175] => lookup_1214_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1215_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1215<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1215_0(acc),
            [99, 111] => lookup_1215_1(acc),
            [103, 111] => lookup_1215_2(acc),
            [104, 111, 116, 101, 108] => lookup_1215_3(acc),
            [105, 110, 102, 111] => lookup_1215_4(acc),
            [109, 101] => lookup_1215_5(acc),
            [109, 105, 108] => lookup_1215_6(acc),
            [109, 111, 98, 105] => lookup_1215_7(acc),
            [110, 101] => lookup_1215_8(acc),
            [111, 114] => lookup_1215_9(acc),
            [115, 99] => lookup_1215_10(acc),
            [116, 118] => lookup_1215_11(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1216_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1216_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1216_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1216_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1216_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_22(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_23(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1216_24(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_25(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1216_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_29(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_30(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_31(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_33(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_34(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_35(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_36(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_38(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_39(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_40(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_41(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_42(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_43(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_44(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_45(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1216_46(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_47(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_50(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_51(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_52(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_53(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_54(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_55(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_58(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_59(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_60(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1216_61(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_63(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_64(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_65(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_66(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_67(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_68(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_69(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_70(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_71(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_72(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_73(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1216_74(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_75(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_76(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_77(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_78(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_79(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_80(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_81(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_82(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_83(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216_84(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1216<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1216_0(acc),
            [99, 99] => lookup_1216_1(acc),
            [99, 104, 101, 114, 107, 97, 115, 115, 121] => lookup_1216_2(acc),
            [99, 104, 101, 114, 107, 97, 115, 121] => lookup_1216_3(acc),
            [99, 104, 101, 114, 110, 105, 103, 111, 118] => lookup_1216_4(acc),
            [99, 104, 101, 114, 110, 105, 104, 105, 118] => lookup_1216_5(acc),
            [99, 104, 101, 114, 110, 105, 118, 116, 115, 105] => lookup_1216_6(acc),
            [99, 104, 101, 114, 110, 111, 118, 116, 115, 121] => lookup_1216_7(acc),
            [99, 107] => lookup_1216_8(acc),
            [99, 110] => lookup_1216_9(acc),
            [99, 111] => lookup_1216_10(acc),
            [99, 111, 109] => lookup_1216_11(acc),
            [99, 114] => lookup_1216_12(acc),
            [99, 114, 105, 109, 101, 97] => lookup_1216_13(acc),
            [99, 118] => lookup_1216_14(acc),
            [99, 120] => lookup_1216_15(acc),
            [100, 110] => lookup_1216_16(acc),
            [100, 110, 101, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_1216_17(acc)
            }
            [100, 110, 105, 112, 114, 111, 112, 101, 116, 114, 111, 118, 115, 107] => {
                lookup_1216_18(acc)
            }
            [100, 111, 110, 101, 116, 115, 107] => lookup_1216_19(acc),
            [100, 112] => lookup_1216_20(acc),
            [101, 100, 117] => lookup_1216_21(acc),
            [103, 111, 118] => lookup_1216_22(acc),
            [105, 101] => lookup_1216_23(acc),
            [105, 102] => lookup_1216_24(acc),
            [105, 110] => lookup_1216_25(acc),
            [105, 110, 102] => lookup_1216_26(acc),
            [105, 118, 97, 110, 111, 45, 102, 114, 97, 110, 107, 105, 118, 115, 107] => {
                lookup_1216_27(acc)
            }
            [107, 104] => lookup_1216_28(acc),
            [107, 104, 97, 114, 107, 105, 118] => lookup_1216_29(acc),
            [107, 104, 97, 114, 107, 111, 118] => lookup_1216_30(acc),
            [107, 104, 101, 114, 115, 111, 110] => lookup_1216_31(acc),
            [107, 104, 109, 101, 108, 110, 105, 116, 115, 107, 105, 121] => lookup_1216_32(acc),
            [107, 104, 109, 101, 108, 110, 121, 116, 115, 107, 121, 105] => lookup_1216_33(acc),
            [107, 105, 101, 118] => lookup_1216_34(acc),
            [107, 105, 114, 111, 118, 111, 103, 114, 97, 100] => lookup_1216_35(acc),
            [107, 109] => lookup_1216_36(acc),
            [107, 114] => lookup_1216_37(acc),
            [107, 114, 111, 112, 121, 118, 110, 121, 116, 115, 107, 121, 105] => {
                lookup_1216_38(acc)
            }
            [107, 114, 121, 109] => lookup_1216_39(acc),
            [107, 115] => lookup_1216_40(acc),
            [107, 118] => lookup_1216_41(acc),
            [107, 121, 105, 118] => lookup_1216_42(acc),
            [108, 103] => lookup_1216_43(acc),
            [108, 116] => lookup_1216_44(acc),
            [108, 116, 100] => lookup_1216_45(acc),
            [108, 117, 103, 97, 110, 115, 107] => lookup_1216_46(acc),
            [108, 117, 116, 115, 107] => lookup_1216_47(acc),
            [108, 118] => lookup_1216_48(acc),
            [108, 118, 105, 118] => lookup_1216_49(acc),
            [109, 107] => lookup_1216_50(acc),
            [109, 121, 107, 111, 108, 97, 105, 118] => lookup_1216_51(acc),
            [110, 101, 116] => lookup_1216_52(acc),
            [110, 105, 107, 111, 108, 97, 101, 118] => lookup_1216_53(acc),
            [111, 100] => lookup_1216_54(acc),
            [111, 100, 101, 115, 97] => lookup_1216_55(acc),
            [111, 100, 101, 115, 115, 97] => lookup_1216_56(acc),
            [111, 114, 103] => lookup_1216_57(acc),
            [112, 108] => lookup_1216_58(acc),
            [112, 111, 108, 116, 97, 118, 97] => lookup_1216_59(acc),
            [112, 112] => lookup_1216_60(acc),
            [114, 105, 118, 110, 101] => lookup_1216_61(acc),
            [114, 111, 118, 110, 111] => lookup_1216_62(acc),
            [114, 118] => lookup_1216_63(acc),
            [115, 98] => lookup_1216_64(acc),
            [115, 101, 98, 97, 115, 116, 111, 112, 111, 108] => lookup_1216_65(acc),
            [115, 101, 118, 97, 115, 116, 111, 112, 111, 108] => lookup_1216_66(acc),
            [115, 109] => lookup_1216_67(acc),
            [115, 117, 109, 121] => lookup_1216_68(acc),
            [116, 101] => lookup_1216_69(acc),
            [116, 101, 114, 110, 111, 112, 105, 108] => lookup_1216_70(acc),
            [117, 122] => lookup_1216_71(acc),
            [117, 122, 104, 103, 111, 114, 111, 100] => lookup_1216_72(acc),
            [118] => lookup_1216_73(acc),
            [118, 105, 110, 110, 105, 99, 97] => lookup_1216_74(acc),
            [118, 105, 110, 110, 121, 116, 115, 105, 97] => lookup_1216_75(acc),
            [118, 110] => lookup_1216_76(acc),
            [118, 111, 108, 121, 110] => lookup_1216_77(acc),
            [121, 97, 108, 116, 97] => lookup_1216_78(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 101] => lookup_1216_79(acc),
            [122, 97, 112, 111, 114, 105, 122, 104, 122, 104, 105, 97] => lookup_1216_80(acc),
            [122, 104, 105, 116, 111, 109, 105, 114] => lookup_1216_81(acc),
            [122, 104, 121, 116, 111, 109, 121, 114] => lookup_1216_82(acc),
            [122, 112] => lookup_1216_83(acc),
            [122, 116] => lookup_1216_84(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1217() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1218() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1219_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1219<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1219_0(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1219_1(acc),
            [99, 111] => lookup_1219_2(acc),
            [99, 111, 109] => lookup_1219_3(acc),
            [103, 111] => lookup_1219_4(acc),
            [110, 101] => lookup_1219_5(acc),
            [111, 114] => lookup_1219_6(acc),
            [111, 114, 103] => lookup_1219_7(acc),
            [115, 99] => lookup_1219_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1220_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1220_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_2_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_2_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_2_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_2_4<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [100, 104] => lookup_1220_2_4_0(acc),
            [118, 109] => lookup_1220_2_4_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1220_2_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_2_5<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 10usize;
    match labels.next() {
        Some(label) => match label {
            [106] => lookup_1220_2_5_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1220_2_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_2_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_2_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_2_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_2_9<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 9usize;
    match labels.next() {
        Some(label) => match label {
            [99, 117, 115, 116] => lookup_1220_2_9_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1220_2_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 105, 109, 111] => lookup_1220_2_0(acc),
            [98, 97, 114, 115, 121] => lookup_1220_2_1(acc),
            [98, 97, 114, 115, 121, 111, 110, 108, 105, 110, 101] => lookup_1220_2_2(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1220_2_3(acc),
            [98, 121, 116, 101, 109, 97, 114, 107] => lookup_1220_2_4(info, labels, acc),
            [108, 97, 121, 101, 114, 115, 104, 105, 102, 116] => lookup_1220_2_5(info, labels, acc),
            [109, 121, 115, 112, 114, 101, 97, 100, 115, 104, 111, 112] => lookup_1220_2_6(acc),
            [110, 104, 45, 115, 101, 114, 118] => lookup_1220_2_7(acc),
            [110, 111, 45, 105, 112] => lookup_1220_2_8(acc),
            [114, 101, 116, 114, 111, 115, 110, 117, 98] => lookup_1220_2_9(info, labels, acc),
            [119, 101, 108, 108, 98, 101, 105, 110, 103, 122, 111, 110, 101] => {
                lookup_1220_2_10(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1220_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_5_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 112, 105] => lookup_1220_5_0(acc),
            [99, 97, 109, 112, 97, 105, 103, 110] => lookup_1220_5_1(acc),
            [104, 111, 109, 101, 111, 102, 102, 105, 99, 101] => lookup_1220_5_2(acc),
            [115, 101, 114, 118, 105, 99, 101] => lookup_1220_5_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1220_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 22usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 19usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 17usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1220_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1220_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1220_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1220_16_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_16_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_16_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_16_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_16_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_16_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_16<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 102, 102, 105, 110, 105, 116, 121, 108, 111, 116, 116, 101, 114, 121] => {
                lookup_1220_16_0(acc)
            }
            [103, 108, 117, 103] => lookup_1220_16_1(acc),
            [108, 117, 103] => lookup_1220_16_2(acc),
            [108, 117, 103, 115] => lookup_1220_16_3(acc),
            [114, 97, 102, 102, 108, 101, 101, 110, 116, 114, 121] => lookup_1220_16_4(acc),
            [119, 101, 101, 107, 108, 121, 108, 111, 116, 116, 101, 114, 121] => {
                lookup_1220_16_5(acc)
            }
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1220_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1220_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1220_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_20(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_21(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1220_22_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1220_22<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1220_22_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1220<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1220_0(acc),
            [98, 97, 114, 115, 121] => lookup_1220_1(acc),
            [99, 111] => lookup_1220_2(labels, acc),
            [99, 111, 110, 110] => lookup_1220_3(acc),
            [99, 111, 112, 114, 111] => lookup_1220_4(acc),
            [103, 111, 118] => lookup_1220_5(labels, acc),
            [104, 111, 115, 112] => lookup_1220_6(acc),
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 99, 111, 109, 109, 105, 115, 115, 105, 111, 110] => {
                lookup_1220_7(acc)
            }
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 105, 110, 113, 117, 101, 115, 116] => {
                lookup_1220_8(acc)
            }
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 105, 110, 113, 117, 105, 114, 121] => {
                lookup_1220_9(acc)
            }
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 112, 97, 110, 101, 108] => {
                lookup_1220_10(acc)
            }
            [105, 110, 100, 101, 112, 101, 110, 100, 101, 110, 116, 45, 114, 101, 118, 105, 101, 119] => {
                lookup_1220_11(acc)
            }
            [108, 116, 100] => lookup_1220_12(acc),
            [109, 101] => lookup_1220_13(acc),
            [110, 101, 116] => lookup_1220_14(acc),
            [110, 104, 115] => lookup_1220_15(acc),
            [111, 114, 103] => lookup_1220_16(labels, acc),
            [112, 108, 99] => lookup_1220_17(acc),
            [112, 111, 108, 105, 99, 101] => lookup_1220_18(acc),
            [112, 117, 98, 108, 105, 99, 45, 105, 110, 113, 117, 105, 114, 121] => {
                lookup_1220_19(acc)
            }
            [112, 121, 109, 110, 116] => lookup_1220_20(acc),
            [114, 111, 121, 97, 108, 45, 99, 111, 109, 109, 105, 115, 115, 105, 111, 110] => {
                lookup_1220_21(acc)
            }
            [115, 99, 104] => lookup_1220_22(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1221() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1222() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1223() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1224() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1225() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_0_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_0_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_0_0(acc),
            [107, 49, 50] => lookup_1226_0_1(acc),
            [108, 105, 98] => lookup_1226_0_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_1_0(acc),
            [107, 49, 50] => lookup_1226_1_1(acc),
            [108, 105, 98] => lookup_1226_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_2_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_2_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_2_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_2<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_2_0(acc),
            [107, 49, 50] => lookup_1226_2_1(acc),
            [108, 105, 98] => lookup_1226_2_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_3_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_3_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_3_0(acc),
            [107, 49, 50] => lookup_1226_3_1(acc),
            [108, 105, 98] => lookup_1226_3_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_4_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_4_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_4_0(acc),
            [107, 49, 50] => lookup_1226_4_1(acc),
            [108, 105, 98] => lookup_1226_4_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_5_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_5_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_5_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_5<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_5_0(acc),
            [107, 49, 50] => lookup_1226_5_1(acc),
            [108, 105, 98] => lookup_1226_5_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1226_7_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_7_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_7_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_7<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_7_0(acc),
            [107, 49, 50] => lookup_1226_7_1(acc),
            [108, 105, 98] => lookup_1226_7_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_8_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_8_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_8_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_8<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_8_0(acc),
            [107, 49, 50] => lookup_1226_8_1(acc),
            [108, 105, 98] => lookup_1226_8_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_9_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_9_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_9_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_9<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_9_0(acc),
            [107, 49, 50] => lookup_1226_9_1(acc),
            [108, 105, 98] => lookup_1226_9_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_10_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_10_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_10_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1226_10<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_10_0(acc),
            [107, 49, 50] => lookup_1226_10_1(acc),
            [108, 105, 98] => lookup_1226_10_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1226_13_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1226_13<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 8usize;
    match labels.next() {
        Some(label) => match label {
            [112, 104, 120] => lookup_1226_13_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_15_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_15_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_15_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_15<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_15_0(acc),
            [107, 49, 50] => lookup_1226_15_1(acc),
            [108, 105, 98] => lookup_1226_15_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1226_17_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_17_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_17_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_17<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_17_0(acc),
            [107, 49, 50] => lookup_1226_17_1(acc),
            [108, 105, 98] => lookup_1226_17_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1226_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1226_20_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_20_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_20_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_20<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_20_0(acc),
            [107, 49, 50] => lookup_1226_20_1(acc),
            [108, 105, 98] => lookup_1226_20_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_21_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_21_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_21<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_21_0(acc),
            [108, 105, 98] => lookup_1226_21_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_22_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_22_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_22_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_22<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_22_0(acc),
            [107, 49, 50] => lookup_1226_22_1(acc),
            [108, 105, 98] => lookup_1226_22_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_23_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_23_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_23_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_23<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_23_0(acc),
            [107, 49, 50] => lookup_1226_23_1(acc),
            [108, 105, 98] => lookup_1226_23_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_24_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_24_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_24_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_24<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_24_0(acc),
            [107, 49, 50] => lookup_1226_24_1(acc),
            [108, 105, 98] => lookup_1226_24_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_25_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_25_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_25_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_25<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_25_0(acc),
            [107, 49, 50] => lookup_1226_25_1(acc),
            [108, 105, 98] => lookup_1226_25_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_26(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1226_27(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_28(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_29_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_29_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_29_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_29<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_29_0(acc),
            [107, 49, 50] => lookup_1226_29_1(acc),
            [108, 105, 98] => lookup_1226_29_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_30_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_30_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_30_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_30<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_30_0(acc),
            [107, 49, 50] => lookup_1226_30_1(acc),
            [108, 105, 98] => lookup_1226_30_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_31_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_31_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_31_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_31<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_31_0(acc),
            [107, 49, 50] => lookup_1226_31_1(acc),
            [108, 105, 98] => lookup_1226_31_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_32(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1226_33_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_33_1_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_33_1_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_33_1_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_33_1<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 104, 116, 114] => lookup_1226_33_1_0(acc),
            [112, 97, 114, 111, 99, 104] => lookup_1226_33_1_1(acc),
            [112, 118, 116] => lookup_1226_33_1_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_33_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_33<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_33_0(acc),
            [107, 49, 50] => lookup_1226_33_1(labels, acc),
            [108, 105, 98] => lookup_1226_33_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_34_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_34_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_34_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_34<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_34_0(acc),
            [107, 49, 50] => lookup_1226_34_1(acc),
            [108, 105, 98] => lookup_1226_34_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_35_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_35_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_35_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_35<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_35_0(acc),
            [107, 49, 50] => lookup_1226_35_1(acc),
            [108, 105, 98] => lookup_1226_35_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_36_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_36_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_36_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_36_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_36_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_36_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_36_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_36_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_36_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_36_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_36_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_36<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 110, 110, 45, 97, 114, 98, 111, 114] => lookup_1226_36_0(acc),
            [99, 99] => lookup_1226_36_1(acc),
            [99, 111, 103] => lookup_1226_36_2(acc),
            [100, 115, 116] => lookup_1226_36_3(acc),
            [101, 97, 116, 111, 110] => lookup_1226_36_4(acc),
            [103, 101, 110] => lookup_1226_36_5(acc),
            [107, 49, 50] => lookup_1226_36_6(acc),
            [108, 105, 98] => lookup_1226_36_7(acc),
            [109, 117, 115] => lookup_1226_36_8(acc),
            [116, 101, 99] => lookup_1226_36_9(acc),
            [119, 97, 115, 104, 116, 101, 110, 97, 119] => lookup_1226_36_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_37(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1226_38_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_38_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_38_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_38<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_38_0(acc),
            [107, 49, 50] => lookup_1226_38_1(acc),
            [108, 105, 98] => lookup_1226_38_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_39_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_39_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_39_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_39<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_39_0(acc),
            [107, 49, 50] => lookup_1226_39_1(acc),
            [108, 105, 98] => lookup_1226_39_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_40_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_40_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_40_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_40<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_40_0(acc),
            [107, 49, 50] => lookup_1226_40_1(acc),
            [108, 105, 98] => lookup_1226_40_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_41_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_41_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_41_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_41<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_41_0(acc),
            [107, 49, 50] => lookup_1226_41_1(acc),
            [108, 105, 98] => lookup_1226_41_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_42_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_42_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_42_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_42<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_42_0(acc),
            [107, 49, 50] => lookup_1226_42_1(acc),
            [108, 105, 98] => lookup_1226_42_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_43_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_43_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_43<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_43_0(acc),
            [108, 105, 98] => lookup_1226_43_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_44_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_44_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_44_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_44<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_44_0(acc),
            [107, 49, 50] => lookup_1226_44_1(acc),
            [108, 105, 98] => lookup_1226_44_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_45_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_45_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_45_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_45<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_45_0(acc),
            [107, 49, 50] => lookup_1226_45_1(acc),
            [108, 105, 98] => lookup_1226_45_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_46_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_46_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_46_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_46<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_46_0(acc),
            [107, 49, 50] => lookup_1226_46_1(acc),
            [108, 105, 98] => lookup_1226_46_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_47_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_47_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_47_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_47<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_47_0(acc),
            [107, 49, 50] => lookup_1226_47_1(acc),
            [108, 105, 98] => lookup_1226_47_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_48(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1226_49(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_50_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_50_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_50_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_50<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_50_0(acc),
            [107, 49, 50] => lookup_1226_50_1(acc),
            [108, 105, 98] => lookup_1226_50_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_51_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_51_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_51_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_51<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_51_0(acc),
            [107, 49, 50] => lookup_1226_51_1(acc),
            [108, 105, 98] => lookup_1226_51_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_52_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_52_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_52_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_52<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_52_0(acc),
            [107, 49, 50] => lookup_1226_52_1(acc),
            [108, 105, 98] => lookup_1226_52_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_53_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_53_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_53_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_53<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_53_0(acc),
            [107, 49, 50] => lookup_1226_53_1(acc),
            [108, 105, 98] => lookup_1226_53_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_54_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_54_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_54_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_54<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_54_0(acc),
            [107, 49, 50] => lookup_1226_54_1(acc),
            [108, 105, 98] => lookup_1226_54_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_55_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_55_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_55_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_55<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_55_0(acc),
            [107, 49, 50] => lookup_1226_55_1(acc),
            [108, 105, 98] => lookup_1226_55_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_56(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1226_57(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1226_58_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_58_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_58_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_58<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_58_0(acc),
            [107, 49, 50] => lookup_1226_58_1(acc),
            [108, 105, 98] => lookup_1226_58_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_59_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_59_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_59<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_59_0(acc),
            [108, 105, 98] => lookup_1226_59_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_60_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_60_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_60_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_60<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_60_0(acc),
            [107, 49, 50] => lookup_1226_60_1(acc),
            [108, 105, 98] => lookup_1226_60_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_61_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_61_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_61<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_61_0(acc),
            [108, 105, 98] => lookup_1226_61_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_62(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1226_63_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_63_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_63_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_63<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_63_0(acc),
            [107, 49, 50] => lookup_1226_63_1(acc),
            [108, 105, 98] => lookup_1226_63_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_64_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_64_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_64_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_64<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_64_0(acc),
            [107, 49, 50] => lookup_1226_64_1(acc),
            [108, 105, 98] => lookup_1226_64_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_65_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_65_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_65_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_65<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_65_0(acc),
            [107, 49, 50] => lookup_1226_65_1(acc),
            [108, 105, 98] => lookup_1226_65_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_66_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_66_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_66_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_66<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_66_0(acc),
            [107, 49, 50] => lookup_1226_66_1(acc),
            [108, 105, 98] => lookup_1226_66_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_67_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_67_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_67_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_67<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_67_0(acc),
            [107, 49, 50] => lookup_1226_67_1(acc),
            [108, 105, 98] => lookup_1226_67_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_68_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_68_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_68_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_68<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_68_0(acc),
            [107, 49, 50] => lookup_1226_68_1(acc),
            [108, 105, 98] => lookup_1226_68_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_69_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_69_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_69_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_69<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_69_0(acc),
            [107, 49, 50] => lookup_1226_69_1(acc),
            [108, 105, 98] => lookup_1226_69_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_70_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_70_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_70_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_70<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_70_0(acc),
            [107, 49, 50] => lookup_1226_70_1(acc),
            [108, 105, 98] => lookup_1226_70_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_71_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_71<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_71_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226_72_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_72_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_72_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1226_72<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 99] => lookup_1226_72_0(acc),
            [107, 49, 50] => lookup_1226_72_1(acc),
            [108, 105, 98] => lookup_1226_72_2(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1226<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 107] => lookup_1226_0(labels, acc),
            [97, 108] => lookup_1226_1(labels, acc),
            [97, 114] => lookup_1226_2(labels, acc),
            [97, 115] => lookup_1226_3(labels, acc),
            [97, 122] => lookup_1226_4(labels, acc),
            [99, 97] => lookup_1226_5(labels, acc),
            [99, 108, 111, 117, 100, 110, 115] => lookup_1226_6(acc),
            [99, 111] => lookup_1226_7(labels, acc),
            [99, 116] => lookup_1226_8(labels, acc),
            [100, 99] => lookup_1226_9(labels, acc),
            [100, 101] => lookup_1226_10(labels, acc),
            [100, 110, 105] => lookup_1226_11(acc),
            [100, 114, 117, 100] => lookup_1226_12(acc),
            [101, 110, 115, 99, 97, 108, 101, 100] => lookup_1226_13(info, labels, acc),
            [102, 101, 100] => lookup_1226_14(acc),
            [102, 108] => lookup_1226_15(labels, acc),
            [102, 114, 101, 101, 100, 100, 110, 115] => lookup_1226_16(acc),
            [103, 97] => lookup_1226_17(labels, acc),
            [103, 111, 108, 102, 102, 97, 110] => lookup_1226_18(acc),
            [103, 114, 97, 112, 104, 111, 120] => lookup_1226_19(acc),
            [103, 117] => lookup_1226_20(labels, acc),
            [104, 105] => lookup_1226_21(labels, acc),
            [105, 97] => lookup_1226_22(labels, acc),
            [105, 100] => lookup_1226_23(labels, acc),
            [105, 108] => lookup_1226_24(labels, acc),
            [105, 110] => lookup_1226_25(labels, acc),
            [105, 115, 45, 98, 121] => lookup_1226_26(acc),
            [105, 115, 97] => lookup_1226_27(acc),
            [107, 105, 100, 115] => lookup_1226_28(acc),
            [107, 115] => lookup_1226_29(labels, acc),
            [107, 121] => lookup_1226_30(labels, acc),
            [108, 97] => lookup_1226_31(labels, acc),
            [108, 97, 110, 100, 45, 52, 45, 115, 97, 108, 101] => lookup_1226_32(acc),
            [109, 97] => lookup_1226_33(labels, acc),
            [109, 100] => lookup_1226_34(labels, acc),
            [109, 101] => lookup_1226_35(labels, acc),
            [109, 105] => lookup_1226_36(labels, acc),
            [109, 105, 114, 99, 108, 111, 117, 100] => lookup_1226_37(acc),
            [109, 110] => lookup_1226_38(labels, acc),
            [109, 111] => lookup_1226_39(labels, acc),
            [109, 115] => lookup_1226_40(labels, acc),
            [109, 116] => lookup_1226_41(labels, acc),
            [110, 99] => lookup_1226_42(labels, acc),
            [110, 100] => lookup_1226_43(labels, acc),
            [110, 101] => lookup_1226_44(labels, acc),
            [110, 104] => lookup_1226_45(labels, acc),
            [110, 106] => lookup_1226_46(labels, acc),
            [110, 109] => lookup_1226_47(labels, acc),
            [110, 111, 105, 112] => lookup_1226_48(acc),
            [110, 115, 110] => lookup_1226_49(acc),
            [110, 118] => lookup_1226_50(labels, acc),
            [110, 121] => lookup_1226_51(labels, acc),
            [111, 104] => lookup_1226_52(labels, acc),
            [111, 107] => lookup_1226_53(labels, acc),
            [111, 114] => lookup_1226_54(labels, acc),
            [112, 97] => lookup_1226_55(labels, acc),
            [112, 108, 97, 116, 116, 101, 114, 112] => lookup_1226_56(acc),
            [112, 111, 105, 110, 116, 116, 111] => lookup_1226_57(acc),
            [112, 114] => lookup_1226_58(labels, acc),
            [114, 105] => lookup_1226_59(labels, acc),
            [115, 99] => lookup_1226_60(labels, acc),
            [115, 100] => lookup_1226_61(labels, acc),
            [115, 116, 117, 102, 102, 45, 52, 45, 115, 97, 108, 101] => lookup_1226_62(acc),
            [116, 110] => lookup_1226_63(labels, acc),
            [116, 120] => lookup_1226_64(labels, acc),
            [117, 116] => lookup_1226_65(labels, acc),
            [118, 97] => lookup_1226_66(labels, acc),
            [118, 105] => lookup_1226_67(labels, acc),
            [118, 116] => lookup_1226_68(labels, acc),
            [119, 97] => lookup_1226_69(labels, acc),
            [119, 105] => lookup_1226_70(labels, acc),
            [119, 118] => lookup_1226_71(labels, acc),
            [119, 121] => lookup_1226_72(labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1227_0_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1227_0<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1227_0_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1227_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1227_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1227_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1227_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1227_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1227<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1227_0(labels, acc),
            [101, 100, 117] => lookup_1227_1(acc),
            [103, 117, 98] => lookup_1227_2(acc),
            [109, 105, 108] => lookup_1227_3(acc),
            [110, 101, 116] => lookup_1227_4(acc),
            [111, 114, 103] => lookup_1227_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1228_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1228<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1228_0(acc),
            [99, 111, 109] => lookup_1228_1(acc),
            [110, 101, 116] => lookup_1228_2(acc),
            [111, 114, 103] => lookup_1228_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1229() -> Info {
    Info {
        len: 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1230() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1231() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1232() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1233_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_4_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 1usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1233_4<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Private),
    };
    match labels.next() {
        Some(label) => match label {
            [100] => lookup_1233_4_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1233_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1233<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [48, 101] => lookup_1233_0(acc),
            [99, 111, 109] => lookup_1233_1(acc),
            [101, 100, 117] => lookup_1233_2(acc),
            [103, 111, 118] => lookup_1233_3(acc),
            [103, 118] => lookup_1233_4(labels, acc),
            [109, 105, 108] => lookup_1233_5(acc),
            [110, 101, 116] => lookup_1233_6(acc),
            [111, 114, 103] => lookup_1233_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1234_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_18(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234_19(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1234<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 114, 116, 115] => lookup_1234_0(acc),
            [98, 105, 98] => lookup_1234_1(acc),
            [99, 111] => lookup_1234_2(acc),
            [99, 111, 109] => lookup_1234_3(acc),
            [101, 49, 50] => lookup_1234_4(acc),
            [101, 100, 117] => lookup_1234_5(acc),
            [102, 105, 114, 109] => lookup_1234_6(acc),
            [103, 111, 98] => lookup_1234_7(acc),
            [103, 111, 118] => lookup_1234_8(acc),
            [105, 110, 102, 111] => lookup_1234_9(acc),
            [105, 110, 116] => lookup_1234_10(acc),
            [109, 105, 108] => lookup_1234_11(acc),
            [110, 101, 116] => lookup_1234_12(acc),
            [110, 111, 109] => lookup_1234_13(acc),
            [111, 114, 103] => lookup_1234_14(acc),
            [114, 97, 114] => lookup_1234_15(acc),
            [114, 101, 99] => lookup_1234_16(acc),
            [115, 116, 111, 114, 101] => lookup_1234_17(acc),
            [116, 101, 99] => lookup_1234_18(acc),
            [119, 101, 98] => lookup_1234_19(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1235() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1236() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1237() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1238() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1239() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1240() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1241() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1242_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1242<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 116] => lookup_1242_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1243_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1243<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111] => lookup_1243_0(acc),
            [99, 111, 109] => lookup_1243_1(acc),
            [107, 49, 50] => lookup_1243_2(acc),
            [110, 101, 116] => lookup_1243_3(acc),
            [111, 114, 103] => lookup_1243_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1244() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1245() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1246() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1247() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1248() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1249() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1250() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1251() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1252() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1253() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1254() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1255() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1256() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1257_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1257<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1257_0(acc),
            [98, 105, 122] => lookup_1257_1(acc),
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1257_2(acc),
            [99, 111, 109] => lookup_1257_3(acc),
            [101, 100, 117] => lookup_1257_4(acc),
            [103, 111, 118] => lookup_1257_5(acc),
            [104, 101, 97, 108, 116, 104] => lookup_1257_6(acc),
            [105, 110, 102, 111] => lookup_1257_7(acc),
            [105, 110, 116] => lookup_1257_8(acc),
            [110, 97, 109, 101] => lookup_1257_9(acc),
            [110, 101, 116] => lookup_1257_10(acc),
            [111, 114, 103] => lookup_1257_11(acc),
            [112, 114, 111] => lookup_1257_12(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1258() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1259() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1260() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1261() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1262() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1263() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1264() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1265_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1265_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1265_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1265_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1265<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103] => lookup_1265_0(acc),
            [99, 110] => lookup_1265_1(acc),
            [99, 111, 109] => lookup_1265_2(acc),
            [100, 101, 118] => lookup_1265_3(acc),
            [101, 100, 117] => lookup_1265_4(acc),
            [109, 101] => lookup_1265_5(acc),
            [110, 101, 116] => lookup_1265_6(acc),
            [111, 114, 103] => lookup_1265_7(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1266() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1267() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1268() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1269() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1270() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1271() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1272() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1273() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1274() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1275() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1276() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1277() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1278_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1278<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 7usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 109, 101, 114] => lookup_1278_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1279() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1280() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1281() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1282_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1282_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1282<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 105, 122] => lookup_1282_0(acc),
            [115, 99, 104] => lookup_1282_1(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1283() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1284() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1285_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1285<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [102, 114, 97, 109, 101, 114] => lookup_1285_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1286() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1287() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1288() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1289() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1290() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1291() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1292() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1293() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1294() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1295() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1296() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1297() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1298_0_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1298_0<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1298_0_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1298_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1298_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1298_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1298_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1298_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1298_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1298_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1298_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1298<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 100, 118, 105, 115, 111, 114] => lookup_1298_0(info, labels, acc),
            [99, 108, 111, 117, 100, 54, 54] => lookup_1298_1(acc),
            [99, 111, 109] => lookup_1298_2(acc),
            [100, 121, 110, 100, 110, 115] => lookup_1298_3(acc),
            [101, 100, 117] => lookup_1298_4(acc),
            [103, 111, 118] => lookup_1298_5(acc),
            [109, 121, 112, 101, 116, 115] => lookup_1298_6(acc),
            [110, 101, 116] => lookup_1298_7(acc),
            [111, 114, 103] => lookup_1298_8(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1299() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1300() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1301() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1302() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1303() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1304() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1305() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1306() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1307() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1308() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1309() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1310() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1311() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1312() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1313() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1314() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1315() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1316() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1317() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1318() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1319() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1320_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1320_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1320_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1320_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1320<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 12usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 52, 100, 98, 103, 100, 116, 121, 54, 99] => lookup_1320_0(acc),
            [120, 110, 45, 45, 53, 100, 98, 104, 108, 56, 100] => lookup_1320_1(acc),
            [120, 110, 45, 45, 56, 100, 98, 113, 50, 97] => lookup_1320_2(acc),
            [120, 110, 45, 45, 104, 101, 98, 100, 97, 56, 98] => lookup_1320_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1321() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1322() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1323() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1324() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1325() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1326() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1327() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1328() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1329() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1330() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1331() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1332() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1333() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1334() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1335<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 56, 48, 97, 117] => lookup_1335_0(acc),
            [120, 110, 45, 45, 57, 48, 97, 122, 104] => lookup_1335_1(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1335_2(acc),
            [120, 110, 45, 45, 100, 49, 97, 116] => lookup_1335_3(acc),
            [120, 110, 45, 45, 111, 49, 97, 99] => lookup_1335_4(acc),
            [120, 110, 45, 45, 111, 49, 97, 99, 104] => lookup_1335_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1336() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1337() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1338() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1339() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1340() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1341() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1342() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1343() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1344() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1345() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1346() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1347() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1348() -> Info {
    Info {
        len: 22usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1349() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1350() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1351() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1352() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1353() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1354() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1355() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1356() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1357() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1358() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1359() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1360() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1361() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1362() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1363() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1364() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1365() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1366() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1367() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1368() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1369() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1370() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1371() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1372() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1373() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1374() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1375() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1376() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1377() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1378() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1379() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1380() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1381<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 11usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 53, 53, 113, 120, 53, 100] => lookup_1381_0(acc),
            [120, 110, 45, 45, 103, 109, 113, 119, 53, 97] => lookup_1381_1(acc),
            [120, 110, 45, 45, 109, 120, 116, 113, 49, 109] => lookup_1381_2(acc),
            [120, 110, 45, 45, 111, 100, 48, 97, 108, 103] => lookup_1381_3(acc),
            [120, 110, 45, 45, 117, 99, 48, 97, 116, 118] => lookup_1381_4(acc),
            [120, 110, 45, 45, 119, 99, 118, 115, 50, 50, 100] => lookup_1381_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1382() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1383() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1384() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1385() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1386() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1387() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1388() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1389() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1390() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1391() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1392() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1393() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1394() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1395() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1396() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1397() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1398() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1399() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1400() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1401() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1402() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1403() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1404() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1405() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1406() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1407() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1408() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1409() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1410() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1411() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1412() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1413() -> Info {
    Info {
        len: 19usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1414() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1415() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1416() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1417() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1418() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1419() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1420() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1421() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1422() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1423() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1424() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1425() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1426() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1427() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1428() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1429() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1430() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1431_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1431_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1431_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1431_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1431_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1431_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1431<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 49, 50, 99, 49, 102, 101, 48, 98, 114] => lookup_1431_0(acc),
            [120, 110, 45, 45, 49, 50, 99, 102, 105, 56, 105, 120, 98, 56, 108] => {
                lookup_1431_1(acc)
            }
            [120, 110, 45, 45, 49, 50, 99, 111, 48, 99, 51, 98, 52, 101, 118, 97] => {
                lookup_1431_2(acc)
            }
            [120, 110, 45, 45, 104, 51, 99, 117, 122, 107, 49, 100, 105] => lookup_1431_3(acc),
            [120, 110, 45, 45, 109, 51, 99, 104, 48, 106, 51, 97] => lookup_1431_4(acc),
            [120, 110, 45, 45, 111, 51, 99, 121, 120, 50, 97] => lookup_1431_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1432() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1433() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1434_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1434_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 14usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1434_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1434_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1434_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1434_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1434_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 10usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1434_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1434_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1434_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 11usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1434<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [120, 110, 45, 45, 52, 49, 97] => lookup_1434_0(acc),
            [120, 110, 45, 45, 56, 48, 97, 97, 97, 48, 99, 118, 97, 99] => lookup_1434_1(acc),
            [120, 110, 45, 45, 57, 48, 97, 49, 97, 102] => lookup_1434_2(acc),
            [120, 110, 45, 45, 57, 48, 97, 109, 99] => lookup_1434_3(acc),
            [120, 110, 45, 45, 99, 49, 97, 118, 103] => lookup_1434_4(acc),
            [120, 110, 45, 45, 104, 49, 97, 104, 110] => lookup_1434_5(acc),
            [120, 110, 45, 45, 104, 49, 97, 108, 105, 122] => lookup_1434_6(acc),
            [120, 110, 45, 45, 106, 49, 97, 100, 112] => lookup_1434_7(acc),
            [120, 110, 45, 45, 106, 49, 97, 101, 102] => lookup_1434_8(acc),
            [120, 110, 45, 45, 106, 49, 97, 101, 108, 56, 98] => lookup_1434_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1435() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1436() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1437() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1438() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1439() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1440() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1441() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1442() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1443() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1444() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1445() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1446() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1447() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1448() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1449() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1450() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1451() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1452() -> Info {
    Info {
        len: 23usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1453() -> Info {
    Info {
        len: 24usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1454() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1455() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1456() -> Info {
    Info {
        len: 20usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1457() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1458() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1459() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1460() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1461() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1462() -> Info {
    Info {
        len: 17usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1463() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1464() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1465() -> Info {
    Info {
        len: 13usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1466() -> Info {
    Info {
        len: 11usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1467() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1468_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 9usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 7usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1468_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1468_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1468<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 3usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 105, 116, 101] => lookup_1468_0(acc),
            [99, 114, 97, 102, 116, 105, 110, 103] => lookup_1468_1(acc),
            [108, 111, 99, 97, 108, 122, 111, 110, 101] => lookup_1468_2(acc),
            [116, 101, 108, 101, 98, 105, 116] => lookup_1468_3(info, labels, acc),
            [122, 97, 112, 116, 111] => lookup_1468_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1469() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1470() -> Info {
    Info {
        len: 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1471() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1472() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1473_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1473_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1473_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1473_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1473_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1473_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1473<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 111, 109] => lookup_1473_0(acc),
            [101, 100, 117] => lookup_1473_1(acc),
            [103, 111, 118] => lookup_1473_2(acc),
            [109, 105, 108] => lookup_1473_3(acc),
            [110, 101, 116] => lookup_1473_4(acc),
            [111, 114, 103] => lookup_1473_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1474() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1475() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1476() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1477() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1478() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1479_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1479<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [111, 114, 103] => lookup_1479_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1480() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 5usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_3_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1481_3<'a, T>(mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [98, 108, 111, 103, 115, 112, 111, 116] => lookup_1481_3_0(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1481_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_11(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_12(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_13(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_14(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_15(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_16(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481_17(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1481<'a, T>(mut info: Info, mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    info.len = acc;
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1481_0(acc),
            [97, 103, 114, 105, 99] => lookup_1481_1(acc),
            [97, 108, 116] => lookup_1481_2(acc),
            [99, 111] => lookup_1481_3(labels, acc),
            [101, 100, 117] => lookup_1481_4(acc),
            [103, 111, 118] => lookup_1481_5(acc),
            [103, 114, 111, 110, 100, 97, 114] => lookup_1481_6(acc),
            [108, 97, 119] => lookup_1481_7(acc),
            [109, 105, 108] => lookup_1481_8(acc),
            [110, 101, 116] => lookup_1481_9(acc),
            [110, 103, 111] => lookup_1481_10(acc),
            [110, 105, 99] => lookup_1481_11(acc),
            [110, 105, 115] => lookup_1481_12(acc),
            [110, 111, 109] => lookup_1481_13(acc),
            [111, 114, 103] => lookup_1481_14(acc),
            [115, 99, 104, 111, 111, 108] => lookup_1481_15(acc),
            [116, 109] => lookup_1481_16(acc),
            [119, 101, 98] => lookup_1481_17(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1482() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1483() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1484() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1485() -> Info {
    Info {
        len: 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486_10(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1486<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1486_0(acc),
            [98, 105, 122] => lookup_1486_1(acc),
            [99, 111] => lookup_1486_2(acc),
            [99, 111, 109] => lookup_1486_3(acc),
            [101, 100, 117] => lookup_1486_4(acc),
            [103, 111, 118] => lookup_1486_5(acc),
            [105, 110, 102, 111] => lookup_1486_6(acc),
            [109, 105, 108] => lookup_1486_7(acc),
            [110, 101, 116] => lookup_1486_8(acc),
            [111, 114, 103] => lookup_1486_9(acc),
            [115, 99, 104] => lookup_1486_10(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1487_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 7usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1487_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1487_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1487_3_0(wild: &[u8], acc: usize) -> Info {
    Info {
        len: acc + 1 + wild.len(),
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1487_3<'a, T>(info: Info, mut labels: T, mut acc: usize) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    acc += 1 + 6usize;
    match labels.next() {
        Some(label) => match label {
            wild => lookup_1487_3_0(wild, acc),
        },
        None => info,
    }
}
#[inline]
fn lookup_1487<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 4usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [99, 108, 111, 117, 100, 54, 54] => lookup_1487_0(acc),
            [104, 115] => lookup_1487_1(acc),
            [108, 105, 109, 97] => lookup_1487_2(acc),
            [116, 114, 105, 116, 111, 110] => lookup_1487_3(info, labels, acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1488() -> Info {
    Info {
        len: 7usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 3usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1489<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 2usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [97, 99] => lookup_1489_0(acc),
            [99, 111] => lookup_1489_1(acc),
            [103, 111, 118] => lookup_1489_2(acc),
            [109, 105, 108] => lookup_1489_3(acc),
            [111, 114, 103] => lookup_1489_4(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1490() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1491() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1492() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1493() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1494() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1495() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1496() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1497() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1498() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1499() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1500() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1501() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1502() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1503_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1503_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1503_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1503_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1503_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1503_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1503_6(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1503_7(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1503_8(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1503_9(acc: usize) -> Info {
    Info {
        len: acc + 1 + 2usize,
        typ: Some(Type::Private),
    }
}
#[inline]
fn lookup_1503<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [208, 177, 208, 184, 208, 183] => lookup_1503_0(acc),
            [208, 186, 208, 190, 208, 188] => lookup_1503_1(acc),
            [208, 186, 209, 128, 209, 139, 208, 188] => lookup_1503_2(acc),
            [208, 188, 208, 184, 209, 128] => lookup_1503_3(acc),
            [208, 188, 209, 129, 208, 186] => lookup_1503_4(acc),
            [208, 190, 209, 128, 208, 179] => lookup_1503_5(acc),
            [209, 129, 208, 176, 208, 188, 208, 176, 209, 128, 208, 176] => lookup_1503_6(acc),
            [209, 129, 208, 190, 209, 135, 208, 184] => lookup_1503_7(acc),
            [209, 129, 208, 191, 208, 177] => lookup_1503_8(acc),
            [209, 143] => lookup_1503_9(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1504() -> Info {
    Info {
        len: 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1505() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1506_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1506_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1506_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1506_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1506_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 4usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1506_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1506<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [208, 176, 208, 186] => lookup_1506_0(acc),
            [208, 190, 208, 177, 209, 128] => lookup_1506_1(acc),
            [208, 190, 208, 180] => lookup_1506_2(acc),
            [208, 190, 209, 128, 208, 179] => lookup_1506_3(acc),
            [208, 191, 209, 128] => lookup_1506_4(acc),
            [209, 131, 208, 191, 209, 128] => lookup_1506_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1507() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1508() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1509() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1510_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1510_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1510_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1510_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1510<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 10usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [215, 144, 215, 167, 215, 147, 215, 158, 215, 153, 215, 148] => lookup_1510_0(acc),
            [215, 153, 215, 169, 215, 149, 215, 145] => lookup_1510_1(acc),
            [215, 158, 215, 158, 215, 169, 215, 156] => lookup_1510_2(acc),
            [215, 166, 215, 148, 215, 156] => lookup_1510_3(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1511() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1512() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1513() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1514() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1515() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1516() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1517() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1518() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1519() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1520() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1521() -> Info {
    Info {
        len: 16usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1522() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1523() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1524() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1525() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1526() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1527() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1528() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1529() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1530() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1531() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1532() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1533() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1534() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1535() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1536() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1537() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1538() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1539() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1540() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1541() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1542() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1543() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1544() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1545() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1546() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1547() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1548() -> Info {
    Info {
        len: 10usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1549() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1550() -> Info {
    Info {
        len: 14usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1551() -> Info {
    Info {
        len: 8usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1552() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1553() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1554() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1555() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1556() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1557() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1558() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1559() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1560() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1561() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1562() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1563() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1564() -> Info {
    Info {
        len: 21usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1565() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1566() -> Info {
    Info {
        len: 33usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1567() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1568() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1569() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1570() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1571() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1572<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 9usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [224, 184, 151, 224, 184, 171, 224, 184, 178, 224, 184, 163] => lookup_1572_0(acc),
            [224, 184, 152, 224, 184, 184, 224, 184, 163, 224, 184, 129, 224, 184, 180, 224, 184, 136] => {
                lookup_1572_1(acc)
            }
            [224, 184, 163, 224, 184, 177, 224, 184, 144, 224, 184, 154, 224, 184, 178, 224, 184, 165] => {
                lookup_1572_2(acc)
            }
            [224, 184, 168, 224, 184, 182, 224, 184, 129, 224, 184, 169, 224, 184, 178] => {
                lookup_1572_3(acc)
            }
            [224, 184, 173, 224, 184, 135, 224, 184, 132, 224, 185, 140, 224, 184, 129, 224, 184, 163] => {
                lookup_1572_4(acc)
            }
            [224, 185, 128, 224, 184, 153, 224, 185, 135, 224, 184, 149] => lookup_1572_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1573() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1574() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1575() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1576() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1577() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1578() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1579() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1580() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1581() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1582() -> Info {
    Info {
        len: 18usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1583() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1584() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1585() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1586() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1587() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1588() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1589() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1590() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1591() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1592() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1593() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1594() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1595() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1596() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1597() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1598() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1599() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1600() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1601() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1602() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1603() -> Info {
    Info {
        len: 15usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1604() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1605() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1606() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1607() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1608() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1609() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1610() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1611() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1612() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1613() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1614() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1615() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1616() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1617() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1618() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1619() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1620() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1621() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1622() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1623() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1624() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1625() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1626() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1627() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1628() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1629() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1630() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1631() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1632() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1633() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1634() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1635() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1636() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1637() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1638() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1639() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1640() -> Info {
    Info {
        len: 9usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1641() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1642() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1643() -> Info {
    Info {
        len: 12usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644_0(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644_1(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644_2(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644_3(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644_4(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644_5(acc: usize) -> Info {
    Info {
        len: acc + 1 + 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1644<'a, T>(mut labels: T) -> Info
where
    T: Iterator<Item = &'a [u8]>,
{
    let acc = 6usize;
    let info = Info {
        len: acc,
        typ: Some(Type::Icann),
    };
    match labels.next() {
        Some(label) => match label {
            [229, 128, 139, 228, 186, 186] => lookup_1644_0(acc),
            [229, 133, 172, 229, 143, 184] => lookup_1644_1(acc),
            [230, 148, 191, 229, 186, 156] => lookup_1644_2(acc),
            [230, 149, 153, 232, 130, 178] => lookup_1644_3(acc),
            [231, 181, 132, 231, 185, 148] => lookup_1644_4(acc),
            [231, 182, 178, 231, 181, 161] => lookup_1644_5(acc),
            _ => info,
        },
        None => info,
    }
}
#[inline]
fn lookup_1645() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1646() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1647() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
#[inline]
fn lookup_1648() -> Info {
    Info {
        len: 6usize,
        typ: Some(Type::Icann),
    }
}
